WEBVTT
Kind: captions
Language: en

00:00:01.728 --> 00:00:03.870
ROMAN NURIK: Hello, and welcome
again to "Android

00:00:03.870 --> 00:00:06.375
Design in Action." I'm your
host, Roman Nurik.

00:00:06.375 --> 00:00:08.706
ADAM KOCH: Hey guys, my
name's Adam Koch.

00:00:08.706 --> 00:00:10.520
NICK BUTCHER: And hi,
I'm Nick Butcher.

00:00:10.520 --> 00:00:12.650
ROMAN NURIK: And today, we have
a special episode, once

00:00:12.650 --> 00:00:15.250
again, on home screen widgets.

00:00:15.250 --> 00:00:17.730
We're going to take a look at
a couple of home screen

00:00:17.730 --> 00:00:18.830
widgets at the very end.

00:00:18.830 --> 00:00:19.990
A couple of home screen
widgets that we

00:00:19.990 --> 00:00:22.030
think do a good job.

00:00:22.030 --> 00:00:24.520
But first, we're going to talk
about designing home screen

00:00:24.520 --> 00:00:26.880
widgets, how you should approach
them in general.

00:00:26.880 --> 00:00:30.270
We're going to talk about some
design guidelines for widgets,

00:00:30.270 --> 00:00:32.390
and then talk about some of the
constraints, since as a

00:00:32.390 --> 00:00:35.880
designer, you may not be fully
aware of the different types

00:00:35.880 --> 00:00:39.820
of things you can and can't do
with home screen widgets.

00:00:39.820 --> 00:00:42.325
So with that, should we
just jump right in?

00:00:42.325 --> 00:00:43.810
ADAM KOCH: Yeah, let's do it.

00:00:43.810 --> 00:00:45.500
ROMAN NURIK: All right.

00:00:45.500 --> 00:00:48.280
OK, so what is a home
screen widget?

00:00:48.280 --> 00:00:50.880
Well, according to the
design guidelines--

00:00:50.880 --> 00:00:52.580
the link down there
is at the bottom.

00:00:52.580 --> 00:00:54.720
So, "Widgets are an essential
aspect of the home screen

00:00:54.720 --> 00:00:55.890
customization.

00:00:55.890 --> 00:00:59.120
You can imagine them as
at-a-glance views of an app's

00:00:59.120 --> 00:01:01.620
most important data and
functionality." I'd actually

00:01:01.620 --> 00:01:05.050
add latest data, as well here,
since it's very important that

00:01:05.050 --> 00:01:07.190
widgets are up to date.

00:01:07.190 --> 00:01:09.200
And it's "accessible right from
the user's home screen.

00:01:09.200 --> 00:01:13.710
Users can move widgets across
their home screen panels, and,

00:01:13.710 --> 00:01:15.300
if supported, resize them."

00:01:15.300 --> 00:01:18.820
So that's another important
aspect is the customizability,

00:01:18.820 --> 00:01:20.890
the fact that you can basically
take a widget, move

00:01:20.890 --> 00:01:22.890
it wherever you want and to
whichever home screen you

00:01:22.890 --> 00:01:27.590
want, resize it to fit whatever
icons are around it.

00:01:27.590 --> 00:01:31.370
And it's really there
to make it your own.

00:01:31.370 --> 00:01:36.000
So that's a home screen widget
at a very high-level overview.

00:01:36.000 --> 00:01:39.080
The idea is that you basically
take a part of your app and

00:01:39.080 --> 00:01:41.050
throw it onto the home screen.

00:01:41.050 --> 00:01:42.540
NICK BUTCHER: And I think--

00:01:42.540 --> 00:01:44.550
just want to interject-- it's
one of the uniquely Android

00:01:44.550 --> 00:01:47.960
features that I love to
see in an application.

00:01:47.960 --> 00:01:50.510
You can't get much more prime
real estate than owning a

00:01:50.510 --> 00:01:53.240
small piece of the user's
home screen.

00:01:53.240 --> 00:01:55.380
This is where most of their
user journeys are going to

00:01:55.380 --> 00:01:56.660
start from.

00:01:56.660 --> 00:01:59.830
I know personally, on the
bus, you're bored.

00:01:59.830 --> 00:02:01.145
You're just clicking around
your phone, seeing

00:02:01.145 --> 00:02:01.910
what's going on.

00:02:01.910 --> 00:02:04.300
I love to be able to see
the latest information.

00:02:04.300 --> 00:02:06.895
It's similar to the rules, which
Alex went through last

00:02:06.895 --> 00:02:10.030
week, about notifications but
without that kind of pressing

00:02:10.030 --> 00:02:12.850
time sensitivity or a person
waiting for it.

00:02:12.850 --> 00:02:15.730
It's the latest information that
the user has opted in and

00:02:15.730 --> 00:02:19.075
requested to be notified about
is kind of brought and

00:02:19.075 --> 00:02:20.440
surfaced to the user.

00:02:20.440 --> 00:02:21.520
And it's such a great
opportunity.

00:02:21.520 --> 00:02:24.050
It's such a shame when an
application with this kind of

00:02:24.050 --> 00:02:26.440
information doesn't take
advantage, I think, of the

00:02:26.440 --> 00:02:26.965
home screen widget.

00:02:26.965 --> 00:02:32.060
ROMAN NURIK: And I'd say
that there are certain

00:02:32.060 --> 00:02:33.520
users that if they--

00:02:33.520 --> 00:02:35.680
or actually, I guess if you add
a home screen widget, it's

00:02:35.680 --> 00:02:38.080
probably a pretty strong signal
that you're pretty

00:02:38.080 --> 00:02:39.220
passionate about the app.

00:02:39.220 --> 00:02:42.860
So some of your biggest power
users will be the ones that

00:02:42.860 --> 00:02:44.210
use the home screen widget.

00:02:44.210 --> 00:02:45.470
Not everybody will use it.

00:02:45.470 --> 00:02:48.240
Not everybody decides to add
it to their home screen.

00:02:48.240 --> 00:02:52.930
But the folks that do really
probably love your content.

00:02:52.930 --> 00:02:54.790
So let's move on.

00:02:54.790 --> 00:02:56.430
So there are a few types
of home screen widgets.

00:02:56.430 --> 00:02:57.780
So if you look at the
design guidelines,

00:02:57.780 --> 00:02:59.180
they'll talk about these.

00:02:59.180 --> 00:03:02.710
But they're roughly broken up
into three main categories--

00:03:02.710 --> 00:03:05.090
information-type widget, like
weather, that shows you

00:03:05.090 --> 00:03:07.280
information at a glance.

00:03:07.280 --> 00:03:12.590
Control widgets that let you
make changes to a certain app,

00:03:12.590 --> 00:03:15.250
or even the system,
in this case.

00:03:15.250 --> 00:03:18.900
And collection widgets, which
basically let you see

00:03:18.900 --> 00:03:23.510
collections of data scrolling
vertically to see past items

00:03:23.510 --> 00:03:25.150
or other items in the list.

00:03:25.150 --> 00:03:28.390
And then, of course, there's the
hybrid type of widget that

00:03:28.390 --> 00:03:29.550
includes multiple items.

00:03:29.550 --> 00:03:31.240
And most widgets are probably
going to be

00:03:31.240 --> 00:03:32.020
kind of hybrid widgets.

00:03:32.020 --> 00:03:35.470
They'll include aspects of
showing information, also

00:03:35.470 --> 00:03:40.020
allowing you access to control
of the app, or potentially

00:03:40.020 --> 00:03:42.430
linking you into different parts
of the app, which we'll

00:03:42.430 --> 00:03:43.680
talk about in a bit.

00:03:46.340 --> 00:03:49.390
And so there are a couple things
that I think make a

00:03:49.390 --> 00:03:52.160
home screen widget really
good, a couple of key

00:03:52.160 --> 00:03:53.020
important items.

00:03:53.020 --> 00:03:54.780
So the first is up-to-date.

00:03:54.780 --> 00:03:56.780
A home screen widget
should be dynamic.

00:03:56.780 --> 00:03:59.720
It should never really be just
showing one piece of

00:03:59.720 --> 00:04:02.920
information from a week
ago or two weeks ago.

00:04:02.920 --> 00:04:05.970
It should really be something
that the user would open up

00:04:05.970 --> 00:04:08.410
their home screen and expect to
see the latest and greatest

00:04:08.410 --> 00:04:09.610
information.

00:04:09.610 --> 00:04:13.850
So for example, if you have, for
some reason, a widget that

00:04:13.850 --> 00:04:16.370
does traffic, then you should
probably show something that's

00:04:16.370 --> 00:04:18.760
very immediate, something
that's relevant to

00:04:18.760 --> 00:04:21.720
the next few hours.

00:04:21.720 --> 00:04:24.120
If you have a widget that's
showing weather, also you want

00:04:24.120 --> 00:04:26.470
to show something that's
kind of around now.

00:04:26.470 --> 00:04:28.150
You don't want to show weather
from yesterday or

00:04:28.150 --> 00:04:29.210
something like that.

00:04:29.210 --> 00:04:35.010
As well as news articles or
Gmail or any sort of list or

00:04:35.010 --> 00:04:38.860
feed-type widget, you want to
make sure to basically update

00:04:38.860 --> 00:04:40.790
the widget as soon as
there's new data.

00:04:40.790 --> 00:04:44.470
So for example, in the case of
Gmail, when you get a new

00:04:44.470 --> 00:04:47.720
email, there's a push message
that's sent to the device that

00:04:47.720 --> 00:04:50.770
basically tells the Gmail
application that, hey, there's

00:04:50.770 --> 00:04:51.650
a new email.

00:04:51.650 --> 00:04:56.070
So along with updating the
cached content for Gmail, you

00:04:56.070 --> 00:04:58.390
should also make sure to trigger
an update to the

00:04:58.390 --> 00:05:02.300
widget so that the widget can
show that new information.

00:05:02.300 --> 00:05:03.330
And this is all possible.

00:05:03.330 --> 00:05:05.260
As a developer, you could
do this, of course.

00:05:05.260 --> 00:05:09.430
But as a designer, you should
plan for push updates to your

00:05:09.430 --> 00:05:12.960
widget as the information
comes in.

00:05:12.960 --> 00:05:15.410
You can also specify
a periodic refresh.

00:05:15.410 --> 00:05:18.570
And absolutely, most widgets
should probably refresh

00:05:18.570 --> 00:05:23.050
automatically, unless there's
some great reason not to.

00:05:23.050 --> 00:05:25.410
And generally, you don't want to
refresh too often, like for

00:05:25.410 --> 00:05:30.350
example, refreshing once a
minute, or once every few

00:05:30.350 --> 00:05:31.170
minutes, even.

00:05:31.170 --> 00:05:34.770
That's pretty dangerous,
because you may suck up

00:05:34.770 --> 00:05:36.620
battery life.

00:05:36.620 --> 00:05:40.280
And basically, you should
probably optimize around

00:05:40.280 --> 00:05:44.560
refreshes of no more frequent
than, say, once every half

00:05:44.560 --> 00:05:45.420
hour to an hour.

00:05:45.420 --> 00:05:51.235
That's probably the peak or the
minimum refresh time for a

00:05:51.235 --> 00:05:54.340
widget without using too
much battery life.

00:05:54.340 --> 00:05:58.100
The other thing to note is that
there's a lot of ways to

00:05:58.100 --> 00:05:59.450
tweak this, but you
should also be

00:05:59.450 --> 00:06:01.080
conscious of when you update.

00:06:01.080 --> 00:06:05.050
So do you actually want to
update when the phone is

00:06:05.050 --> 00:06:08.290
sleeping, or do you want
to update only when

00:06:08.290 --> 00:06:09.350
the phone is awake?

00:06:09.350 --> 00:06:11.130
And those are things that as a
developer, you can control.

00:06:11.130 --> 00:06:13.320
But as a designer, you should
also be aware of the different

00:06:13.320 --> 00:06:14.960
types of updates you
can do for widgets.

00:06:18.080 --> 00:06:19.720
The other very important thing
about a widget is that it

00:06:19.720 --> 00:06:20.880
should be actionable.

00:06:20.880 --> 00:06:23.780
So it's one thing to just
show information.

00:06:23.780 --> 00:06:27.100
But generally, the information
you show is a snippet, right?

00:06:27.100 --> 00:06:29.380
So you don't actually
just want to end

00:06:29.380 --> 00:06:30.250
the experience there.

00:06:30.250 --> 00:06:33.450
You want to somehow let
the user dive deeper.

00:06:33.450 --> 00:06:35.940
If they actually care about
the news story that you're

00:06:35.940 --> 00:06:39.850
showing, for example, in your
widget, let them touch on that

00:06:39.850 --> 00:06:43.560
story and jump into the details
for that so that they

00:06:43.560 --> 00:06:44.555
can read it.

00:06:44.555 --> 00:06:46.900
NICK BUTCHER: It could also be
like a teaser, almost, think

00:06:46.900 --> 00:06:48.840
like a newspaper headline,
right?

00:06:48.840 --> 00:06:52.240
So you want to be able to tease
these and entice them to

00:06:52.240 --> 00:06:54.125
click through to more details.

00:06:54.125 --> 00:06:55.650
ROMAN NURIK: Absolutely.

00:06:55.650 --> 00:06:58.150
And another thing to point out--
and Nick, you'll talk

00:06:58.150 --> 00:07:00.860
about this later-- but it's
important to note that widgets

00:07:00.860 --> 00:07:02.920
can have different
linkable regions.

00:07:02.920 --> 00:07:05.880
So make sure to be aware of what
are the different types

00:07:05.880 --> 00:07:08.550
of things a user would want to
do from this widget, and

00:07:08.550 --> 00:07:12.240
tailor to those different
behaviors.

00:07:12.240 --> 00:07:13.920
The other thing is that a widget
should be very, very

00:07:13.920 --> 00:07:14.860
customizable.

00:07:14.860 --> 00:07:19.180
So again, the idea is that
a user is granting their

00:07:19.180 --> 00:07:21.220
precious real estate
to you, right?

00:07:21.220 --> 00:07:25.030
They're giving away part of
their home screen to you, so

00:07:25.030 --> 00:07:28.370
you should make sure to make
your widget as customizable as

00:07:28.370 --> 00:07:31.250
you feel is fit in the
sense that make

00:07:31.250 --> 00:07:32.750
sure that is resizable.

00:07:32.750 --> 00:07:35.890
One of the worst things is when
a user finds a widget

00:07:35.890 --> 00:07:39.670
that can't be resized,
or is too large.

00:07:39.670 --> 00:07:42.550
And then it's requesting
too much of that

00:07:42.550 --> 00:07:43.600
precious real estate.

00:07:43.600 --> 00:07:45.990
So make sure that you design
your widget to scale to

00:07:45.990 --> 00:07:48.430
different sizes.

00:07:48.430 --> 00:07:50.980
The other thing is that you
generally want to show

00:07:50.980 --> 00:07:53.550
information that's custom
tailored to the user.

00:07:53.550 --> 00:07:59.010
So for example, if it's like a
reader-type thing or a feed

00:07:59.010 --> 00:08:04.080
consumption app, and the user
has a list of favorite feeds

00:08:04.080 --> 00:08:05.750
that you want to see,
make sure to make

00:08:05.750 --> 00:08:06.960
that a default option.

00:08:06.960 --> 00:08:09.100
But let them, obviously,
customize if they want to

00:08:09.100 --> 00:08:11.400
change things around.

00:08:11.400 --> 00:08:13.330
And then also note that there
is the option of a

00:08:13.330 --> 00:08:14.450
configuration step.

00:08:14.450 --> 00:08:21.480
So after the user selects which
widget to add, you have

00:08:21.480 --> 00:08:24.720
the option of providing kind of
an interstitial page where

00:08:24.720 --> 00:08:27.880
they can customize what should
be shown in the widget.

00:08:27.880 --> 00:08:29.570
So make sure to make use
of that as well.

00:08:29.570 --> 00:08:32.293
So again, in the case of the
feed reader example, you want

00:08:32.293 --> 00:08:35.940
to give them the option to
specify which feeds they'd

00:08:35.940 --> 00:08:37.480
like to see in that widget.

00:08:37.480 --> 00:08:39.539
NICK BUTCHER: And that's
probably preferable to having

00:08:39.539 --> 00:08:42.450
multiple widgets, even though
the application can, rather

00:08:42.450 --> 00:08:46.180
than having 10, 15 different
widgets or all the different

00:08:46.180 --> 00:08:48.450
feeds your application might
be able to produce, it's

00:08:48.450 --> 00:08:50.270
preferable to probably have
just the one and a

00:08:50.270 --> 00:08:51.305
configuration step.

00:08:51.305 --> 00:08:51.900
ROMAN NURIK: Right.

00:08:51.900 --> 00:08:54.310
And so in past versions of
Android, you weren't able to

00:08:54.310 --> 00:08:56.250
create resizable widgets.

00:08:56.250 --> 00:08:58.890
So one of the biggest
workarounds was, let's just

00:08:58.890 --> 00:09:02.250
create four different widgets
of four different sizes.

00:09:02.250 --> 00:09:04.760
On newer versions of the
platform, you should hide away

00:09:04.760 --> 00:09:06.040
all those widgets.

00:09:06.040 --> 00:09:07.770
You should only really
show the single

00:09:07.770 --> 00:09:09.060
widget that is resizable.

00:09:09.060 --> 00:09:11.970
That's the best approach.

00:09:11.970 --> 00:09:15.585
So let's move on and talk
about the guidelines.

00:09:15.585 --> 00:09:17.170
Nick, do you want to
kick us off here?

00:09:17.170 --> 00:09:20.160
NICK BUTCHER: Yeah, so speaking
of sizing, the way

00:09:20.160 --> 00:09:23.860
that the widget system works is
you have a number of cells

00:09:23.860 --> 00:09:24.620
on your home screen.

00:09:24.620 --> 00:09:26.970
So one cell is typically
the size of

00:09:26.970 --> 00:09:28.780
an application shortcut.

00:09:28.780 --> 00:09:30.690
And so when you're designing
your widget, you want to be

00:09:30.690 --> 00:09:34.335
cognizant of when your users
place the widget on the home

00:09:34.335 --> 00:09:36.420
screen, they're going to
allocate it a number of cells.

00:09:36.420 --> 00:09:39.580
So hopefully, you're using
a resizable widget.

00:09:39.580 --> 00:09:41.800
What you would do is you'd set
the minimum number of cells

00:09:41.800 --> 00:09:43.700
which make sense for the
information you're going to

00:09:43.700 --> 00:09:47.070
present, and then let the
user resize it by

00:09:47.070 --> 00:09:48.620
the number of cells.

00:09:48.620 --> 00:09:53.430
So when you come to actually
designing that, you need to

00:09:53.430 --> 00:09:54.850
think about a few things.

00:09:54.850 --> 00:09:58.450
The first thing is that these
cells aren't really that

00:09:58.450 --> 00:09:59.720
deterministic.

00:09:59.720 --> 00:10:02.720
There's a slight amount of
flexibility in the actual

00:10:02.720 --> 00:10:05.370
size, depending on the device
implementation.

00:10:05.370 --> 00:10:09.090
So the home screen is in
landscape or portrait, the

00:10:09.090 --> 00:10:12.720
actual number of pixels may vary
slightly, so you need to

00:10:12.720 --> 00:10:15.172
build a lot of flexibility into
your widget, really, so

00:10:15.172 --> 00:10:19.190
it can cope with a little bit
of change either way of the

00:10:19.190 --> 00:10:20.440
ideal boundary sizes.

00:10:22.900 --> 00:10:26.330
And also, it's worth bearing in
mind that the actual pixel

00:10:26.330 --> 00:10:31.760
size and the way that we handle
margins has changed

00:10:31.760 --> 00:10:33.730
slightly in the newer
versions of Android.

00:10:33.730 --> 00:10:38.280
So previously, we used to leave
it up to the developer

00:10:38.280 --> 00:10:41.660
to include any padding
inside the bounds.

00:10:41.660 --> 00:10:43.230
So we would just give them the
cell and let them draw

00:10:43.230 --> 00:10:45.490
anywhere they liked within it
and would hope that they would

00:10:45.490 --> 00:10:48.270
include sensible amounts
of paddings.

00:10:48.270 --> 00:10:51.920
We decided to change that in
Android 4.0, primarily to help

00:10:51.920 --> 00:10:55.200
keep the home screens slightly
more aligned so that everyone

00:10:55.200 --> 00:10:57.930
was using similar [INAUDIBLE]
of the same paddings so that

00:10:57.930 --> 00:11:01.800
everything was on a
nice, tight grid.

00:11:01.800 --> 00:11:03.370
So you need to be
aware of that.

00:11:03.370 --> 00:11:06.530
So we've included here the
formula which we used to

00:11:06.530 --> 00:11:11.140
calculate the size of the
cells in DP units.

00:11:11.140 --> 00:11:13.580
So bear these in mind when
you're creating widgets.

00:11:13.580 --> 00:11:16.010
If you're targeting just 4.0 and
above, you might want to

00:11:16.010 --> 00:11:17.030
use one formula.

00:11:17.030 --> 00:11:19.600
If you want to target older
devices, then you need to bear

00:11:19.600 --> 00:11:22.490
in mind how much padding
to allow for.

00:11:22.490 --> 00:11:24.460
ROMAN NURIK: One other thing I
wanted to add is that this is

00:11:24.460 --> 00:11:28.080
a good guideline to follow
for minimum sizes.

00:11:28.080 --> 00:11:31.000
But note that the widget
may actually grow.

00:11:31.000 --> 00:11:35.160
So for example, on a tablet,
let's say, the home screen, if

00:11:35.160 --> 00:11:38.960
you rotate the device from
landscape to portrait, the

00:11:38.960 --> 00:11:41.460
cells aren't actually still
perfectly square.

00:11:41.460 --> 00:11:42.820
They're actually
never perfectly

00:11:42.820 --> 00:11:44.360
square, as far as I know.

00:11:44.360 --> 00:11:47.700
The idea is that in landscape,
the cells are slightly wider.

00:11:47.700 --> 00:11:50.020
And in portrait, the cells
are slightly taller.

00:11:50.020 --> 00:11:53.570
So designing with this formula
in mind will give you a good

00:11:53.570 --> 00:11:54.940
minimum size.

00:11:54.940 --> 00:11:59.090
But note that it can grow and
shrink based on different

00:11:59.090 --> 00:12:00.790
orientations, as well as
different devices.

00:12:00.790 --> 00:12:03.290
Different devices have slightly
different cell sizes.

00:12:03.290 --> 00:12:04.130
But this is a very
good guideline.

00:12:04.130 --> 00:12:06.860
NICK BUTCHER: Yeah, we'll get
more into the layout controls

00:12:06.860 --> 00:12:08.730
that you can actually
use in your app.

00:12:08.730 --> 00:12:11.150
But basically, yeah, bear that
in mind in thinking in terms

00:12:11.150 --> 00:12:13.657
of scaling layouts, and how
they're going to stretch and

00:12:13.657 --> 00:12:16.795
fill these differently
sized cells.

00:12:16.795 --> 00:12:18.390
ROMAN NURIK: So let's
move on to the next

00:12:18.390 --> 00:12:19.695
slide around styling.

00:12:19.695 --> 00:12:22.640
NICK BUTCHER: Yeah, so styling
is very important.

00:12:22.640 --> 00:12:24.460
I think we touched on it earlier
when we were talking

00:12:24.460 --> 00:12:26.080
about you're occupying--

00:12:26.080 --> 00:12:27.970
the user's giving you a
small amount of space

00:12:27.970 --> 00:12:28.970
on their home screen.

00:12:28.970 --> 00:12:32.560
So you really need to fit it in
with the rest of the home

00:12:32.560 --> 00:12:34.090
screen and the other
apps on there.

00:12:34.090 --> 00:12:37.380
So for that reason, you really
want to be fitting in with the

00:12:37.380 --> 00:12:37.950
rest of the platforms.

00:12:37.950 --> 00:12:41.390
And following the Holo styling
guidelines is a great start to

00:12:41.390 --> 00:12:43.820
fit in with what other widgets
are going to look like on the

00:12:43.820 --> 00:12:48.030
home screen, as well as the
standard visual style of the

00:12:48.030 --> 00:12:50.500
app shortcuts and so on.

00:12:50.500 --> 00:12:52.610
We found that subtle
transparency works really well

00:12:52.610 --> 00:12:55.670
here, because the
user has chosen

00:12:55.670 --> 00:12:57.840
their personal wallpaper.

00:12:57.840 --> 00:13:00.775
And so to work nicely with
that and to go with their

00:13:00.775 --> 00:13:02.540
color scheme, we find that
transparency can work quite

00:13:02.540 --> 00:13:03.190
well there.

00:13:03.190 --> 00:13:04.790
It aligns, also, to the
system widgets, how

00:13:04.790 --> 00:13:06.710
we do that as well.

00:13:06.710 --> 00:13:09.770
ROMAN NURIK: Just one point
I wanted to point out.

00:13:09.770 --> 00:13:11.890
So a lot of these system widgets
actually have subtle

00:13:11.890 --> 00:13:12.520
transparency.

00:13:12.520 --> 00:13:14.000
It's not showing up well
here in the slides.

00:13:14.000 --> 00:13:18.540
But the idea is that in very,
very small parts of the

00:13:18.540 --> 00:13:19.940
widget, you'll see a
little bit of the

00:13:19.940 --> 00:13:21.470
background peek through.

00:13:21.470 --> 00:13:25.890
And it kind of gives that extra
feeling of digital.

00:13:25.890 --> 00:13:28.160
It's a real object, but it's
actually something that's

00:13:28.160 --> 00:13:30.635
living in my digital world.

00:13:30.635 --> 00:13:31.670
NICK BUTCHER: Yeah, exactly.

00:13:31.670 --> 00:13:34.620
And I think the users chose
the background on purpose.

00:13:34.620 --> 00:13:37.420
You feel a sense of ownership
with that--

00:13:37.420 --> 00:13:38.330
connection with that.

00:13:38.330 --> 00:13:40.730
And I think it reinforces the
fact that you're on the user's

00:13:40.730 --> 00:13:41.170
home screen.

00:13:41.170 --> 00:13:43.600
They've chosen to give you this
piece of space as well,

00:13:43.600 --> 00:13:46.450
that you blend in well with it,
literally, by using these

00:13:46.450 --> 00:13:47.660
design principles.

00:13:47.660 --> 00:13:51.230
And the last thing I wanted to
pull out here is that even

00:13:51.230 --> 00:13:55.145
though you are not in the full
app mode, you want to be doing

00:13:55.145 --> 00:13:57.470
all the good practices, like
including pressed state or

00:13:57.470 --> 00:13:59.660
inactive states for all your
elements, because they are

00:13:59.660 --> 00:14:01.260
still interactive elements,
and they still need

00:14:01.260 --> 00:14:02.260
to respond to touch.

00:14:02.260 --> 00:14:04.460
ROMAN NURIK: The other thing
about pressed states is that

00:14:04.460 --> 00:14:08.250
since, again, you're on the
user's home screen, where

00:14:08.250 --> 00:14:12.170
generally the pressed states
are using a blue glow, for

00:14:12.170 --> 00:14:14.860
example, for icons, or for
different widgets, they're

00:14:14.860 --> 00:14:18.190
probably using that kind of
semi-transparent blue overlay.

00:14:18.190 --> 00:14:20.925
You want to use a similar
pressed state, if possible, if

00:14:20.925 --> 00:14:22.280
it fits in with your theme.

00:14:22.280 --> 00:14:25.040
Because again, we generally want
the home screen to feel

00:14:25.040 --> 00:14:26.960
like a single, unified
experience.

00:14:26.960 --> 00:14:31.900
And as much as widgets can do
to fall in place and just be

00:14:31.900 --> 00:14:32.880
cohesive with the rest of the

00:14:32.880 --> 00:14:34.850
launcher, that's very important.

00:14:34.850 --> 00:14:37.700
NICK BUTCHER: Yeah, just as your
job when you're building

00:14:37.700 --> 00:14:40.190
an app is to marry your brand's
visual style with the

00:14:40.190 --> 00:14:43.320
Android visual style, this is
all the more leaning towards

00:14:43.320 --> 00:14:46.070
the default Android visual
style on the home screen,

00:14:46.070 --> 00:14:48.800
because you're going to be
shoulder to shoulder with

00:14:48.800 --> 00:14:52.131
other players, as it were.

00:14:52.131 --> 00:14:55.250
ADAM KOCH: Personally, if the
styling and the padding are

00:14:55.250 --> 00:14:57.395
off for a particular widget, I'm
probably going to remove

00:14:57.395 --> 00:14:58.600
it from my home screen.

00:14:58.600 --> 00:15:01.450
It just doesn't fit in with the
flow of the home screen.

00:15:01.450 --> 00:15:03.220
So I think this slide and the
previous slide are very

00:15:03.220 --> 00:15:04.140
important to consider.

00:15:04.140 --> 00:15:05.210
NICK BUTCHER: Yeah, home screens
are precious things.

00:15:05.210 --> 00:15:05.560
ADAM KOCH: Very precious.

00:15:05.560 --> 00:15:05.815
Yeah.

00:15:05.815 --> 00:15:06.910
NICK BUTCHER: There's whole
communities of people just

00:15:06.910 --> 00:15:08.400
around sharing images
of how they

00:15:08.400 --> 00:15:09.790
configure their home screen.

00:15:09.790 --> 00:15:11.850
People get very passionate
about this stuff, so

00:15:11.850 --> 00:15:12.870
[? we're being ?]
very respectful.

00:15:12.870 --> 00:15:14.950
ROMAN NURIK: It's something
you see--

00:15:14.950 --> 00:15:16.360
I don't know about a
few hundred times a

00:15:16.360 --> 00:15:17.250
day, but you see--

00:15:17.250 --> 00:15:17.810
ADAM KOCH: Possibly 100 times.

00:15:17.810 --> 00:15:19.660
ROMAN NURIK: Possibly, yeah,
100 times a day.

00:15:19.660 --> 00:15:23.564
So you want to make it as
beautiful as possible.

00:15:23.564 --> 00:15:25.890
NICK BUTCHER: And then the
next step is a personal

00:15:25.890 --> 00:15:28.110
bugbear of mine, which is
applications which don't

00:15:28.110 --> 00:15:30.760
provide a preview image.

00:15:30.760 --> 00:15:33.680
So you can provide one preview
image for a widget.

00:15:33.680 --> 00:15:36.010
And this is used not only
in the tray here--

00:15:36.010 --> 00:15:37.930
so when I'm going through and
selecting a widget, I go into

00:15:37.930 --> 00:15:40.890
the widget tray and then long
press [INAUDIBLE] to pick it

00:15:40.890 --> 00:15:42.580
up and then place it
on my home screen.

00:15:42.580 --> 00:15:45.870
But also, when I'm placing it,
a slightly semi-transparent

00:15:45.870 --> 00:15:47.520
version will be--

00:15:47.520 --> 00:15:50.030
I'll hold onto it and hover it
to place it where I want on

00:15:50.030 --> 00:15:50.560
the home screen.

00:15:50.560 --> 00:15:53.480
So it's really important to
include this visual image of

00:15:53.480 --> 00:15:54.940
what the widget's going
to look like.

00:15:59.340 --> 00:16:01.180
When they're placed into the
tray, you'll be aware that you

00:16:01.180 --> 00:16:05.700
have this landscape cropped
representation.

00:16:05.700 --> 00:16:08.900
So if you provide a very tall
widget, it's going to do a

00:16:08.900 --> 00:16:09.740
center-top crop.

00:16:09.740 --> 00:16:11.435
So if you look in this example
we're showing here of the

00:16:11.435 --> 00:16:15.640
Photo Gallery widget, it's
showing the top half, almost,

00:16:15.640 --> 00:16:17.620
of the preview image,
which is fine.

00:16:17.620 --> 00:16:19.370
But just bear that in mind
when you're designing the

00:16:19.370 --> 00:16:21.610
asset, that it may be
displayed as such.

00:16:21.610 --> 00:16:23.300
And then when I pick it up to
place it on the home screen,

00:16:23.300 --> 00:16:25.110
it will display the whole
image in this kind of

00:16:25.110 --> 00:16:26.870
semi-transparent way.

00:16:26.870 --> 00:16:28.660
And also, when you're creating
this, you want to be cognizant

00:16:28.660 --> 00:16:31.410
not to be leaking any personal
data or anything like that.

00:16:31.410 --> 00:16:33.620
You want to create these with
test data just when you're

00:16:33.620 --> 00:16:34.645
designing them.

00:16:34.645 --> 00:16:37.370
ROMAN NURIK: And one general
technique that I've used when

00:16:37.370 --> 00:16:39.440
creating widgets is
basically take a

00:16:39.440 --> 00:16:41.490
screen shot of the widget.

00:16:41.490 --> 00:16:42.820
Open it up in Photoshop.

00:16:42.820 --> 00:16:45.110
And I'm guessing that as a
designer, you probably have

00:16:45.110 --> 00:16:46.910
some of the source
assets, anyway.

00:16:46.910 --> 00:16:51.180
But drop in the source assets
on top of your screen shot,

00:16:51.180 --> 00:16:54.370
line things up appropriately,
and then just replace all the

00:16:54.370 --> 00:16:56.330
real data with dummy data.

00:16:56.330 --> 00:17:00.320
And then export that as a PNG
file and drop it in as a

00:17:00.320 --> 00:17:00.910
preview image.

00:17:00.910 --> 00:17:03.210
The other thing to note about
preview images is that you

00:17:03.210 --> 00:17:06.579
should try to avoid showing any
extra transparent pixels

00:17:06.579 --> 00:17:09.710
around the sides of the preview
image since the

00:17:09.710 --> 00:17:13.829
launcher will automatically
apply padding and margins so

00:17:13.829 --> 00:17:16.240
that your preview image
isn't flush with the

00:17:16.240 --> 00:17:19.286
bounds of its cell.

00:17:19.286 --> 00:17:20.220
Should we move on?

00:17:20.220 --> 00:17:21.589
NICK BUTCHER: Yeah,
absolutely.

00:17:21.589 --> 00:17:23.216
ROMAN NURIK: All right.

00:17:23.216 --> 00:17:25.160
NICK BUTCHER: And this is
a few more guidelines.

00:17:25.160 --> 00:17:28.270
We touched briefly on the
configuration, but this is an

00:17:28.270 --> 00:17:29.970
example of what it
might look like.

00:17:29.970 --> 00:17:31.790
So if you drop the
Google Play--

00:17:31.790 --> 00:17:34.280
the Library widget, which shows
you all your books and

00:17:34.280 --> 00:17:35.760
movies you've been
watching lately--

00:17:35.760 --> 00:17:38.120
you'll get this dialogue, which
will pop up offering you

00:17:38.120 --> 00:17:43.265
if you want to personalize it,
just one of the media sources.

00:17:43.265 --> 00:17:45.320
So some general guidelines
about creating these

00:17:45.320 --> 00:17:48.650
configuration steps is you want
to keep it very light.

00:17:48.650 --> 00:17:50.370
You do want to make it
personalizable, but you don't

00:17:50.370 --> 00:17:53.180
want to be leading the user
through five, six, seven deep

00:17:53.180 --> 00:17:54.120
series of steps.

00:17:54.120 --> 00:17:56.160
This is supposed to quite
a light process to grab

00:17:56.160 --> 00:17:58.080
something and place it
onto the home screen.

00:17:58.080 --> 00:18:00.320
So do keep that in mind.

00:18:00.320 --> 00:18:01.980
The other thing is we do
recommend to use a dialogue

00:18:01.980 --> 00:18:02.650
style here.

00:18:02.650 --> 00:18:04.880
This is one of the very few
cases, I guess, where we

00:18:04.880 --> 00:18:08.350
recommend a dialogue, just to
keep the user in the context,

00:18:08.350 --> 00:18:10.670
that you are actually working
on something on the home

00:18:10.670 --> 00:18:13.360
screen, and you're not deep in
the app [INAUDIBLE] where they

00:18:13.360 --> 00:18:14.522
were coming from.

00:18:14.522 --> 00:18:15.772
ROMAN NURIK: Absolutely.

00:18:17.655 --> 00:18:18.020
Moving on to the linking.

00:18:18.020 --> 00:18:19.035
[INTERPOSING VOICES]

00:18:19.035 --> 00:18:20.850
NICK BUTCHER: --go a little
bit deeper about linking

00:18:20.850 --> 00:18:21.790
through to content.

00:18:21.790 --> 00:18:25.300
So as we talked about earlier,
it's all about another avenue

00:18:25.300 --> 00:18:26.360
to expose your content.

00:18:26.360 --> 00:18:31.340
So you want to be having items
of content-- so here, this

00:18:31.340 --> 00:18:32.530
email widget, individual
emails.

00:18:32.530 --> 00:18:33.940
There might be individual
news stories.

00:18:33.940 --> 00:18:35.590
And they want to be deep
links straight

00:18:35.590 --> 00:18:38.210
through to that content.

00:18:38.210 --> 00:18:39.530
This isn't just a
launcher widget.

00:18:39.530 --> 00:18:43.320
They want to be able to have
the avenues go straight to

00:18:43.320 --> 00:18:45.110
read more about it.

00:18:45.110 --> 00:18:49.710
But you also want to include
access points, other common

00:18:49.710 --> 00:18:51.690
points in your application the
user might want to get to.

00:18:51.690 --> 00:18:54.040
So typically, we see that as
being the top level of the

00:18:54.040 --> 00:18:54.600
application.

00:18:54.600 --> 00:18:57.770
And quite often, you'll use your
app icon in the top left

00:18:57.770 --> 00:18:58.730
[INAUDIBLE]

00:18:58.730 --> 00:19:03.650
pattern as a quick access to the
root of the application.

00:19:03.650 --> 00:19:06.060
So that means the user doesn't
have to have-- if you didn't

00:19:06.060 --> 00:19:08.080
have this, you might have those
deep links through to

00:19:08.080 --> 00:19:09.656
the emails, but then you
might also have to

00:19:09.656 --> 00:19:11.090
have an email shortcut.

00:19:11.090 --> 00:19:12.120
You want to remove that.

00:19:12.120 --> 00:19:15.140
The user's going all
out and putting a

00:19:15.140 --> 00:19:15.950
widget on the home screen.

00:19:15.950 --> 00:19:17.600
They don't want to have
a shortcut to the

00:19:17.600 --> 00:19:18.600
application as well.

00:19:18.600 --> 00:19:19.950
It's kind of one or the other.

00:19:19.950 --> 00:19:22.660
So give them a way to get to the
top level of the app, as

00:19:22.660 --> 00:19:25.520
well as to come [INAUDIBLE], in
the email example, again,

00:19:25.520 --> 00:19:28.060
creating a new email
is an example here.

00:19:28.060 --> 00:19:30.330
And it might be taking a photo
or whatever it might be.

00:19:33.360 --> 00:19:35.990
And just a little note there,
mostly for those developers

00:19:35.990 --> 00:19:38.450
out there, really, is that our
recommendations on navigation

00:19:38.450 --> 00:19:41.270
is that if you do deep link
into the application, you

00:19:41.270 --> 00:19:43.450
should be synthesizing
[INAUDIBLE].

00:19:43.450 --> 00:19:46.840
ROMAN NURIK: All right, let's
move on to the lock screen,

00:19:46.840 --> 00:19:49.310
one of my favorite parts of
the widget framework.

00:19:49.310 --> 00:19:52.210
NICK BUTCHER: Yes, so one of
the new, shiny features in

00:19:52.210 --> 00:19:56.000
Android 4.2 is the ability to
place widgets not only on the

00:19:56.000 --> 00:19:57.380
home screen but on
the lock screen.

00:19:57.380 --> 00:19:59.060
And talk about immediate
info and control.

00:19:59.060 --> 00:20:01.130
You don't get much more
immediate than that.

00:20:01.130 --> 00:20:04.490
This is like zero interaction
information.

00:20:04.490 --> 00:20:06.700
You just have to turn
the phone on,

00:20:06.700 --> 00:20:07.520
and that's it, right?

00:20:07.520 --> 00:20:10.230
You don't even have
to unlock it.

00:20:10.230 --> 00:20:14.370
So some things to be aware of is
that we allow slightly less

00:20:14.370 --> 00:20:16.780
personalization options
on the lock screen.

00:20:16.780 --> 00:20:19.360
Widgets essentially
run in two sizes.

00:20:19.360 --> 00:20:21.550
So you can see on the slide here
there's an example of the

00:20:21.550 --> 00:20:22.200
calendar widget.

00:20:22.200 --> 00:20:25.400
So either you have the ability
to unlock-- so that could be

00:20:25.400 --> 00:20:29.100
the slide unlock or some kind
of secure PIN, in which case

00:20:29.100 --> 00:20:32.700
the widget is in a collapsed
state-- or it takes up the

00:20:32.700 --> 00:20:33.270
whole screen.

00:20:33.270 --> 00:20:34.740
There's no in-between state.

00:20:34.740 --> 00:20:37.510
ROMAN NURIK: There's another
thing to note on that is that

00:20:37.510 --> 00:20:40.130
you actually can have multiple
widgets on a lock screen.

00:20:40.130 --> 00:20:41.920
This is just an example
of one.

00:20:41.920 --> 00:20:45.600
But as of Android 4.2, you
can actually add more

00:20:45.600 --> 00:20:47.100
items to the left.

00:20:47.100 --> 00:20:48.850
Or I believe they're actually
all to the left.

00:20:48.850 --> 00:20:49.940
To the right, there's
the camera.

00:20:49.940 --> 00:20:52.320
But to the left, you can
add other items.

00:20:52.320 --> 00:20:56.460
So where the center widget,
where the first thing you see

00:20:56.460 --> 00:21:00.370
when you unlock, or when you
press the power button, the

00:21:00.370 --> 00:21:02.020
first thing you see
may be the clock.

00:21:02.020 --> 00:21:03.140
If you swipe to the
left, you can

00:21:03.140 --> 00:21:04.370
actually add widgets there.

00:21:04.370 --> 00:21:05.660
And those will always
be expanded.

00:21:05.660 --> 00:21:06.440
The other thing I want to--

00:21:06.440 --> 00:21:09.760
NICK BUTCHER: You can see, if
you look at the back screen

00:21:09.760 --> 00:21:11.810
shot, the expanded calendar
view, you can see there's an

00:21:11.810 --> 00:21:15.298
extra panel peeking
in to the side.

00:21:15.298 --> 00:21:18.012
Don't know if you can make that
out in the screenshot.

00:21:18.012 --> 00:21:18.855
But yeah, you can swipe
across the other ones.

00:21:18.855 --> 00:21:21.100
ROMAN NURIK: The other thing
to note is that on tablets,

00:21:21.100 --> 00:21:22.470
there is no collapsed view.

00:21:22.470 --> 00:21:24.530
There is just expanded view.

00:21:24.530 --> 00:21:26.850
This is kind of the current
presentation of things.

00:21:26.850 --> 00:21:28.650
These things may change
in the future.

00:21:28.650 --> 00:21:31.980
And certainly, I don't think
we have guidance on

00:21:31.980 --> 00:21:37.310
third-party devices or other
OEMs, how they would present

00:21:37.310 --> 00:21:38.280
lock screen widgets.

00:21:38.280 --> 00:21:40.610
There's certainly lots
of different options.

00:21:40.610 --> 00:21:43.650
But the core API, you should
assume that there'll be a

00:21:43.650 --> 00:21:46.420
collapsed and expanded state
and in some cases, no

00:21:46.420 --> 00:21:47.285
collapsed state.

00:21:47.285 --> 00:21:49.300
NICK BUTCHER: And speaking of
the current presentation right

00:21:49.300 --> 00:21:51.990
now, we darkened the
wallpaper slightly.

00:21:51.990 --> 00:21:53.810
I think it's about
40% [INAUDIBLE].

00:21:53.810 --> 00:21:54.760
ROMAN NURIK: Something
like that.

00:21:54.760 --> 00:21:55.830
NICK BUTCHER: Something
like that.

00:21:55.830 --> 00:21:57.230
I forget exactly.

00:21:57.230 --> 00:22:01.400
So all of the stock controls,
like to actually go ahead and

00:22:01.400 --> 00:22:03.370
unlock the devices,
are in monochrome

00:22:03.370 --> 00:22:04.520
white on top of that.

00:22:04.520 --> 00:22:07.320
And that contrasts well, because
obviously, the user

00:22:07.320 --> 00:22:09.560
can control what the wallpaper
is behind.

00:22:09.560 --> 00:22:14.230
So yeah, using white as the main
color in your design will

00:22:14.230 --> 00:22:16.010
work well here, because
[INAUDIBLE] at the moment

00:22:16.010 --> 00:22:18.412
guaranteed to contrast.

00:22:18.412 --> 00:22:20.560
ADAM KOCH: One quick note on the
development side is this

00:22:20.560 --> 00:22:23.110
is just really one extra XML
attribute that you need to add

00:22:23.110 --> 00:22:25.690
to make your widget compatible
with both the home screen and

00:22:25.690 --> 00:22:26.820
the lock screen.

00:22:26.820 --> 00:22:29.540
But obviously, not all home
screen widgets should be

00:22:29.540 --> 00:22:32.180
placed or should be allowed to
be placed on the lock screen.

00:22:32.180 --> 00:22:34.360
It really comes down to the
application and the

00:22:34.360 --> 00:22:35.580
information you're trying
to display.

00:22:35.580 --> 00:22:37.250
ROMAN NURIK: Yeah.

00:22:37.250 --> 00:22:39.710
And by the way, when you add a
lock screen widget, you do,

00:22:39.710 --> 00:22:41.090
again, have the option
of providing a

00:22:41.090 --> 00:22:42.550
configuration step.

00:22:42.550 --> 00:22:45.210
You may want to ask the user,
what are you comfortable

00:22:45.210 --> 00:22:46.910
showing on the lock screen?

00:22:46.910 --> 00:22:50.850
Do you want to show all the
information, or maybe just a

00:22:50.850 --> 00:22:52.890
snippet of information that
doesn't include personal

00:22:52.890 --> 00:22:56.190
information or contact
information from other people?

00:22:56.190 --> 00:23:00.290
But definitely keep in mind that
there's this extra place

00:23:00.290 --> 00:23:02.810
here where you potentially
have insecure

00:23:02.810 --> 00:23:04.420
access to the device.

00:23:04.420 --> 00:23:09.980
Somebody can just walk by the
user's cubicle, see their

00:23:09.980 --> 00:23:12.950
phone, and if this is a bad
person, they can take a look

00:23:12.950 --> 00:23:13.530
at the phone.

00:23:13.530 --> 00:23:15.430
If they don't know the pattern,
they'll still be able

00:23:15.430 --> 00:23:16.990
to access the lock
screen widgets.

00:23:16.990 --> 00:23:20.570
So if those have insecure
information, that's a problem.

00:23:20.570 --> 00:23:23.240
NICK BUTCHER: So I'm probably
not going to put my bank

00:23:23.240 --> 00:23:25.580
account balance onto a
lock screen widget.

00:23:25.580 --> 00:23:28.500
But something like a to-do list,
like one of my favorite

00:23:28.500 --> 00:23:30.810
to-do lists that I use lets me
do a lock screen widget.

00:23:30.810 --> 00:23:33.590
So I'm shopping, I'm walking
around the shops, I don't even

00:23:33.590 --> 00:23:35.600
have to unlock my device to
tick things off as I walk

00:23:35.600 --> 00:23:37.250
around the aisles, place
them in my basket.

00:23:37.250 --> 00:23:39.290
I can just literally
turn the screen on,

00:23:39.290 --> 00:23:40.730
tick, tick, tick, done.

00:23:40.730 --> 00:23:41.310
It's great.

00:23:41.310 --> 00:23:43.150
ROMAN NURIK: Awesome.

00:23:43.150 --> 00:23:43.925
NICK BUTCHER: OK.

00:23:43.925 --> 00:23:44.725
Constraints.

00:23:44.725 --> 00:23:46.620
ROMAN NURIK: Oh, actually,
there's one more thing I

00:23:46.620 --> 00:23:47.870
wanted to mention.

00:23:47.870 --> 00:23:50.850
When you actually touch an item
on a lock screen widget--

00:23:50.850 --> 00:23:55.140
like let's say you were
to touch, I guess,

00:23:55.140 --> 00:23:56.500
this calendar item--

00:23:56.500 --> 00:24:00.690
you'd actually be given the
option first to unlock.

00:24:00.690 --> 00:24:03.140
If you don't unlock the device,
it'll actually just

00:24:03.140 --> 00:24:04.950
cancel that click.

00:24:04.950 --> 00:24:08.290
So keep in mind that what's
on the widget is insecure.

00:24:08.290 --> 00:24:12.040
But once you touch on something,
it will be secure.

00:24:12.040 --> 00:24:13.060
So constraints.

00:24:13.060 --> 00:24:14.310
Should I talk about
constraints?

00:24:16.660 --> 00:24:19.820
So there are a couple
constraints that you should

00:24:19.820 --> 00:24:22.150
keep in mind when you're
designing home screen widgets.

00:24:22.150 --> 00:24:23.350
The first is there isn't really

00:24:23.350 --> 00:24:24.930
support for custom fonts.

00:24:24.930 --> 00:24:28.050
So from a developer's
standpoint, in your app, you

00:24:28.050 --> 00:24:31.810
can actually just specify a font
file, a TrueType file to

00:24:31.810 --> 00:24:36.660
use for a given view, like a
label or a piece of edit text

00:24:36.660 --> 00:24:38.300
or something like that.

00:24:38.300 --> 00:24:40.070
But on widgets, there's no
real way to do that.

00:24:40.070 --> 00:24:41.050
There is a hack.

00:24:41.050 --> 00:24:45.110
You can obviously render the
text into a bitmap, into an

00:24:45.110 --> 00:24:46.940
image, and throw that
into the widget.

00:24:46.940 --> 00:24:49.590
But that's just a really,
really bad hack.

00:24:49.590 --> 00:24:51.670
It's very bad for performance,
things like that.

00:24:51.670 --> 00:24:54.630
So just avoid custom
fonts, if possible.

00:24:54.630 --> 00:24:56.655
There's also no opportunity
for custom animations.

00:24:56.655 --> 00:24:59.510
This is something that a few
designers have asked me.

00:24:59.510 --> 00:25:00.380
What can I really do?

00:25:00.380 --> 00:25:02.160
Can I make cool transitions--

00:25:02.160 --> 00:25:04.460
when I press one thing,
the widget rotates?

00:25:04.460 --> 00:25:08.220
Unfortunately, the widget
framework right now is a

00:25:08.220 --> 00:25:09.130
little static.

00:25:09.130 --> 00:25:12.190
So if you touch on something in
the widget, you can update

00:25:12.190 --> 00:25:13.180
the widget.

00:25:13.180 --> 00:25:15.840
You can change the contents,
show something expand or

00:25:15.840 --> 00:25:18.600
whatnot, but you won't be able
to animate it really well.

00:25:18.600 --> 00:25:22.930
So just kind of assume that
there won't be animations.

00:25:22.930 --> 00:25:25.740
One thing to note is that if
you're touching an item and

00:25:25.740 --> 00:25:29.100
jumping into the full screen
view, like deep linking into

00:25:29.100 --> 00:25:32.340
content, as of Android 4.1,
there is something called

00:25:32.340 --> 00:25:35.860
Activity Options where you can
basically create a zoom-up

00:25:35.860 --> 00:25:37.190
animation from the content.

00:25:37.190 --> 00:25:40.530
But that's basically the limit
of the animation abilities you

00:25:40.530 --> 00:25:43.510
can do with widgets.

00:25:43.510 --> 00:25:45.460
Actually, there's also
the option of

00:25:45.460 --> 00:25:47.550
cross-fading between views.

00:25:47.550 --> 00:25:49.330
We'll talk about that
in a second.

00:25:49.330 --> 00:25:51.430
Also, there's no horizontal
gesture support.

00:25:51.430 --> 00:25:55.860
So the main way you navigate the
home screen and the lock

00:25:55.860 --> 00:25:58.440
screen is you swipe left and
right to change between your

00:25:58.440 --> 00:26:00.440
different screens.

00:26:00.440 --> 00:26:05.300
Since that's a very important
gesture, we don't allow

00:26:05.300 --> 00:26:07.610
widgets to contain
views that can

00:26:07.610 --> 00:26:09.460
horizontally scroll as well.

00:26:09.460 --> 00:26:14.195
So the only type of scrolling
or flinging or anything like

00:26:14.195 --> 00:26:16.120
that you can do is vertical.

00:26:16.120 --> 00:26:18.520
And to do that, you need to use
one of the specific views,

00:26:18.520 --> 00:26:21.180
which we'll talk about.

00:26:21.180 --> 00:26:23.220
Also, vertical scrolling
is only available

00:26:23.220 --> 00:26:24.850
as of Android 3.0.

00:26:24.850 --> 00:26:28.260
Resizability, basically the
ability to long press on the

00:26:28.260 --> 00:26:31.175
widget and then get those nice
little resize handles, is only

00:26:31.175 --> 00:26:33.040
in Android 3.1.

00:26:33.040 --> 00:26:37.260
And then we added this option
to change the layout of your

00:26:37.260 --> 00:26:40.220
widget, based on its
size dynamically.

00:26:40.220 --> 00:26:43.980
And so basically, after you
resize, you can update the

00:26:43.980 --> 00:26:45.130
layout of the widget.

00:26:45.130 --> 00:26:47.720
And that was added in Jellybean,
Android 4.1.

00:26:47.720 --> 00:26:50.890
So in earlier versions, you're
basically stuck with your

00:26:50.890 --> 00:26:54.520
layout once you've placed it,
and even after you resized it,

00:26:54.520 --> 00:26:56.830
until the next time
you updated it.

00:26:56.830 --> 00:26:57.770
ADAM KOCH: I think we
mentioned this.

00:26:57.770 --> 00:26:59.640
Lock screen widgets
are 4.2+ as well.

00:26:59.640 --> 00:27:01.620
ROMAN NURIK: Right.

00:27:01.620 --> 00:27:04.215
So those are some of
the constraints.

00:27:04.215 --> 00:27:06.220
The other thing to keep in mind
is that there are certain

00:27:06.220 --> 00:27:07.460
things you just can't
do in widgets.

00:27:07.460 --> 00:27:09.660
For example, you can't play
video in widgets.

00:27:12.460 --> 00:27:13.610
You can't play a game
in a widget.

00:27:13.610 --> 00:27:16.570
You can't draw arbitrary
stuff into the widget.

00:27:16.570 --> 00:27:18.200
There are a few standard things

00:27:18.200 --> 00:27:19.810
that you can do, though.

00:27:19.810 --> 00:27:22.500
The common things, like text
labels and images and buttons,

00:27:22.500 --> 00:27:23.480
those work.

00:27:23.480 --> 00:27:26.450
There's support for loading
spinners as well, progress

00:27:26.450 --> 00:27:27.340
bars as well.

00:27:27.340 --> 00:27:30.080
Although, like we mentioned
before, you don't want to

00:27:30.080 --> 00:27:32.090
update the widget very,
very frequently.

00:27:32.090 --> 00:27:35.180
So it's not really feasible to
have a progress bar that

00:27:35.180 --> 00:27:38.120
updates as you're downloading
something, for example.

00:27:38.120 --> 00:27:41.600
So progress bars, you should
probably only use for percent

00:27:41.600 --> 00:27:44.512
watched, for example.

00:27:44.512 --> 00:27:47.620
If the widget is showing the
latest TV show episode that

00:27:47.620 --> 00:27:50.450
I've seen, and I've seen 50%
of it, maybe you can use a

00:27:50.450 --> 00:27:52.610
progress bar to show that
I've seen 50% of it.

00:27:52.610 --> 00:27:54.810
But don't show something that
is supposed to update very,

00:27:54.810 --> 00:27:56.590
very frequently.

00:27:56.590 --> 00:27:58.410
You can also show an
in-place carousel.

00:27:58.410 --> 00:28:02.260
Basically, you have an image
in place in the widget, and

00:28:02.260 --> 00:28:05.170
then after a few seconds,
it kind of fades out

00:28:05.170 --> 00:28:06.370
into another image.

00:28:06.370 --> 00:28:07.680
You can do something
like that.

00:28:07.680 --> 00:28:10.950
A good example of that is the
news and weather widget that

00:28:10.950 --> 00:28:15.780
comes by default with Nexus
4, things like that.

00:28:15.780 --> 00:28:19.340
And that's an alternative to
a collection widget that

00:28:19.340 --> 00:28:22.080
basically lets you scroll
up and down.

00:28:22.080 --> 00:28:23.740
And then you can add some
clocks in there

00:28:23.740 --> 00:28:25.630
if you really want.

00:28:25.630 --> 00:28:28.160
Also for scrollable elements,
you can have list views.

00:28:28.160 --> 00:28:32.950
And by list view, I don't mean
specifically, basically, a

00:28:32.950 --> 00:28:37.350
view containing a list item or
a piece of text followed by

00:28:37.350 --> 00:28:38.230
another piece of text.

00:28:38.230 --> 00:28:40.680
Your list items themselves,
the items you show in this

00:28:40.680 --> 00:28:43.360
list view, can be
fairly complex.

00:28:43.360 --> 00:28:45.410
You can do lots of different
things in them.

00:28:45.410 --> 00:28:47.090
So don't treat this
as a list view.

00:28:47.090 --> 00:28:51.310
Think of it more as a basic kind
of collection view that

00:28:51.310 --> 00:28:54.506
can list items or different
presentations.

00:28:54.506 --> 00:28:56.990
NICK BUTCHER: The email and
calendar examples, I guess we

00:28:56.990 --> 00:28:59.145
showed briefly earlier, are good
examples of that, where

00:28:59.145 --> 00:29:02.180
you can show quite a lot of
different [INAUDIBLE] content

00:29:02.180 --> 00:29:04.982
in that list view and have
a user click through it.

00:29:04.982 --> 00:29:06.640
ROMAN NURIK: And also, you
could have grid views.

00:29:06.640 --> 00:29:10.910
So for example, the bookmarks
widget lets you see a

00:29:10.910 --> 00:29:13.230
two-column view of bookmarks.

00:29:13.230 --> 00:29:14.180
So that's another example.

00:29:14.180 --> 00:29:15.880
And you can actually replicate
that using a

00:29:15.880 --> 00:29:17.500
list view as well.

00:29:17.500 --> 00:29:18.980
And then finally, stack view,
which we'll show an

00:29:18.980 --> 00:29:20.380
example of in a bit.

00:29:20.380 --> 00:29:22.270
And then most of the
layout types--

00:29:22.270 --> 00:29:24.860
as a designer, you may not be
aware of the different types--

00:29:24.860 --> 00:29:27.680
but there are things like
relative layout, where things

00:29:27.680 --> 00:29:31.940
are arranged relative to one
another; linear layout, where

00:29:31.940 --> 00:29:34.740
things are arranged linearly;
and frame layout,

00:29:34.740 --> 00:29:35.270
and things like that.

00:29:35.270 --> 00:29:37.030
All those main ones
are supported.

00:29:37.030 --> 00:29:41.790
So you have a lot of options in
terms of where things are

00:29:41.790 --> 00:29:44.030
placed within the widget.

00:29:44.030 --> 00:29:50.830
So that's one of the more open
parts of the widget system.

00:29:50.830 --> 00:29:52.190
So those are the supported
UI elements.

00:29:52.190 --> 00:29:54.800
Let's actually then, just jump
into examples, since I think

00:29:54.800 --> 00:29:56.300
we're probably running
a little low on time.

00:29:56.300 --> 00:29:57.170
ADAM KOCH: Yeah.

00:29:57.170 --> 00:29:58.680
All right.

00:29:58.680 --> 00:30:00.530
So we had some screenshots,
but we thought, hey, we've

00:30:00.530 --> 00:30:01.660
actually got a device
connected.

00:30:01.660 --> 00:30:04.560
Why don't we actually demo
these widgets live.

00:30:04.560 --> 00:30:07.800
So we added just a few widgets
that we like to the home

00:30:07.800 --> 00:30:09.666
screen of this device.

00:30:09.666 --> 00:30:12.240
First of all, we've got
some news widgets.

00:30:12.240 --> 00:30:15.020
There's the New York Times
and the BBC News widgets.

00:30:15.020 --> 00:30:17.120
They're both resizable widgets,

00:30:17.120 --> 00:30:18.310
both vertically scrolling.

00:30:18.310 --> 00:30:19.640
So here you can see the
New York Times.

00:30:19.640 --> 00:30:22.330
We've got a list of different
news articles, some headline

00:30:22.330 --> 00:30:25.660
text, some summary text, and an
image, in most cases here

00:30:25.660 --> 00:30:26.220
on the right.

00:30:26.220 --> 00:30:27.856
NICK BUTCHER: Should we
demo resizing it?

00:30:27.856 --> 00:30:28.740
ADAM KOCH: Sorry?

00:30:28.740 --> 00:30:30.981
NICK BUTCHER: You want to show
how the resizing works?

00:30:30.981 --> 00:30:32.770
ADAM KOCH: Yeah, you just pick
up the widget and drop it.

00:30:32.770 --> 00:30:38.130
And then you can very easily
resize it right there.

00:30:38.130 --> 00:30:39.970
And then the BBC News widget--

00:30:39.970 --> 00:30:45.424
actually, what I might do is
flip this guy over here so you

00:30:45.424 --> 00:30:46.360
can see a bit better.

00:30:46.360 --> 00:30:49.290
This is quite a nice
widget, as well.

00:30:49.290 --> 00:30:52.870
And when you expand it out
there, it actually grows the

00:30:52.870 --> 00:30:54.160
columns quite nicely here.

00:30:54.160 --> 00:30:55.120
ROMAN NURIK: This is probably
a grid view, right?

00:30:55.120 --> 00:30:56.510
I'm guessing that's
a grid view.

00:30:56.510 --> 00:30:57.520
NICK BUTCHER: So that's
a great example.

00:30:57.520 --> 00:30:58.980
This is coming [INAUDIBLE]
as a grid view.

00:30:58.980 --> 00:31:02.460
But you want your widget to
dynamically resize, based on

00:31:02.460 --> 00:31:04.760
if I give it more horizontal
real estate, then you might

00:31:04.760 --> 00:31:06.950
change the representation of
the story, like going into

00:31:06.950 --> 00:31:08.090
multiple rows of a grid.

00:31:08.090 --> 00:31:10.960
Or you might show a more
detailed headline or something

00:31:10.960 --> 00:31:11.540
along those lines.

00:31:11.540 --> 00:31:13.870
You want your widget to
react and make the

00:31:13.870 --> 00:31:16.042
most of that space.

00:31:16.042 --> 00:31:18.010
ADAM KOCH: Yeah, I really
like these widgets.

00:31:18.010 --> 00:31:19.570
Quite nice for news widgets.

00:31:19.570 --> 00:31:21.730
And I think both of them, when
you add them, you get to

00:31:21.730 --> 00:31:24.630
configure which category of
news that you want to

00:31:24.630 --> 00:31:26.220
actually show here.

00:31:26.220 --> 00:31:28.730
So you can show technology news
on your home screen if

00:31:28.730 --> 00:31:30.080
that's what's interesting
to you.

00:31:30.080 --> 00:31:33.090
Or you can show top news
in these cases.

00:31:33.090 --> 00:31:34.800
So that's some news widgets.

00:31:34.800 --> 00:31:38.240
This is the Google Play my
library widget, which is quite

00:31:38.240 --> 00:31:39.310
nice because--

00:31:39.310 --> 00:31:42.280
actually, how much room
do we have here?

00:31:42.280 --> 00:31:44.930
ROMAN NURIK: Yeah,
that's fine.

00:31:44.930 --> 00:31:47.200
ADAM KOCH: If you see that as
you resize it and let go of

00:31:47.200 --> 00:31:51.720
the resizing handles, it re-lays
itself out, I guess

00:31:51.720 --> 00:31:53.620
you would say.

00:31:53.620 --> 00:31:56.730
And it's quite nice, because it
fits dynamically into all

00:31:56.730 --> 00:31:57.840
sorts of different sizes here.

00:31:57.840 --> 00:32:00.330
So you can have a small one if
that's what you want to use on

00:32:00.330 --> 00:32:01.480
your home screen.

00:32:01.480 --> 00:32:04.390
You can have it be a
wider widget here.

00:32:04.390 --> 00:32:07.230
And it shows the various items
from your Play library.

00:32:07.230 --> 00:32:08.870
NICK BUTCHER: It's one of my
favorite widgets, actually.

00:32:08.870 --> 00:32:10.440
I think it's a great example
of what Roman was talking

00:32:10.440 --> 00:32:12.810
about earlier about having
really current, really

00:32:12.810 --> 00:32:13.970
up-to-date information.

00:32:13.970 --> 00:32:16.920
So if you have a lot of your
information in place, if you

00:32:16.920 --> 00:32:18.970
play music and books
and everything--

00:32:18.970 --> 00:32:21.690
and movies-- then it will
update, so it's very easy to

00:32:21.690 --> 00:32:23.450
get back to what you
were last doing.

00:32:23.450 --> 00:32:25.750
So if I'm reading a book on my
phone on my commute home, and

00:32:25.750 --> 00:32:27.850
I get home, I can just pick up
my tablet, and the widget's

00:32:27.850 --> 00:32:31.985
updated to show that that book
is the most prominent thing in

00:32:31.985 --> 00:32:32.230
the widget.

00:32:32.230 --> 00:32:34.440
And I can just click it to get
straight back to where I was,

00:32:34.440 --> 00:32:36.570
which is a brilliant
use of it, I think.

00:32:36.570 --> 00:32:39.380
ADAM KOCH: Yeah, it's
quite nice.

00:32:39.380 --> 00:32:41.610
Over here, we've got some
miscellaneous widgets.

00:32:41.610 --> 00:32:44.120
I've got the Songkick widget
here, which shows your plans--

00:32:44.120 --> 00:32:46.550
upcoming concerts that
you have planned.

00:32:46.550 --> 00:32:47.660
I've got the Google+ widget.

00:32:47.660 --> 00:32:51.430
ROMAN NURIK: And the Google+
widget, it's not a collection

00:32:51.430 --> 00:32:54.030
widget, but it lets you flip
between different items using

00:32:54.030 --> 00:32:54.910
a button on screen.

00:32:54.910 --> 00:32:56.440
So you just press this button
and flip through

00:32:56.440 --> 00:32:58.480
the different items.

00:32:58.480 --> 00:33:01.520
And I generally prefer the
collection-type widget, but

00:33:01.520 --> 00:33:05.110
this is definitely another way
to focus on a single item and

00:33:05.110 --> 00:33:08.830
actively have the user
switch between them.

00:33:08.830 --> 00:33:11.200
ADAM KOCH: Down at the bottom,
it's the play music widget.

00:33:14.592 --> 00:33:15.420
Uh oh.

00:33:15.420 --> 00:33:16.650
What's going on here?

00:33:16.650 --> 00:33:17.970
ROMAN NURIK: Which
one is that?

00:33:17.970 --> 00:33:18.870
ADAM KOCH: That's the
Currents widget.

00:33:18.870 --> 00:33:20.530
ROMAN NURIK: Oh, so Currents
is probably

00:33:20.530 --> 00:33:21.280
stuck loading something.

00:33:21.280 --> 00:33:22.250
ADAM KOCH: It's stuck
loading something.

00:33:22.250 --> 00:33:23.180
ROMAN NURIK: Oh well.

00:33:23.180 --> 00:33:25.090
ADAM KOCH: It's a collections
widget, again.

00:33:25.090 --> 00:33:28.180
It's actually similar to this
YouTube widget here, where you

00:33:28.180 --> 00:33:29.630
can flip between the
different cards.

00:33:29.630 --> 00:33:30.860
ROMAN NURIK: And that's
an example of

00:33:30.860 --> 00:33:32.300
a stack view widget.

00:33:32.300 --> 00:33:34.310
So it's another type of
collection, but it's just

00:33:34.310 --> 00:33:35.530
presented in a different way.

00:33:35.530 --> 00:33:37.266
ADAM KOCH: Yeah, the Currents
one is quite nice.

00:33:37.266 --> 00:33:38.570
NICK BUTCHER: And you can
actually set the stack view to

00:33:38.570 --> 00:33:39.960
auto advance, which
is kind of fun.

00:33:39.960 --> 00:33:42.560
So if you have something like
YouTube, where it's probably

00:33:42.560 --> 00:33:45.990
telling you about the latest
videos added to a playlist,

00:33:45.990 --> 00:33:47.660
you can leave it there on the
home screen, and it'll

00:33:47.660 --> 00:33:50.540
actually rotate through and
highlight that content, which

00:33:50.540 --> 00:33:51.140
is kind of cool.

00:33:51.140 --> 00:33:51.960
ROMAN NURIK: Yeah, it's
a good way to

00:33:51.960 --> 00:33:53.520
present passive content.

00:33:53.520 --> 00:33:56.130
So not like emails, for example,
that are obviously

00:33:56.130 --> 00:33:58.480
very important to the user,
but featured items or

00:33:58.480 --> 00:34:01.930
recommended items that the
user may find enjoyable.

00:34:01.930 --> 00:34:04.880
ADAM KOCH: And then finally,
we've got a collection of

00:34:04.880 --> 00:34:06.600
clock widgets.

00:34:06.600 --> 00:34:09.550
And actually, the one in the
center there is DashClock

00:34:09.550 --> 00:34:12.389
widget, built by Roman
Nurik, himself.

00:34:12.389 --> 00:34:14.520
And it's also open source as
well, so it's actually a good

00:34:14.520 --> 00:34:16.929
one for developers and
designers to go look

00:34:16.929 --> 00:34:17.850
at how it was built.

00:34:17.850 --> 00:34:20.020
ROMAN NURIK: And the way these
work, I actually just want to

00:34:20.020 --> 00:34:23.290
point out, is that this
is an analog clock.

00:34:23.290 --> 00:34:25.159
An analog clock, actually,
you can customize.

00:34:25.159 --> 00:34:27.929
As a designer, you can tweak
the hour hand, the minute

00:34:27.929 --> 00:34:32.239
hand, and basically, the system
just rotates those PNG

00:34:32.239 --> 00:34:34.320
files to make it right.

00:34:34.320 --> 00:34:37.070
And then here, there's something
called a text clock

00:34:37.070 --> 00:34:40.125
that basically, you just give
it what part of the time you

00:34:40.125 --> 00:34:42.480
want to show, and
it shows that.

00:34:42.480 --> 00:34:46.139
And you can customize the
different topography aspects,

00:34:46.139 --> 00:34:47.760
like font weight and things
like that, as well as

00:34:47.760 --> 00:34:49.394
colors, and so on.

00:34:49.394 --> 00:34:51.690
ADAM KOCH: And you can see
here, as you resize the

00:34:51.690 --> 00:34:55.706
DashClock widget, it goes into
a sort of summary view.

00:34:55.706 --> 00:34:59.590
And as you expand it, it
jumps back out again.

00:34:59.590 --> 00:35:01.700
So that's it for some
of the demos, right?

00:35:01.700 --> 00:35:02.150
ROMAN NURIK: Yeah.

00:35:02.150 --> 00:35:03.170
ADAM KOCH: Should
we jump back?

00:35:03.170 --> 00:35:04.070
Do we have any--

00:35:04.070 --> 00:35:04.730
ROMAN NURIK: I think
that was it.

00:35:04.730 --> 00:35:06.450
So all right, that was--

00:35:06.450 --> 00:35:08.730
NICK BUTCHER: There's one more
thing, which I've seen a

00:35:08.730 --> 00:35:12.490
couple of applications do, is
like we were saying earlier, a

00:35:12.490 --> 00:35:14.805
home screen widget is prime,
prime real estate on the

00:35:14.805 --> 00:35:15.810
user's home screen.

00:35:15.810 --> 00:35:17.040
And the fact that they've put
you on the home screen means

00:35:17.040 --> 00:35:19.470
they're probably quite engaged
with your product.

00:35:19.470 --> 00:35:23.090
So I think it's actually an
opportunity to use them quite

00:35:23.090 --> 00:35:23.630
intelligently.

00:35:23.630 --> 00:35:26.560
So yes, you can highlight the
newest, latest information.

00:35:26.560 --> 00:35:28.820
But one interesting example I've
seen is a shopping app

00:35:28.820 --> 00:35:31.990
where if you've abandoned the
shopping cart, it has a widget

00:35:31.990 --> 00:35:35.450
showing you the latest offers
or whatever it is

00:35:35.450 --> 00:35:36.230
targeted to the user.

00:35:36.230 --> 00:35:39.180
But it will actually insert a
little item at the top saying,

00:35:39.180 --> 00:35:40.400
why don't you finish
your journey?

00:35:40.400 --> 00:35:41.150
And so, and so forth.

00:35:41.150 --> 00:35:46.560
So remember that they're small
versions of your app, almost,

00:35:46.560 --> 00:35:48.940
not just a way to highlight
your interesting content.

00:35:48.940 --> 00:35:51.443
So think about interesting ways
that you can use your

00:35:51.443 --> 00:35:53.410
home screen widgets.

00:35:53.410 --> 00:35:54.700
ROMAN NURIK: Absolutely.

00:35:54.700 --> 00:35:56.680
Also, we should probably
mention there's some

00:35:56.680 --> 00:35:57.320
categories.

00:35:57.320 --> 00:35:59.690
If you're building an app in a
certain category, you pretty

00:35:59.690 --> 00:36:03.010
much have to build a widget,
or else your users will

00:36:03.010 --> 00:36:04.860
comment, like, where's
your widget?

00:36:04.860 --> 00:36:07.190
A couple of examples, if you're
building a sports app,

00:36:07.190 --> 00:36:11.660
you should probably have a
scores widget for your league

00:36:11.660 --> 00:36:13.800
or for whatever information
you have.

00:36:13.800 --> 00:36:15.205
If you're building
a music, app--

00:36:15.205 --> 00:36:16.270
ADAM KOCH: Yeah, a music
app, gotta have one.

00:36:16.270 --> 00:36:18.430
ROMAN NURIK: --absolutely
have transport controls.

00:36:18.430 --> 00:36:20.490
So yeah, definitely
build a widget.

00:36:23.040 --> 00:36:23.410
All right.

00:36:23.410 --> 00:36:25.530
Well, with that, thanks
for joining.

00:36:25.530 --> 00:36:27.850
A couple of announcements
before we sign off.

00:36:27.850 --> 00:36:32.790
So as we mentioned a few weeks
ago on the show, the "Android

00:36:32.790 --> 00:36:35.730
Design in Action" show and the
"App Clinic" show, we're

00:36:35.730 --> 00:36:38.880
actually starting to integrate
a little better.

00:36:38.880 --> 00:36:43.560
So when we do a topic on
Tuesday, the folks over in

00:36:43.560 --> 00:36:46.460
Mountain View, California, will
be doing the same topic,

00:36:46.460 --> 00:36:48.740
the same general category
on Friday.

00:36:48.740 --> 00:36:53.440
So tune in this Friday to "The
App Clinic" to check out their

00:36:53.440 --> 00:36:55.980
thoughts on home
screen widgets.

00:36:55.980 --> 00:36:59.150
All right, with that, I'm
your host, Roman Nurik.

00:36:59.150 --> 00:36:59.750
ADAM KOCH: See you guys.

00:36:59.750 --> 00:37:01.065
Adam Koch.

00:37:01.065 --> 00:37:03.190
NICK BUTCHER: Bye from
Nick Butcher.

00:37:03.190 --> 00:37:03.990
ROMAN NURIK: All right.

00:37:03.990 --> 00:37:05.240
See you guys next week.

