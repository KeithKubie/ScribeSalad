WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:04.700
So how do we improve reliability and availability?

00:00:04.700 --> 00:00:07.760
We can try to avoid faults which is about

00:00:07.760 --> 00:00:11.030
preventing faults from occurring in the first place.

00:00:11.030 --> 00:00:13.920
For example, the no coffee in the server room

00:00:13.920 --> 00:00:17.340
is one example of a fault avoidance technique.

00:00:17.340 --> 00:00:20.180
If we spill the coffee on a server, that's

00:00:20.180 --> 00:00:22.680
probably going to be a fault. So we're trying to

00:00:22.680 --> 00:00:25.910
avoid that fault by preventing people from bringing coffee

00:00:25.910 --> 00:00:28.630
into the server room. Next, we can have

00:00:28.630 --> 00:00:32.929
a fault tolerance technique. They're about preventing faults

00:00:32.929 --> 00:00:37.220
from graduating into failures. A typical fault tolerance

00:00:37.220 --> 00:00:40.706
technique will use redundancy. For example, ECC can

00:00:40.706 --> 00:00:42.716
be used for memory and ECC stands for

00:00:42.716 --> 00:00:45.808
error-correcting code. So what happens is if there

00:00:45.808 --> 00:00:51.280
is a fault, for example a particle strike, it flips a bit in memory. ECC will

00:00:51.280 --> 00:00:55.290
allow us to read that block from memory, realize

00:00:55.290 --> 00:00:57.230
that one of the bits has been flipped, and

00:00:57.230 --> 00:01:00.026
actually correct that bit. And then we can also

00:01:00.026 --> 00:01:04.001
have techniques like speeding up the repair, which really affect

00:01:04.001 --> 00:01:08.510
only availability. And an example of such a technique

00:01:08.510 --> 00:01:10.390
is when we have a spare hard drive in a

00:01:10.390 --> 00:01:12.780
drawer so when a hard drive fails we can

00:01:12.780 --> 00:01:16.634
quickly replace it. So this is a technique where basically

00:01:16.634 --> 00:01:19.714
the failure will still occur but we will shorten

00:01:19.714 --> 00:01:22.563
the period that it takes to repair the system

00:01:22.563 --> 00:01:25.643
by basically, in this case, not having to wait

00:01:25.643 --> 00:01:28.140
for a new hard drive to arrive. We already

00:01:28.140 --> 00:01:30.997
have one handy on site. So we will now

00:01:30.997 --> 00:01:34.770
look more closely at the fault tolerance techniques which

00:01:34.770 --> 00:01:38.158
are usually techniques that we can apply in computer

00:01:38.158 --> 00:01:42.393
architecture to try to prevent faults from becoming failures and

00:01:42.393 --> 00:01:46.420
thus, makes systems both more reliable and more available.

