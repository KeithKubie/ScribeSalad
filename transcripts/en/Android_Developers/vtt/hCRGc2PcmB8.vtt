WEBVTT
Kind: captions
Language: en

00:00:07.889 --> 00:00:08.680
ALAN VIVERETTE: Hi.

00:00:08.680 --> 00:00:11.820
I'm Alan Viverette, a software
engineer on the Android UI Tool

00:00:11.820 --> 00:00:12.462
Kit team.

00:00:12.462 --> 00:00:14.170
In today's DevBytes,
we're going to cover

00:00:14.170 --> 00:00:16.540
how you can add closed
captions to your video using

00:00:16.540 --> 00:00:20.310
the new closed captioning
APIs in Android 4.4 KitKat.

00:00:20.310 --> 00:00:22.140
These APIs allow you
to attach subtitles

00:00:22.140 --> 00:00:23.890
to your video that are
displayed according

00:00:23.890 --> 00:00:25.576
to the user's preferences.

00:00:25.576 --> 00:00:26.950
Let's start with
a quick overview

00:00:26.950 --> 00:00:29.550
of what's new for
captions in Android 4.4.

00:00:29.550 --> 00:00:31.620
First, users can now
specify systemwide

00:00:31.620 --> 00:00:35.260
captioning preferences, ranging
from whether captions should

00:00:35.260 --> 00:00:38.100
be shown to what color
they should be shown in.

00:00:38.100 --> 00:00:39.760
For most developers
though, you won't

00:00:39.760 --> 00:00:41.635
need to worry about
reading these preferences

00:00:41.635 --> 00:00:43.370
or rendering your own captions.

00:00:43.370 --> 00:00:45.730
Simply adding a subtitle
source to a video view

00:00:45.730 --> 00:00:47.230
is enough to show
captions according

00:00:47.230 --> 00:00:49.551
to the user's preferences.

00:00:49.551 --> 00:00:51.550
In this DevByte, we'll
cover how you can quickly

00:00:51.550 --> 00:00:53.750
add captions to your
existing video views

00:00:53.750 --> 00:00:56.670
and make it easy for users
to toggle the settings that

00:00:56.670 --> 00:00:59.937
control how these
captions are rendered.

00:00:59.937 --> 00:01:02.520
First off, you may want to add
a menu to your application that

00:01:02.520 --> 00:01:05.670
lets users quickly modify
caption display preferences.

00:01:05.670 --> 00:01:08.450
Here's a sample implementation
for onOptionsItemSelected

00:01:08.450 --> 00:01:11.340
that opens the system
caption settings activity,

00:01:11.340 --> 00:01:13.570
which you can also reach
by opening the Settings app

00:01:13.570 --> 00:01:16.480
and navigating to Accessibility,
and then Captions.

00:01:16.480 --> 00:01:19.120
There you can toggle
captions on and off

00:01:19.120 --> 00:01:21.600
and change rendering
properties like font size,

00:01:21.600 --> 00:01:24.197
background color,
and text color.

00:01:24.197 --> 00:01:25.780
Here's what that
looks like on device.

00:01:25.780 --> 00:01:27.238
It shows a preview
of what captions

00:01:27.238 --> 00:01:29.370
will look like in
your apps video view.

00:01:29.370 --> 00:01:32.450
You can change things like
caption background color

00:01:32.450 --> 00:01:36.260
and select a custom style that
changes things like font size,

00:01:36.260 --> 00:01:37.975
language, et cetera.

00:01:37.975 --> 00:01:39.600
Now, let's take a
look at how to attach

00:01:39.600 --> 00:01:42.150
those captions to a video view.

00:01:42.150 --> 00:01:43.570
Android natively
supports loading

00:01:43.570 --> 00:01:46.000
WEBVTT formatted captions.

00:01:46.000 --> 00:01:47.500
You can find more
information online

00:01:47.500 --> 00:01:50.060
about this format and how to
convert between various caption

00:01:50.060 --> 00:01:51.200
formats.

00:01:51.200 --> 00:01:53.900
Here's a basic example
of what WEBVTT time text

00:01:53.900 --> 00:01:55.030
data looks like.

00:01:55.030 --> 00:01:57.660
It lets the framework know
when and where to render text

00:01:57.660 --> 00:01:59.040
over the video.

00:01:59.040 --> 00:02:01.130
To attach these subtitles
to a video view,

00:02:01.130 --> 00:02:03.424
we just need to add
a few lines of code.

00:02:03.424 --> 00:02:04.840
Here we're opening
an input stream

00:02:04.840 --> 00:02:07.990
for locally stored captions
in both English and French.

00:02:07.990 --> 00:02:09.400
However, you could
just as easily

00:02:09.400 --> 00:02:12.370
attach an input stream created
from a network resource.

00:02:12.370 --> 00:02:14.996
But that's outside the
scope of this DevByte.

00:02:14.996 --> 00:02:17.760
If the user has enabled
captions in Settings,

00:02:17.760 --> 00:02:19.630
they'll see them
when the video plays.

00:02:19.630 --> 00:02:21.740
Here's what that looks
like in a very simple app.

00:02:21.740 --> 00:02:24.310
The captions are rendered
in the user's chosen style,

00:02:24.310 --> 00:02:26.630
white on black, using
the correct positions

00:02:26.630 --> 00:02:28.850
from the time text file.

00:02:28.850 --> 00:02:30.580
Now we've covered the
most basic use case

00:02:30.580 --> 00:02:32.530
for adding captions
to a VideoView.

00:02:32.530 --> 00:02:35.340
However, this might not
cover all use cases.

00:02:35.340 --> 00:02:37.199
If VideoView doesn't
fit your needs,

00:02:37.199 --> 00:02:39.240
and you find yourself
implementing custom caption

00:02:39.240 --> 00:02:41.900
rendering, you can still
respect the user's captioning

00:02:41.900 --> 00:02:43.870
preferences by
loading information

00:02:43.870 --> 00:02:46.200
from the Caption
Manager Service.

00:02:46.200 --> 00:02:48.270
You can read more about
this class, including

00:02:48.270 --> 00:02:52.290
usage examples, at
developer.android.com.

00:02:52.290 --> 00:02:54.060
Thank you.

