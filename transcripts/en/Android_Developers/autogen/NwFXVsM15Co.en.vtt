WEBVTT
Kind: captions
Language: en

00:00:02.090 --> 00:00:06.170 align:start position:0%
 
dear<00:00:03.090><c> bald</c><00:00:03.480><c> guy</c><00:00:03.780><c> I</c><00:00:04.400><c> watched</c><00:00:05.400><c> your</c><00:00:05.730><c> threading</c>

00:00:06.170 --> 00:00:06.180 align:start position:0%
dear bald guy I watched your threading
 

00:00:06.180 --> 00:00:09.049 align:start position:0%
dear bald guy I watched your threading
videos<00:00:06.540><c> I</c><00:00:06.870><c> spawned</c><00:00:07.770><c> a</c><00:00:07.950><c> hundred</c><00:00:08.370><c> threads</c><00:00:08.670><c> to</c><00:00:08.910><c> do</c>

00:00:09.049 --> 00:00:09.059 align:start position:0%
videos I spawned a hundred threads to do
 

00:00:09.059 --> 00:00:13.400 align:start position:0%
videos I spawned a hundred threads to do
my<00:00:09.210><c> work</c><00:00:09.500><c> and</c><00:00:10.500><c> my</c><00:00:10.830><c> app</c><00:00:11.070><c> got</c><00:00:11.370><c> slower</c><00:00:12.380><c> you're</c><00:00:13.380><c> a</c>

00:00:13.400 --> 00:00:13.410 align:start position:0%
my work and my app got slower you're a
 

00:00:13.410 --> 00:00:16.480 align:start position:0%
my work and my app got slower you're a
horrible<00:00:14.040><c> person</c><00:00:14.429><c> and</c><00:00:14.910><c> you</c><00:00:15.059><c> should</c><00:00:15.299><c> feel</c><00:00:15.690><c> bad</c>

00:00:16.480 --> 00:00:16.490 align:start position:0%
horrible person and you should feel bad
 

00:00:16.490 --> 00:00:22.519 align:start position:0%
horrible person and you should feel bad
hashtag<00:00:17.490><c> enums</c><00:00:18.180><c> matter</c><00:00:20.930><c> my</c><00:00:21.930><c> name</c><00:00:22.109><c> is</c><00:00:22.260><c> Colt</c>

00:00:22.519 --> 00:00:22.529 align:start position:0%
hashtag enums matter my name is Colt
 

00:00:22.529 --> 00:00:25.130 align:start position:0%
hashtag enums matter my name is Colt
McAnlis<00:00:22.590><c> and</c><00:00:23.279><c> yes</c><00:00:23.630><c> technically</c><00:00:24.630><c> you</c><00:00:24.930><c> can</c>

00:00:25.130 --> 00:00:25.140 align:start position:0%
McAnlis and yes technically you can
 

00:00:25.140 --> 00:00:26.689 align:start position:0%
McAnlis and yes technically you can
spawn<00:00:25.410><c> hundreds</c><00:00:25.920><c> of</c><00:00:26.039><c> threads</c><00:00:26.279><c> for</c><00:00:26.460><c> your</c><00:00:26.580><c> app</c>

00:00:26.689 --> 00:00:26.699 align:start position:0%
spawn hundreds of threads for your app
 

00:00:26.699 --> 00:00:29.089 align:start position:0%
spawn hundreds of threads for your app
but<00:00:27.060><c> as</c><00:00:27.269><c> you</c><00:00:27.779><c> guessed</c><00:00:28.019><c> it</c><00:00:28.199><c> that</c><00:00:28.470><c> might</c><00:00:28.920><c> not</c><00:00:29.070><c> be</c>

00:00:29.089 --> 00:00:29.099 align:start position:0%
but as you guessed it that might not be
 

00:00:29.099 --> 00:00:31.400 align:start position:0%
but as you guessed it that might not be
the<00:00:29.340><c> best</c><00:00:29.519><c> idea</c><00:00:29.730><c> for</c><00:00:29.970><c> performance</c><00:00:30.660><c> see</c>

00:00:31.400 --> 00:00:31.410 align:start position:0%
the best idea for performance see
 

00:00:31.410 --> 00:00:32.900 align:start position:0%
the best idea for performance see
cramming<00:00:31.830><c> too</c><00:00:32.009><c> many</c><00:00:32.160><c> threads</c><00:00:32.460><c> into</c><00:00:32.759><c> not</c>

00:00:32.900 --> 00:00:32.910 align:start position:0%
cramming too many threads into not
 

00:00:32.910 --> 00:00:35.720 align:start position:0%
cramming too many threads into not
enough<00:00:33.149><c> CPUs</c><00:00:33.630><c> is</c><00:00:33.809><c> an</c><00:00:33.930><c> old</c><00:00:34.260><c> problem</c><00:00:34.890><c> and</c><00:00:35.340><c> for</c>

00:00:35.720 --> 00:00:35.730 align:start position:0%
enough CPUs is an old problem and for
 

00:00:35.730 --> 00:00:38.330 align:start position:0%
enough CPUs is an old problem and for
decades<00:00:36.090><c> now</c><00:00:36.270><c> thread</c><00:00:36.719><c> scheduling</c><00:00:37.530><c> has</c><00:00:37.920><c> solved</c>

00:00:38.330 --> 00:00:38.340 align:start position:0%
decades now thread scheduling has solved
 

00:00:38.340 --> 00:00:39.770 align:start position:0%
decades now thread scheduling has solved
this<00:00:38.430><c> by</c><00:00:38.489><c> using</c><00:00:38.760><c> various</c><00:00:39.180><c> metrics</c><00:00:39.450><c> to</c>

00:00:39.770 --> 00:00:39.780 align:start position:0%
this by using various metrics to
 

00:00:39.780 --> 00:00:41.270 align:start position:0%
this by using various metrics to
determine<00:00:40.200><c> which</c><00:00:40.410><c> thread</c><00:00:40.739><c> gets</c><00:00:40.980><c> the</c><00:00:41.100><c> next</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
determine which thread gets the next
 

00:00:41.280 --> 00:00:44.389 align:start position:0%
determine which thread gets the next
slice<00:00:41.520><c> of</c><00:00:41.700><c> CPU</c><00:00:42.120><c> time</c><00:00:42.360><c> basically</c><00:00:43.320><c> every</c><00:00:44.070><c> thread</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
slice of CPU time basically every thread
 

00:00:44.399 --> 00:00:45.860 align:start position:0%
slice of CPU time basically every thread
is<00:00:44.430><c> assigned</c><00:00:44.850><c> a</c><00:00:45.090><c> priority</c>

00:00:45.860 --> 00:00:45.870 align:start position:0%
is assigned a priority
 

00:00:45.870 --> 00:00:47.540 align:start position:0%
is assigned a priority
the<00:00:46.079><c> scheduler</c><00:00:46.620><c> then</c><00:00:46.800><c> gives</c><00:00:47.010><c> preference</c><00:00:47.430><c> to</c>

00:00:47.540 --> 00:00:47.550 align:start position:0%
the scheduler then gives preference to
 

00:00:47.550 --> 00:00:48.860 align:start position:0%
the scheduler then gives preference to
threads<00:00:47.879><c> that</c><00:00:48.030><c> are</c><00:00:48.090><c> more</c><00:00:48.329><c> important</c>

00:00:48.860 --> 00:00:48.870 align:start position:0%
threads that are more important
 

00:00:48.870 --> 00:00:50.090 align:start position:0%
threads that are more important
balancing<00:00:49.559><c> that</c><00:00:49.649><c> with</c><00:00:49.829><c> the</c><00:00:49.920><c> need</c><00:00:50.070><c> to</c>

00:00:50.090 --> 00:00:50.100 align:start position:0%
balancing that with the need to
 

00:00:50.100 --> 00:00:52.130 align:start position:0%
balancing that with the need to
eventually<00:00:50.370><c> get</c><00:00:50.610><c> all</c><00:00:50.820><c> of</c><00:00:50.940><c> its</c><00:00:51.059><c> work</c><00:00:51.270><c> done</c><00:00:51.300><c> now</c>

00:00:52.130 --> 00:00:52.140 align:start position:0%
eventually get all of its work done now
 

00:00:52.140 --> 00:00:54.110 align:start position:0%
eventually get all of its work done now
priorities<00:00:52.710><c> are</c><00:00:52.890><c> assigned</c><00:00:53.160><c> in</c><00:00:53.430><c> a</c><00:00:53.550><c> couple</c><00:00:54.000><c> of</c>

00:00:54.110 --> 00:00:54.120 align:start position:0%
priorities are assigned in a couple of
 

00:00:54.120 --> 00:00:56.450 align:start position:0%
priorities are assigned in a couple of
ways<00:00:54.300><c> firstly</c><00:00:55.020><c> Android</c><00:00:55.559><c> assigns</c><00:00:55.920><c> thread</c>

00:00:56.450 --> 00:00:56.460 align:start position:0%
ways firstly Android assigns thread
 

00:00:56.460 --> 00:00:59.180 align:start position:0%
ways firstly Android assigns thread
priority<00:00:56.940><c> based</c><00:00:57.149><c> on</c><00:00:57.329><c> the</c><00:00:57.420><c> lifecycle</c><00:00:58.289><c> activity</c>

00:00:59.180 --> 00:00:59.190 align:start position:0%
priority based on the lifecycle activity
 

00:00:59.190 --> 00:01:02.270 align:start position:0%
priority based on the lifecycle activity
state<00:00:59.489><c> of</c><00:00:59.640><c> your</c><00:01:00.270><c> app</c><00:01:00.559><c> active</c><00:01:01.559><c> and</c><00:01:01.829><c> visible</c>

00:01:02.270 --> 00:01:02.280 align:start position:0%
state of your app active and visible
 

00:01:02.280 --> 00:01:03.619 align:start position:0%
state of your app active and visible
apps<00:01:02.699><c> are</c><00:01:02.879><c> assigned</c><00:01:03.149><c> to</c><00:01:03.239><c> the</c><00:01:03.329><c> foreground</c>

00:01:03.619 --> 00:01:03.629 align:start position:0%
apps are assigned to the foreground
 

00:01:03.629 --> 00:01:05.509 align:start position:0%
apps are assigned to the foreground
group<00:01:04.080><c> where</c><00:01:04.409><c> the</c><00:01:04.530><c> rest</c><00:01:04.739><c> are</c><00:01:04.949><c> assigned</c><00:01:05.189><c> to</c><00:01:05.369><c> the</c>

00:01:05.509 --> 00:01:05.519 align:start position:0%
group where the rest are assigned to the
 

00:01:05.519 --> 00:01:07.310 align:start position:0%
group where the rest are assigned to the
background<00:01:06.119><c> group</c><00:01:06.420><c> and</c><00:01:06.659><c> threads</c><00:01:07.140><c> in</c><00:01:07.260><c> the</c>

00:01:07.310 --> 00:01:07.320 align:start position:0%
background group and threads in the
 

00:01:07.320 --> 00:01:09.140 align:start position:0%
background group and threads in the
foreground<00:01:07.560><c> group</c><00:01:07.830><c> get</c><00:01:07.979><c> about</c><00:01:08.130><c> 90</c><00:01:08.580><c> to</c><00:01:08.610><c> 95</c>

00:01:09.140 --> 00:01:09.150 align:start position:0%
foreground group get about 90 to 95
 

00:01:09.150 --> 00:01:10.670 align:start position:0%
foreground group get about 90 to 95
percent<00:01:09.180><c> of</c><00:01:09.510><c> total</c><00:01:09.810><c> execution</c><00:01:10.049><c> time</c><00:01:10.350><c> for</c><00:01:10.500><c> the</c>

00:01:10.670 --> 00:01:10.680 align:start position:0%
percent of total execution time for the
 

00:01:10.680 --> 00:01:12.289 align:start position:0%
percent of total execution time for the
device<00:01:10.920><c> where</c><00:01:11.340><c> the</c><00:01:11.430><c> background</c><00:01:11.610><c> group</c><00:01:12.000><c> only</c>

00:01:12.289 --> 00:01:12.299 align:start position:0%
device where the background group only
 

00:01:12.299 --> 00:01:14.630 align:start position:0%
device where the background group only
gets<00:01:12.450><c> about</c><00:01:12.510><c> five</c><00:01:12.960><c> to</c><00:01:13.350><c> ten</c><00:01:13.560><c> percent</c><00:01:13.950><c> which</c><00:01:14.340><c> of</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
gets about five to ten percent which of
 

00:01:14.640 --> 00:01:16.760 align:start position:0%
gets about five to ten percent which of
course<00:01:14.670><c> makes</c><00:01:15.360><c> sense</c><00:01:15.750><c> right</c><00:01:16.049><c> I</c><00:01:16.110><c> mean</c><00:01:16.350><c> visible</c>

00:01:16.760 --> 00:01:16.770 align:start position:0%
course makes sense right I mean visible
 

00:01:16.770 --> 00:01:18.410 align:start position:0%
course makes sense right I mean visible
applications<00:01:17.280><c> on</c><00:01:17.369><c> the</c><00:01:17.430><c> screen</c><00:01:17.729><c> should</c><00:01:18.240><c> get</c>

00:01:18.410 --> 00:01:18.420 align:start position:0%
applications on the screen should get
 

00:01:18.420 --> 00:01:19.999 align:start position:0%
applications on the screen should get
more<00:01:18.659><c> processor</c><00:01:19.170><c> allocation</c><00:01:19.710><c> than</c><00:01:19.830><c> apps</c>

00:01:19.999 --> 00:01:20.009 align:start position:0%
more processor allocation than apps
 

00:01:20.009 --> 00:01:22.550 align:start position:0%
more processor allocation than apps
which<00:01:20.340><c> aren't</c><00:01:20.610><c> visible</c><00:01:21.380><c> secondly</c><00:01:22.380><c> it's</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
which aren't visible secondly it's
 

00:01:22.560 --> 00:01:24.109 align:start position:0%
which aren't visible secondly it's
important<00:01:22.950><c> to</c><00:01:23.009><c> note</c><00:01:23.159><c> that</c><00:01:23.189><c> when</c><00:01:23.549><c> a</c><00:01:23.580><c> thread</c><00:01:23.970><c> is</c>

00:01:24.109 --> 00:01:24.119 align:start position:0%
important to note that when a thread is
 

00:01:24.119 --> 00:01:26.420 align:start position:0%
important to note that when a thread is
created<00:01:24.330><c> by</c><00:01:24.840><c> default</c><00:01:24.900><c> it's</c><00:01:25.770><c> given</c><00:01:26.159><c> the</c><00:01:26.220><c> same</c>

00:01:26.420 --> 00:01:26.430 align:start position:0%
created by default it's given the same
 

00:01:26.430 --> 00:01:28.550 align:start position:0%
created by default it's given the same
priority<00:01:26.970><c> and</c><00:01:27.150><c> group</c><00:01:27.420><c> memberships</c><00:01:27.990><c> as</c><00:01:28.140><c> the</c>

00:01:28.550 --> 00:01:28.560 align:start position:0%
priority and group memberships as the
 

00:01:28.560 --> 00:01:30.830 align:start position:0%
priority and group memberships as the
spawning<00:01:28.860><c> thread</c><00:01:29.310><c> as</c><00:01:29.850><c> such</c><00:01:30.240><c> it</c><00:01:30.420><c> competes</c><00:01:30.750><c> on</c>

00:01:30.830 --> 00:01:30.840 align:start position:0%
spawning thread as such it competes on
 

00:01:30.840 --> 00:01:32.270 align:start position:0%
spawning thread as such it competes on
equal<00:01:31.170><c> terms</c><00:01:31.380><c> for</c><00:01:31.650><c> processor</c><00:01:32.070><c> time</c>

00:01:32.270 --> 00:01:32.280 align:start position:0%
equal terms for processor time
 

00:01:32.280 --> 00:01:34.520 align:start position:0%
equal terms for processor time
allocation<00:01:32.759><c> so</c><00:01:33.299><c> for</c><00:01:33.450><c> your</c><00:01:33.540><c> UI</c><00:01:33.720><c> thread</c><00:01:34.170><c> spawns</c>

00:01:34.520 --> 00:01:34.530 align:start position:0%
allocation so for your UI thread spawns
 

00:01:34.530 --> 00:01:36.920 align:start position:0%
allocation so for your UI thread spawns
20<00:01:34.979><c> other</c><00:01:35.130><c> high</c><00:01:35.400><c> priority</c><00:01:35.970><c> work</c><00:01:36.119><c> threads</c><00:01:36.509><c> they</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
20 other high priority work threads they
 

00:01:36.930 --> 00:01:39.109 align:start position:0%
20 other high priority work threads they
will<00:01:37.079><c> all</c><00:01:37.350><c> compete</c><00:01:37.619><c> equally</c><00:01:38.490><c> for</c><00:01:38.790><c> CPU</c>

00:01:39.109 --> 00:01:39.119 align:start position:0%
will all compete equally for CPU
 

00:01:39.119 --> 00:01:41.149 align:start position:0%
will all compete equally for CPU
resources<00:01:39.420><c> which</c><00:01:40.049><c> pretty</c><00:01:40.530><c> much</c><00:01:40.650><c> ruins</c><00:01:40.979><c> your</c>

00:01:41.149 --> 00:01:41.159 align:start position:0%
resources which pretty much ruins your
 

00:01:41.159 --> 00:01:42.679 align:start position:0%
resources which pretty much ruins your
chance<00:01:41.369><c> of</c><00:01:41.520><c> getting</c><00:01:41.759><c> all</c><00:01:41.909><c> of</c><00:01:42.000><c> your</c><00:01:42.119><c> UI</c><00:01:42.360><c> work</c>

00:01:42.679 --> 00:01:42.689 align:start position:0%
chance of getting all of your UI work
 

00:01:42.689 --> 00:01:45.440 align:start position:0%
chance of getting all of your UI work
done<00:01:43.170><c> in</c><00:01:43.320><c> 16</c><00:01:43.740><c> milliseconds</c><00:01:44.399><c> to</c><00:01:44.850><c> fix</c><00:01:45.060><c> this</c><00:01:45.240><c> you</c>

00:01:45.440 --> 00:01:45.450 align:start position:0%
done in 16 milliseconds to fix this you
 

00:01:45.450 --> 00:01:47.450 align:start position:0%
done in 16 milliseconds to fix this you
should<00:01:45.630><c> explicitly</c><00:01:46.110><c> set</c><00:01:46.619><c> thread</c><00:01:46.950><c> priority</c>

00:01:47.450 --> 00:01:47.460 align:start position:0%
should explicitly set thread priority
 

00:01:47.460 --> 00:01:49.130 align:start position:0%
should explicitly set thread priority
for<00:01:47.670><c> any</c><00:01:47.790><c> threads</c><00:01:48.270><c> you</c><00:01:48.540><c> create</c><00:01:48.930><c> in</c><00:01:49.110><c> your</c>

00:01:49.130 --> 00:01:49.140 align:start position:0%
for any threads you create in your
 

00:01:49.140 --> 00:01:51.800 align:start position:0%
for any threads you create in your
application<00:01:50.070><c> this</c><00:01:50.549><c> helps</c><00:01:50.880><c> the</c><00:01:51.030><c> system</c><00:01:51.329><c> to</c>

00:01:51.800 --> 00:01:51.810 align:start position:0%
application this helps the system to
 

00:01:51.810 --> 00:01:53.600 align:start position:0%
application this helps the system to
schedule<00:01:52.170><c> competing</c><00:01:52.619><c> threads</c><00:01:52.920><c> in</c><00:01:53.159><c> the</c><00:01:53.369><c> same</c>

00:01:53.600 --> 00:01:53.610 align:start position:0%
schedule competing threads in the same
 

00:01:53.610 --> 00:01:55.850 align:start position:0%
schedule competing threads in the same
control<00:01:54.149><c> group</c><00:01:54.450><c> on</c><00:01:54.689><c> Android</c><00:01:55.560><c> this</c><00:01:55.740><c> is</c>

00:01:55.850 --> 00:01:55.860 align:start position:0%
control group on Android this is
 

00:01:55.860 --> 00:01:58.160 align:start position:0%
control group on Android this is
accomplished<00:01:56.280><c> using</c><00:01:56.399><c> the</c><00:01:56.579><c> Handy</c><00:01:57.030><c> process</c><00:01:57.570><c> set</c>

00:01:58.160 --> 00:01:58.170 align:start position:0%
accomplished using the Handy process set
 

00:01:58.170 --> 00:02:01.010 align:start position:0%
accomplished using the Handy process set
thread<00:01:58.469><c> priority</c><00:01:58.979><c> API</c><00:01:59.490><c> now</c><00:02:00.000><c> just</c><00:02:00.840><c> to</c><00:02:00.990><c> be</c>

00:02:01.010 --> 00:02:01.020 align:start position:0%
thread priority API now just to be
 

00:02:01.020 --> 00:02:03.170 align:start position:0%
thread priority API now just to be
confusing<00:02:01.829><c> this</c><00:02:02.159><c> function</c><00:02:02.610><c> takes</c><00:02:02.790><c> an</c><00:02:02.909><c> integer</c>

00:02:03.170 --> 00:02:03.180 align:start position:0%
confusing this function takes an integer
 

00:02:03.180 --> 00:02:06.050 align:start position:0%
confusing this function takes an integer
value<00:02:03.540><c> between</c><00:02:03.689><c> negative</c><00:02:03.869><c> 20</c><00:02:04.649><c> and</c><00:02:04.680><c> 20</c><00:02:05.579><c> where</c><00:02:06.030><c> a</c>

00:02:06.050 --> 00:02:06.060 align:start position:0%
value between negative 20 and 20 where a
 

00:02:06.060 --> 00:02:09.729 align:start position:0%
value between negative 20 and 20 where a
lower<00:02:06.450><c> value</c><00:02:07.020><c> indicates</c><00:02:07.530><c> a</c><00:02:07.680><c> higher</c><00:02:08.280><c> priority</c>

00:02:09.729 --> 00:02:09.739 align:start position:0%
lower value indicates a higher priority
 

00:02:09.739 --> 00:02:11.420 align:start position:0%
lower value indicates a higher priority
technically<00:02:10.739><c> speaking</c><00:02:10.950><c> this</c><00:02:11.129><c> number</c><00:02:11.340><c> is</c>

00:02:11.420 --> 00:02:11.430 align:start position:0%
technically speaking this number is
 

00:02:11.430 --> 00:02:12.290 align:start position:0%
technically speaking this number is
actually<00:02:11.670><c> supposed</c><00:02:11.849><c> to</c><00:02:11.910><c> represent</c><00:02:12.000><c> how</c>

00:02:12.290 --> 00:02:12.300 align:start position:0%
actually supposed to represent how
 

00:02:12.300 --> 00:02:12.900 align:start position:0%
actually supposed to represent how
friendly

00:02:12.900 --> 00:02:12.910 align:start position:0%
friendly
 

00:02:12.910 --> 00:02:14.610 align:start position:0%
friendly
this<00:02:13.240><c> thread</c><00:02:13.510><c> is</c><00:02:13.540><c> was</c><00:02:13.840><c> sharing</c><00:02:14.080><c> its</c><00:02:14.200><c> time</c><00:02:14.380><c> so</c>

00:02:14.610 --> 00:02:14.620 align:start position:0%
this thread is was sharing its time so
 

00:02:14.620 --> 00:02:17.190 align:start position:0%
this thread is was sharing its time so
negative<00:02:15.340><c> numbers</c><00:02:15.700><c> means</c><00:02:16.090><c> it's</c><00:02:16.360><c> more</c><00:02:16.540><c> hostile</c>

00:02:17.190 --> 00:02:17.200 align:start position:0%
negative numbers means it's more hostile
 

00:02:17.200 --> 00:02:20.340 align:start position:0%
negative numbers means it's more hostile
to<00:02:17.230><c> sharing</c><00:02:17.860><c> its</c><00:02:17.980><c> time</c><00:02:18.190><c> but</c><00:02:18.600><c> whatever</c><00:02:19.600><c> to</c><00:02:20.230><c> make</c>

00:02:20.340 --> 00:02:20.350 align:start position:0%
to sharing its time but whatever to make
 

00:02:20.350 --> 00:02:22.170 align:start position:0%
to sharing its time but whatever to make
us<00:02:20.470><c> a</c><00:02:20.560><c> little</c><00:02:20.770><c> clearer</c><00:02:21.220><c> Android</c><00:02:21.850><c> has</c><00:02:21.970><c> provided</c>

00:02:22.170 --> 00:02:22.180 align:start position:0%
us a little clearer Android has provided
 

00:02:22.180 --> 00:02:23.850 align:start position:0%
us a little clearer Android has provided
some<00:02:22.480><c> named</c><00:02:22.750><c> values</c><00:02:23.200><c> for</c><00:02:23.440><c> you</c><00:02:23.530><c> to</c><00:02:23.650><c> work</c><00:02:23.830><c> with</c>

00:02:23.850 --> 00:02:23.860 align:start position:0%
some named values for you to work with
 

00:02:23.860 --> 00:02:26.340 align:start position:0%
some named values for you to work with
these<00:02:24.430><c> values</c><00:02:24.640><c> are</c><00:02:25.000><c> defined</c><00:02:25.090><c> by</c><00:02:25.510><c> Android</c><00:02:26.020><c> OS</c>

00:02:26.340 --> 00:02:26.350 align:start position:0%
these values are defined by Android OS
 

00:02:26.350 --> 00:02:28.590 align:start position:0%
these values are defined by Android OS
process<00:02:27.160><c> and</c><00:02:27.310><c> can</c><00:02:27.400><c> be</c><00:02:27.460><c> used</c><00:02:27.670><c> as</c><00:02:27.820><c> base</c><00:02:28.180><c> States</c>

00:02:28.590 --> 00:02:28.600 align:start position:0%
process and can be used as base States
 

00:02:28.600 --> 00:02:31.440 align:start position:0%
process and can be used as base States
to<00:02:29.140><c> work</c><00:02:29.320><c> against</c><00:02:29.800><c> a</c><00:02:29.890><c> default</c><00:02:30.460><c> of</c><00:02:30.640><c> course</c><00:02:30.700><c> is</c>

00:02:31.440 --> 00:02:31.450 align:start position:0%
to work against a default of course is
 

00:02:31.450 --> 00:02:33.600 align:start position:0%
to work against a default of course is
what<00:02:31.720><c> your</c><00:02:32.020><c> threads</c><00:02:32.410><c> are</c><00:02:32.650><c> generally</c><00:02:33.160><c> given</c><00:02:33.310><c> in</c>

00:02:33.600 --> 00:02:33.610 align:start position:0%
what your threads are generally given in
 

00:02:33.610 --> 00:02:34.980 align:start position:0%
what your threads are generally given in
addition<00:02:34.270><c> to</c><00:02:34.360><c> that</c><00:02:34.480><c> there's</c><00:02:34.720><c> a</c><00:02:34.780><c> couple</c>

00:02:34.980 --> 00:02:34.990 align:start position:0%
addition to that there's a couple
 

00:02:34.990 --> 00:02:36.900 align:start position:0%
addition to that there's a couple
quantized<00:02:35.680><c> values</c><00:02:36.130><c> to</c><00:02:36.250><c> help</c><00:02:36.400><c> you</c><00:02:36.520><c> increment</c>

00:02:36.900 --> 00:02:36.910 align:start position:0%
quantized values to help you increment
 

00:02:36.910 --> 00:02:38.940 align:start position:0%
quantized values to help you increment
or<00:02:37.060><c> decrement</c><00:02:37.960><c> the</c><00:02:38.140><c> priority</c><00:02:38.620><c> to</c><00:02:38.770><c> get</c><00:02:38.920><c> a</c>

00:02:38.940 --> 00:02:38.950 align:start position:0%
or decrement the priority to get a
 

00:02:38.950 --> 00:02:41.070 align:start position:0%
or decrement the priority to get a
little<00:02:39.220><c> bit</c><00:02:39.400><c> more</c><00:02:39.580><c> fine-grained</c><00:02:40.180><c> control</c><00:02:40.660><c> for</c>

00:02:41.070 --> 00:02:41.080 align:start position:0%
little bit more fine-grained control for
 

00:02:41.080 --> 00:02:42.990 align:start position:0%
little bit more fine-grained control for
example<00:02:41.470><c> the</c><00:02:41.560><c> UI</c><00:02:41.710><c> thread</c><00:02:42.070><c> is</c><00:02:42.280><c> always</c><00:02:42.700><c> assigned</c>

00:02:42.990 --> 00:02:43.000 align:start position:0%
example the UI thread is always assigned
 

00:02:43.000 --> 00:02:45.540 align:start position:0%
example the UI thread is always assigned
priority<00:02:43.780><c> default</c><00:02:44.500><c> and</c><00:02:44.680><c> any</c><00:02:45.040><c> threads</c><00:02:45.370><c> it</c>

00:02:45.540 --> 00:02:45.550 align:start position:0%
priority default and any threads it
 

00:02:45.550 --> 00:02:47.160 align:start position:0%
priority default and any threads it
spawned<00:02:45.850><c> will</c><00:02:46.090><c> also</c><00:02:46.390><c> be</c><00:02:46.510><c> given</c><00:02:46.810><c> that</c><00:02:46.960><c> same</c>

00:02:47.160 --> 00:02:47.170 align:start position:0%
spawned will also be given that same
 

00:02:47.170 --> 00:02:49.200 align:start position:0%
spawned will also be given that same
value<00:02:47.650><c> but</c><00:02:48.010><c> in</c><00:02:48.130><c> reality</c><00:02:48.250><c> worker</c><00:02:48.850><c> threads</c>

00:02:49.200 --> 00:02:49.210 align:start position:0%
value but in reality worker threads
 

00:02:49.210 --> 00:02:51.060 align:start position:0%
value but in reality worker threads
should<00:02:49.420><c> be</c><00:02:49.510><c> lower</c><00:02:49.840><c> priority</c><00:02:50.530><c> which</c><00:02:50.740><c> you</c><00:02:50.890><c> can</c>

00:02:51.060 --> 00:02:51.070 align:start position:0%
should be lower priority which you can
 

00:02:51.070 --> 00:02:52.770 align:start position:0%
should be lower priority which you can
set<00:02:51.310><c> by</c><00:02:51.460><c> adding</c><00:02:51.790><c> priority</c><00:02:52.150><c> default</c><00:02:52.600><c> and</c>

00:02:52.770 --> 00:02:52.780 align:start position:0%
set by adding priority default and
 

00:02:52.780 --> 00:02:55.890 align:start position:0%
set by adding priority default and
priority<00:02:53.770><c> less</c><00:02:54.100><c> favorable</c><00:02:54.880><c> this</c><00:02:55.390><c> way</c><00:02:55.570><c> you</c><00:02:55.630><c> can</c>

00:02:55.890 --> 00:02:55.900 align:start position:0%
priority less favorable this way you can
 

00:02:55.900 --> 00:02:57.660 align:start position:0%
priority less favorable this way you can
control<00:02:56.200><c> which</c><00:02:56.590><c> of</c><00:02:56.770><c> your</c><00:02:56.920><c> spawn</c><00:02:57.250><c> threads</c>

00:02:57.660 --> 00:02:57.670 align:start position:0%
control which of your spawn threads
 

00:02:57.670 --> 00:03:00.300 align:start position:0%
control which of your spawn threads
might<00:02:58.180><c> be</c><00:02:58.450><c> more</c><00:02:58.750><c> or</c><00:02:59.020><c> less</c><00:02:59.050><c> important</c><00:03:00.010><c> than</c>

00:03:00.300 --> 00:03:00.310 align:start position:0%
might be more or less important than
 

00:03:00.310 --> 00:03:00.750 align:start position:0%
might be more or less important than
others

00:03:00.750 --> 00:03:00.760 align:start position:0%
others
 

00:03:00.760 --> 00:03:02.880 align:start position:0%
others
and<00:03:00.880><c> in</c><00:03:01.360><c> truth</c><00:03:01.720><c> setting</c><00:03:02.230><c> these</c><00:03:02.320><c> priorities</c>

00:03:02.880 --> 00:03:02.890 align:start position:0%
and in truth setting these priorities
 

00:03:02.890 --> 00:03:04.740 align:start position:0%
and in truth setting these priorities
yourself<00:03:03.310><c> can</c><00:03:03.580><c> be</c><00:03:03.730><c> cumbersome</c><00:03:04.270><c> and</c><00:03:04.570><c> that's</c>

00:03:04.740 --> 00:03:04.750 align:start position:0%
yourself can be cumbersome and that's
 

00:03:04.750 --> 00:03:06.930 align:start position:0%
yourself can be cumbersome and that's
why<00:03:04.930><c> classes</c><00:03:05.410><c> like</c><00:03:05.590><c> async</c><00:03:06.100><c> task</c><00:03:06.340><c> or</c><00:03:06.610><c> intense</c>

00:03:06.930 --> 00:03:06.940 align:start position:0%
why classes like async task or intense
 

00:03:06.940 --> 00:03:09.630 align:start position:0%
why classes like async task or intense
services<00:03:07.600><c> do</c><00:03:08.170><c> this</c><00:03:08.410><c> on</c><00:03:08.620><c> your</c><00:03:08.920><c> behalf</c><00:03:09.070><c> so</c><00:03:09.580><c> you</c>

00:03:09.630 --> 00:03:09.640 align:start position:0%
services do this on your behalf so you
 

00:03:09.640 --> 00:03:11.730 align:start position:0%
services do this on your behalf so you
don't<00:03:10.060><c> have</c><00:03:10.270><c> to</c><00:03:10.480><c> deal</c><00:03:10.690><c> with</c><00:03:10.720><c> it</c><00:03:10.990><c> but</c><00:03:11.410><c> if</c><00:03:11.590><c> you're</c>

00:03:11.730 --> 00:03:11.740 align:start position:0%
don't have to deal with it but if you're
 

00:03:11.740 --> 00:03:13.560 align:start position:0%
don't have to deal with it but if you're
using<00:03:11.890><c> threading</c><00:03:12.400><c> and</c><00:03:12.580><c> not</c><00:03:12.850><c> using</c><00:03:13.360><c> one</c><00:03:13.480><c> of</c>

00:03:13.560 --> 00:03:13.570 align:start position:0%
using threading and not using one of
 

00:03:13.570 --> 00:03:14.940 align:start position:0%
using threading and not using one of
these<00:03:13.690><c> fancy</c><00:03:13.930><c> primitives</c><00:03:14.440><c> then</c><00:03:14.620><c> of</c><00:03:14.770><c> course</c>

00:03:14.940 --> 00:03:14.950 align:start position:0%
these fancy primitives then of course
 

00:03:14.950 --> 00:03:16.290 align:start position:0%
these fancy primitives then of course
you'll<00:03:15.100><c> have</c><00:03:15.160><c> to</c><00:03:15.250><c> set</c><00:03:15.460><c> prior</c><00:03:15.640><c> to</c><00:03:15.760><c> yourself</c><00:03:16.090><c> so</c>

00:03:16.290 --> 00:03:16.300 align:start position:0%
you'll have to set prior to yourself so
 

00:03:16.300 --> 00:03:18.660 align:start position:0%
you'll have to set prior to yourself so
keep<00:03:16.959><c> an</c><00:03:17.080><c> eye</c><00:03:17.200><c> out</c><00:03:17.230><c> on</c><00:03:17.560><c> that</c><00:03:17.650><c> which</c><00:03:18.430><c> is</c><00:03:18.550><c> always</c>

00:03:18.660 --> 00:03:18.670 align:start position:0%
keep an eye out on that which is always
 

00:03:18.670 --> 00:03:20.010 align:start position:0%
keep an eye out on that which is always
the<00:03:18.820><c> weird</c><00:03:19.000><c> thing</c><00:03:19.240><c> about</c><00:03:19.270><c> performance</c>

00:03:20.010 --> 00:03:20.020 align:start position:0%
the weird thing about performance
 

00:03:20.020 --> 00:03:22.500 align:start position:0%
the weird thing about performance
there's<00:03:20.230><c> many</c><00:03:20.530><c> ways</c><00:03:20.620><c> to</c><00:03:20.860><c> do</c><00:03:21.310><c> one</c><00:03:21.640><c> thing</c><00:03:22.060><c> which</c>

00:03:22.500 --> 00:03:22.510 align:start position:0%
there's many ways to do one thing which
 

00:03:22.510 --> 00:03:23.520 align:start position:0%
there's many ways to do one thing which
is<00:03:22.570><c> why</c><00:03:22.750><c> you</c><00:03:22.810><c> should</c><00:03:22.990><c> check</c><00:03:23.020><c> out</c><00:03:23.230><c> the</c><00:03:23.320><c> rest</c><00:03:23.440><c> of</c>

00:03:23.520 --> 00:03:23.530 align:start position:0%
is why you should check out the rest of
 

00:03:23.530 --> 00:03:24.840 align:start position:0%
is why you should check out the rest of
the<00:03:23.620><c> Android</c><00:03:23.950><c> performance</c><00:03:24.070><c> patterns</c><00:03:24.520><c> videos</c>

00:03:24.840 --> 00:03:24.850 align:start position:0%
the Android performance patterns videos
 

00:03:24.850 --> 00:03:26.730 align:start position:0%
the Android performance patterns videos
to<00:03:25.209><c> get</c><00:03:25.330><c> a</c><00:03:25.360><c> better</c><00:03:25.630><c> sense</c><00:03:25.870><c> of</c><00:03:26.080><c> all</c><00:03:26.320><c> the</c><00:03:26.560><c> options</c>

00:03:26.730 --> 00:03:26.740 align:start position:0%
to get a better sense of all the options
 

00:03:26.740 --> 00:03:28.530 align:start position:0%
to get a better sense of all the options
you<00:03:27.040><c> have</c><00:03:27.280><c> and</c><00:03:27.459><c> don't</c><00:03:28.030><c> forget</c><00:03:28.209><c> to</c><00:03:28.300><c> join</c><00:03:28.480><c> the</c>

00:03:28.530 --> 00:03:28.540 align:start position:0%
you have and don't forget to join the
 

00:03:28.540 --> 00:03:30.570 align:start position:0%
you have and don't forget to join the
Google+<00:03:28.990><c> community</c><00:03:29.080><c> to</c><00:03:29.590><c> ask</c><00:03:29.740><c> questions</c><00:03:30.250><c> to</c>

00:03:30.570 --> 00:03:30.580 align:start position:0%
Google+ community to ask questions to
 

00:03:30.580 --> 00:03:33.060 align:start position:0%
Google+ community to ask questions to
other<00:03:30.790><c> great</c><00:03:31.390><c> developers</c><00:03:32.140><c> so</c><00:03:32.620><c> keep</c><00:03:32.830><c> calm</c>

00:03:33.060 --> 00:03:33.070 align:start position:0%
other great developers so keep calm
 

00:03:33.070 --> 00:03:34.920 align:start position:0%
other great developers so keep calm
profile<00:03:33.760><c> your</c><00:03:33.790><c> code</c><00:03:33.970><c> and</c><00:03:34.209><c> always</c><00:03:34.690><c> remember</c>

00:03:34.920 --> 00:03:34.930 align:start position:0%
profile your code and always remember
 

00:03:34.930 --> 00:03:37.770 align:start position:0%
profile your code and always remember
perf<00:03:35.290><c> matters</c>

