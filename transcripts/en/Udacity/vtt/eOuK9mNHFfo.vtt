WEBVTT
Kind: captions
Language: en

00:00:00.520 --> 00:00:04.340
Historically, the fact that this property is called .prototype,

00:00:04.340 --> 00:00:07.420
has been very confusing for people learning JavaScript.

00:00:07.420 --> 00:00:10.650
By using this word to describe the methods container object,

00:00:10.650 --> 00:00:12.310
that's available on every function,

00:00:12.310 --> 00:00:16.690
JavaScript introduces an ambiguous 2nd meaning for the word prototype.

00:00:16.690 --> 00:00:21.240
So if someone says, object one’s prototype is object two,

00:00:21.240 --> 00:00:23.970
a reasonable interpretation would be to think that field lookups on this

00:00:23.970 --> 00:00:27.310
first object should fall through to the second one.

00:00:27.310 --> 00:00:31.370
So, you might say Amy's prototype is Car.prototype, but

00:00:31.370 --> 00:00:35.240
this is not the relationship that Car has with Car.prototype.

00:00:35.240 --> 00:00:39.740
In that case, Car is a function object and field lookups on it will fall through

00:00:39.740 --> 00:00:43.940
to some function prototype, where all function objects delegate their field lookups.

00:00:45.450 --> 00:00:49.020
The Car function’s relationship with Car.prototype is very different from

00:00:49.020 --> 00:00:51.780
the one that Amy has with Car.prototype.

00:00:51.780 --> 00:00:55.040
This other relationship reflects the second interpretation of the statement,

00:00:55.040 --> 00:00:57.700
"object one's prototype is object two".

00:00:58.740 --> 00:01:01.522
The relationship is that when a Car function runs,

00:01:01.522 --> 00:01:06.790
it will create objects that delegate their field lookups to Car.prototype.

00:01:06.790 --> 00:01:11.706
So in this sense, you might say, Car’s prototype is Car.prototype.

00:01:11.706 --> 00:01:14.401
So to review, saying Amy's prototype is

00:01:14.401 --> 00:01:19.560
Car.prototype means something very different from saying Car’s prototype is

00:01:19.560 --> 00:01:23.720
Car.prototype even though those sentences look so similar.

00:01:24.720 --> 00:01:26.620
We can leave this discussion behind, but

00:01:26.620 --> 00:01:29.780
be aware that it's extremely easy to conflate these two uses of

00:01:29.780 --> 00:01:33.900
the word prototype, and it's well worth investing extra thought in ironing out

00:01:33.900 --> 00:01:36.630
exactly what the differences between the two uses are.

