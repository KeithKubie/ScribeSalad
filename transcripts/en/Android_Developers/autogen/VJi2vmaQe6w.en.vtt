WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.610 align:start position:0%
 
[Music]

00:00:03.610 --> 00:00:03.620 align:start position:0%
[Music]
 

00:00:03.620 --> 00:00:06.559 align:start position:0%
[Music]
hello<00:00:04.620><c> good</c><00:00:05.069><c> morning</c><00:00:05.370><c> and</c><00:00:05.520><c> welcome</c><00:00:05.670><c> my</c><00:00:06.420><c> name</c>

00:00:06.559 --> 00:00:06.569 align:start position:0%
hello good morning and welcome my name
 

00:00:06.569 --> 00:00:08.150 align:start position:0%
hello good morning and welcome my name
is<00:00:06.600><c> Jonathan</c><00:00:07.109><c> and</c><00:00:07.319><c> I'm</c><00:00:07.470><c> an</c><00:00:07.620><c> engineer</c><00:00:08.010><c> at</c>

00:00:08.150 --> 00:00:08.160 align:start position:0%
is Jonathan and I'm an engineer at
 

00:00:08.160 --> 00:00:11.570 align:start position:0%
is Jonathan and I'm an engineer at
Google<00:00:08.519><c> and</c><00:00:09.769><c> welcome</c><00:00:10.769><c> to</c><00:00:10.860><c> today's</c><00:00:11.099><c> session</c>

00:00:11.570 --> 00:00:11.580 align:start position:0%
Google and welcome to today's session
 

00:00:11.580 --> 00:00:13.549 align:start position:0%
Google and welcome to today's session
and<00:00:12.090><c> we're</c><00:00:12.269><c> going</c><00:00:12.389><c> to</c><00:00:12.450><c> talk</c><00:00:12.630><c> about</c><00:00:12.780><c> how</c><00:00:13.530><c> to</c>

00:00:13.549 --> 00:00:13.559 align:start position:0%
and we're going to talk about how to
 

00:00:13.559 --> 00:00:19.340 align:start position:0%
and we're going to talk about how to
build<00:00:13.860><c> testable</c><00:00:14.490><c> apps</c><00:00:14.700><c> for</c><00:00:15.360><c> Android</c><00:00:18.350><c> so</c>

00:00:19.340 --> 00:00:19.350 align:start position:0%
build testable apps for Android so
 

00:00:19.350 --> 00:00:22.040 align:start position:0%
build testable apps for Android so
through<00:00:19.890><c> the</c><00:00:20.010><c> history</c><00:00:20.369><c> of</c><00:00:20.460><c> time</c><00:00:21.050><c> architecture</c>

00:00:22.040 --> 00:00:22.050 align:start position:0%
through the history of time architecture
 

00:00:22.050 --> 00:00:24.800 align:start position:0%
through the history of time architecture
has<00:00:22.140><c> continually</c><00:00:22.740><c> evolved</c><00:00:23.250><c> in</c><00:00:24.029><c> style</c><00:00:24.390><c> and</c>

00:00:24.800 --> 00:00:24.810 align:start position:0%
has continually evolved in style and
 

00:00:24.810 --> 00:00:29.450 align:start position:0%
has continually evolved in style and
ambition<00:00:25.230><c> to</c><00:00:25.560><c> fit</c><00:00:25.859><c> our</c><00:00:26.010><c> expanding</c><00:00:26.550><c> visions</c><00:00:28.460><c> in</c>

00:00:29.450 --> 00:00:29.460 align:start position:0%
ambition to fit our expanding visions in
 

00:00:29.460 --> 00:00:30.919 align:start position:0%
ambition to fit our expanding visions in
order<00:00:29.789><c> to</c><00:00:29.880><c> build</c><00:00:30.090><c> these</c><00:00:30.330><c> increasingly</c>

00:00:30.919 --> 00:00:30.929 align:start position:0%
order to build these increasingly
 

00:00:30.929 --> 00:00:33.020 align:start position:0%
order to build these increasingly
complex<00:00:31.349><c> architectures</c><00:00:32.099><c> we've</c><00:00:32.579><c> needed</c><00:00:32.820><c> to</c>

00:00:33.020 --> 00:00:33.030 align:start position:0%
complex architectures we've needed to
 

00:00:33.030 --> 00:00:35.330 align:start position:0%
complex architectures we've needed to
also<00:00:33.360><c> innovate</c><00:00:33.719><c> new</c><00:00:33.899><c> tools</c><00:00:34.350><c> and</c><00:00:34.649><c> patterns</c><00:00:35.160><c> and</c>

00:00:35.330 --> 00:00:35.340 align:start position:0%
also innovate new tools and patterns and
 

00:00:35.340 --> 00:00:37.280 align:start position:0%
also innovate new tools and patterns and
methods<00:00:35.640><c> to</c><00:00:35.820><c> meet</c><00:00:36.450><c> the</c><00:00:36.570><c> demands</c><00:00:36.930><c> of</c><00:00:36.989><c> building</c>

00:00:37.280 --> 00:00:37.290 align:start position:0%
methods to meet the demands of building
 

00:00:37.290 --> 00:00:40.340 align:start position:0%
methods to meet the demands of building
them<00:00:37.440><c> and</c><00:00:38.000><c> just</c><00:00:39.000><c> like</c><00:00:39.180><c> in</c><00:00:39.420><c> the</c><00:00:39.480><c> real</c><00:00:39.780><c> world</c><00:00:40.050><c> in</c>

00:00:40.340 --> 00:00:40.350 align:start position:0%
them and just like in the real world in
 

00:00:40.350 --> 00:00:42.979 align:start position:0%
them and just like in the real world in
software<00:00:41.250><c> -</c><00:00:41.460><c> we've</c><00:00:42.270><c> all</c><00:00:42.420><c> had</c><00:00:42.660><c> our</c><00:00:42.930><c> own</c>

00:00:42.979 --> 00:00:42.989 align:start position:0%
software - we've all had our own
 

00:00:42.989 --> 00:00:47.090 align:start position:0%
software - we've all had our own
evolutionary<00:00:43.620><c> past</c><00:00:45.410><c> we've</c><00:00:46.410><c> seen</c><00:00:46.440><c> this</c><00:00:46.710><c> in</c>

00:00:47.090 --> 00:00:47.100 align:start position:0%
evolutionary past we've seen this in
 

00:00:47.100 --> 00:00:50.360 align:start position:0%
evolutionary past we've seen this in
Android<00:00:47.430><c> development</c><00:00:47.789><c> -</c><00:00:48.890><c> who</c><00:00:49.890><c> remembers</c>

00:00:50.360 --> 00:00:50.370 align:start position:0%
Android development - who remembers
 

00:00:50.370 --> 00:00:52.389 align:start position:0%
Android development - who remembers
building<00:00:50.730><c> small</c><00:00:50.940><c> applications</c><00:00:51.570><c> in</c><00:00:51.719><c> Eclipse</c>

00:00:52.389 --> 00:00:52.399 align:start position:0%
building small applications in Eclipse
 

00:00:52.399 --> 00:00:56.420 align:start position:0%
building small applications in Eclipse
yeah<00:00:53.430><c> and</c><00:00:54.739><c> Newseum</c><00:00:55.739><c> complexity</c><00:00:56.399><c> of</c>

00:00:56.420 --> 00:00:56.430 align:start position:0%
yeah and Newseum complexity of
 

00:00:56.430 --> 00:00:58.939 align:start position:0%
yeah and Newseum complexity of
applications<00:00:57.120><c> grew</c><00:00:57.449><c> so</c><00:00:58.230><c> did</c><00:00:58.260><c> the</c><00:00:58.469><c> needed</c><00:00:58.739><c> for</c>

00:00:58.939 --> 00:00:58.949 align:start position:0%
applications grew so did the needed for
 

00:00:58.949 --> 00:01:02.119 align:start position:0%
applications grew so did the needed for
better<00:00:59.100><c> tools</c><00:00:59.520><c> and</c><00:00:59.969><c> testing</c><00:01:00.359><c> tools</c><00:01:00.570><c> and</c><00:01:01.129><c> now</c>

00:01:02.119 --> 00:01:02.129 align:start position:0%
better tools and testing tools and now
 

00:01:02.129 --> 00:01:04.070 align:start position:0%
better tools and testing tools and now
today<00:01:02.460><c> were</c><00:01:02.730><c> building</c><00:01:03.090><c> out</c><00:01:03.180><c> quite</c><00:01:03.660><c> complex</c>

00:01:04.070 --> 00:01:04.080 align:start position:0%
today were building out quite complex
 

00:01:04.080 --> 00:01:07.810 align:start position:0%
today were building out quite complex
applications<00:01:04.710><c> within</c><00:01:05.010><c> Android</c><00:01:05.339><c> studio</c><00:01:05.960><c> and</c>

00:01:07.810 --> 00:01:07.820 align:start position:0%
applications within Android studio and
 

00:01:07.820 --> 00:01:10.370 align:start position:0%
applications within Android studio and
last<00:01:08.820><c> year</c><00:01:09.060><c> there</c><00:01:09.330><c> was</c><00:01:09.390><c> jetpack</c><00:01:09.869><c> which</c>

00:01:10.370 --> 00:01:10.380 align:start position:0%
last year there was jetpack which
 

00:01:10.380 --> 00:01:12.350 align:start position:0%
last year there was jetpack which
included<00:01:10.860><c> a</c><00:01:11.040><c> lot</c><00:01:11.310><c> of</c><00:01:11.400><c> great</c><00:01:11.549><c> libraries</c><00:01:12.030><c> to</c>

00:01:12.350 --> 00:01:12.360 align:start position:0%
included a lot of great libraries to
 

00:01:12.360 --> 00:01:14.600 align:start position:0%
included a lot of great libraries to
abstract<00:01:12.750><c> some</c><00:01:12.990><c> of</c><00:01:13.080><c> the</c><00:01:13.140><c> details</c><00:01:13.610><c> allowing</c>

00:01:14.600 --> 00:01:14.610 align:start position:0%
abstract some of the details allowing
 

00:01:14.610 --> 00:01:16.310 align:start position:0%
abstract some of the details allowing
those<00:01:14.760><c> developers</c><00:01:15.270><c> to</c><00:01:15.479><c> focus</c><00:01:15.509><c> on</c><00:01:16.080><c> writing</c>

00:01:16.310 --> 00:01:16.320 align:start position:0%
those developers to focus on writing
 

00:01:16.320 --> 00:01:21.050 align:start position:0%
those developers to focus on writing
great<00:01:16.680><c> features</c><00:01:19.460><c> but</c><00:01:20.460><c> sometimes</c><00:01:20.909><c> the</c>

00:01:21.050 --> 00:01:21.060 align:start position:0%
great features but sometimes the
 

00:01:21.060 --> 00:01:23.230 align:start position:0%
great features but sometimes the
evolution<00:01:21.509><c> hasn't</c><00:01:21.750><c> always</c><00:01:22.049><c> been</c><00:01:22.170><c> easy</c><00:01:22.439><c> and</c>

00:01:23.230 --> 00:01:23.240 align:start position:0%
evolution hasn't always been easy and
 

00:01:23.240 --> 00:01:25.219 align:start position:0%
evolution hasn't always been easy and
choices<00:01:24.240><c> developers</c><00:01:24.720><c> have</c><00:01:24.810><c> had</c><00:01:24.869><c> to</c><00:01:25.049><c> make</c>

00:01:25.219 --> 00:01:25.229 align:start position:0%
choices developers have had to make
 

00:01:25.229 --> 00:01:28.609 align:start position:0%
choices developers have had to make
haven't<00:01:25.979><c> always</c><00:01:26.130><c> been</c><00:01:26.250><c> so</c><00:01:26.580><c> clear</c><00:01:26.909><c> so</c><00:01:27.560><c> how</c><00:01:28.560><c> do</c>

00:01:28.609 --> 00:01:28.619 align:start position:0%
haven't always been so clear so how do
 

00:01:28.619 --> 00:01:31.280 align:start position:0%
haven't always been so clear so how do
you<00:01:28.740><c> answer</c><00:01:28.890><c> questions</c><00:01:29.280><c> such</c><00:01:29.939><c> as</c><00:01:30.110><c> how</c><00:01:31.110><c> should</c>

00:01:31.280 --> 00:01:31.290 align:start position:0%
you answer questions such as how should
 

00:01:31.290 --> 00:01:34.160 align:start position:0%
you answer questions such as how should
I<00:01:31.380><c> architect</c><00:01:31.860><c> my</c><00:01:31.979><c> application</c><00:01:32.549><c> or</c><00:01:32.960><c> how</c><00:01:33.960><c> do</c><00:01:34.020><c> I</c>

00:01:34.160 --> 00:01:34.170 align:start position:0%
I architect my application or how do I
 

00:01:34.170 --> 00:01:37.460 align:start position:0%
I architect my application or how do I
organize<00:01:34.350><c> my</c><00:01:34.740><c> codebase</c><00:01:35.930><c> what</c><00:01:36.930><c> library</c><00:01:37.290><c> should</c>

00:01:37.460 --> 00:01:37.470 align:start position:0%
organize my codebase what library should
 

00:01:37.470 --> 00:01:40.990 align:start position:0%
organize my codebase what library should
I<00:01:37.590><c> choose</c><00:01:37.829><c> and</c><00:01:38.250><c> what</c><00:01:38.970><c> tools</c><00:01:39.270><c> should</c><00:01:39.450><c> I</c><00:01:39.540><c> pick</c>

00:01:40.990 --> 00:01:41.000 align:start position:0%
I choose and what tools should I pick
 

00:01:41.000 --> 00:01:43.310 align:start position:0%
I choose and what tools should I pick
the<00:01:42.000><c> choices</c><00:01:42.390><c> that</c><00:01:42.420><c> you</c><00:01:42.600><c> make</c><00:01:42.780><c> early</c><00:01:43.079><c> on</c><00:01:43.170><c> in</c>

00:01:43.310 --> 00:01:43.320 align:start position:0%
the choices that you make early on in
 

00:01:43.320 --> 00:01:45.590 align:start position:0%
the choices that you make early on in
development<00:01:43.549><c> have</c><00:01:44.549><c> a</c><00:01:44.579><c> long</c><00:01:44.820><c> lasting</c><00:01:45.000><c> impact</c>

00:01:45.590 --> 00:01:45.600 align:start position:0%
development have a long lasting impact
 

00:01:45.600 --> 00:01:47.600 align:start position:0%
development have a long lasting impact
on<00:01:45.990><c> the</c><00:01:46.290><c> testability</c><00:01:46.710><c> of</c><00:01:46.950><c> your</c><00:01:47.130><c> app</c><00:01:47.280><c> and</c>

00:01:47.600 --> 00:01:47.610 align:start position:0%
on the testability of your app and
 

00:01:47.610 --> 00:01:50.149 align:start position:0%
on the testability of your app and
thereby<00:01:48.540><c> your</c><00:01:48.990><c> development</c><00:01:49.409><c> velocity</c><00:01:49.920><c> and</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
thereby your development velocity and
 

00:01:50.159 --> 00:01:51.969 align:start position:0%
thereby your development velocity and
your<00:01:50.670><c> ability</c><00:01:51.090><c> to</c><00:01:51.119><c> add</c><00:01:51.540><c> new</c><00:01:51.750><c> features</c>

00:01:51.969 --> 00:01:51.979 align:start position:0%
your ability to add new features
 

00:01:51.979 --> 00:01:55.550 align:start position:0%
your ability to add new features
sustainably<00:01:53.899><c> well</c><00:01:54.899><c> today</c><00:01:55.229><c> we're</c><00:01:55.380><c> going</c><00:01:55.470><c> to</c>

00:01:55.550 --> 00:01:55.560 align:start position:0%
sustainably well today we're going to
 

00:01:55.560 --> 00:01:57.310 align:start position:0%
sustainably well today we're going to
show<00:01:55.740><c> you</c><00:01:55.799><c> with</c><00:01:56.189><c> some</c><00:01:56.219><c> real-world</c><00:01:56.549><c> examples</c>

00:01:57.310 --> 00:01:57.320 align:start position:0%
show you with some real-world examples
 

00:01:57.320 --> 00:02:00.080 align:start position:0%
show you with some real-world examples
how<00:01:58.320><c> to</c><00:01:58.350><c> make</c><00:01:58.680><c> the</c><00:01:58.829><c> pragmatic</c><00:01:59.369><c> decisions</c><00:01:59.850><c> in</c>

00:02:00.080 --> 00:02:00.090 align:start position:0%
how to make the pragmatic decisions in
 

00:02:00.090 --> 00:02:02.899 align:start position:0%
how to make the pragmatic decisions in
how<00:02:00.659><c> you</c><00:02:00.719><c> build</c><00:02:00.990><c> your</c><00:02:01.110><c> applications</c><00:02:01.710><c> in</c><00:02:02.640><c> order</c>

00:02:02.899 --> 00:02:02.909 align:start position:0%
how you build your applications in order
 

00:02:02.909 --> 00:02:07.950 align:start position:0%
how you build your applications in order
to<00:02:03.000><c> build</c><00:02:03.149><c> a</c><00:02:03.450><c> long-term</c><00:02:03.960><c> testing</c><00:02:04.560><c> strategy</c>

00:02:07.950 --> 00:02:07.960 align:start position:0%
 
 

00:02:07.960 --> 00:02:10.590 align:start position:0%
 
and<00:02:08.069><c> testing</c><00:02:09.069><c> the</c><00:02:09.819><c> key</c><00:02:10.030><c> attribute</c><00:02:10.479><c> to</c>

00:02:10.590 --> 00:02:10.600 align:start position:0%
and testing the key attribute to
 

00:02:10.600 --> 00:02:14.250 align:start position:0%
and testing the key attribute to
consider<00:02:10.959><c> is</c><00:02:11.170><c> scope</c><00:02:11.530><c> now</c><00:02:12.520><c> scope</c><00:02:13.150><c> means</c><00:02:13.390><c> how</c>

00:02:14.250 --> 00:02:14.260 align:start position:0%
consider is scope now scope means how
 

00:02:14.260 --> 00:02:16.320 align:start position:0%
consider is scope now scope means how
much<00:02:14.440><c> of</c><00:02:14.650><c> my</c><00:02:14.890><c> applications</c><00:02:15.550><c> in</c><00:02:15.790><c> my</c><00:02:16.090><c> test</c>

00:02:16.320 --> 00:02:16.330 align:start position:0%
much of my applications in my test
 

00:02:16.330 --> 00:02:19.350 align:start position:0%
much of my applications in my test
covering<00:02:16.780><c> and</c><00:02:17.250><c> test</c><00:02:18.250><c> could</c><00:02:18.430><c> run</c><00:02:18.610><c> in</c><00:02:18.790><c> on</c><00:02:18.880><c> just</c><00:02:19.120><c> a</c>

00:02:19.350 --> 00:02:19.360 align:start position:0%
covering and test could run in on just a
 

00:02:19.360 --> 00:02:21.930 align:start position:0%
covering and test could run in on just a
single<00:02:19.780><c> method</c><00:02:20.140><c> or</c><00:02:20.680><c> they</c><00:02:21.340><c> could</c><00:02:21.550><c> span</c>

00:02:21.930 --> 00:02:21.940 align:start position:0%
single method or they could span
 

00:02:21.940 --> 00:02:24.500 align:start position:0%
single method or they could span
multiple<00:02:22.120><c> features</c><00:02:22.540><c> multiple</c><00:02:22.930><c> screens</c><00:02:23.440><c> and</c>

00:02:24.500 --> 00:02:24.510 align:start position:0%
multiple features multiple screens and
 

00:02:24.510 --> 00:02:26.940 align:start position:0%
multiple features multiple screens and
scope<00:02:25.510><c> directly</c><00:02:26.080><c> impacts</c><00:02:26.560><c> to</c><00:02:26.770><c> other</c>

00:02:26.940 --> 00:02:26.950 align:start position:0%
scope directly impacts to other
 

00:02:26.950 --> 00:02:31.770 align:start position:0%
scope directly impacts to other
attributes<00:02:27.670><c> of</c><00:02:27.880><c> testing</c><00:02:28.860><c> speed</c><00:02:30.750><c> how</c><00:02:31.750><c> fast</c>

00:02:31.770 --> 00:02:31.780 align:start position:0%
attributes of testing speed how fast
 

00:02:31.780 --> 00:02:34.830 align:start position:0%
attributes of testing speed how fast
does<00:02:32.230><c> your</c><00:02:32.260><c> test</c><00:02:32.530><c> run</c><00:02:32.830><c> and</c><00:02:33.420><c> some</c><00:02:34.420><c> can</c><00:02:34.630><c> take</c>

00:02:34.830 --> 00:02:34.840 align:start position:0%
does your test run and some can take
 

00:02:34.840 --> 00:02:36.420 align:start position:0%
does your test run and some can take
from<00:02:34.989><c> the</c><00:02:35.110><c> order</c><00:02:35.319><c> of</c><00:02:35.350><c> milliseconds</c><00:02:35.680><c> and</c>

00:02:36.420 --> 00:02:36.430 align:start position:0%
from the order of milliseconds and
 

00:02:36.430 --> 00:02:38.130 align:start position:0%
from the order of milliseconds and
others<00:02:36.850><c> all</c><00:02:37.120><c> the</c><00:02:37.270><c> way</c><00:02:37.330><c> up</c><00:02:37.450><c> to</c><00:02:37.600><c> minutes</c><00:02:37.930><c> or</c>

00:02:38.130 --> 00:02:38.140 align:start position:0%
others all the way up to minutes or
 

00:02:38.140 --> 00:02:43.740 align:start position:0%
others all the way up to minutes or
maybe<00:02:38.350><c> more</c><00:02:38.560><c> and</c><00:02:39.810><c> fidelity</c><00:02:42.060><c> how</c><00:02:43.060><c> close</c><00:02:43.360><c> does</c>

00:02:43.740 --> 00:02:43.750 align:start position:0%
maybe more and fidelity how close does
 

00:02:43.750 --> 00:02:46.110 align:start position:0%
maybe more and fidelity how close does
it<00:02:43.900><c> to</c><00:02:44.170><c> real-world</c><00:02:44.410><c> scenarios</c><00:02:45.220><c> does</c><00:02:45.910><c> your</c>

00:02:46.110 --> 00:02:46.120 align:start position:0%
it to real-world scenarios does your
 

00:02:46.120 --> 00:02:49.800 align:start position:0%
it to real-world scenarios does your
tests<00:02:46.450><c> at</c><00:02:46.570><c> case</c><00:02:46.750><c> simulate</c><00:02:48.180><c> an</c><00:02:49.180><c> increasing</c>

00:02:49.800 --> 00:02:49.810 align:start position:0%
tests at case simulate an increasing
 

00:02:49.810 --> 00:02:52.350 align:start position:0%
tests at case simulate an increasing
scope<00:02:50.350><c> typically</c><00:02:51.070><c> increases</c><00:02:51.910><c> the</c><00:02:52.000><c> fidelity</c>

00:02:52.350 --> 00:02:52.360 align:start position:0%
scope typically increases the fidelity
 

00:02:52.360 --> 00:02:55.020 align:start position:0%
scope typically increases the fidelity
of<00:02:52.780><c> your</c><00:02:52.930><c> tests</c><00:02:53.320><c> but</c><00:02:54.250><c> it</c><00:02:54.340><c> does</c><00:02:54.519><c> so</c><00:02:54.730><c> at</c><00:02:54.970><c> the</c>

00:02:55.020 --> 00:02:55.030 align:start position:0%
of your tests but it does so at the
 

00:02:55.030 --> 00:02:59.100 align:start position:0%
of your tests but it does so at the
expense<00:02:55.239><c> of</c><00:02:55.780><c> speed</c><00:02:56.140><c> and</c><00:02:56.410><c> vice</c><00:02:57.400><c> versa</c><00:02:57.730><c> and</c><00:02:58.110><c> you</c>

00:02:59.100 --> 00:02:59.110 align:start position:0%
expense of speed and vice versa and you
 

00:02:59.110 --> 00:03:01.199 align:start position:0%
expense of speed and vice versa and you
can't<00:02:59.350><c> actually</c><00:02:59.530><c> have</c><00:02:59.890><c> a</c><00:02:59.920><c> single</c><00:03:00.340><c> test</c><00:03:00.580><c> that</c>

00:03:01.199 --> 00:03:01.209 align:start position:0%
can't actually have a single test that
 

00:03:01.209 --> 00:03:04.470 align:start position:0%
can't actually have a single test that
gives<00:03:01.630><c> you</c><00:03:01.750><c> the</c><00:03:01.840><c> best</c><00:03:02.019><c> of</c><00:03:02.170><c> everything</c><00:03:03.390><c> so</c><00:03:04.390><c> the</c>

00:03:04.470 --> 00:03:04.480 align:start position:0%
gives you the best of everything so the
 

00:03:04.480 --> 00:03:07.490 align:start position:0%
gives you the best of everything so the
question<00:03:04.870><c> is</c><00:03:05.130><c> when</c><00:03:06.130><c> is</c><00:03:06.280><c> good</c><00:03:06.580><c> good</c><00:03:07.090><c> enough</c>

00:03:07.490 --> 00:03:07.500 align:start position:0%
question is when is good good enough
 

00:03:07.500 --> 00:03:11.250 align:start position:0%
question is when is good good enough
when<00:03:08.500><c> do</c><00:03:08.620><c> you</c><00:03:08.680><c> really</c><00:03:08.830><c> need</c><00:03:08.920><c> perfect</c><00:03:09.730><c> and</c><00:03:10.260><c> how</c>

00:03:11.250 --> 00:03:11.260 align:start position:0%
when do you really need perfect and how
 

00:03:11.260 --> 00:03:16.080 align:start position:0%
when do you really need perfect and how
do<00:03:11.319><c> you</c><00:03:11.500><c> achieve</c><00:03:11.650><c> the</c><00:03:12.070><c> right</c><00:03:12.250><c> balance</c><00:03:15.090><c> the</c>

00:03:16.080 --> 00:03:16.090 align:start position:0%
do you achieve the right balance the
 

00:03:16.090 --> 00:03:18.120 align:start position:0%
do you achieve the right balance the
testing<00:03:16.480><c> pyramid</c><00:03:16.870><c> is</c><00:03:17.019><c> used</c><00:03:17.410><c> as</c><00:03:17.590><c> a</c><00:03:17.620><c> guide</c><00:03:17.860><c> to</c>

00:03:18.120 --> 00:03:18.130 align:start position:0%
testing pyramid is used as a guide to
 

00:03:18.130 --> 00:03:21.390 align:start position:0%
testing pyramid is used as a guide to
help<00:03:18.310><c> you</c><00:03:18.640><c> create</c><00:03:19.030><c> that</c><00:03:19.060><c> balance</c><00:03:19.299><c> as</c><00:03:20.280><c> you</c><00:03:21.280><c> go</c>

00:03:21.390 --> 00:03:21.400 align:start position:0%
help you create that balance as you go
 

00:03:21.400 --> 00:03:23.460 align:start position:0%
help you create that balance as you go
up<00:03:21.430><c> the</c><00:03:21.670><c> pyramid</c><00:03:22.060><c> you</c><00:03:22.480><c> improve</c><00:03:22.840><c> on</c><00:03:22.959><c> fidelity</c>

00:03:23.460 --> 00:03:23.470 align:start position:0%
up the pyramid you improve on fidelity
 

00:03:23.470 --> 00:03:27.449 align:start position:0%
up the pyramid you improve on fidelity
by<00:03:24.010><c> increasing</c><00:03:24.519><c> the</c><00:03:24.610><c> scope</c><00:03:26.040><c> but</c><00:03:27.040><c> remember</c>

00:03:27.449 --> 00:03:27.459 align:start position:0%
by increasing the scope but remember
 

00:03:27.459 --> 00:03:30.840 align:start position:0%
by increasing the scope but remember
this<00:03:28.060><c> comes</c><00:03:28.299><c> at</c><00:03:28.450><c> the</c><00:03:28.480><c> price</c><00:03:28.660><c> of</c><00:03:29.110><c> speed</c><00:03:29.850><c> focus</c>

00:03:30.840 --> 00:03:30.850 align:start position:0%
this comes at the price of speed focus
 

00:03:30.850 --> 00:03:36.360 align:start position:0%
this comes at the price of speed focus
and<00:03:31.390><c> scalability</c><00:03:34.019><c> unit</c><00:03:35.019><c> tests</c><00:03:35.410><c> they've</c><00:03:36.250><c> got</c>

00:03:36.360 --> 00:03:36.370 align:start position:0%
and scalability unit tests they've got
 

00:03:36.370 --> 00:03:40.020 align:start position:0%
and scalability unit tests they've got
to<00:03:36.459><c> be</c><00:03:36.519><c> fast</c><00:03:36.820><c> lightweight</c><00:03:37.799><c> highly</c><00:03:38.799><c> focused</c><00:03:39.030><c> in</c>

00:03:40.020 --> 00:03:40.030 align:start position:0%
to be fast lightweight highly focused in
 

00:03:40.030 --> 00:03:41.520 align:start position:0%
to be fast lightweight highly focused in
order<00:03:40.390><c> that</c><00:03:40.570><c> they</c><00:03:40.840><c> can</c><00:03:40.989><c> achieve</c><00:03:41.079><c> high</c>

00:03:41.520 --> 00:03:41.530 align:start position:0%
order that they can achieve high
 

00:03:41.530 --> 00:03:44.580 align:start position:0%
order that they can achieve high
scalability<00:03:43.079><c> they're</c><00:03:44.079><c> really</c><00:03:44.290><c> easy</c><00:03:44.410><c> to</c>

00:03:44.580 --> 00:03:44.590 align:start position:0%
scalability they're really easy to
 

00:03:44.590 --> 00:03:46.890 align:start position:0%
scalability they're really easy to
define<00:03:44.980><c> because</c><00:03:45.700><c> most</c><00:03:46.209><c> of</c><00:03:46.269><c> the</c><00:03:46.360><c> time</c><00:03:46.600><c> we're</c>

00:03:46.890 --> 00:03:46.900 align:start position:0%
define because most of the time we're
 

00:03:46.900 --> 00:03:49.050 align:start position:0%
define because most of the time we're
just<00:03:47.049><c> testing</c><00:03:47.230><c> a</c><00:03:47.470><c> single</c><00:03:47.680><c> method</c><00:03:47.950><c> in</c><00:03:48.640><c> a</c><00:03:48.760><c> single</c>

00:03:49.050 --> 00:03:49.060 align:start position:0%
just testing a single method in a single
 

00:03:49.060 --> 00:03:52.590 align:start position:0%
just testing a single method in a single
class<00:03:49.299><c> within</c><00:03:50.230><c> our</c><00:03:50.350><c> application</c><00:03:51.030><c> and</c><00:03:52.030><c> this</c>

00:03:52.590 --> 00:03:52.600 align:start position:0%
class within our application and this
 

00:03:52.600 --> 00:03:53.699 align:start position:0%
class within our application and this
means<00:03:52.840><c> that</c><00:03:53.109><c> they're</c><00:03:53.260><c> going</c><00:03:53.350><c> to</c><00:03:53.410><c> give</c><00:03:53.560><c> you</c>

00:03:53.699 --> 00:03:53.709 align:start position:0%
means that they're going to give you
 

00:03:53.709 --> 00:03:58.289 align:start position:0%
means that they're going to give you
really<00:03:54.340><c> high</c><00:03:55.180><c> degree</c><00:03:55.510><c> of</c><00:03:55.540><c> focus</c><00:03:56.019><c> to</c><00:03:57.299><c> the</c>

00:03:58.289 --> 00:03:58.299 align:start position:0%
really high degree of focus to the
 

00:03:58.299 --> 00:04:03.539 align:start position:0%
really high degree of focus to the
origin<00:03:58.720><c> of</c><00:03:58.870><c> a</c><00:03:58.959><c> failure</c><00:04:02.100><c> integration</c><00:04:03.100><c> tests</c>

00:04:03.539 --> 00:04:03.549 align:start position:0%
origin of a failure integration tests
 

00:04:03.549 --> 00:04:06.150 align:start position:0%
origin of a failure integration tests
are<00:04:03.790><c> the</c><00:04:03.940><c> next</c><00:04:04.180><c> category</c><00:04:04.329><c> of</c><00:04:04.630><c> tests</c><00:04:04.930><c> and</c><00:04:05.200><c> here</c>

00:04:06.150 --> 00:04:06.160 align:start position:0%
are the next category of tests and here
 

00:04:06.160 --> 00:04:07.800 align:start position:0%
are the next category of tests and here
we're<00:04:06.430><c> trying</c><00:04:06.700><c> to</c><00:04:06.790><c> bring</c><00:04:06.970><c> together</c><00:04:07.390><c> several</c>

00:04:07.800 --> 00:04:07.810 align:start position:0%
we're trying to bring together several
 

00:04:07.810 --> 00:04:10.199 align:start position:0%
we're trying to bring together several
units<00:04:08.350><c> within</c><00:04:08.769><c> our</c><00:04:08.890><c> application</c><00:04:09.489><c> and</c><00:04:09.730><c> we're</c>

00:04:10.199 --> 00:04:10.209 align:start position:0%
units within our application and we're
 

00:04:10.209 --> 00:04:11.490 align:start position:0%
units within our application and we're
interested<00:04:10.690><c> in</c><00:04:10.750><c> verifying</c><00:04:11.049><c> their</c>

00:04:11.490 --> 00:04:11.500 align:start position:0%
interested in verifying their
 

00:04:11.500 --> 00:04:13.949 align:start position:0%
interested in verifying their
collaboration<00:04:12.130><c> making</c><00:04:13.120><c> sure</c><00:04:13.359><c> that</c><00:04:13.570><c> when</c><00:04:13.870><c> we</c>

00:04:13.949 --> 00:04:13.959 align:start position:0%
collaboration making sure that when we
 

00:04:13.959 --> 00:04:15.870 align:start position:0%
collaboration making sure that when we
bring<00:04:14.109><c> them</c><00:04:14.260><c> together</c><00:04:14.440><c> that</c><00:04:15.280><c> they</c><00:04:15.400><c> all</c><00:04:15.549><c> behave</c>

00:04:15.870 --> 00:04:15.880 align:start position:0%
bring them together that they all behave
 

00:04:15.880 --> 00:04:19.970 align:start position:0%
bring them together that they all behave
expected<00:04:16.780><c> as</c><00:04:16.959><c> a</c><00:04:17.260><c> whole</c>

00:04:19.970 --> 00:04:19.980 align:start position:0%
 
 

00:04:19.980 --> 00:04:22.640 align:start position:0%
 
and<00:04:20.070><c> end-to-end</c><00:04:20.670><c> tests</c><00:04:21.300><c> they</c><00:04:22.200><c> step</c><00:04:22.500><c> through</c>

00:04:22.640 --> 00:04:22.650 align:start position:0%
and end-to-end tests they step through
 

00:04:22.650 --> 00:04:24.680 align:start position:0%
and end-to-end tests they step through
key<00:04:22.860><c> paths</c><00:04:23.130><c> in</c><00:04:23.340><c> our</c><00:04:23.400><c> application</c><00:04:24.060><c> after</c>

00:04:24.680 --> 00:04:24.690 align:start position:0%
key paths in our application after
 

00:04:24.690 --> 00:04:27.170 align:start position:0%
key paths in our application after
uncovering<00:04:25.440><c> multiple</c><00:04:25.890><c> screens</c><00:04:26.250><c> and</c><00:04:26.730><c> features</c>

00:04:27.170 --> 00:04:27.180 align:start position:0%
uncovering multiple screens and features
 

00:04:27.180 --> 00:04:29.690 align:start position:0%
uncovering multiple screens and features
and<00:04:27.500><c> these</c><00:04:28.500><c> are</c><00:04:28.650><c> also</c><00:04:28.770><c> really</c><00:04:29.010><c> easy</c><00:04:29.220><c> to</c><00:04:29.400><c> define</c>

00:04:29.690 --> 00:04:29.700 align:start position:0%
and these are also really easy to define
 

00:04:29.700 --> 00:04:31.670 align:start position:0%
and these are also really easy to define
because<00:04:29.940><c> at</c><00:04:30.600><c> this</c><00:04:30.750><c> stage</c><00:04:30.810><c> we</c><00:04:31.320><c> know</c><00:04:31.500><c> what</c>

00:04:31.670 --> 00:04:31.680 align:start position:0%
because at this stage we know what
 

00:04:31.680 --> 00:04:36.590 align:start position:0%
because at this stage we know what
testing<00:04:32.160><c> our</c><00:04:32.280><c> whole</c><00:04:32.430><c> application</c><00:04:35.600><c> today</c>

00:04:36.590 --> 00:04:36.600 align:start position:0%
testing our whole application today
 

00:04:36.600 --> 00:04:39.070 align:start position:0%
testing our whole application today
we're<00:04:37.140><c> launching</c><00:04:37.260><c> a</c><00:04:37.560><c> new</c><00:04:37.590><c> to</c><00:04:37.980><c> do</c><00:04:38.100><c> application</c>

00:04:39.070 --> 00:04:39.080 align:start position:0%
we're launching a new to do application
 

00:04:39.080 --> 00:04:41.780 align:start position:0%
we're launching a new to do application
well<00:04:40.080><c> it's</c><00:04:40.380><c> not</c><00:04:40.620><c> really</c><00:04:40.950><c> an</c><00:04:41.160><c> official</c><00:04:41.520><c> Google</c>

00:04:41.780 --> 00:04:41.790 align:start position:0%
well it's not really an official Google
 

00:04:41.790 --> 00:04:44.530 align:start position:0%
well it's not really an official Google
product<00:04:42.120><c> but</c><00:04:42.990><c> it</c><00:04:43.080><c> is</c><00:04:43.230><c> a</c><00:04:43.410><c> real</c><00:04:43.650><c> application</c>

00:04:44.530 --> 00:04:44.540 align:start position:0%
product but it is a real application
 

00:04:44.540 --> 00:04:46.970 align:start position:0%
product but it is a real application
it's<00:04:45.540><c> part</c><00:04:45.810><c> of</c><00:04:45.960><c> the</c><00:04:46.110><c> refreshed</c><00:04:46.530><c> Android</c>

00:04:46.970 --> 00:04:46.980 align:start position:0%
it's part of the refreshed Android
 

00:04:46.980 --> 00:04:48.560 align:start position:0%
it's part of the refreshed Android
testing<00:04:47.310><c> code</c><00:04:47.520><c> lab</c><00:04:47.700><c> that</c><00:04:48.330><c> we're</c><00:04:48.450><c> launching</c>

00:04:48.560 --> 00:04:48.570 align:start position:0%
testing code lab that we're launching
 

00:04:48.570 --> 00:04:52.130 align:start position:0%
testing code lab that we're launching
today<00:04:49.340><c> so</c><00:04:50.340><c> you</c><00:04:50.400><c> can</c><00:04:50.430><c> go</c><00:04:50.670><c> ahead</c><00:04:51.120><c> check</c><00:04:51.840><c> it</c><00:04:51.990><c> out</c>

00:04:52.130 --> 00:04:52.140 align:start position:0%
today so you can go ahead check it out
 

00:04:52.140 --> 00:04:54.980 align:start position:0%
today so you can go ahead check it out
build<00:04:52.890><c> test</c><00:04:53.460><c> work</c><00:04:54.150><c> through</c><00:04:54.420><c> all</c><00:04:54.570><c> the</c><00:04:54.660><c> examples</c>

00:04:54.980 --> 00:04:54.990 align:start position:0%
build test work through all the examples
 

00:04:54.990 --> 00:04:56.600 align:start position:0%
build test work through all the examples
that<00:04:55.230><c> you'll</c><00:04:55.440><c> see</c><00:04:55.650><c> right</c><00:04:56.070><c> here</c><00:04:56.340><c> in</c><00:04:56.490><c> this</c>

00:04:56.600 --> 00:04:56.610 align:start position:0%
that you'll see right here in this
 

00:04:56.610 --> 00:04:59.810 align:start position:0%
that you'll see right here in this
session<00:04:56.790><c> today</c><00:04:58.040><c> now</c><00:04:59.040><c> we're</c><00:04:59.520><c> going</c><00:04:59.610><c> to</c><00:04:59.670><c> work</c>

00:04:59.810 --> 00:04:59.820 align:start position:0%
session today now we're going to work
 

00:04:59.820 --> 00:05:01.010 align:start position:0%
session today now we're going to work
through<00:05:00.150><c> building</c><00:05:00.600><c> this</c><00:05:00.840><c> application</c>

00:05:01.010 --> 00:05:01.020 align:start position:0%
through building this application
 

00:05:01.020 --> 00:05:03.290 align:start position:0%
through building this application
together<00:05:01.710><c> and</c><00:05:01.980><c> in</c><00:05:02.610><c> doing</c><00:05:02.790><c> so</c>

00:05:03.290 --> 00:05:03.300 align:start position:0%
together and in doing so
 

00:05:03.300 --> 00:05:05.660 align:start position:0%
together and in doing so
along<00:05:04.200><c> the</c><00:05:04.320><c> way</c><00:05:04.440><c> we'll</c><00:05:04.680><c> discuss</c><00:05:05.100><c> some</c><00:05:05.340><c> of</c><00:05:05.610><c> the</c>

00:05:05.660 --> 00:05:05.670 align:start position:0%
along the way we'll discuss some of the
 

00:05:05.670 --> 00:05:07.850 align:start position:0%
along the way we'll discuss some of the
challenges<00:05:06.240><c> and</c><00:05:06.450><c> the</c><00:05:06.510><c> choices</c><00:05:06.780><c> that</c><00:05:07.170><c> will</c><00:05:07.590><c> be</c>

00:05:07.850 --> 00:05:07.860 align:start position:0%
challenges and the choices that will be
 

00:05:07.860 --> 00:05:13.460 align:start position:0%
challenges and the choices that will be
faced<00:05:10.790><c> building</c><00:05:11.790><c> an</c><00:05:11.910><c> application</c><00:05:12.470><c> usually</c>

00:05:13.460 --> 00:05:13.470 align:start position:0%
faced building an application usually
 

00:05:13.470 --> 00:05:15.530 align:start position:0%
faced building an application usually
starts<00:05:13.830><c> by</c><00:05:13.920><c> defining</c><00:05:14.340><c> some</c><00:05:14.520><c> key</c><00:05:15.180><c> critical</c>

00:05:15.530 --> 00:05:15.540 align:start position:0%
starts by defining some key critical
 

00:05:15.540 --> 00:05:19.310 align:start position:0%
starts by defining some key critical
user<00:05:15.960><c> journeys</c><00:05:17.000><c> and</c><00:05:18.000><c> a</c><00:05:18.780><c> critical</c><00:05:19.170><c> user</c>

00:05:19.310 --> 00:05:19.320 align:start position:0%
user journeys and a critical user
 

00:05:19.320 --> 00:05:21.980 align:start position:0%
user journeys and a critical user
journey<00:05:19.650><c> is</c><00:05:19.950><c> a</c><00:05:20.400><c> step</c><00:05:20.730><c> by</c><00:05:20.850><c> step</c><00:05:21.120><c> path</c><00:05:21.360><c> that</c><00:05:21.870><c> the</c>

00:05:21.980 --> 00:05:21.990 align:start position:0%
journey is a step by step path that the
 

00:05:21.990 --> 00:05:24.610 align:start position:0%
journey is a step by step path that the
user<00:05:22.200><c> takes</c><00:05:22.560><c> through</c><00:05:23.070><c> an</c><00:05:23.160><c> application</c><00:05:23.790><c> and</c>

00:05:24.610 --> 00:05:24.620 align:start position:0%
user takes through an application and
 

00:05:24.620 --> 00:05:28.270 align:start position:0%
user takes through an application and
the<00:05:25.620><c> idea</c><00:05:25.890><c> is</c><00:05:26.130><c> in</c><00:05:26.580><c> order</c><00:05:26.850><c> to</c><00:05:27.030><c> meet</c><00:05:27.180><c> a</c>

00:05:28.270 --> 00:05:28.280 align:start position:0%
the idea is in order to meet a
 

00:05:28.280 --> 00:05:34.010 align:start position:0%
the idea is in order to meet a
predefined<00:05:29.280><c> end</c><00:05:29.580><c> goal</c><00:05:32.030><c> the</c><00:05:33.030><c> journey</c><00:05:33.300><c> may</c><00:05:33.810><c> span</c>

00:05:34.010 --> 00:05:34.020 align:start position:0%
predefined end goal the journey may span
 

00:05:34.020 --> 00:05:36.530 align:start position:0%
predefined end goal the journey may span
multiple<00:05:34.440><c> screens</c><00:05:34.740><c> and</c><00:05:35.070><c> decision</c><00:05:35.790><c> points</c><00:05:36.180><c> to</c>

00:05:36.530 --> 00:05:36.540 align:start position:0%
multiple screens and decision points to
 

00:05:36.540 --> 00:05:39.080 align:start position:0%
multiple screens and decision points to
get<00:05:36.660><c> to</c><00:05:36.720><c> that</c><00:05:36.900><c> end</c><00:05:37.110><c> goal</c><00:05:37.200><c> and</c><00:05:37.970><c> they're</c><00:05:38.970><c> often</c>

00:05:39.080 --> 00:05:39.090 align:start position:0%
get to that end goal and they're often
 

00:05:39.090 --> 00:05:41.530 align:start position:0%
get to that end goal and they're often
sketched<00:05:39.510><c> out</c><00:05:39.720><c> by</c><00:05:40.170><c> a</c><00:05:40.200><c> series</c><00:05:40.560><c> of</c><00:05:40.590><c> mock-ups</c><00:05:41.040><c> and</c>

00:05:41.530 --> 00:05:41.540 align:start position:0%
sketched out by a series of mock-ups and
 

00:05:41.540 --> 00:05:43.910 align:start position:0%
sketched out by a series of mock-ups and
let's<00:05:42.540><c> take</c><00:05:42.720><c> a</c><00:05:42.750><c> look</c><00:05:42.900><c> at</c><00:05:43.020><c> some</c><00:05:43.260><c> that</c><00:05:43.440><c> our</c><00:05:43.620><c> UX</c>

00:05:43.910 --> 00:05:43.920 align:start position:0%
let's take a look at some that our UX
 

00:05:43.920 --> 00:05:47.390 align:start position:0%
let's take a look at some that our UX
designers<00:05:44.430><c> just</c><00:05:44.580><c> sent</c><00:05:44.820><c> us</c><00:05:45.680><c> our</c><00:05:46.680><c> first</c><00:05:47.130><c> user</c>

00:05:47.390 --> 00:05:47.400 align:start position:0%
designers just sent us our first user
 

00:05:47.400 --> 00:05:50.380 align:start position:0%
designers just sent us our first user
journey<00:05:47.760><c> is</c><00:05:48.090><c> that</c><00:05:48.510><c> of</c><00:05:48.780><c> creating</c><00:05:49.200><c> a</c><00:05:49.290><c> new</c><00:05:49.440><c> task</c>

00:05:50.380 --> 00:05:50.390 align:start position:0%
journey is that of creating a new task
 

00:05:50.390 --> 00:05:52.880 align:start position:0%
journey is that of creating a new task
users<00:05:51.390><c> arrive</c><00:05:51.630><c> on</c><00:05:51.780><c> the</c><00:05:51.870><c> home</c><00:05:52.020><c> screen</c><00:05:52.320><c> which</c>

00:05:52.880 --> 00:05:52.890 align:start position:0%
users arrive on the home screen which
 

00:05:52.890 --> 00:05:55.160 align:start position:0%
users arrive on the home screen which
shows<00:05:52.920><c> a</c><00:05:53.130><c> list</c><00:05:53.370><c> of</c><00:05:53.490><c> tasks</c><00:05:53.970><c> the</c><00:05:54.750><c> first</c><00:05:54.990><c> time</c>

00:05:55.160 --> 00:05:55.170 align:start position:0%
shows a list of tasks the first time
 

00:05:55.170 --> 00:05:57.160 align:start position:0%
shows a list of tasks the first time
they<00:05:55.320><c> get</c><00:05:55.500><c> there</c><00:05:55.680><c> is</c><00:05:55.800><c> going</c><00:05:55.830><c> to</c><00:05:55.980><c> be</c><00:05:56.040><c> empty</c>

00:05:57.160 --> 00:05:57.170 align:start position:0%
they get there is going to be empty
 

00:05:57.170 --> 00:05:59.570 align:start position:0%
they get there is going to be empty
there's<00:05:58.170><c> a</c><00:05:58.230><c> floating</c><00:05:58.470><c> action</c><00:05:58.680><c> button</c><00:05:59.190><c> that</c>

00:05:59.570 --> 00:05:59.580 align:start position:0%
there's a floating action button that
 

00:05:59.580 --> 00:06:01.460 align:start position:0%
there's a floating action button that
they<00:05:59.670><c> can</c><00:05:59.700><c> click</c><00:05:59.850><c> it</c><00:06:00.660><c> takes</c><00:06:00.870><c> them</c><00:06:01.080><c> to</c><00:06:01.170><c> the</c><00:06:01.200><c> next</c>

00:06:01.460 --> 00:06:01.470 align:start position:0%
they can click it takes them to the next
 

00:06:01.470 --> 00:06:03.530 align:start position:0%
they can click it takes them to the next
screen<00:06:01.740><c> where</c><00:06:02.370><c> they</c><00:06:02.610><c> can</c><00:06:02.730><c> enter</c><00:06:02.880><c> details</c><00:06:03.150><c> for</c>

00:06:03.530 --> 00:06:03.540 align:start position:0%
screen where they can enter details for
 

00:06:03.540 --> 00:06:06.680 align:start position:0%
screen where they can enter details for
their<00:06:03.660><c> tasks</c><00:06:04.220><c> they</c><00:06:05.220><c> can</c><00:06:05.250><c> click</c><00:06:05.550><c> Save</c><00:06:05.820><c> and</c><00:06:06.210><c> they</c>

00:06:06.680 --> 00:06:06.690 align:start position:0%
their tasks they can click Save and they
 

00:06:06.690 --> 00:06:09.140 align:start position:0%
their tasks they can click Save and they
return<00:06:07.020><c> back</c><00:06:07.230><c> to</c><00:06:07.380><c> the</c><00:06:07.440><c> home</c><00:06:07.620><c> screen</c><00:06:07.860><c> and</c><00:06:08.250><c> the</c>

00:06:09.140 --> 00:06:09.150 align:start position:0%
return back to the home screen and the
 

00:06:09.150 --> 00:06:14.270 align:start position:0%
return back to the home screen and the
new<00:06:09.300><c> task</c><00:06:09.570><c> should</c><00:06:09.750><c> show</c><00:06:09.930><c> up</c><00:06:12.650><c> our</c><00:06:13.650><c> second</c><00:06:14.100><c> user</c>

00:06:14.270 --> 00:06:14.280 align:start position:0%
new task should show up our second user
 

00:06:14.280 --> 00:06:16.430 align:start position:0%
new task should show up our second user
journey<00:06:14.580><c> is</c><00:06:14.910><c> about</c><00:06:15.270><c> checking</c><00:06:15.690><c> our</c><00:06:16.020><c> progress</c>

00:06:16.430 --> 00:06:16.440 align:start position:0%
journey is about checking our progress
 

00:06:16.440 --> 00:06:19.900 align:start position:0%
journey is about checking our progress
so<00:06:17.240><c> users</c><00:06:18.240><c> can</c><00:06:18.480><c> select</c><00:06:18.690><c> an</c><00:06:18.960><c> existing</c><00:06:19.050><c> task</c>

00:06:19.900 --> 00:06:19.910 align:start position:0%
so users can select an existing task
 

00:06:19.910 --> 00:06:23.420 align:start position:0%
so users can select an existing task
they<00:06:20.910><c> can</c><00:06:21.060><c> mark</c><00:06:21.270><c> it</c><00:06:21.360><c> is</c><00:06:21.480><c> completed</c><00:06:22.020><c> and</c><00:06:22.430><c> then</c>

00:06:23.420 --> 00:06:23.430 align:start position:0%
they can mark it is completed and then
 

00:06:23.430 --> 00:06:25.070 align:start position:0%
they can mark it is completed and then
they<00:06:23.670><c> can</c><00:06:23.820><c> go</c><00:06:23.940><c> and</c><00:06:24.060><c> view</c><00:06:24.180><c> their</c><00:06:24.360><c> progress</c><00:06:24.540><c> on</c><00:06:25.020><c> a</c>

00:06:25.070 --> 00:06:25.080 align:start position:0%
they can go and view their progress on a
 

00:06:25.080 --> 00:06:27.320 align:start position:0%
they can go and view their progress on a
statistic<00:06:25.740><c> screen</c><00:06:26.070><c> that</c><00:06:26.730><c> shows</c><00:06:26.940><c> them</c><00:06:27.120><c> just</c>

00:06:27.320 --> 00:06:27.330 align:start position:0%
statistic screen that shows them just
 

00:06:27.330 --> 00:06:31.270 align:start position:0%
statistic screen that shows them just
how<00:06:27.450><c> productive</c><00:06:27.750><c> they</c><00:06:28.350><c> are</c>

00:06:31.270 --> 00:06:31.280 align:start position:0%
 
 

00:06:31.280 --> 00:06:34.420 align:start position:0%
 
now<00:06:32.280><c> every</c><00:06:32.700><c> project</c><00:06:32.940><c> starts</c><00:06:33.240><c> off</c><00:06:33.660><c> small</c><00:06:33.810><c> but</c>

00:06:34.420 --> 00:06:34.430 align:start position:0%
now every project starts off small but
 

00:06:34.430 --> 00:06:36.740 align:start position:0%
now every project starts off small but
if<00:06:35.430><c> careful</c><00:06:35.790><c> attention</c><00:06:35.850><c> isn't</c><00:06:36.420><c> paid</c><00:06:36.600><c> to</c>

00:06:36.740 --> 00:06:36.750 align:start position:0%
if careful attention isn't paid to
 

00:06:36.750 --> 00:06:40.700 align:start position:0%
if careful attention isn't paid to
design<00:06:37.520><c> architecture</c><00:06:38.660><c> organization</c><00:06:39.710><c> join</c>

00:06:40.700 --> 00:06:40.710 align:start position:0%
design architecture organization join
 

00:06:40.710 --> 00:06:43.460 align:start position:0%
design architecture organization join
the<00:06:40.860><c> growth</c><00:06:41.370><c> of</c><00:06:41.400><c> that</c><00:06:41.580><c> codebase</c><00:06:42.470><c> development</c>

00:06:43.460 --> 00:06:43.470 align:start position:0%
the growth of that codebase development
 

00:06:43.470 --> 00:06:45.410 align:start position:0%
the growth of that codebase development
can<00:06:43.590><c> quickly</c><00:06:43.860><c> spiral</c><00:06:44.580><c> out</c><00:06:44.640><c> of</c><00:06:44.700><c> control</c><00:06:44.820><c> as</c>

00:06:45.410 --> 00:06:45.420 align:start position:0%
can quickly spiral out of control as
 

00:06:45.420 --> 00:06:48.670 align:start position:0%
can quickly spiral out of control as
your<00:06:46.020><c> application</c><00:06:46.620><c> grows</c><00:06:46.830><c> uncontrollably</c>

00:06:48.670 --> 00:06:48.680 align:start position:0%
your application grows uncontrollably
 

00:06:48.680 --> 00:06:51.470 align:start position:0%
your application grows uncontrollably
without<00:06:49.680><c> any</c><00:06:49.860><c> thought</c><00:06:50.160><c> your</c><00:06:50.730><c> codebase</c><00:06:51.150><c> can</c>

00:06:51.470 --> 00:06:51.480 align:start position:0%
without any thought your codebase can
 

00:06:51.480 --> 00:06:53.650 align:start position:0%
without any thought your codebase can
quickly<00:06:51.690><c> turn</c><00:06:52.020><c> to</c><00:06:52.200><c> a</c><00:06:52.230><c> huge</c><00:06:52.530><c> monolith</c><00:06:52.980><c> a</c>

00:06:53.650 --> 00:06:53.660 align:start position:0%
quickly turn to a huge monolith a
 

00:06:53.660 --> 00:06:56.000 align:start position:0%
quickly turn to a huge monolith a
spaghetti-like<00:06:54.660><c> ball</c><00:06:54.960><c> of</c><00:06:55.230><c> incoherent</c>

00:06:56.000 --> 00:06:56.010 align:start position:0%
spaghetti-like ball of incoherent
 

00:06:56.010 --> 00:06:58.760 align:start position:0%
spaghetti-like ball of incoherent
dependencies<00:06:56.610><c> they're</c><00:06:57.390><c> not</c><00:06:57.630><c> only</c><00:06:58.110><c> hard</c><00:06:58.560><c> to</c>

00:06:58.760 --> 00:06:58.770 align:start position:0%
dependencies they're not only hard to
 

00:06:58.770 --> 00:07:00.500 align:start position:0%
dependencies they're not only hard to
reason<00:06:59.010><c> about</c><00:06:59.190><c> but</c><00:06:59.970><c> they're</c><00:07:00.090><c> difficult</c><00:07:00.270><c> to</c>

00:07:00.500 --> 00:07:00.510 align:start position:0%
reason about but they're difficult to
 

00:07:00.510 --> 00:07:04.550 align:start position:0%
reason about but they're difficult to
test<00:07:00.840><c> as</c><00:07:00.990><c> well</c><00:07:01.580><c> if</c><00:07:02.780><c> individual</c><00:07:03.780><c> units</c><00:07:04.140><c> don't</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
test as well if individual units don't
 

00:07:04.560 --> 00:07:07.010 align:start position:0%
test as well if individual units don't
follow<00:07:04.860><c> key</c><00:07:05.340><c> principles</c><00:07:05.910><c> such</c><00:07:06.120><c> as</c><00:07:06.150><c> that</c><00:07:06.990><c> of</c>

00:07:07.010 --> 00:07:07.020 align:start position:0%
follow key principles such as that of
 

00:07:07.020 --> 00:07:10.940 align:start position:0%
follow key principles such as that of
high<00:07:07.320><c> cohesion</c><00:07:07.710><c> and</c><00:07:08.130><c> low</c><00:07:08.370><c> coupling</c><00:07:09.950><c> they</c>

00:07:10.940 --> 00:07:10.950 align:start position:0%
high cohesion and low coupling they
 

00:07:10.950 --> 00:07:13.130 align:start position:0%
high cohesion and low coupling they
become<00:07:11.400><c> really</c><00:07:11.640><c> difficult</c><00:07:12.090><c> to</c><00:07:12.270><c> test</c><00:07:12.450><c> alone</c><00:07:12.840><c> in</c>

00:07:13.130 --> 00:07:13.140 align:start position:0%
become really difficult to test alone in
 

00:07:13.140 --> 00:07:16.340 align:start position:0%
become really difficult to test alone in
isolation<00:07:13.350><c> and</c><00:07:14.330><c> furthermore</c><00:07:15.330><c> with</c><00:07:16.320><c> a</c>

00:07:16.340 --> 00:07:16.350 align:start position:0%
isolation and furthermore with a
 

00:07:16.350 --> 00:07:19.130 align:start position:0%
isolation and furthermore with a
monolithic<00:07:16.800><c> codebase</c><00:07:17.250><c> like</c><00:07:17.490><c> this</c><00:07:17.870><c> any</c><00:07:18.870><c> time</c>

00:07:19.130 --> 00:07:19.140 align:start position:0%
monolithic codebase like this any time
 

00:07:19.140 --> 00:07:20.420 align:start position:0%
monolithic codebase like this any time
you<00:07:19.200><c> make</c><00:07:19.440><c> a</c><00:07:19.470><c> single</c><00:07:19.740><c> change</c><00:07:19.860><c> to</c><00:07:20.340><c> your</c>

00:07:20.420 --> 00:07:20.430 align:start position:0%
you make a single change to your
 

00:07:20.430 --> 00:07:22.460 align:start position:0%
you make a single change to your
application<00:07:21.090><c> you</c><00:07:21.960><c> have</c><00:07:21.990><c> to</c><00:07:22.110><c> rebuild</c>

00:07:22.460 --> 00:07:22.470 align:start position:0%
application you have to rebuild
 

00:07:22.470 --> 00:07:26.690 align:start position:0%
application you have to rebuild
everything<00:07:22.980><c> and</c><00:07:24.020><c> these</c><00:07:25.020><c> factors</c><00:07:25.580><c> force</c><00:07:26.580><c> the</c>

00:07:26.690 --> 00:07:26.700 align:start position:0%
everything and these factors force the
 

00:07:26.700 --> 00:07:30.260 align:start position:0%
everything and these factors force the
majority<00:07:27.180><c> of</c><00:07:27.300><c> tests</c><00:07:28.200><c> to</c><00:07:28.950><c> end</c><00:07:29.100><c> up</c><00:07:29.310><c> being</c><00:07:29.970><c> large</c>

00:07:30.260 --> 00:07:30.270 align:start position:0%
majority of tests to end up being large
 

00:07:30.270 --> 00:07:33.740 align:start position:0%
majority of tests to end up being large
end-to-end<00:07:30.810><c> tests</c><00:07:32.120><c> how</c><00:07:33.120><c> does</c><00:07:33.300><c> this</c><00:07:33.390><c> affect</c>

00:07:33.740 --> 00:07:33.750 align:start position:0%
end-to-end tests how does this affect
 

00:07:33.750 --> 00:07:37.400 align:start position:0%
end-to-end tests how does this affect
our<00:07:33.870><c> pyramid</c><00:07:35.090><c> well</c><00:07:36.090><c> with</c><00:07:36.720><c> such</c><00:07:36.960><c> resulting</c>

00:07:37.400 --> 00:07:37.410 align:start position:0%
our pyramid well with such resulting
 

00:07:37.410 --> 00:07:39.890 align:start position:0%
our pyramid well with such resulting
chaos<00:07:37.620><c> you</c><00:07:38.160><c> can</c><00:07:38.310><c> see</c><00:07:38.520><c> that</c><00:07:39.180><c> our</c><00:07:39.300><c> pyramid</c><00:07:39.660><c> is</c>

00:07:39.890 --> 00:07:39.900 align:start position:0%
chaos you can see that our pyramid is
 

00:07:39.900 --> 00:07:41.780 align:start position:0%
chaos you can see that our pyramid is
now<00:07:40.050><c> completely</c><00:07:40.590><c> disproportional</c><00:07:41.460><c> to</c><00:07:41.490><c> how</c>

00:07:41.780 --> 00:07:41.790 align:start position:0%
now completely disproportional to how
 

00:07:41.790 --> 00:07:46.820 align:start position:0%
now completely disproportional to how
we'd<00:07:41.970><c> like</c><00:07:42.150><c> it</c><00:07:42.330><c> to</c><00:07:42.360><c> look</c><00:07:45.200><c> if</c><00:07:46.200><c> we</c><00:07:46.380><c> do</c><00:07:46.530><c> try</c><00:07:46.800><c> to</c>

00:07:46.820 --> 00:07:46.830 align:start position:0%
we'd like it to look if we do try to
 

00:07:46.830 --> 00:07:48.560 align:start position:0%
we'd like it to look if we do try to
think<00:07:47.100><c> about</c><00:07:47.280><c> organization</c><00:07:48.060><c> from</c><00:07:48.300><c> when</c><00:07:48.480><c> we</c>

00:07:48.560 --> 00:07:48.570 align:start position:0%
think about organization from when we
 

00:07:48.570 --> 00:07:50.630 align:start position:0%
think about organization from when we
start<00:07:48.840><c> out</c><00:07:49.050><c> our</c><00:07:49.320><c> first</c><00:07:50.160><c> thought</c><00:07:50.370><c> might</c><00:07:50.610><c> be</c>

00:07:50.630 --> 00:07:50.640 align:start position:0%
start out our first thought might be
 

00:07:50.640 --> 00:07:53.690 align:start position:0%
start out our first thought might be
following<00:07:51.390><c> a</c><00:07:51.450><c> layered</c><00:07:51.720><c> architecture</c><00:07:52.490><c> at</c><00:07:53.490><c> this</c>

00:07:53.690 --> 00:07:53.700 align:start position:0%
following a layered architecture at this
 

00:07:53.700 --> 00:07:55.480 align:start position:0%
following a layered architecture at this
stage<00:07:53.940><c> in</c><00:07:54.090><c> development</c><00:07:54.600><c> it's</c><00:07:54.840><c> the</c><00:07:55.050><c> only</c>

00:07:55.480 --> 00:07:55.490 align:start position:0%
stage in development it's the only
 

00:07:55.490 --> 00:07:58.640 align:start position:0%
stage in development it's the only
dimension<00:07:56.490><c> that's</c><00:07:56.640><c> visible</c><00:07:56.790><c> to</c><00:07:57.060><c> us</c><00:07:57.270><c> and</c><00:07:57.650><c> there</c>

00:07:58.640 --> 00:07:58.650 align:start position:0%
dimension that's visible to us and there
 

00:07:58.650 --> 00:08:00.260 align:start position:0%
dimension that's visible to us and there
are<00:07:58.680><c> also</c><00:07:58.920><c> Android</c><00:07:59.340><c> concepts</c><00:07:59.850><c> that</c><00:08:00.090><c> map</c>

00:08:00.260 --> 00:08:00.270 align:start position:0%
are also Android concepts that map
 

00:08:00.270 --> 00:08:02.810 align:start position:0%
are also Android concepts that map
neatly<00:08:00.510><c> to</c><00:08:01.050><c> each</c><00:08:01.200><c> layers</c><00:08:01.590><c> so</c><00:08:01.980><c> maybe</c><00:08:02.670><c> this</c>

00:08:02.810 --> 00:08:02.820 align:start position:0%
neatly to each layers so maybe this
 

00:08:02.820 --> 00:08:06.410 align:start position:0%
neatly to each layers so maybe this
makes<00:08:03.000><c> sense</c><00:08:04.010><c> and</c><00:08:05.010><c> by</c><00:08:05.580><c> structuring</c><00:08:06.090><c> our</c><00:08:06.180><c> code</c>

00:08:06.410 --> 00:08:06.420 align:start position:0%
makes sense and by structuring our code
 

00:08:06.420 --> 00:08:08.690 align:start position:0%
makes sense and by structuring our code
this<00:08:06.600><c> way</c><00:08:06.810><c> we</c><00:08:07.650><c> can</c><00:08:07.800><c> slash</c><00:08:08.010><c> dependencies</c>

00:08:08.690 --> 00:08:08.700 align:start position:0%
this way we can slash dependencies
 

00:08:08.700 --> 00:08:11.360 align:start position:0%
this way we can slash dependencies
follow<00:08:09.570><c> those</c><00:08:09.810><c> principles</c><00:08:10.020><c> of</c><00:08:10.620><c> high</c><00:08:10.980><c> cohesion</c>

00:08:11.360 --> 00:08:11.370 align:start position:0%
follow those principles of high cohesion
 

00:08:11.370 --> 00:08:14.060 align:start position:0%
follow those principles of high cohesion
low<00:08:12.120><c> coupling</c><00:08:12.630><c> may</c><00:08:13.530><c> be</c><00:08:13.590><c> introduced</c>

00:08:14.060 --> 00:08:14.070 align:start position:0%
low coupling may be introduced
 

00:08:14.070 --> 00:08:16.520 align:start position:0%
low coupling may be introduced
dependency<00:08:14.580><c> injection</c><00:08:15.060><c> and</c><00:08:15.270><c> now</c><00:08:16.140><c> we</c><00:08:16.200><c> can</c><00:08:16.380><c> see</c>

00:08:16.520 --> 00:08:16.530 align:start position:0%
dependency injection and now we can see
 

00:08:16.530 --> 00:08:21.140 align:start position:0%
dependency injection and now we can see
that<00:08:16.680><c> unit</c><00:08:17.010><c> tests</c><00:08:17.340><c> are</c><00:08:17.580><c> possible</c><00:08:19.250><c> but</c><00:08:20.250><c> as</c><00:08:20.490><c> our</c>

00:08:21.140 --> 00:08:21.150 align:start position:0%
that unit tests are possible but as our
 

00:08:21.150 --> 00:08:24.140 align:start position:0%
that unit tests are possible but as our
application<00:08:21.750><c> grows</c><00:08:22.020><c> in</c><00:08:22.350><c> complexity</c><00:08:22.880><c> we</c><00:08:23.880><c> start</c>

00:08:24.140 --> 00:08:24.150 align:start position:0%
application grows in complexity we start
 

00:08:24.150 --> 00:08:26.180 align:start position:0%
application grows in complexity we start
to<00:08:24.240><c> notice</c><00:08:24.420><c> that</c><00:08:24.750><c> it</c><00:08:24.900><c> grows</c><00:08:25.170><c> by</c><00:08:25.440><c> the</c><00:08:25.500><c> dimension</c>

00:08:26.180 --> 00:08:26.190 align:start position:0%
to notice that it grows by the dimension
 

00:08:26.190 --> 00:08:28.520 align:start position:0%
to notice that it grows by the dimension
of<00:08:26.280><c> features</c><00:08:26.730><c> rather</c><00:08:27.600><c> than</c><00:08:27.900><c> architectural</c>

00:08:28.520 --> 00:08:28.530 align:start position:0%
of features rather than architectural
 

00:08:28.530 --> 00:08:31.760 align:start position:0%
of features rather than architectural
layers<00:08:29.180><c> so</c><00:08:30.180><c> even</c><00:08:30.690><c> if</c><00:08:30.780><c> we</c><00:08:30.900><c> did</c><00:08:31.140><c> marginalize</c><00:08:31.590><c> our</c>

00:08:31.760 --> 00:08:31.770 align:start position:0%
layers so even if we did marginalize our
 

00:08:31.770 --> 00:08:35.390 align:start position:0%
layers so even if we did marginalize our
code<00:08:31.980><c> this</c><00:08:32.130><c> way</c><00:08:32.340><c> a</c><00:08:33.590><c> small</c><00:08:34.590><c> change</c><00:08:34.890><c> high</c><00:08:35.099><c> up</c><00:08:35.250><c> in</c>

00:08:35.390 --> 00:08:35.400 align:start position:0%
code this way a small change high up in
 

00:08:35.400 --> 00:08:37.400 align:start position:0%
code this way a small change high up in
the<00:08:35.490><c> tech</c><00:08:35.700><c> stack</c><00:08:36.000><c> is</c><00:08:36.450><c> only</c><00:08:36.660><c> gonna</c><00:08:36.870><c> save</c><00:08:37.140><c> a</c>

00:08:37.400 --> 00:08:37.410 align:start position:0%
the tech stack is only gonna save a
 

00:08:37.410 --> 00:08:40.030 align:start position:0%
the tech stack is only gonna save a
couple<00:08:37.950><c> of</c><00:08:38.070><c> layers</c><00:08:38.250><c> of</c><00:08:38.550><c> modules</c><00:08:39.210><c> of</c><00:08:39.360><c> rebuilds</c>

00:08:40.030 --> 00:08:40.040 align:start position:0%
couple of layers of modules of rebuilds
 

00:08:40.040 --> 00:08:42.890 align:start position:0%
couple of layers of modules of rebuilds
whereas<00:08:41.040><c> something</c><00:08:41.520><c> lower</c><00:08:41.700><c> down</c><00:08:41.969><c> still</c>

00:08:42.890 --> 00:08:42.900 align:start position:0%
whereas something lower down still
 

00:08:42.900 --> 00:08:44.340 align:start position:0%
whereas something lower down still
causes<00:08:43.380><c> a</c><00:08:43.410><c> complete</c><00:08:43.800><c> rebuild</c>

00:08:44.340 --> 00:08:44.350 align:start position:0%
causes a complete rebuild
 

00:08:44.350 --> 00:08:47.940 align:start position:0%
causes a complete rebuild
the<00:08:44.470><c> hold</c><00:08:44.650><c> application</c><00:08:46.470><c> furthermore</c><00:08:47.470><c> the</c>

00:08:47.940 --> 00:08:47.950 align:start position:0%
the hold application furthermore the
 

00:08:47.950 --> 00:08:49.820 align:start position:0%
the hold application furthermore the
layers<00:08:48.190><c> themselves</c><00:08:48.370><c> become</c><00:08:49.030><c> monolithic</c><00:08:49.570><c> and</c>

00:08:49.820 --> 00:08:49.830 align:start position:0%
layers themselves become monolithic and
 

00:08:49.830 --> 00:08:53.040 align:start position:0%
layers themselves become monolithic and
so<00:08:50.830><c> we</c><00:08:50.920><c> still</c><00:08:51.160><c> end</c><00:08:51.310><c> up</c><00:08:51.430><c> writing</c><00:08:51.670><c> so</c><00:08:52.480><c> many</c><00:08:52.630><c> large</c>

00:08:53.040 --> 00:08:53.050 align:start position:0%
so we still end up writing so many large
 

00:08:53.050 --> 00:08:58.830 align:start position:0%
so we still end up writing so many large
end-to-end<00:08:53.650><c> tests</c><00:08:56.700><c> now</c><00:08:57.700><c> well</c><00:08:57.880><c> the</c><00:08:58.000><c> ability</c><00:08:58.690><c> to</c>

00:08:58.830 --> 00:08:58.840 align:start position:0%
end-to-end tests now well the ability to
 

00:08:58.840 --> 00:09:01.790 align:start position:0%
end-to-end tests now well the ability to
start<00:08:59.050><c> writing</c><00:08:59.260><c> unit</c><00:08:59.650><c> tests</c><00:09:00.010><c> is</c><00:09:00.160><c> really</c><00:09:00.850><c> good</c>

00:09:01.790 --> 00:09:01.800 align:start position:0%
start writing unit tests is really good
 

00:09:01.800 --> 00:09:04.050 align:start position:0%
start writing unit tests is really good
projects<00:09:02.800><c> are</c><00:09:02.920><c> still</c><00:09:03.070><c> left</c><00:09:03.340><c> with</c><00:09:03.490><c> a</c><00:09:03.610><c> pyramid</c>

00:09:04.050 --> 00:09:04.060 align:start position:0%
projects are still left with a pyramid
 

00:09:04.060 --> 00:09:07.200 align:start position:0%
projects are still left with a pyramid
that<00:09:04.330><c> doesn't</c><00:09:04.630><c> quietly</c><00:09:04.930><c> look</c><00:09:05.170><c> right</c><00:09:05.410><c> and</c><00:09:06.210><c> the</c>

00:09:07.200 --> 00:09:07.210 align:start position:0%
that doesn't quietly look right and the
 

00:09:07.210 --> 00:09:09.240 align:start position:0%
that doesn't quietly look right and the
problem<00:09:07.450><c> with</c><00:09:07.750><c> this</c><00:09:07.870><c> setup</c><00:09:08.110><c> is</c><00:09:08.440><c> that</c><00:09:08.680><c> in</c><00:09:08.980><c> order</c>

00:09:09.240 --> 00:09:09.250 align:start position:0%
problem with this setup is that in order
 

00:09:09.250 --> 00:09:11.310 align:start position:0%
problem with this setup is that in order
to<00:09:09.370><c> compensate</c><00:09:09.610><c> for</c><00:09:09.970><c> our</c><00:09:10.390><c> fidelity</c><00:09:10.630><c> gap</c><00:09:11.080><c> in</c>

00:09:11.310 --> 00:09:11.320 align:start position:0%
to compensate for our fidelity gap in
 

00:09:11.320 --> 00:09:14.490 align:start position:0%
to compensate for our fidelity gap in
unit<00:09:11.830><c> tests</c><00:09:12.330><c> were</c><00:09:13.500><c> overcompensating</c>

00:09:14.490 --> 00:09:14.500 align:start position:0%
unit tests were overcompensating
 

00:09:14.500 --> 00:09:17.460 align:start position:0%
unit tests were overcompensating
dramatically<00:09:15.400><c> in</c><00:09:15.760><c> end-to-end</c><00:09:16.540><c> tests</c><00:09:17.110><c> which</c>

00:09:17.460 --> 00:09:17.470 align:start position:0%
dramatically in end-to-end tests which
 

00:09:17.470 --> 00:09:21.240 align:start position:0%
dramatically in end-to-end tests which
are<00:09:17.650><c> slow</c><00:09:17.920><c> and</c><00:09:18.190><c> heavyweight</c><00:09:19.890><c> there's</c><00:09:20.890><c> nothing</c>

00:09:21.240 --> 00:09:21.250 align:start position:0%
are slow and heavyweight there's nothing
 

00:09:21.250 --> 00:09:23.670 align:start position:0%
are slow and heavyweight there's nothing
here<00:09:21.490><c> that's</c><00:09:21.520><c> guiding</c><00:09:22.240><c> us</c><00:09:22.360><c> so</c><00:09:22.570><c> far</c><00:09:22.810><c> in</c><00:09:23.350><c> order</c>

00:09:23.670 --> 00:09:23.680 align:start position:0%
here that's guiding us so far in order
 

00:09:23.680 --> 00:09:29.400 align:start position:0%
here that's guiding us so far in order
to<00:09:23.800><c> make</c><00:09:23.980><c> a</c><00:09:24.220><c> balance</c><00:09:24.550><c> pyramid</c><00:09:28.020><c> so</c><00:09:29.020><c> a</c><00:09:29.050><c> poorly</c>

00:09:29.400 --> 00:09:29.410 align:start position:0%
to make a balance pyramid so a poorly
 

00:09:29.410 --> 00:09:31.620 align:start position:0%
to make a balance pyramid so a poorly
organized<00:09:29.800><c> and</c><00:09:30.070><c> architected</c><00:09:30.580><c> codebase</c><00:09:31.030><c> can</c>

00:09:31.620 --> 00:09:31.630 align:start position:0%
organized and architected codebase can
 

00:09:31.630 --> 00:09:33.360 align:start position:0%
organized and architected codebase can
quickly<00:09:31.840><c> lead</c><00:09:32.110><c> to</c><00:09:32.170><c> severe</c><00:09:32.620><c> bottlenecks</c><00:09:33.190><c> in</c>

00:09:33.360 --> 00:09:33.370 align:start position:0%
quickly lead to severe bottlenecks in
 

00:09:33.370 --> 00:09:36.450 align:start position:0%
quickly lead to severe bottlenecks in
your<00:09:33.520><c> development</c><00:09:33.700><c> workflow</c><00:09:35.100><c> by</c><00:09:36.100><c> over</c>

00:09:36.450 --> 00:09:36.460 align:start position:0%
your development workflow by over
 

00:09:36.460 --> 00:09:38.520 align:start position:0%
your development workflow by over
relying<00:09:36.820><c> on</c><00:09:37.090><c> these</c><00:09:37.360><c> large</c><00:09:37.600><c> end-to-end</c><00:09:38.020><c> tests</c>

00:09:38.520 --> 00:09:38.530 align:start position:0%
relying on these large end-to-end tests
 

00:09:38.530 --> 00:09:40.050 align:start position:0%
relying on these large end-to-end tests
we'll<00:09:39.070><c> face</c><00:09:39.250><c> with</c><00:09:39.460><c> test</c><00:09:39.670><c> Suites</c>

00:09:40.050 --> 00:09:40.060 align:start position:0%
we'll face with test Suites
 

00:09:40.060 --> 00:09:42.690 align:start position:0%
we'll face with test Suites
that<00:09:40.450><c> take</c><00:09:40.660><c> far</c><00:09:40.990><c> too</c><00:09:41.140><c> long</c><00:09:41.320><c> to</c><00:09:41.380><c> run</c><00:09:41.710><c> and</c><00:09:41.980><c> the</c>

00:09:42.690 --> 00:09:42.700 align:start position:0%
that take far too long to run and the
 

00:09:42.700 --> 00:09:44.820 align:start position:0%
that take far too long to run and the
lack<00:09:42.850><c> of</c><00:09:42.880><c> focus</c><00:09:43.180><c> in</c><00:09:43.510><c> them</c><00:09:43.690><c> mean</c><00:09:44.170><c> the</c><00:09:44.350><c> bugs</c><00:09:44.590><c> are</c>

00:09:44.820 --> 00:09:44.830 align:start position:0%
lack of focus in them mean the bugs are
 

00:09:44.830 --> 00:09:47.790 align:start position:0%
lack of focus in them mean the bugs are
really<00:09:45.040><c> hard</c><00:09:45.220><c> to</c><00:09:45.280><c> track</c><00:09:45.550><c> down</c><00:09:46.800><c> without</c>

00:09:47.790 --> 00:09:47.800 align:start position:0%
really hard to track down without
 

00:09:47.800 --> 00:09:50.430 align:start position:0%
really hard to track down without
effective<00:09:48.370><c> motorisation</c><00:09:49.210><c> every</c><00:09:50.050><c> change</c><00:09:50.350><c> we</c>

00:09:50.430 --> 00:09:50.440 align:start position:0%
effective motorisation every change we
 

00:09:50.440 --> 00:09:52.500 align:start position:0%
effective motorisation every change we
made<00:09:50.710><c> to</c><00:09:50.800><c> the</c><00:09:50.890><c> app</c><00:09:51.010><c> causes</c><00:09:51.760><c> large</c><00:09:51.970><c> swathes</c><00:09:52.330><c> of</c>

00:09:52.500 --> 00:09:52.510 align:start position:0%
made to the app causes large swathes of
 

00:09:52.510 --> 00:09:55.560 align:start position:0%
made to the app causes large swathes of
it<00:09:52.660><c> to</c><00:09:53.110><c> be</c><00:09:53.260><c> rebuilt</c><00:09:53.710><c> and</c><00:09:53.980><c> all</c><00:09:54.700><c> the</c><00:09:54.820><c> tests</c><00:09:55.270><c> must</c>

00:09:55.560 --> 00:09:55.570 align:start position:0%
it to be rebuilt and all the tests must
 

00:09:55.570 --> 00:09:59.190 align:start position:0%
it to be rebuilt and all the tests must
be<00:09:55.660><c> rerun</c><00:09:56.640><c> these</c><00:09:57.640><c> key</c><00:09:57.910><c> points</c><00:09:58.150><c> can</c><00:09:58.810><c> cripple</c>

00:09:59.190 --> 00:09:59.200 align:start position:0%
be rerun these key points can cripple
 

00:09:59.200 --> 00:10:02.970 align:start position:0%
be rerun these key points can cripple
your<00:09:59.290><c> team's</c><00:09:59.560><c> velocity</c><00:10:01.350><c> but</c><00:10:02.350><c> organizing</c><00:10:02.860><c> your</c>

00:10:02.970 --> 00:10:02.980 align:start position:0%
your team's velocity but organizing your
 

00:10:02.980 --> 00:10:04.950 align:start position:0%
your team's velocity but organizing your
code<00:10:03.160><c> correctly</c><00:10:03.580><c> has</c><00:10:04.240><c> a</c><00:10:04.270><c> big</c><00:10:04.510><c> impact</c><00:10:04.840><c> on</c>

00:10:04.950 --> 00:10:04.960 align:start position:0%
code correctly has a big impact on
 

00:10:04.960 --> 00:10:08.550 align:start position:0%
code correctly has a big impact on
testability<00:10:05.380><c> and</c><00:10:05.860><c> development</c><00:10:06.790><c> velocity</c><00:10:07.560><c> so</c>

00:10:08.550 --> 00:10:08.560 align:start position:0%
testability and development velocity so
 

00:10:08.560 --> 00:10:09.950 align:start position:0%
testability and development velocity so
we<00:10:08.590><c> want</c><00:10:08.800><c> to</c><00:10:08.860><c> get</c><00:10:08.950><c> it</c><00:10:09.040><c> right</c><00:10:09.220><c> from</c><00:10:09.550><c> the</c><00:10:09.670><c> get-go</c>

00:10:09.950 --> 00:10:09.960 align:start position:0%
we want to get it right from the get-go
 

00:10:09.960 --> 00:10:12.450 align:start position:0%
we want to get it right from the get-go
we<00:10:10.960><c> want</c><00:10:11.140><c> to</c><00:10:11.200><c> create</c><00:10:11.380><c> a</c><00:10:11.620><c> way</c><00:10:11.860><c> that's</c><00:10:12.250><c> going</c><00:10:12.400><c> to</c>

00:10:12.450 --> 00:10:12.460 align:start position:0%
we want to create a way that's going to
 

00:10:12.460 --> 00:10:14.610 align:start position:0%
we want to create a way that's going to
be<00:10:12.610><c> scalable</c><00:10:12.910><c> as</c><00:10:13.300><c> we</c><00:10:13.510><c> move</c><00:10:13.690><c> forward</c><00:10:14.110><c> and</c><00:10:14.290><c> our</c>

00:10:14.610 --> 00:10:14.620 align:start position:0%
be scalable as we move forward and our
 

00:10:14.620 --> 00:10:19.260 align:start position:0%
be scalable as we move forward and our
application<00:10:14.740><c> grows</c><00:10:15.370><c> over</c><00:10:15.910><c> time</c><00:10:18.090><c> so</c><00:10:19.090><c> let's</c>

00:10:19.260 --> 00:10:19.270 align:start position:0%
application grows over time so let's
 

00:10:19.270 --> 00:10:21.090 align:start position:0%
application grows over time so let's
think<00:10:19.420><c> about</c><00:10:19.600><c> how</c><00:10:19.780><c> we</c><00:10:19.990><c> may</c><00:10:20.230><c> decompose</c><00:10:20.650><c> our</c>

00:10:21.090 --> 00:10:21.100 align:start position:0%
think about how we may decompose our
 

00:10:21.100 --> 00:10:24.720 align:start position:0%
think about how we may decompose our
project<00:10:23.100><c> at</c><00:10:24.100><c> the</c><00:10:24.190><c> top</c><00:10:24.400><c> we've</c><00:10:24.520><c> got</c><00:10:24.550><c> our</c>

00:10:24.720 --> 00:10:24.730 align:start position:0%
project at the top we've got our
 

00:10:24.730 --> 00:10:28.110 align:start position:0%
project at the top we've got our
application<00:10:25.330><c> and</c><00:10:26.430><c> one</c><00:10:27.430><c> of</c><00:10:27.550><c> the</c><00:10:27.610><c> key</c><00:10:27.790><c> areas</c><00:10:28.000><c> of</c>

00:10:28.110 --> 00:10:28.120 align:start position:0%
application and one of the key areas of
 

00:10:28.120 --> 00:10:32.610 align:start position:0%
application and one of the key areas of
functionalities<00:10:28.840><c> is</c><00:10:29.080><c> managing</c><00:10:29.830><c> tasks</c><00:10:31.620><c> we</c>

00:10:32.610 --> 00:10:32.620 align:start position:0%
functionalities is managing tasks we
 

00:10:32.620 --> 00:10:34.770 align:start position:0%
functionalities is managing tasks we
also<00:10:32.770><c> have</c><00:10:33.100><c> a</c><00:10:33.310><c> progress</c><00:10:33.670><c> module</c><00:10:34.150><c> that</c><00:10:34.480><c> has</c><00:10:34.750><c> a</c>

00:10:34.770 --> 00:10:34.780 align:start position:0%
also have a progress module that has a
 

00:10:34.780 --> 00:10:39.540 align:start position:0%
also have a progress module that has a
dependency<00:10:35.440><c> on</c><00:10:35.470><c> tasks</c><00:10:36.070><c> and</c><00:10:37.170><c> as</c><00:10:38.170><c> we</c><00:10:38.260><c> dive</c><00:10:38.470><c> in</c><00:10:38.710><c> we</c>

00:10:39.540 --> 00:10:39.550 align:start position:0%
dependency on tasks and as we dive in we
 

00:10:39.550 --> 00:10:40.860 align:start position:0%
dependency on tasks and as we dive in we
notice<00:10:39.850><c> that</c><00:10:40.000><c> tasks</c><00:10:40.330><c> is</c><00:10:40.420><c> a</c><00:10:40.450><c> really</c><00:10:40.720><c> big</c>

00:10:40.860 --> 00:10:40.870 align:start position:0%
notice that tasks is a really big
 

00:10:40.870 --> 00:10:43.320 align:start position:0%
notice that tasks is a really big
feature<00:10:41.080><c> we</c><00:10:41.950><c> can</c><00:10:42.010><c> further</c><00:10:42.400><c> decompose</c><00:10:42.940><c> it</c><00:10:43.120><c> with</c>

00:10:43.320 --> 00:10:43.330 align:start position:0%
feature we can further decompose it with
 

00:10:43.330 --> 00:10:47.940 align:start position:0%
feature we can further decompose it with
add<00:10:43.570><c> edit</c><00:10:44.200><c> list</c><00:10:44.500><c> view</c><00:10:44.950><c> and</c><00:10:46.830><c> organizing</c><00:10:47.830><c> our</c>

00:10:47.940 --> 00:10:47.950 align:start position:0%
add edit list view and organizing our
 

00:10:47.950 --> 00:10:50.250 align:start position:0%
add edit list view and organizing our
code<00:10:48.130><c> this</c><00:10:48.340><c> way</c><00:10:48.550><c> allows</c><00:10:49.300><c> our</c><00:10:49.480><c> development</c><00:10:50.170><c> to</c>

00:10:50.250 --> 00:10:50.260 align:start position:0%
code this way allows our development to
 

00:10:50.260 --> 00:10:52.320 align:start position:0%
code this way allows our development to
scale<00:10:50.530><c> as</c><00:10:50.980><c> our</c><00:10:51.190><c> application</c><00:10:51.700><c> grows</c><00:10:51.910><c> and</c><00:10:52.300><c> new</c>

00:10:52.320 --> 00:10:52.330 align:start position:0%
scale as our application grows and new
 

00:10:52.330 --> 00:10:56.460 align:start position:0%
scale as our application grows and new
features<00:10:52.750><c> are</c><00:10:53.110><c> added</c><00:10:53.140><c> and</c><00:10:54.960><c> we're</c><00:10:55.960><c> also</c><00:10:56.080><c> able</c>

00:10:56.460 --> 00:10:56.470 align:start position:0%
features are added and we're also able
 

00:10:56.470 --> 00:10:57.840 align:start position:0%
features are added and we're also able
to<00:10:56.680><c> scale</c><00:10:57.100><c> in</c><00:10:57.430><c> debt</c>

00:10:57.840 --> 00:10:57.850 align:start position:0%
to scale in debt
 

00:10:57.850 --> 00:11:00.480 align:start position:0%
to scale in debt
of<00:10:58.000><c> complexity</c><00:10:58.600><c> to</c><00:10:58.810><c> as</c><00:10:59.350><c> features</c><00:10:59.829><c> become</c><00:11:00.190><c> more</c>

00:11:00.480 --> 00:11:00.490 align:start position:0%
of complexity to as features become more
 

00:11:00.490 --> 00:11:02.670 align:start position:0%
of complexity to as features become more
complex<00:11:00.880><c> we</c><00:11:01.569><c> can</c><00:11:01.750><c> continue</c><00:11:02.199><c> breaking</c><00:11:02.560><c> them</c>

00:11:02.670 --> 00:11:02.680 align:start position:0%
complex we can continue breaking them
 

00:11:02.680 --> 00:11:06.090 align:start position:0%
complex we can continue breaking them
down<00:11:02.709><c> adding</c><00:11:03.519><c> more</c><00:11:03.639><c> modules</c><00:11:04.120><c> and</c><00:11:05.100><c> this</c>

00:11:06.090 --> 00:11:06.100 align:start position:0%
down adding more modules and this
 

00:11:06.100 --> 00:11:08.009 align:start position:0%
down adding more modules and this
approach<00:11:06.339><c> to</c><00:11:06.819><c> organization</c><00:11:07.509><c> makes</c><00:11:07.750><c> sense</c>

00:11:08.009 --> 00:11:08.019 align:start position:0%
approach to organization makes sense
 

00:11:08.019 --> 00:11:10.170 align:start position:0%
approach to organization makes sense
since<00:11:08.560><c> two</c><00:11:08.920><c> components</c><00:11:09.459><c> in</c><00:11:09.579><c> the</c><00:11:09.639><c> same</c><00:11:09.819><c> domain</c>

00:11:10.170 --> 00:11:10.180 align:start position:0%
since two components in the same domain
 

00:11:10.180 --> 00:11:12.660 align:start position:0%
since two components in the same domain
are<00:11:10.779><c> much</c><00:11:11.259><c> more</c><00:11:11.410><c> related</c><00:11:11.829><c> in</c><00:11:12.009><c> function</c><00:11:12.430><c> than</c>

00:11:12.660 --> 00:11:12.670 align:start position:0%
are much more related in function than
 

00:11:12.670 --> 00:11:14.670 align:start position:0%
are much more related in function than
two<00:11:13.089><c> components</c><00:11:13.630><c> that</c><00:11:13.779><c> might</c><00:11:14.019><c> just</c><00:11:14.259><c> happen</c><00:11:14.440><c> to</c>

00:11:14.670 --> 00:11:14.680 align:start position:0%
two components that might just happen to
 

00:11:14.680 --> 00:11:17.939 align:start position:0%
two components that might just happen to
be<00:11:14.829><c> an</c><00:11:15.069><c> activity</c><00:11:16.350><c> we</c><00:11:17.350><c> can</c><00:11:17.380><c> implement</c><00:11:17.740><c> this</c>

00:11:17.939 --> 00:11:17.949 align:start position:0%
be an activity we can implement this
 

00:11:17.949 --> 00:11:19.410 align:start position:0%
be an activity we can implement this
kind<00:11:18.190><c> of</c><00:11:18.220><c> organization</c><00:11:18.430><c> both</c><00:11:19.149><c> through</c>

00:11:19.410 --> 00:11:19.420 align:start position:0%
kind of organization both through
 

00:11:19.420 --> 00:11:22.259 align:start position:0%
kind of organization both through
language<00:11:19.810><c> features</c><00:11:20.380><c> such</c><00:11:20.649><c> as</c><00:11:20.680><c> packaging</c><00:11:21.269><c> but</c>

00:11:22.259 --> 00:11:22.269 align:start position:0%
language features such as packaging but
 

00:11:22.269 --> 00:11:23.879 align:start position:0%
language features such as packaging but
also<00:11:22.569><c> through</c><00:11:22.810><c> our</c><00:11:22.839><c> build</c><00:11:23.110><c> system</c><00:11:23.259><c> like</c>

00:11:23.879 --> 00:11:23.889 align:start position:0%
also through our build system like
 

00:11:23.889 --> 00:11:30.509 align:start position:0%
also through our build system like
Gradle<00:11:24.370><c> modules</c><00:11:24.880><c> or</c><00:11:25.209><c> basil</c><00:11:25.990><c> libraries</c><00:11:29.399><c> we</c><00:11:30.399><c> can</c>

00:11:30.509 --> 00:11:30.519 align:start position:0%
Gradle modules or basil libraries we can
 

00:11:30.519 --> 00:11:32.160 align:start position:0%
Gradle modules or basil libraries we can
have<00:11:30.639><c> two</c><00:11:30.759><c> main</c><00:11:30.910><c> orientated</c><00:11:31.540><c> modules</c><00:11:31.930><c> now</c><00:11:32.110><c> to</c>

00:11:32.160 --> 00:11:32.170 align:start position:0%
have two main orientated modules now to
 

00:11:32.170 --> 00:11:34.620 align:start position:0%
have two main orientated modules now to
the<00:11:32.410><c> application</c><00:11:32.980><c> and</c><00:11:33.190><c> define</c><00:11:33.850><c> clear</c><00:11:34.240><c> API</c>

00:11:34.620 --> 00:11:34.630 align:start position:0%
the application and define clear API
 

00:11:34.630 --> 00:11:36.809 align:start position:0%
the application and define clear API
boundaries<00:11:35.290><c> to</c><00:11:35.860><c> contractual</c><00:11:36.399><c> eyes</c><00:11:36.610><c> their</c>

00:11:36.809 --> 00:11:36.819 align:start position:0%
boundaries to contractual eyes their
 

00:11:36.819 --> 00:11:39.240 align:start position:0%
boundaries to contractual eyes their
interactions<00:11:37.680><c> so</c><00:11:38.680><c> now</c><00:11:38.800><c> we</c><00:11:38.860><c> have</c><00:11:39.009><c> a</c><00:11:39.040><c> way</c><00:11:39.220><c> to</c>

00:11:39.240 --> 00:11:39.250 align:start position:0%
interactions so now we have a way to
 

00:11:39.250 --> 00:11:41.639 align:start position:0%
interactions so now we have a way to
shard<00:11:39.670><c> our</c><00:11:39.819><c> application</c><00:11:40.480><c> which</c><00:11:41.350><c> makes</c><00:11:41.560><c> it</c>

00:11:41.639 --> 00:11:41.649 align:start position:0%
shard our application which makes it
 

00:11:41.649 --> 00:11:44.100 align:start position:0%
shard our application which makes it
possible<00:11:41.800><c> for</c><00:11:42.310><c> the</c><00:11:42.940><c> isolate</c><00:11:43.449><c> the</c><00:11:43.569><c> components</c>

00:11:44.100 --> 00:11:44.110 align:start position:0%
possible for the isolate the components
 

00:11:44.110 --> 00:11:47.129 align:start position:0%
possible for the isolate the components
for<00:11:44.259><c> more</c><00:11:44.410><c> focused</c><00:11:44.800><c> testing</c><00:11:45.870><c> finally</c><00:11:46.870><c> we</c><00:11:47.019><c> can</c>

00:11:47.129 --> 00:11:47.139 align:start position:0%
for more focused testing finally we can
 

00:11:47.139 --> 00:11:49.759 align:start position:0%
for more focused testing finally we can
see<00:11:47.319><c> blueprints</c><00:11:47.860><c> for</c><00:11:48.190><c> integration</c><00:11:48.579><c> tests</c><00:11:49.089><c> and</c>

00:11:49.759 --> 00:11:49.769 align:start position:0%
see blueprints for integration tests and
 

00:11:49.769 --> 00:11:52.410 align:start position:0%
see blueprints for integration tests and
of<00:11:50.769><c> course</c><00:11:51.040><c> all</c><00:11:51.490><c> these</c><00:11:51.759><c> module</c><00:11:52.120><c> is</c><00:11:52.209><c> going</c><00:11:52.360><c> to</c>

00:11:52.410 --> 00:11:52.420 align:start position:0%
of course all these module is going to
 

00:11:52.420 --> 00:11:55.999 align:start position:0%
of course all these module is going to
be<00:11:52.509><c> decomposed</c><00:11:52.839><c> and</c><00:11:53.380><c> be</c><00:11:53.649><c> unit</c><00:11:53.949><c> testable</c><00:11:54.279><c> and</c>

00:11:55.999 --> 00:11:56.009 align:start position:0%
be decomposed and be unit testable and
 

00:11:56.009 --> 00:11:58.559 align:start position:0%
be decomposed and be unit testable and
we<00:11:57.009><c> can</c><00:11:57.160><c> still</c><00:11:57.370><c> write</c><00:11:57.579><c> a</c><00:11:57.790><c> large</c><00:11:58.120><c> end-to-end</c>

00:11:58.559 --> 00:11:58.569 align:start position:0%
we can still write a large end-to-end
 

00:11:58.569 --> 00:12:02.670 align:start position:0%
we can still write a large end-to-end
tests<00:12:00.449><c> furthermore</c><00:12:01.449><c> this</c><00:12:01.959><c> organization</c>

00:12:02.670 --> 00:12:02.680 align:start position:0%
tests furthermore this organization
 

00:12:02.680 --> 00:12:04.920 align:start position:0%
tests furthermore this organization
allows<00:12:02.920><c> us</c><00:12:03.100><c> to</c><00:12:03.220><c> scale</c><00:12:03.490><c> as</c><00:12:03.819><c> we</c><00:12:04.779><c> add</c><00:12:04.899><c> new</c>

00:12:04.920 --> 00:12:04.930 align:start position:0%
allows us to scale as we add new
 

00:12:04.930 --> 00:12:09.559 align:start position:0%
allows us to scale as we add new
features<00:12:05.319><c> the</c><00:12:06.310><c> test</c><00:12:06.610><c> scale</c><00:12:07.060><c> along</c><00:12:07.420><c> with</c><00:12:07.630><c> them</c>

00:12:09.559 --> 00:12:09.569 align:start position:0%
features the test scale along with them
 

00:12:09.569 --> 00:12:11.879 align:start position:0%
features the test scale along with them
you<00:12:10.569><c> can</c><00:12:10.689><c> use</c><00:12:10.810><c> this</c><00:12:10.959><c> guide</c><00:12:11.170><c> as</c><00:12:11.350><c> a</c><00:12:11.380><c> starting</c>

00:12:11.879 --> 00:12:11.889 align:start position:0%
you can use this guide as a starting
 

00:12:11.889 --> 00:12:13.889 align:start position:0%
you can use this guide as a starting
point<00:12:12.100><c> and</c><00:12:12.459><c> of</c><00:12:13.000><c> course</c><00:12:13.240><c> you</c><00:12:13.360><c> can</c><00:12:13.509><c> decompose</c>

00:12:13.889 --> 00:12:13.899 align:start position:0%
point and of course you can decompose
 

00:12:13.899 --> 00:12:15.660 align:start position:0%
point and of course you can decompose
further<00:12:14.199><c> or</c><00:12:14.560><c> in</c><00:12:14.829><c> different</c><00:12:15.009><c> ways</c><00:12:15.310><c> that</c><00:12:15.490><c> make</c>

00:12:15.660 --> 00:12:15.670 align:start position:0%
further or in different ways that make
 

00:12:15.670 --> 00:12:18.809 align:start position:0%
further or in different ways that make
sense<00:12:15.970><c> for</c><00:12:16.060><c> your</c><00:12:16.240><c> application</c><00:12:17.459><c> the</c><00:12:18.459><c> key</c><00:12:18.639><c> thing</c>

00:12:18.809 --> 00:12:18.819 align:start position:0%
sense for your application the key thing
 

00:12:18.819 --> 00:12:20.759 align:start position:0%
sense for your application the key thing
here<00:12:18.850><c> though</c><00:12:19.420><c> is</c><00:12:19.660><c> to</c><00:12:20.139><c> remember</c><00:12:20.529><c> to</c><00:12:20.620><c> provide</c>

00:12:20.759 --> 00:12:20.769 align:start position:0%
here though is to remember to provide
 

00:12:20.769 --> 00:12:23.160 align:start position:0%
here though is to remember to provide
natural<00:12:21.100><c> guides</c><00:12:21.550><c> and</c><00:12:21.880><c> templates</c><00:12:22.480><c> for</c>

00:12:23.160 --> 00:12:23.170 align:start position:0%
natural guides and templates for
 

00:12:23.170 --> 00:12:24.660 align:start position:0%
natural guides and templates for
different<00:12:23.199><c> categories</c><00:12:23.589><c> of</c><00:12:23.920><c> tests</c><00:12:24.399><c> for</c><00:12:24.610><c> your</c>

00:12:24.660 --> 00:12:24.670 align:start position:0%
different categories of tests for your
 

00:12:24.670 --> 00:12:29.999 align:start position:0%
different categories of tests for your
application<00:12:28.439><c> to</c><00:12:29.439><c> build</c><00:12:29.620><c> our</c><00:12:29.769><c> to</c><00:12:29.889><c> do</c>

00:12:29.999 --> 00:12:30.009 align:start position:0%
application to build our to do
 

00:12:30.009 --> 00:12:31.860 align:start position:0%
application to build our to do
application<00:12:30.189><c> we're</c><00:12:31.180><c> going</c><00:12:31.300><c> to</c><00:12:31.360><c> be</c><00:12:31.449><c> using</c><00:12:31.630><c> some</c>

00:12:31.860 --> 00:12:31.870 align:start position:0%
application we're going to be using some
 

00:12:31.870 --> 00:12:33.389 align:start position:0%
application we're going to be using some
of<00:12:31.930><c> the</c><00:12:32.019><c> architecture</c><00:12:32.560><c> component</c><00:12:33.009><c> libraries</c>

00:12:33.389 --> 00:12:33.399 align:start position:0%
of the architecture component libraries
 

00:12:33.399 --> 00:12:37.559 align:start position:0%
of the architecture component libraries
from<00:12:33.939><c> jetpack</c><00:12:34.709><c> such</c><00:12:35.709><c> as</c><00:12:35.860><c> data</c><00:12:36.069><c> binding</c><00:12:36.569><c> view</c>

00:12:37.559 --> 00:12:37.569 align:start position:0%
from jetpack such as data binding view
 

00:12:37.569 --> 00:12:44.870 align:start position:0%
from jetpack such as data binding view
model<00:12:38.250><c> live</c><00:12:39.250><c> data</c><00:12:40.319><c> navigation</c><00:12:41.319><c> and</c><00:12:41.560><c> room</c>

00:12:44.870 --> 00:12:44.880 align:start position:0%
 
 

00:12:44.880 --> 00:12:47.009 align:start position:0%
 
we're<00:12:45.880><c> going</c><00:12:46.029><c> to</c><00:12:46.089><c> follow</c><00:12:46.269><c> the</c><00:12:46.509><c> model</c><00:12:46.839><c> view</c>

00:12:47.009 --> 00:12:47.019 align:start position:0%
we're going to follow the model view
 

00:12:47.019 --> 00:12:50.670 align:start position:0%
we're going to follow the model view
viewmodel<00:12:47.380><c> pattern</c><00:12:48.040><c> or</c><00:12:48.310><c> mvvm</c><00:12:49.230><c> to</c><00:12:50.230><c> architect</c>

00:12:50.670 --> 00:12:50.680 align:start position:0%
viewmodel pattern or mvvm to architect
 

00:12:50.680 --> 00:12:53.309 align:start position:0%
viewmodel pattern or mvvm to architect
our<00:12:50.800><c> application</c><00:12:51.449><c> this</c><00:12:52.449><c> provides</c><00:12:52.870><c> a</c><00:12:53.050><c> really</c>

00:12:53.309 --> 00:12:53.319 align:start position:0%
our application this provides a really
 

00:12:53.319 --> 00:12:55.220 align:start position:0%
our application this provides a really
clear<00:12:53.560><c> separation</c><00:12:53.860><c> of</c><00:12:54.160><c> concerns</c><00:12:54.310><c> and</c>

00:12:55.220 --> 00:12:55.230 align:start position:0%
clear separation of concerns and
 

00:12:55.230 --> 00:12:57.329 align:start position:0%
clear separation of concerns and
jetpacks<00:12:56.230><c> architecture</c><00:12:56.889><c> component</c>

00:12:57.329 --> 00:12:57.339 align:start position:0%
jetpacks architecture component
 

00:12:57.339 --> 00:12:59.340 align:start position:0%
jetpacks architecture component
libraries<00:12:57.730><c> really</c><00:12:58.209><c> fit</c><00:12:58.449><c> in</c><00:12:58.569><c> well</c><00:12:58.779><c> neatly</c><00:12:59.079><c> with</c>

00:12:59.340 --> 00:12:59.350 align:start position:0%
libraries really fit in well neatly with
 

00:12:59.350 --> 00:13:02.819 align:start position:0%
libraries really fit in well neatly with
this<00:13:00.480><c> when</c><00:13:01.480><c> a</c><00:13:01.509><c> start</c><00:13:01.870><c> with</c><00:13:02.019><c> a</c><00:13:02.050><c> single</c><00:13:02.290><c> activity</c>

00:13:02.819 --> 00:13:02.829 align:start position:0%
this when a start with a single activity
 

00:13:02.829 --> 00:13:05.850 align:start position:0%
this when a start with a single activity
that<00:13:03.370><c> uses</c><00:13:03.670><c> the</c><00:13:03.819><c> navigation</c><00:13:04.389><c> component</c><00:13:04.860><c> to</c>

00:13:05.850 --> 00:13:05.860 align:start position:0%
that uses the navigation component to
 

00:13:05.860 --> 00:13:07.949 align:start position:0%
that uses the navigation component to
map<00:13:06.040><c> the</c><00:13:06.189><c> users</c><00:13:06.490><c> throws</c><00:13:06.760><c> through</c><00:13:07.449><c> a</c><00:13:07.510><c> series</c><00:13:07.930><c> of</c>

00:13:07.949 --> 00:13:07.959 align:start position:0%
map the users throws through a series of
 

00:13:07.959 --> 00:13:10.769 align:start position:0%
map the users throws through a series of
fragments<00:13:08.740><c> each</c><00:13:09.579><c> one</c><00:13:09.910><c> managing</c><00:13:10.420><c> its</c><00:13:10.630><c> own</c>

00:13:10.769 --> 00:13:10.779 align:start position:0%
fragments each one managing its own
 

00:13:10.779 --> 00:13:12.090 align:start position:0%
fragments each one managing its own
screen

00:13:12.090 --> 00:13:12.100 align:start position:0%
screen
 

00:13:12.100 --> 00:13:15.160 align:start position:0%
screen
each<00:13:13.100><c> fragment</c><00:13:13.459><c> has</c><00:13:14.329><c> its</c><00:13:14.509><c> own</c><00:13:14.600><c> XML</c><00:13:14.990><c> layout</c>

00:13:15.160 --> 00:13:15.170 align:start position:0%
each fragment has its own XML layout
 

00:13:15.170 --> 00:13:18.119 align:start position:0%
each fragment has its own XML layout
this<00:13:15.949><c> map</c><00:13:16.189><c> directly</c><00:13:16.610><c> to</c><00:13:16.790><c> its</c><00:13:17.300><c> own</c><00:13:17.389><c> view</c><00:13:17.600><c> model</c>

00:13:18.119 --> 00:13:18.129 align:start position:0%
this map directly to its own view model
 

00:13:18.129 --> 00:13:21.059 align:start position:0%
this map directly to its own view model
use<00:13:19.129><c> the</c><00:13:19.279><c> datum</c><00:13:19.579><c> using</c><00:13:20.120><c> data</c><00:13:20.329><c> binding</c><00:13:20.420><c> our</c>

00:13:21.059 --> 00:13:21.069 align:start position:0%
use the datum using data binding our
 

00:13:21.069 --> 00:13:22.720 align:start position:0%
use the datum using data binding our
architecture<00:13:22.069><c> component</c>

00:13:22.720 --> 00:13:22.730 align:start position:0%
architecture component
 

00:13:22.730 --> 00:13:25.179 align:start position:0%
architecture component
it'll<00:13:23.660><c> also</c><00:13:23.779><c> use</c><00:13:24.050><c> live</c><00:13:24.259><c> data</c><00:13:24.499><c> to</c><00:13:25.009><c> reflect</c>

00:13:25.179 --> 00:13:25.189 align:start position:0%
it'll also use live data to reflect
 

00:13:25.189 --> 00:13:30.879 align:start position:0%
it'll also use live data to reflect
changes<00:13:25.699><c> back</c><00:13:25.879><c> up</c><00:13:26.089><c> into</c><00:13:26.779><c> the</c><00:13:27.079><c> view</c><00:13:29.170><c> and</c><00:13:30.170><c> our</c>

00:13:30.879 --> 00:13:30.889 align:start position:0%
changes back up into the view and our
 

00:13:30.889 --> 00:13:33.009 align:start position:0%
changes back up into the view and our
model<00:13:31.160><c> a</c><00:13:31.279><c> is</c><00:13:31.399><c> going</c><00:13:31.579><c> to</c><00:13:31.639><c> be</c><00:13:31.730><c> abstracted</c><00:13:32.420><c> under</c>

00:13:33.009 --> 00:13:33.019 align:start position:0%
model a is going to be abstracted under
 

00:13:33.019 --> 00:13:35.499 align:start position:0%
model a is going to be abstracted under
a<00:13:33.050><c> repository</c><00:13:33.800><c> that</c><00:13:34.009><c> contains</c><00:13:34.490><c> both</c><00:13:34.999><c> a</c><00:13:35.180><c> remote</c>

00:13:35.499 --> 00:13:35.509 align:start position:0%
a repository that contains both a remote
 

00:13:35.509 --> 00:13:37.749 align:start position:0%
a repository that contains both a remote
data<00:13:35.779><c> source</c><00:13:36.079><c> and</c><00:13:36.350><c> a</c><00:13:36.949><c> local</c><00:13:37.129><c> data</c><00:13:37.430><c> source</c>

00:13:37.749 --> 00:13:37.759 align:start position:0%
data source and a local data source
 

00:13:37.759 --> 00:13:40.840 align:start position:0%
data source and a local data source
that's<00:13:38.269><c> backed</c><00:13:38.540><c> by</c><00:13:38.629><c> sequel</c><00:13:39.290><c> Lite</c><00:13:39.529><c> and</c><00:13:39.850><c> using</c>

00:13:40.840 --> 00:13:40.850 align:start position:0%
that's backed by sequel Lite and using
 

00:13:40.850 --> 00:13:46.449 align:start position:0%
that's backed by sequel Lite and using
room<00:13:41.110><c> architecture</c><00:13:42.110><c> component</c><00:13:44.379><c> on</c><00:13:45.459><c> Android</c>

00:13:46.449 --> 00:13:46.459 align:start position:0%
room architecture component on Android
 

00:13:46.459 --> 00:13:48.369 align:start position:0%
room architecture component on Android
the<00:13:46.879><c> user</c><00:13:47.059><c> interface</c><00:13:47.509><c> is</c><00:13:47.660><c> updated</c><00:13:48.050><c> on</c><00:13:48.139><c> the</c><00:13:48.259><c> UI</c>

00:13:48.369 --> 00:13:48.379 align:start position:0%
the user interface is updated on the UI
 

00:13:48.379 --> 00:13:51.280 align:start position:0%
the user interface is updated on the UI
thread<00:13:48.499><c> and</c><00:13:49.069><c> so</c><00:13:50.029><c> so</c><00:13:50.389><c> long</c><00:13:50.569><c> as</c><00:13:50.689><c> the</c><00:13:50.809><c> events</c><00:13:51.170><c> that</c>

00:13:51.280 --> 00:13:51.290 align:start position:0%
thread and so so long as the events that
 

00:13:51.290 --> 00:13:54.069 align:start position:0%
thread and so so long as the events that
we<00:13:51.379><c> post</c><00:13:51.589><c> there</c><00:13:51.829><c> are</c><00:13:52.069><c> nice</c><00:13:52.249><c> short</c><00:13:52.699><c> tasks</c><00:13:53.149><c> are</c>

00:13:54.069 --> 00:13:54.079 align:start position:0%
we post there are nice short tasks are
 

00:13:54.079 --> 00:13:57.579 align:start position:0%
we post there are nice short tasks are
you<00:13:54.230><c> I</c><00:13:54.290><c> say</c><00:13:54.649><c> snappy</c><00:13:55.189><c> and</c><00:13:55.430><c> responsive</c><00:13:56.379><c> in</c><00:13:57.379><c> our</c>

00:13:57.579 --> 00:13:57.589 align:start position:0%
you I say snappy and responsive in our
 

00:13:57.589 --> 00:13:59.889 align:start position:0%
you I say snappy and responsive in our
application<00:13:58.160><c> however</c><00:13:58.660><c> everything's</c><00:13:59.660><c> not</c>

00:13:59.889 --> 00:13:59.899 align:start position:0%
application however everything's not
 

00:13:59.899 --> 00:14:03.009 align:start position:0%
application however everything's not
gonna<00:14:00.379><c> fit</c><00:14:00.709><c> that</c><00:14:00.860><c> criteria</c><00:14:01.420><c> we</c><00:14:02.420><c> use</c><00:14:02.600><c> both</c><00:14:02.839><c> a</c>

00:14:03.009 --> 00:14:03.019 align:start position:0%
gonna fit that criteria we use both a
 

00:14:03.019 --> 00:14:05.829 align:start position:0%
gonna fit that criteria we use both a
local<00:14:03.139><c> database</c><00:14:03.470><c> and</c><00:14:04.069><c> we</c><00:14:04.910><c> make</c><00:14:05.120><c> crests</c><00:14:05.629><c> to</c><00:14:05.809><c> a</c>

00:14:05.829 --> 00:14:05.839 align:start position:0%
local database and we make crests to a
 

00:14:05.839 --> 00:14:08.350 align:start position:0%
local database and we make crests to a
remote<00:14:06.170><c> REST</c><00:14:06.529><c> API</c><00:14:06.819><c> for</c><00:14:07.819><c> dealing</c><00:14:07.970><c> with</c><00:14:08.089><c> task</c>

00:14:08.350 --> 00:14:08.360 align:start position:0%
remote REST API for dealing with task
 

00:14:08.360 --> 00:14:10.960 align:start position:0%
remote REST API for dealing with task
data<00:14:09.100><c> operations</c><00:14:10.100><c> to</c><00:14:10.519><c> both</c><00:14:10.699><c> of</c><00:14:10.850><c> these</c>

00:14:10.960 --> 00:14:10.970 align:start position:0%
data operations to both of these
 

00:14:10.970 --> 00:14:16.299 align:start position:0%
data operations to both of these
components<00:14:11.689><c> take</c><00:14:12.559><c> a</c><00:14:12.589><c> long</c><00:14:12.829><c> time</c><00:14:14.079><c> and</c><00:14:15.189><c> if</c><00:14:16.189><c> we</c>

00:14:16.299 --> 00:14:16.309 align:start position:0%
components take a long time and if we
 

00:14:16.309 --> 00:14:18.610 align:start position:0%
components take a long time and if we
were<00:14:16.399><c> to</c><00:14:16.459><c> run</c><00:14:16.639><c> these</c><00:14:16.759><c> on</c><00:14:17.000><c> the</c><00:14:17.089><c> UI</c><00:14:17.209><c> thread</c><00:14:17.620><c> we</c>

00:14:18.610 --> 00:14:18.620 align:start position:0%
were to run these on the UI thread we
 

00:14:18.620 --> 00:14:20.379 align:start position:0%
were to run these on the UI thread we
quickly<00:14:18.860><c> see</c><00:14:19.189><c> that</c><00:14:19.220><c> our</c><00:14:19.459><c> application</c><00:14:19.579><c> becomes</c>

00:14:20.379 --> 00:14:20.389 align:start position:0%
quickly see that our application becomes
 

00:14:20.389 --> 00:14:25.420 align:start position:0%
quickly see that our application becomes
slow<00:14:20.809><c> or</c><00:14:21.529><c> even</c><00:14:21.589><c> unresponsive</c><00:14:24.160><c> so</c><00:14:25.160><c> of</c><00:14:25.250><c> course</c>

00:14:25.420 --> 00:14:25.430 align:start position:0%
slow or even unresponsive so of course
 

00:14:25.430 --> 00:14:27.100 align:start position:0%
slow or even unresponsive so of course
we<00:14:26.240><c> need</c><00:14:26.269><c> to</c><00:14:26.480><c> make</c><00:14:26.629><c> sure</c><00:14:26.660><c> that</c><00:14:26.990><c> these</c>

00:14:27.100 --> 00:14:27.110 align:start position:0%
we need to make sure that these
 

00:14:27.110 --> 00:14:28.780 align:start position:0%
we need to make sure that these
long-running<00:14:27.740><c> operations</c><00:14:28.279><c> occur</c>

00:14:28.780 --> 00:14:28.790 align:start position:0%
long-running operations occur
 

00:14:28.790 --> 00:14:31.059 align:start position:0%
long-running operations occur
asynchronously<00:14:29.480><c> in</c><00:14:29.809><c> the</c><00:14:30.290><c> background</c><00:14:30.709><c> somehow</c>

00:14:31.059 --> 00:14:31.069 align:start position:0%
asynchronously in the background somehow
 

00:14:31.069 --> 00:14:33.189 align:start position:0%
asynchronously in the background somehow
so<00:14:31.790><c> that</c><00:14:31.939><c> we're</c><00:14:32.029><c> not</c><00:14:32.059><c> blocking</c><00:14:32.389><c> our</c><00:14:32.629><c> UI</c><00:14:32.809><c> thread</c>

00:14:33.189 --> 00:14:33.199 align:start position:0%
so that we're not blocking our UI thread
 

00:14:33.199 --> 00:14:35.319 align:start position:0%
so that we're not blocking our UI thread
from<00:14:33.740><c> responding</c><00:14:34.279><c> while</c><00:14:34.579><c> waiting</c><00:14:34.879><c> for</c><00:14:35.089><c> these</c>

00:14:35.319 --> 00:14:35.329 align:start position:0%
from responding while waiting for these
 

00:14:35.329 --> 00:14:39.759 align:start position:0%
from responding while waiting for these
tasks<00:14:35.809><c> to</c><00:14:35.959><c> complete</c><00:14:37.899><c> in</c><00:14:38.899><c> our</c><00:14:39.050><c> application</c>

00:14:39.759 --> 00:14:39.769 align:start position:0%
tasks to complete in our application
 

00:14:39.769 --> 00:14:41.230 align:start position:0%
tasks to complete in our application
we're<00:14:40.069><c> going</c><00:14:40.189><c> to</c><00:14:40.250><c> make</c><00:14:40.370><c> use</c><00:14:40.519><c> of</c><00:14:40.550><c> Kotlin</c><00:14:41.000><c> zko</c>

00:14:41.230 --> 00:14:41.240 align:start position:0%
we're going to make use of Kotlin zko
 

00:14:41.240 --> 00:14:44.379 align:start position:0%
we're going to make use of Kotlin zko
routines<00:14:41.629><c> for</c><00:14:42.170><c> asynchronous</c><00:14:42.500><c> operations</c><00:14:43.389><c> you</c>

00:14:44.379 --> 00:14:44.389 align:start position:0%
routines for asynchronous operations you
 

00:14:44.389 --> 00:14:45.519 align:start position:0%
routines for asynchronous operations you
can<00:14:44.509><c> think</c><00:14:44.720><c> of</c><00:14:44.839><c> co-routines</c>

00:14:45.519 --> 00:14:45.529 align:start position:0%
can think of co-routines
 

00:14:45.529 --> 00:14:48.759 align:start position:0%
can think of co-routines
as<00:14:45.620><c> lightweight</c><00:14:46.309><c> threads</c><00:14:46.850><c> and</c><00:14:47.769><c> although</c>

00:14:48.759 --> 00:14:48.769 align:start position:0%
as lightweight threads and although
 

00:14:48.769 --> 00:14:50.049 align:start position:0%
as lightweight threads and although
they've<00:14:49.040><c> been</c><00:14:49.069><c> stable</c><00:14:49.579><c> for</c><00:14:49.699><c> only</c><00:14:50.029><c> a</c>

00:14:50.049 --> 00:14:50.059 align:start position:0%
they've been stable for only a
 

00:14:50.059 --> 00:14:52.230 align:start position:0%
they've been stable for only a
relatively<00:14:50.509><c> short</c><00:14:50.809><c> amount</c><00:14:51.139><c> of</c><00:14:51.230><c> time</c><00:14:51.290><c> the</c>

00:14:52.230 --> 00:14:52.240 align:start position:0%
relatively short amount of time the
 

00:14:52.240 --> 00:14:54.519 align:start position:0%
relatively short amount of time the
community<00:14:53.240><c> has</c><00:14:53.509><c> adopted</c><00:14:53.809><c> them</c><00:14:54.110><c> very</c><00:14:54.290><c> quickly</c>

00:14:54.519 --> 00:14:54.529 align:start position:0%
community has adopted them very quickly
 

00:14:54.529 --> 00:14:56.710 align:start position:0%
community has adopted them very quickly
and<00:14:54.920><c> they've</c><00:14:55.459><c> become</c><00:14:55.639><c> a</c><00:14:55.819><c> clear</c><00:14:56.149><c> trend</c><00:14:56.420><c> in</c>

00:14:56.710 --> 00:14:56.720 align:start position:0%
and they've become a clear trend in
 

00:14:56.720 --> 00:15:02.169 align:start position:0%
and they've become a clear trend in
android<00:14:57.170><c> development</c><00:14:57.589><c> a</c><00:15:00.459><c> KO</c><00:15:01.459><c> routine</c><00:15:01.790><c> scope</c>

00:15:02.169 --> 00:15:02.179 align:start position:0%
android development a KO routine scope
 

00:15:02.179 --> 00:15:03.910 align:start position:0%
android development a KO routine scope
keeps<00:15:02.629><c> track</c><00:15:02.929><c> of</c><00:15:02.959><c> all</c><00:15:03.139><c> the</c><00:15:03.259><c> ko</c><00:15:03.410><c> routines</c><00:15:03.740><c> it</c>

00:15:03.910 --> 00:15:03.920 align:start position:0%
keeps track of all the ko routines it
 

00:15:03.920 --> 00:15:06.970 align:start position:0%
keeps track of all the ko routines it
creates<00:15:04.250><c> and</c><00:15:04.610><c> if</c><00:15:05.509><c> you</c><00:15:05.600><c> cancel</c><00:15:06.019><c> a</c><00:15:06.050><c> scope</c><00:15:06.350><c> it</c>

00:15:06.970 --> 00:15:06.980 align:start position:0%
creates and if you cancel a scope it
 

00:15:06.980 --> 00:15:08.829 align:start position:0%
creates and if you cancel a scope it
thereby<00:15:07.370><c> cancels</c><00:15:07.850><c> all</c><00:15:08.059><c> of</c><00:15:08.300><c> the</c><00:15:08.360><c> kuroh</c><00:15:08.540><c> teens</c>

00:15:08.829 --> 00:15:08.839 align:start position:0%
thereby cancels all of the kuroh teens
 

00:15:08.839 --> 00:15:12.280 align:start position:0%
thereby cancels all of the kuroh teens
that<00:15:09.110><c> were</c><00:15:09.199><c> created</c><00:15:09.620><c> in</c><00:15:09.709><c> that</c><00:15:09.889><c> scope</c><00:15:11.110><c> in</c><00:15:12.110><c> our</c>

00:15:12.280 --> 00:15:12.290 align:start position:0%
that were created in that scope in our
 

00:15:12.290 --> 00:15:14.769 align:start position:0%
that were created in that scope in our
application<00:15:13.009><c> kuroh</c><00:15:13.819><c> teens</c><00:15:14.149><c> are</c><00:15:14.449><c> launched</c>

00:15:14.769 --> 00:15:14.779 align:start position:0%
application kuroh teens are launched
 

00:15:14.779 --> 00:15:17.199 align:start position:0%
application kuroh teens are launched
from<00:15:14.990><c> the</c><00:15:15.319><c> view</c><00:15:15.470><c> model</c><00:15:15.589><c> objects</c><00:15:16.160><c> using</c><00:15:16.850><c> a</c>

00:15:17.199 --> 00:15:17.209 align:start position:0%
from the view model objects using a
 

00:15:17.209 --> 00:15:21.040 align:start position:0%
from the view model objects using a
special<00:15:17.600><c> view</c><00:15:17.959><c> model</c><00:15:18.290><c> scope</c><00:15:19.870><c> this</c><00:15:20.870><c> is</c>

00:15:21.040 --> 00:15:21.050 align:start position:0%
special view model scope this is
 

00:15:21.050 --> 00:15:22.929 align:start position:0%
special view model scope this is
particularly<00:15:21.439><c> useful</c><00:15:21.589><c> when</c><00:15:22.189><c> our</c><00:15:22.490><c> view</c><00:15:22.670><c> model</c>

00:15:22.929 --> 00:15:22.939 align:start position:0%
particularly useful when our view model
 

00:15:22.939 --> 00:15:25.660 align:start position:0%
particularly useful when our view model
gets<00:15:23.120><c> destroyed</c><00:15:23.709><c> because</c><00:15:24.709><c> it</c><00:15:24.920><c> automatically</c>

00:15:25.660 --> 00:15:25.670 align:start position:0%
gets destroyed because it automatically
 

00:15:25.670 --> 00:15:27.880 align:start position:0%
gets destroyed because it automatically
cancels<00:15:26.090><c> all</c><00:15:26.330><c> of</c><00:15:26.660><c> those</c><00:15:26.810><c> existing</c><00:15:27.290><c> child</c><00:15:27.590><c> care</c>

00:15:27.880 --> 00:15:27.890 align:start position:0%
cancels all of those existing child care
 

00:15:27.890 --> 00:15:30.580 align:start position:0%
cancels all of those existing child care
routines<00:15:28.280><c> it's</c><00:15:29.240><c> gonna</c><00:15:29.390><c> save</c><00:15:29.660><c> resources</c><00:15:29.900><c> and</c>

00:15:30.580 --> 00:15:30.590 align:start position:0%
routines it's gonna save resources and
 

00:15:30.590 --> 00:15:32.410 align:start position:0%
routines it's gonna save resources and
avoid<00:15:30.980><c> potential</c><00:15:31.430><c> memory</c><00:15:31.850><c> leaks</c><00:15:32.030><c> along</c><00:15:32.330><c> the</c>

00:15:32.410 --> 00:15:32.420 align:start position:0%
avoid potential memory leaks along the
 

00:15:32.420 --> 00:15:35.620 align:start position:0%
avoid potential memory leaks along the
way<00:15:32.570><c> and</c><00:15:33.040><c> for</c><00:15:34.040><c> women</c><00:15:34.190><c> is</c><00:15:34.430><c> scope</c><00:15:34.700><c> we</c><00:15:35.360><c> can</c><00:15:35.480><c> call</c>

00:15:35.620 --> 00:15:35.630 align:start position:0%
way and for women is scope we can call
 

00:15:35.630 --> 00:15:41.320 align:start position:0%
way and for women is scope we can call
down<00:15:35.780><c> to</c><00:15:35.930><c> our</c><00:15:35.990><c> tasks</c><00:15:36.380><c> repository</c><00:15:40.330><c> the</c>

00:15:41.320 --> 00:15:41.330 align:start position:0%
down to our tasks repository the
 

00:15:41.330 --> 00:15:43.090 align:start position:0%
down to our tasks repository the
co-routine<00:15:41.840><c> scope</c><00:15:42.170><c> created</c><00:15:42.680><c> our</c><00:15:42.800><c> task</c>

00:15:43.090 --> 00:15:43.100 align:start position:0%
co-routine scope created our task
 

00:15:43.100 --> 00:15:45.700 align:start position:0%
co-routine scope created our task
repository<00:15:43.760><c> is</c><00:15:43.940><c> concerned</c><00:15:44.600><c> for</c><00:15:45.290><c> parallel</c>

00:15:45.700 --> 00:15:45.710 align:start position:0%
repository is concerned for parallel
 

00:15:45.710 --> 00:15:48.490 align:start position:0%
repository is concerned for parallel
decomposition<00:15:46.520><c> of</c><00:15:46.580><c> work</c><00:15:47.290><c> when</c><00:15:48.290><c> any</c><00:15:48.410><c> child</c>

00:15:48.490 --> 00:15:48.500 align:start position:0%
decomposition of work when any child
 

00:15:48.500 --> 00:15:50.830 align:start position:0%
decomposition of work when any child
co-routine<00:15:49.250><c> in</c><00:15:49.370><c> this</c><00:15:49.520><c> scope</c><00:15:49.730><c> fails</c><00:15:50.060><c> the</c>

00:15:50.830 --> 00:15:50.840 align:start position:0%
co-routine in this scope fails the
 

00:15:50.840 --> 00:15:53.050 align:start position:0%
co-routine in this scope fails the
entire<00:15:50.930><c> scope</c><00:15:51.410><c> fails</c><00:15:51.710><c> and</c><00:15:52.040><c> all</c><00:15:52.820><c> of</c><00:15:53.000><c> the</c>

00:15:53.050 --> 00:15:53.060 align:start position:0%
entire scope fails and all of the
 

00:15:53.060 --> 00:15:55.990 align:start position:0%
entire scope fails and all of the
remaining<00:15:53.330><c> co-routines</c><00:15:53.900><c> are</c><00:15:54.080><c> canceled</c><00:15:55.000><c> this</c>

00:15:55.990 --> 00:15:56.000 align:start position:0%
remaining co-routines are canceled this
 

00:15:56.000 --> 00:15:58.000 align:start position:0%
remaining co-routines are canceled this
function<00:15:56.390><c> returns</c><00:15:56.510><c> as</c><00:15:57.170><c> soon</c><00:15:57.590><c> as</c><00:15:57.740><c> it's</c><00:15:57.890><c> given</c>

00:15:58.000 --> 00:15:58.010 align:start position:0%
function returns as soon as it's given
 

00:15:58.010 --> 00:16:00.220 align:start position:0%
function returns as soon as it's given
block<00:15:58.370><c> and</c><00:15:58.670><c> all</c><00:15:59.210><c> of</c><00:15:59.330><c> the</c><00:15:59.420><c> child</c><00:15:59.690><c> care</c><00:15:59.900><c> routines</c>

00:16:00.220 --> 00:16:00.230 align:start position:0%
block and all of the child care routines
 

00:16:00.230 --> 00:16:03.820 align:start position:0%
block and all of the child care routines
are<00:16:00.650><c> both</c><00:16:01.130><c> complete</c><00:16:02.080><c> kuroh</c><00:16:03.080><c> teens</c><00:16:03.410><c> can</c>

00:16:03.820 --> 00:16:03.830 align:start position:0%
are both complete kuroh teens can
 

00:16:03.830 --> 00:16:05.800 align:start position:0%
are both complete kuroh teens can
certainly<00:16:04.220><c> make</c><00:16:04.400><c> developing</c><00:16:05.120><c> asynchronous</c>

00:16:05.800 --> 00:16:05.810 align:start position:0%
certainly make developing asynchronous
 

00:16:05.810 --> 00:16:10.600 align:start position:0%
certainly make developing asynchronous
code<00:16:06.260><c> a</c><00:16:06.530><c> lot</c><00:16:06.740><c> simpler</c><00:16:09.040><c> so</c><00:16:10.040><c> let's</c><00:16:10.220><c> start</c><00:16:10.490><c> by</c>

00:16:10.600 --> 00:16:10.610 align:start position:0%
code a lot simpler so let's start by
 

00:16:10.610 --> 00:16:12.370 align:start position:0%
code a lot simpler so let's start by
implementing<00:16:11.210><c> our</c><00:16:11.420><c> first</c><00:16:11.810><c> critical</c><00:16:12.050><c> user</c>

00:16:12.370 --> 00:16:12.380 align:start position:0%
implementing our first critical user
 

00:16:12.380 --> 00:16:16.540 align:start position:0%
implementing our first critical user
journey<00:16:13.630><c> just</c><00:16:14.630><c> to</c><00:16:14.750><c> recap</c><00:16:15.140><c> we</c><00:16:16.010><c> start</c><00:16:16.310><c> on</c><00:16:16.460><c> the</c>

00:16:16.540 --> 00:16:16.550 align:start position:0%
journey just to recap we start on the
 

00:16:16.550 --> 00:16:19.420 align:start position:0%
journey just to recap we start on the
home<00:16:16.700><c> screen</c><00:16:17.620><c> we</c><00:16:18.620><c> click</c><00:16:18.770><c> a</c><00:16:18.860><c> floating</c><00:16:19.310><c> action</c>

00:16:19.420 --> 00:16:19.430 align:start position:0%
home screen we click a floating action
 

00:16:19.430 --> 00:16:20.950 align:start position:0%
home screen we click a floating action
button<00:16:19.820><c> which</c><00:16:19.940><c> takes</c><00:16:20.210><c> us</c><00:16:20.420><c> to</c><00:16:20.540><c> the</c><00:16:20.630><c> detail</c>

00:16:20.950 --> 00:16:20.960 align:start position:0%
button which takes us to the detail
 

00:16:20.960 --> 00:16:25.860 align:start position:0%
button which takes us to the detail
screen<00:16:22.330><c> here</c><00:16:23.330><c> we</c><00:16:23.450><c> enter</c><00:16:23.630><c> text</c><00:16:24.170><c> for</c><00:16:24.650><c> a</c><00:16:24.680><c> new</c><00:16:24.920><c> task</c>

00:16:25.860 --> 00:16:25.870 align:start position:0%
screen here we enter text for a new task
 

00:16:25.870 --> 00:16:28.540 align:start position:0%
screen here we enter text for a new task
save<00:16:26.870><c> and</c><00:16:27.680><c> we're</c><00:16:27.830><c> back</c><00:16:27.950><c> to</c><00:16:28.070><c> the</c><00:16:28.160><c> home</c><00:16:28.310><c> screen</c>

00:16:28.540 --> 00:16:28.550 align:start position:0%
save and we're back to the home screen
 

00:16:28.550 --> 00:16:33.780 align:start position:0%
save and we're back to the home screen
where<00:16:29.240><c> we</c><00:16:29.270><c> can</c><00:16:29.360><c> see</c><00:16:29.510><c> our</c><00:16:29.990><c> newly</c><00:16:30.500><c> created</c><00:16:30.530><c> note</c>

00:16:33.780 --> 00:16:33.790 align:start position:0%
 
 

00:16:33.790 --> 00:16:36.100 align:start position:0%
 
we're<00:16:34.790><c> going</c><00:16:34.940><c> to</c><00:16:35.000><c> develop</c><00:16:35.180><c> our</c><00:16:35.480><c> application</c>

00:16:36.100 --> 00:16:36.110 align:start position:0%
we're going to develop our application
 

00:16:36.110 --> 00:16:38.710 align:start position:0%
we're going to develop our application
using<00:16:36.560><c> test-driven</c><00:16:36.920><c> development</c><00:16:37.160><c> and</c><00:16:37.820><c> this</c>

00:16:38.710 --> 00:16:38.720 align:start position:0%
using test-driven development and this
 

00:16:38.720 --> 00:16:40.540 align:start position:0%
using test-driven development and this
is<00:16:38.870><c> a</c><00:16:38.900><c> school</c><00:16:39.200><c> of</c><00:16:39.320><c> thought</c><00:16:39.560><c> where</c><00:16:40.190><c> we</c><00:16:40.310><c> first</c>

00:16:40.540 --> 00:16:40.550 align:start position:0%
is a school of thought where we first
 

00:16:40.550 --> 00:16:42.910 align:start position:0%
is a school of thought where we first
codify<00:16:41.510><c> the</c><00:16:41.570><c> specification</c><00:16:42.410><c> of</c><00:16:42.590><c> our</c>

00:16:42.910 --> 00:16:42.920 align:start position:0%
codify the specification of our
 

00:16:42.920 --> 00:16:45.400 align:start position:0%
codify the specification of our
application<00:16:43.520><c> in</c><00:16:43.700><c> tests</c><00:16:44.210><c> first</c><00:16:44.510><c> of</c><00:16:44.750><c> all</c><00:16:44.870><c> and</c>

00:16:45.400 --> 00:16:45.410 align:start position:0%
application in tests first of all and
 

00:16:45.410 --> 00:16:47.530 align:start position:0%
application in tests first of all and
only<00:16:46.100><c> then</c><00:16:46.430><c> do</c><00:16:46.670><c> we</c><00:16:46.700><c> write</c><00:16:46.940><c> the</c><00:16:47.120><c> production</c>

00:16:47.530 --> 00:16:47.540 align:start position:0%
only then do we write the production
 

00:16:47.540 --> 00:16:49.630 align:start position:0%
only then do we write the production
code<00:16:47.750><c> in</c><00:16:48.290><c> order</c><00:16:48.650><c> to</c><00:16:48.770><c> satisfy</c><00:16:48.920><c> that</c>

00:16:49.630 --> 00:16:49.640 align:start position:0%
code in order to satisfy that
 

00:16:49.640 --> 00:16:52.960 align:start position:0%
code in order to satisfy that
specification<00:16:51.400><c> we're</c><00:16:52.400><c> also</c><00:16:52.520><c> going</c><00:16:52.700><c> to</c><00:16:52.760><c> do</c><00:16:52.880><c> all</c>

00:16:52.960 --> 00:16:52.970 align:start position:0%
specification we're also going to do all
 

00:16:52.970 --> 00:16:55.030 align:start position:0%
specification we're also going to do all
this<00:16:53.090><c> top-down</c><00:16:53.830><c> starting</c><00:16:54.830><c> from</c><00:16:54.920><c> the</c>

00:16:55.030 --> 00:16:55.040 align:start position:0%
this top-down starting from the
 

00:16:55.040 --> 00:16:57.790 align:start position:0%
this top-down starting from the
end-to-end<00:16:55.310><c> test</c><00:16:55.730><c> and</c><00:16:56.320><c> in</c><00:16:57.320><c> breaking</c><00:16:57.530><c> this</c>

00:16:57.790 --> 00:16:57.800 align:start position:0%
end-to-end test and in breaking this
 

00:16:57.800 --> 00:17:00.220 align:start position:0%
end-to-end test and in breaking this
down<00:16:57.860><c> and</c><00:16:58.340><c> decomposing</c><00:16:59.210><c> further</c><00:16:59.480><c> and</c><00:16:59.780><c> further</c>

00:17:00.220 --> 00:17:00.230 align:start position:0%
down and decomposing further and further
 

00:17:00.230 --> 00:17:02.470 align:start position:0%
down and decomposing further and further
until<00:17:01.010><c> we</c><00:17:01.070><c> finally</c><00:17:01.550><c> reach</c><00:17:01.790><c> the</c><00:17:02.030><c> individual</c>

00:17:02.470 --> 00:17:02.480 align:start position:0%
until we finally reach the individual
 

00:17:02.480 --> 00:17:05.440 align:start position:0%
until we finally reach the individual
units<00:17:02.870><c> that</c><00:17:03.380><c> are</c><00:17:03.500><c> required</c><00:17:03.860><c> to</c><00:17:04.460><c> satisfy</c><00:17:04.640><c> the</c>

00:17:05.440 --> 00:17:05.450 align:start position:0%
units that are required to satisfy the
 

00:17:05.450 --> 00:17:09.520 align:start position:0%
units that are required to satisfy the
feature<00:17:05.690><c> were</c><00:17:05.900><c> building</c><00:17:07.960><c> so</c><00:17:08.960><c> let's</c><00:17:09.140><c> start</c><00:17:09.380><c> by</c>

00:17:09.520 --> 00:17:09.530 align:start position:0%
feature were building so let's start by
 

00:17:09.530 --> 00:17:12.700 align:start position:0%
feature were building so let's start by
writing<00:17:09.740><c> an</c><00:17:09.950><c> end-to-end</c><00:17:10.190><c> test</c><00:17:11.500><c> it's</c><00:17:12.500><c> going</c><00:17:12.650><c> to</c>

00:17:12.700 --> 00:17:12.710 align:start position:0%
writing an end-to-end test it's going to
 

00:17:12.710 --> 00:17:15.100 align:start position:0%
writing an end-to-end test it's going to
be<00:17:12.770><c> failing</c><00:17:13.010><c> first</c><00:17:13.460><c> but</c><00:17:14.390><c> we</c><00:17:14.480><c> know</c><00:17:14.690><c> that</c><00:17:14.990><c> by</c><00:17:15.080><c> the</c>

00:17:15.100 --> 00:17:15.110 align:start position:0%
be failing first but we know that by the
 

00:17:15.110 --> 00:17:17.230 align:start position:0%
be failing first but we know that by the
time<00:17:15.410><c> we</c><00:17:15.530><c> make</c><00:17:15.680><c> it</c><00:17:15.800><c> pass</c><00:17:16.010><c> our</c><00:17:16.340><c> feature</c><00:17:17.090><c> is</c>

00:17:17.230 --> 00:17:17.240 align:start position:0%
time we make it pass our feature is
 

00:17:17.240 --> 00:17:20.110 align:start position:0%
time we make it pass our feature is
complete<00:17:17.600><c> it's</c><00:17:18.500><c> a</c><00:17:18.590><c> good</c><00:17:18.770><c> signal</c><00:17:18.980><c> for</c><00:17:19.340><c> the</c><00:17:19.880><c> end</c>

00:17:20.110 --> 00:17:20.120 align:start position:0%
complete it's a good signal for the end
 

00:17:20.120 --> 00:17:23.410 align:start position:0%
complete it's a good signal for the end
state<00:17:21.280><c> let's</c><00:17:22.280><c> review</c><00:17:22.520><c> some</c><00:17:22.610><c> key</c><00:17:22.940><c> qualities</c><00:17:23.390><c> of</c>

00:17:23.410 --> 00:17:23.420 align:start position:0%
state let's review some key qualities of
 

00:17:23.420 --> 00:17:25.900 align:start position:0%
state let's review some key qualities of
end-to-end<00:17:23.750><c> tests</c><00:17:24.430><c> the</c><00:17:25.430><c> main</c><00:17:25.610><c> thing</c><00:17:25.790><c> we're</c>

00:17:25.900 --> 00:17:25.910 align:start position:0%
end-to-end tests the main thing we're
 

00:17:25.910 --> 00:17:27.820 align:start position:0%
end-to-end tests the main thing we're
looking<00:17:26.120><c> for</c><00:17:26.330><c> here</c><00:17:26.720><c> is</c><00:17:26.930><c> that</c><00:17:27.230><c> we've</c><00:17:27.800><c> got</c>

00:17:27.820 --> 00:17:27.830 align:start position:0%
looking for here is that we've got
 

00:17:27.830 --> 00:17:30.640 align:start position:0%
looking for here is that we've got
confidence<00:17:28.490><c> in</c><00:17:28.670><c> the</c><00:17:29.090><c> final</c><00:17:29.390><c> application</c><00:17:29.650><c> when</c>

00:17:30.640 --> 00:17:30.650 align:start position:0%
confidence in the final application when
 

00:17:30.650 --> 00:17:31.770 align:start position:0%
confidence in the final application when
it's<00:17:30.770><c> finished</c>

00:17:31.770 --> 00:17:31.780 align:start position:0%
it's finished
 

00:17:31.780 --> 00:17:35.230 align:start position:0%
it's finished
therefore<00:17:32.780><c> these</c><00:17:33.620><c> kinds</c><00:17:33.980><c> of</c><00:17:34.040><c> tests</c><00:17:34.460><c> should</c>

00:17:35.230 --> 00:17:35.240 align:start position:0%
therefore these kinds of tests should
 

00:17:35.240 --> 00:17:38.580 align:start position:0%
therefore these kinds of tests should
run<00:17:35.450><c> on</c><00:17:35.570><c> a</c><00:17:35.600><c> real</c><00:17:35.870><c> or</c><00:17:36.140><c> a</c><00:17:36.200><c> virtual</c><00:17:36.740><c> device</c>

00:17:38.580 --> 00:17:38.590 align:start position:0%
run on a real or a virtual device
 

00:17:38.590 --> 00:17:41.409 align:start position:0%
run on a real or a virtual device
and<00:17:39.590><c> to</c><00:17:39.679><c> make</c><00:17:39.799><c> sure</c><00:17:39.830><c> that</c><00:17:40.220><c> our</c><00:17:40.309><c> code</c><00:17:40.610><c> interacts</c>

00:17:41.409 --> 00:17:41.419 align:start position:0%
and to make sure that our code interacts
 

00:17:41.419 --> 00:17:43.240 align:start position:0%
and to make sure that our code interacts
with<00:17:41.870><c> the</c><00:17:41.960><c> Android</c><00:17:42.289><c> and</c><00:17:42.440><c> Fire</c><00:17:42.649><c> agreement</c><00:17:43.100><c> as</c>

00:17:43.240 --> 00:17:43.250 align:start position:0%
with the Android and Fire agreement as
 

00:17:43.250 --> 00:17:47.619 align:start position:0%
with the Android and Fire agreement as
expected<00:17:43.669><c> our</c><00:17:45.700><c> application</c><00:17:46.700><c> should</c><00:17:47.450><c> also</c>

00:17:47.619 --> 00:17:47.629 align:start position:0%
expected our application should also
 

00:17:47.629 --> 00:17:49.419 align:start position:0%
expected our application should also
look<00:17:47.899><c> as</c><00:17:48.049><c> close</c><00:17:48.289><c> to</c><00:17:48.470><c> the</c><00:17:48.559><c> final</c><00:17:48.889><c> application</c>

00:17:49.419 --> 00:17:49.429 align:start position:0%
look as close to the final application
 

00:17:49.429 --> 00:17:52.560 align:start position:0%
look as close to the final application
as<00:17:49.549><c> possible</c><00:17:50.000><c> that</c><00:17:50.330><c> will</c><00:17:50.419><c> go</c><00:17:50.539><c> into</c><00:17:50.659><c> ship</c><00:17:50.990><c> and</c>

00:17:52.560 --> 00:17:52.570 align:start position:0%
as possible that will go into ship and
 

00:17:52.570 --> 00:17:55.330 align:start position:0%
as possible that will go into ship and
we<00:17:53.570><c> should</c><00:17:53.750><c> test</c><00:17:53.990><c> it</c><00:17:54.169><c> in</c><00:17:54.350><c> the</c><00:17:54.830><c> very</c><00:17:55.039><c> same</c><00:17:55.279><c> way</c>

00:17:55.330 --> 00:17:55.340 align:start position:0%
we should test it in the very same way
 

00:17:55.340 --> 00:17:56.440 align:start position:0%
we should test it in the very same way
that<00:17:55.669><c> our</c><00:17:55.820><c> users</c><00:17:56.149><c> are</c><00:17:56.179><c> going</c><00:17:56.330><c> to</c><00:17:56.389><c> interact</c>

00:17:56.440 --> 00:17:56.450 align:start position:0%
that our users are going to interact
 

00:17:56.450 --> 00:17:59.080 align:start position:0%
that our users are going to interact
with<00:17:56.870><c> it</c><00:17:57.080><c> this</c><00:17:57.919><c> means</c><00:17:58.190><c> we're</c><00:17:58.399><c> doing</c><00:17:58.490><c> blackbox</c>

00:17:59.080 --> 00:17:59.090 align:start position:0%
with it this means we're doing blackbox
 

00:17:59.090 --> 00:18:02.289 align:start position:0%
with it this means we're doing blackbox
testing<00:17:59.240><c> and</c><00:18:00.340><c> here</c><00:18:01.340><c> we</c><00:18:01.700><c> don't</c><00:18:01.909><c> need</c><00:18:02.029><c> to</c><00:18:02.149><c> be</c>

00:18:02.289 --> 00:18:02.299 align:start position:0%
testing and here we don't need to be
 

00:18:02.299 --> 00:18:04.899 align:start position:0%
testing and here we don't need to be
exhaustive<00:18:03.080><c> with</c><00:18:03.230><c> all</c><00:18:03.350><c> the</c><00:18:03.440><c> tests</c><00:18:03.860><c> that's</c><00:18:04.700><c> the</c>

00:18:04.899 --> 00:18:04.909 align:start position:0%
exhaustive with all the tests that's the
 

00:18:04.909 --> 00:18:10.240 align:start position:0%
exhaustive with all the tests that's the
job<00:18:05.120><c> of</c><00:18:05.330><c> tests</c><00:18:05.750><c> at</c><00:18:05.899><c> other</c><00:18:06.080><c> layers</c><00:18:08.470><c> now</c><00:18:09.470><c> let's</c>

00:18:10.240 --> 00:18:10.250 align:start position:0%
job of tests at other layers now let's
 

00:18:10.250 --> 00:18:12.730 align:start position:0%
job of tests at other layers now let's
examine<00:18:10.399><c> the</c><00:18:10.789><c> scope</c><00:18:11.090><c> of</c><00:18:11.240><c> the</c><00:18:11.360><c> code</c><00:18:11.600><c> and</c><00:18:11.899><c> see</c>

00:18:12.730 --> 00:18:12.740 align:start position:0%
examine the scope of the code and see
 

00:18:12.740 --> 00:18:15.430 align:start position:0%
examine the scope of the code and see
what<00:18:12.769><c> we</c><00:18:13.039><c> know</c><00:18:13.159><c> exercise</c><00:18:13.639><c> in</c><00:18:13.820><c> our</c><00:18:13.909><c> test</c><00:18:14.440><c> it</c>

00:18:15.430 --> 00:18:15.440 align:start position:0%
what we know exercise in our test it
 

00:18:15.440 --> 00:18:18.570 align:start position:0%
what we know exercise in our test it
looks<00:18:15.740><c> like</c><00:18:15.950><c> for</c><00:18:16.610><c> our</c><00:18:16.639><c> our</c><00:18:16.850><c> first</c><00:18:17.299><c> test</c><00:18:17.539><c> Coast</c>

00:18:18.570 --> 00:18:18.580 align:start position:0%
looks like for our our first test Coast
 

00:18:18.580 --> 00:18:21.519 align:start position:0%
looks like for our our first test Coast
the<00:18:19.580><c> add/edit</c><00:18:20.120><c> task</c><00:18:20.360><c> fragment</c><00:18:20.870><c> screen</c><00:18:21.289><c> and</c>

00:18:21.519 --> 00:18:21.529 align:start position:0%
the add/edit task fragment screen and
 

00:18:21.529 --> 00:18:23.619 align:start position:0%
the add/edit task fragment screen and
the<00:18:21.889><c> tasks</c><00:18:22.309><c> fragment</c><00:18:22.759><c> screen</c><00:18:23.059><c> are</c><00:18:23.360><c> what's</c>

00:18:23.619 --> 00:18:23.629 align:start position:0%
the tasks fragment screen are what's
 

00:18:23.629 --> 00:18:25.419 align:start position:0%
the tasks fragment screen are what's
important<00:18:24.110><c> so</c><00:18:24.379><c> for</c><00:18:25.190><c> this</c><00:18:25.250><c> particular</c>

00:18:25.419 --> 00:18:25.429 align:start position:0%
important so for this particular
 

00:18:25.429 --> 00:18:27.610 align:start position:0%
important so for this particular
end-to-end<00:18:26.059><c> test</c><00:18:26.480><c> we're</c><00:18:27.320><c> just</c><00:18:27.470><c> going</c><00:18:27.590><c> to</c>

00:18:27.610 --> 00:18:27.620 align:start position:0%
end-to-end test we're just going to
 

00:18:27.620 --> 00:18:29.769 align:start position:0%
end-to-end test we're just going to
discard<00:18:27.980><c> ignore</c><00:18:28.669><c> task</c><00:18:29.149><c> details</c><00:18:29.539><c> for</c><00:18:29.720><c> the</c>

00:18:29.769 --> 00:18:29.779 align:start position:0%
discard ignore task details for the
 

00:18:29.779 --> 00:18:34.840 align:start position:0%
discard ignore task details for the
moment<00:18:32.860><c> we</c><00:18:33.860><c> can</c><00:18:33.889><c> start</c><00:18:34.250><c> on</c><00:18:34.370><c> the</c><00:18:34.460><c> home</c><00:18:34.610><c> screen</c>

00:18:34.840 --> 00:18:34.850 align:start position:0%
moment we can start on the home screen
 

00:18:34.850 --> 00:18:37.389 align:start position:0%
moment we can start on the home screen
by<00:18:35.210><c> using</c><00:18:35.899><c> activity</c><00:18:36.169><c> scenario</c><00:18:36.799><c> to</c><00:18:37.039><c> launch</c><00:18:37.220><c> the</c>

00:18:37.389 --> 00:18:37.399 align:start position:0%
by using activity scenario to launch the
 

00:18:37.399 --> 00:18:41.919 align:start position:0%
by using activity scenario to launch the
test<00:18:37.639><c> activity</c><00:18:38.240><c> class</c><00:18:40.389><c> then</c><00:18:41.389><c> we</c><00:18:41.570><c> can</c><00:18:41.720><c> click</c><00:18:41.870><c> on</c>

00:18:41.919 --> 00:18:41.929 align:start position:0%
test activity class then we can click on
 

00:18:41.929 --> 00:18:43.930 align:start position:0%
test activity class then we can click on
the<00:18:42.080><c> floating</c><00:18:42.289><c> action</c><00:18:42.500><c> button</c><00:18:43.009><c> which</c><00:18:43.730><c> should</c>

00:18:43.930 --> 00:18:43.940 align:start position:0%
the floating action button which should
 

00:18:43.940 --> 00:18:49.899 align:start position:0%
the floating action button which should
take<00:18:44.120><c> us</c><00:18:44.269><c> to</c><00:18:44.389><c> the</c><00:18:44.480><c> next</c><00:18:44.659><c> screen</c><00:18:46.389><c> and</c><00:18:48.730><c> here</c><00:18:49.730><c> we</c>

00:18:49.899 --> 00:18:49.909 align:start position:0%
take us to the next screen and here we
 

00:18:49.909 --> 00:18:52.690 align:start position:0%
take us to the next screen and here we
can<00:18:50.029><c> use</c><00:18:50.059><c> espresso</c><00:18:50.720><c> to</c><00:18:51.529><c> enter</c><00:18:51.769><c> text</c><00:18:51.980><c> into</c><00:18:52.429><c> the</c>

00:18:52.690 --> 00:18:52.700 align:start position:0%
can use espresso to enter text into the
 

00:18:52.700 --> 00:18:56.230 align:start position:0%
can use espresso to enter text into the
detail<00:18:53.029><c> screen</c><00:18:53.269><c> and</c><00:18:54.669><c> one</c><00:18:55.669><c> more</c><00:18:55.850><c> time</c><00:18:56.059><c> with</c>

00:18:56.230 --> 00:18:56.240 align:start position:0%
detail screen and one more time with
 

00:18:56.240 --> 00:18:58.480 align:start position:0%
detail screen and one more time with
espresso<00:18:56.720><c> to</c><00:18:56.779><c> click</c><00:18:57.049><c> the</c><00:18:57.169><c> button</c><00:18:57.460><c> which</c><00:18:58.460><c> is</c>

00:18:58.480 --> 00:18:58.490 align:start position:0%
espresso to click the button which is
 

00:18:58.490 --> 00:19:01.799 align:start position:0%
espresso to click the button which is
send<00:18:58.820><c> us</c><00:18:58.940><c> back</c><00:18:59.120><c> to</c><00:18:59.899><c> the</c><00:18:59.990><c> first</c><00:19:00.200><c> screen</c><00:19:00.320><c> and</c>

00:19:01.799 --> 00:19:01.809 align:start position:0%
send us back to the first screen and
 

00:19:01.809 --> 00:19:05.680 align:start position:0%
send us back to the first screen and
here<00:19:02.919><c> make</c><00:19:03.919><c> a</c><00:19:03.950><c> simple</c><00:19:04.309><c> assertion</c><00:19:04.580><c> to</c><00:19:05.419><c> check</c>

00:19:05.680 --> 00:19:05.690 align:start position:0%
here make a simple assertion to check
 

00:19:05.690 --> 00:19:08.529 align:start position:0%
here make a simple assertion to check
that<00:19:06.049><c> the</c><00:19:06.169><c> newly</c><00:19:06.350><c> added</c><00:19:06.559><c> task</c><00:19:07.149><c> appears</c><00:19:08.149><c> on</c><00:19:08.450><c> the</c>

00:19:08.529 --> 00:19:08.539 align:start position:0%
that the newly added task appears on the
 

00:19:08.539 --> 00:19:12.820 align:start position:0%
that the newly added task appears on the
home<00:19:08.659><c> screen</c><00:19:10.509><c> now</c><00:19:11.509><c> we're</c><00:19:12.289><c> not</c><00:19:12.409><c> using</c><00:19:12.590><c> any</c>

00:19:12.820 --> 00:19:12.830 align:start position:0%
home screen now we're not using any
 

00:19:12.830 --> 00:19:17.039 align:start position:0%
home screen now we're not using any
special<00:19:13.129><c> api's</c><00:19:13.669><c> or</c><00:19:14.120><c> any</c><00:19:14.690><c> hooks</c><00:19:14.990><c> or</c><00:19:15.769><c> backdoors</c>

00:19:17.039 --> 00:19:17.049 align:start position:0%
special api's or any hooks or backdoors
 

00:19:17.049 --> 00:19:20.340 align:start position:0%
special api's or any hooks or backdoors
this<00:19:18.049><c> is</c><00:19:18.200><c> known</c><00:19:18.379><c> as</c><00:19:18.409><c> blackbox</c><00:19:18.950><c> testing</c><00:19:19.269><c> and</c>

00:19:20.340 --> 00:19:20.350 align:start position:0%
this is known as blackbox testing and
 

00:19:20.350 --> 00:19:22.210 align:start position:0%
this is known as blackbox testing and
interacting<00:19:21.350><c> with</c><00:19:21.379><c> the</c><00:19:21.529><c> application</c><00:19:21.590><c> this</c>

00:19:22.210 --> 00:19:22.220 align:start position:0%
interacting with the application this
 

00:19:22.220 --> 00:19:25.570 align:start position:0%
interacting with the application this
way<00:19:22.570><c> gives</c><00:19:23.570><c> us</c><00:19:23.720><c> the</c><00:19:23.840><c> confidence</c><00:19:24.309><c> it'll</c><00:19:25.309><c> still</c>

00:19:25.570 --> 00:19:25.580 align:start position:0%
way gives us the confidence it'll still
 

00:19:25.580 --> 00:19:27.940 align:start position:0%
way gives us the confidence it'll still
work<00:19:25.820><c> if</c><00:19:26.059><c> a</c><00:19:26.179><c> real</c><00:19:26.360><c> user</c><00:19:26.629><c> were</c><00:19:27.379><c> to</c><00:19:27.500><c> step</c><00:19:27.740><c> through</c>

00:19:27.940 --> 00:19:27.950 align:start position:0%
work if a real user were to step through
 

00:19:27.950 --> 00:19:33.490 align:start position:0%
work if a real user were to step through
the<00:19:28.100><c> flow</c><00:19:28.309><c> in</c><00:19:28.549><c> exactly</c><00:19:28.909><c> the</c><00:19:29.059><c> same</c><00:19:29.269><c> way</c><00:19:29.480><c> so</c><00:19:32.500><c> now</c>

00:19:33.490 --> 00:19:33.500 align:start position:0%
the flow in exactly the same way so now
 

00:19:33.500 --> 00:19:35.860 align:start position:0%
the flow in exactly the same way so now
we<00:19:33.559><c> need</c><00:19:33.740><c> to</c><00:19:33.889><c> add</c><00:19:34.009><c> some</c><00:19:34.220><c> integration</c><00:19:34.759><c> tests</c><00:19:35.179><c> in</c>

00:19:35.860 --> 00:19:35.870 align:start position:0%
we need to add some integration tests in
 

00:19:35.870 --> 00:19:37.659 align:start position:0%
we need to add some integration tests in
order<00:19:36.110><c> to</c><00:19:36.230><c> bridge</c><00:19:36.500><c> the</c><00:19:36.679><c> gap</c><00:19:36.830><c> between</c><00:19:36.860><c> those</c>

00:19:37.659 --> 00:19:37.669 align:start position:0%
order to bridge the gap between those
 

00:19:37.669 --> 00:19:39.340 align:start position:0%
order to bridge the gap between those
large<00:19:38.059><c> end-to-end</c><00:19:38.480><c> tests</c><00:19:38.870><c> that</c><00:19:38.990><c> we've</c><00:19:39.110><c> just</c>

00:19:39.340 --> 00:19:39.350 align:start position:0%
large end-to-end tests that we've just
 

00:19:39.350 --> 00:19:41.639 align:start position:0%
large end-to-end tests that we've just
written<00:19:39.470><c> and</c><00:19:39.830><c> the</c><00:19:40.820><c> smaller</c><00:19:41.090><c> faster</c>

00:19:41.639 --> 00:19:41.649 align:start position:0%
written and the smaller faster
 

00:19:41.649 --> 00:19:43.659 align:start position:0%
written and the smaller faster
exhaustive<00:19:42.649><c> unit</c><00:19:42.919><c> tests</c><00:19:43.129><c> that</c><00:19:43.429><c> we'll</c><00:19:43.549><c> be</c>

00:19:43.659 --> 00:19:43.669 align:start position:0%
exhaustive unit tests that we'll be
 

00:19:43.669 --> 00:19:47.230 align:start position:0%
exhaustive unit tests that we'll be
adding<00:19:43.820><c> later</c><00:19:45.759><c> here</c><00:19:46.759><c> we're</c><00:19:46.879><c> looking</c><00:19:46.940><c> for</c>

00:19:47.230 --> 00:19:47.240 align:start position:0%
adding later here we're looking for
 

00:19:47.240 --> 00:19:48.940 align:start position:0%
adding later here we're looking for
something<00:19:47.629><c> that</c><00:19:47.869><c> gives</c><00:19:48.019><c> us</c><00:19:48.200><c> a</c><00:19:48.230><c> good</c><00:19:48.440><c> clue</c><00:19:48.710><c> that</c>

00:19:48.940 --> 00:19:48.950 align:start position:0%
something that gives us a good clue that
 

00:19:48.950 --> 00:19:51.080 align:start position:0%
something that gives us a good clue that
all<00:19:49.100><c> of</c><00:19:49.460><c> the</c><00:19:49.580><c> individual</c><00:19:50.029><c> units</c>

00:19:51.080 --> 00:19:51.090 align:start position:0%
all of the individual units
 

00:19:51.090 --> 00:19:53.210 align:start position:0%
all of the individual units
that<00:19:51.750><c> were</c><00:19:51.900><c> bringing</c><00:19:52.260><c> together</c><00:19:52.530><c> collaborate</c>

00:19:53.210 --> 00:19:53.220 align:start position:0%
that were bringing together collaborate
 

00:19:53.220 --> 00:19:55.160 align:start position:0%
that were bringing together collaborate
as<00:19:53.460><c> planned</c><00:19:53.700><c> that's</c><00:19:54.570><c> where</c><00:19:54.750><c> the</c><00:19:54.810><c> focus</c><00:19:54.990><c> should</c>

00:19:55.160 --> 00:19:55.170 align:start position:0%
as planned that's where the focus should
 

00:19:55.170 --> 00:19:58.460 align:start position:0%
as planned that's where the focus should
be<00:19:55.320><c> here</c><00:19:56.540><c> these</c><00:19:57.540><c> tests</c><00:19:57.840><c> should</c><00:19:57.930><c> be</c><00:19:57.990><c> relatively</c>

00:19:58.460 --> 00:19:58.470 align:start position:0%
be here these tests should be relatively
 

00:19:58.470 --> 00:20:01.100 align:start position:0%
be here these tests should be relatively
scalable<00:19:59.100><c> and</c><00:19:59.570><c> providing</c><00:20:00.570><c> enough</c><00:20:00.780><c> coverage</c>

00:20:01.100 --> 00:20:01.110 align:start position:0%
scalable and providing enough coverage
 

00:20:01.110 --> 00:20:03.350 align:start position:0%
scalable and providing enough coverage
at<00:20:01.290><c> this</c><00:20:01.410><c> level</c><00:20:01.770><c> means</c><00:20:02.460><c> we</c><00:20:02.610><c> need</c><00:20:02.760><c> to</c><00:20:02.820><c> lean</c><00:20:03.090><c> less</c>

00:20:03.350 --> 00:20:03.360 align:start position:0%
at this level means we need to lean less
 

00:20:03.360 --> 00:20:05.360 align:start position:0%
at this level means we need to lean less
and<00:20:03.570><c> less</c><00:20:03.720><c> on</c><00:20:03.990><c> those</c><00:20:04.260><c> large</c><00:20:04.560><c> heavyweight</c><00:20:05.160><c> and</c>

00:20:05.360 --> 00:20:05.370 align:start position:0%
and less on those large heavyweight and
 

00:20:05.370 --> 00:20:09.680 align:start position:0%
and less on those large heavyweight and
when<00:20:05.670><c> tests</c><00:20:07.790><c> here</c><00:20:08.790><c> it's</c><00:20:09.090><c> kind</c><00:20:09.480><c> of</c><00:20:09.510><c> less</c>

00:20:09.680 --> 00:20:09.690 align:start position:0%
when tests here it's kind of less
 

00:20:09.690 --> 00:20:11.480 align:start position:0%
when tests here it's kind of less
important<00:20:10.230><c> that</c><00:20:10.440><c> we're</c><00:20:10.620><c> using</c><00:20:10.860><c> all</c><00:20:11.220><c> real</c>

00:20:11.480 --> 00:20:11.490 align:start position:0%
important that we're using all real
 

00:20:11.490 --> 00:20:14.870 align:start position:0%
important that we're using all real
components<00:20:12.180><c> and</c><00:20:12.500><c> it's</c><00:20:13.500><c> okay</c><00:20:13.920><c> to</c><00:20:13.980><c> make</c><00:20:14.250><c> to</c><00:20:14.640><c> just</c>

00:20:14.870 --> 00:20:14.880 align:start position:0%
components and it's okay to make to just
 

00:20:14.880 --> 00:20:19.880 align:start position:0%
components and it's okay to make to just
judicious<00:20:15.510><c> use</c><00:20:15.690><c> of</c><00:20:16.370><c> testing</c><00:20:17.370><c> api's</c><00:20:18.710><c> but</c><00:20:19.710><c> what</c>

00:20:19.880 --> 00:20:19.890 align:start position:0%
judicious use of testing api's but what
 

00:20:19.890 --> 00:20:21.530 align:start position:0%
judicious use of testing api's but what
exactly<00:20:19.980><c> kind</c><00:20:20.610><c> of</c><00:20:20.700><c> test</c><00:20:20.940><c> should</c><00:20:21.270><c> we</c><00:20:21.420><c> be</c>

00:20:21.530 --> 00:20:21.540 align:start position:0%
exactly kind of test should we be
 

00:20:21.540 --> 00:20:26.300 align:start position:0%
exactly kind of test should we be
writing<00:20:21.570><c> at</c><00:20:22.020><c> this</c><00:20:22.140><c> level</c><00:20:24.800><c> when</c><00:20:25.800><c> we</c><00:20:25.920><c> introduce</c>

00:20:26.300 --> 00:20:26.310 align:start position:0%
writing at this level when we introduce
 

00:20:26.310 --> 00:20:28.640 align:start position:0%
writing at this level when we introduce
scope<00:20:26.580><c> earlier</c><00:20:26.940><c> in</c><00:20:27.690><c> a</c><00:20:27.810><c> session</c><00:20:27.990><c> we</c><00:20:28.200><c> define</c><00:20:28.500><c> it</c>

00:20:28.640 --> 00:20:28.650 align:start position:0%
scope earlier in a session we define it
 

00:20:28.650 --> 00:20:29.960 align:start position:0%
scope earlier in a session we define it
as<00:20:28.770><c> the</c><00:20:28.800><c> amount</c><00:20:29.130><c> of</c><00:20:29.250><c> real</c><00:20:29.460><c> code</c><00:20:29.760><c> that's</c>

00:20:29.960 --> 00:20:29.970 align:start position:0%
as the amount of real code that's
 

00:20:29.970 --> 00:20:32.750 align:start position:0%
as the amount of real code that's
exercised<00:20:30.480><c> by</c><00:20:30.690><c> the</c><00:20:30.720><c> test</c><00:20:31.550><c> and</c><00:20:32.550><c> in</c><00:20:32.670><c> the</c>

00:20:32.750 --> 00:20:32.760 align:start position:0%
exercised by the test and in the
 

00:20:32.760 --> 00:20:34.400 align:start position:0%
exercised by the test and in the
end-to-end<00:20:33.030><c> test</c><00:20:33.420><c> we've</c><00:20:33.540><c> already</c><00:20:33.660><c> seen</c><00:20:33.960><c> that</c>

00:20:34.400 --> 00:20:34.410 align:start position:0%
end-to-end test we've already seen that
 

00:20:34.410 --> 00:20:37.280 align:start position:0%
end-to-end test we've already seen that
scopes<00:20:34.770><c> pretty</c><00:20:35.100><c> large</c><00:20:35.780><c> with</c><00:20:36.780><c> integration</c>

00:20:37.280 --> 00:20:37.290 align:start position:0%
scopes pretty large with integration
 

00:20:37.290 --> 00:20:40.160 align:start position:0%
scopes pretty large with integration
tests<00:20:37.650><c> it's</c><00:20:37.800><c> a</c><00:20:37.860><c> little</c><00:20:38.100><c> more</c><00:20:38.220><c> nuanced</c><00:20:39.170><c> luckily</c>

00:20:40.160 --> 00:20:40.170 align:start position:0%
tests it's a little more nuanced luckily
 

00:20:40.170 --> 00:20:42.320 align:start position:0%
tests it's a little more nuanced luckily
our<00:20:40.400><c> architecture</c><00:20:41.400><c> and</c><00:20:41.640><c> code</c><00:20:41.940><c> organization</c>

00:20:42.320 --> 00:20:42.330 align:start position:0%
our architecture and code organization
 

00:20:42.330 --> 00:20:44.540 align:start position:0%
our architecture and code organization
leads<00:20:43.320><c> us</c><00:20:43.500><c> straight</c><00:20:43.890><c> to</c><00:20:44.100><c> some</c><00:20:44.340><c> good</c>

00:20:44.540 --> 00:20:44.550 align:start position:0%
leads us straight to some good
 

00:20:44.550 --> 00:20:47.420 align:start position:0%
leads us straight to some good
candidates<00:20:45.590><c> let's</c><00:20:46.590><c> approach</c><00:20:46.830><c> this</c><00:20:46.890><c> by</c>

00:20:47.420 --> 00:20:47.430 align:start position:0%
candidates let's approach this by
 

00:20:47.430 --> 00:20:50.900 align:start position:0%
candidates let's approach this by
decomposition<00:20:48.950><c> if</c><00:20:49.950><c> the</c><00:20:50.130><c> previous</c><00:20:50.520><c> end-to-end</c>

00:20:50.900 --> 00:20:50.910 align:start position:0%
decomposition if the previous end-to-end
 

00:20:50.910 --> 00:20:53.870 align:start position:0%
decomposition if the previous end-to-end
tests<00:20:51.390><c> just</c><00:20:52.050><c> focused</c><00:20:52.650><c> on</c><00:20:52.830><c> the</c><00:20:53.040><c> edited</c><00:20:53.610><c> task</c>

00:20:53.870 --> 00:20:53.880 align:start position:0%
tests just focused on the edited task
 

00:20:53.880 --> 00:20:56.450 align:start position:0%
tests just focused on the edited task
fragment<00:20:54.390><c> screen</c><00:20:54.780><c> and</c><00:20:55.020><c> the</c><00:20:55.680><c> tasks</c><00:20:56.040><c> fragment</c>

00:20:56.450 --> 00:20:56.460 align:start position:0%
fragment screen and the tasks fragment
 

00:20:56.460 --> 00:20:59.570 align:start position:0%
fragment screen and the tasks fragment
screen<00:20:57.020><c> we</c><00:20:58.020><c> already</c><00:20:58.320><c> know</c><00:20:58.500><c> that</c><00:20:59.040><c> this</c><00:20:59.250><c> next</c>

00:20:59.570 --> 00:20:59.580 align:start position:0%
screen we already know that this next
 

00:20:59.580 --> 00:21:01.460 align:start position:0%
screen we already know that this next
integration<00:21:00.300><c> test</c><00:21:00.570><c> has</c><00:21:00.750><c> got</c><00:21:00.930><c> to</c><00:21:01.020><c> be</c><00:21:01.110><c> a</c><00:21:01.140><c> smaller</c>

00:21:01.460 --> 00:21:01.470 align:start position:0%
integration test has got to be a smaller
 

00:21:01.470 --> 00:21:04.550 align:start position:0%
integration test has got to be a smaller
scope<00:21:01.830><c> than</c><00:21:02.040><c> that</c><00:21:02.220><c> and</c><00:21:03.320><c> looking</c><00:21:04.320><c> at</c><00:21:04.440><c> our</c>

00:21:04.550 --> 00:21:04.560 align:start position:0%
scope than that and looking at our
 

00:21:04.560 --> 00:21:07.160 align:start position:0%
scope than that and looking at our
architecture<00:21:05.250><c> diagram</c><00:21:05.730><c> I</c><00:21:05.970><c> can</c><00:21:06.600><c> already</c><00:21:06.870><c> see</c>

00:21:07.160 --> 00:21:07.170 align:start position:0%
architecture diagram I can already see
 

00:21:07.170 --> 00:21:11.960 align:start position:0%
architecture diagram I can already see
the<00:21:07.410><c> first</c><00:21:08.070><c> candidate</c><00:21:10.580><c> let's</c><00:21:11.580><c> start</c><00:21:11.850><c> by</c>

00:21:11.960 --> 00:21:11.970 align:start position:0%
the first candidate let's start by
 

00:21:11.970 --> 00:21:14.000 align:start position:0%
the first candidate let's start by
writing<00:21:12.120><c> an</c><00:21:12.540><c> integration</c><00:21:13.140><c> tests</c><00:21:13.500><c> for</c><00:21:13.950><c> the</c>

00:21:14.000 --> 00:21:14.010 align:start position:0%
writing an integration tests for the
 

00:21:14.010 --> 00:21:16.100 align:start position:0%
writing an integration tests for the
entire<00:21:14.280><c> tech</c><00:21:14.550><c> stack</c><00:21:14.850><c> that</c><00:21:15.450><c> supports</c><00:21:15.870><c> the</c><00:21:15.990><c> add</c>

00:21:16.100 --> 00:21:16.110 align:start position:0%
entire tech stack that supports the add
 

00:21:16.110 --> 00:21:20.330 align:start position:0%
entire tech stack that supports the add
new<00:21:16.290><c> task</c><00:21:16.590><c> stream</c><00:21:17.870><c> so</c><00:21:18.870><c> we</c><00:21:18.960><c> remove</c><00:21:19.320><c> the</c><00:21:20.070><c> task</c>

00:21:20.330 --> 00:21:20.340 align:start position:0%
new task stream so we remove the task
 

00:21:20.340 --> 00:21:23.360 align:start position:0%
new task stream so we remove the task
list<00:21:20.490><c> screen</c><00:21:20.760><c> from</c><00:21:20.970><c> the</c><00:21:21.060><c> equation</c><00:21:22.130><c> do</c><00:21:23.130><c> you</c><00:21:23.220><c> see</c>

00:21:23.360 --> 00:21:23.370 align:start position:0%
list screen from the equation do you see
 

00:21:23.370 --> 00:21:25.610 align:start position:0%
list screen from the equation do you see
any<00:21:23.490><c> other</c><00:21:23.690><c> candidates</c><00:21:24.690><c> here</c><00:21:25.170><c> where</c><00:21:25.380><c> we</c><00:21:25.470><c> might</c>

00:21:25.610 --> 00:21:25.620 align:start position:0%
any other candidates here where we might
 

00:21:25.620 --> 00:21:31.040 align:start position:0%
any other candidates here where we might
want<00:21:25.800><c> to</c><00:21:25.890><c> limit</c><00:21:26.040><c> their</c><00:21:26.280><c> scope</c><00:21:29.660><c> of</c><00:21:30.660><c> some</c><00:21:30.900><c> of</c><00:21:30.990><c> the</c>

00:21:31.040 --> 00:21:31.050 align:start position:0%
want to limit their scope of some of the
 

00:21:31.050 --> 00:21:32.690 align:start position:0%
want to limit their scope of some of the
objects<00:21:31.470><c> in</c><00:21:31.590><c> the</c><00:21:31.680><c> scope</c><00:21:31.890><c> of</c><00:21:31.980><c> your</c><00:21:32.040><c> test</c><00:21:32.340><c> might</c>

00:21:32.690 --> 00:21:32.700 align:start position:0%
objects in the scope of your test might
 

00:21:32.700 --> 00:21:34.900 align:start position:0%
objects in the scope of your test might
have<00:21:32.940><c> some</c><00:21:33.120><c> undesirable</c><00:21:33.470><c> characteristics</c>

00:21:34.900 --> 00:21:34.910 align:start position:0%
have some undesirable characteristics
 

00:21:34.910 --> 00:21:38.660 align:start position:0%
have some undesirable characteristics
perhaps<00:21:35.910><c> one</c><00:21:36.120><c> of</c><00:21:36.150><c> them</c><00:21:36.330><c> is</c><00:21:36.390><c> too</c><00:21:36.600><c> slow</c><00:21:37.400><c> maybe</c><00:21:38.400><c> it</c>

00:21:38.660 --> 00:21:38.670 align:start position:0%
perhaps one of them is too slow maybe it
 

00:21:38.670 --> 00:21:42.260 align:start position:0%
perhaps one of them is too slow maybe it
reads<00:21:38.910><c> a</c><00:21:39.090><c> large</c><00:21:39.300><c> file</c><00:21:39.600><c> at</c><00:21:39.780><c> startup</c><00:21:41.270><c> perhaps</c>

00:21:42.260 --> 00:21:42.270 align:start position:0%
reads a large file at startup perhaps
 

00:21:42.270 --> 00:21:43.520 align:start position:0%
reads a large file at startup perhaps
another<00:21:42.600><c> is</c><00:21:42.750><c> a</c><00:21:42.780><c> really</c><00:21:43.110><c> heavyweight</c>

00:21:43.520 --> 00:21:43.530 align:start position:0%
another is a really heavyweight
 

00:21:43.530 --> 00:21:45.200 align:start position:0%
another is a really heavyweight
dependency<00:21:44.100><c> that</c><00:21:44.310><c> takes</c><00:21:44.490><c> a</c><00:21:44.640><c> long</c><00:21:44.760><c> time</c><00:21:44.820><c> to</c>

00:21:45.200 --> 00:21:45.210 align:start position:0%
dependency that takes a long time to
 

00:21:45.210 --> 00:21:48.830 align:start position:0%
dependency that takes a long time to
build<00:21:46.760><c> perhaps</c><00:21:47.760><c> it</c><00:21:48.030><c> makes</c><00:21:48.240><c> an</c><00:21:48.420><c> arbitrary</c>

00:21:48.830 --> 00:21:48.840 align:start position:0%
build perhaps it makes an arbitrary
 

00:21:48.840 --> 00:21:51.140 align:start position:0%
build perhaps it makes an arbitrary
network<00:21:49.110><c> connections</c><00:21:49.730><c> causing</c><00:21:50.730><c> our</c><00:21:50.820><c> test</c><00:21:51.060><c> to</c>

00:21:51.140 --> 00:21:51.150 align:start position:0%
network connections causing our test to
 

00:21:51.150 --> 00:21:55.580 align:start position:0%
network connections causing our test to
be<00:21:51.240><c> flaky</c><00:21:51.660><c> and</c><00:21:53.480><c> some</c><00:21:54.480><c> dependencies</c><00:21:55.110><c> they</c><00:21:55.410><c> just</c>

00:21:55.580 --> 00:21:55.590 align:start position:0%
be flaky and some dependencies they just
 

00:21:55.590 --> 00:21:57.530 align:start position:0%
be flaky and some dependencies they just
can't<00:21:55.800><c> be</c><00:21:55.920><c> controlled</c><00:21:56.370><c> in</c><00:21:56.550><c> the</c><00:21:56.640><c> way</c><00:21:56.760><c> that</c><00:21:57.390><c> we</c>

00:21:57.530 --> 00:21:57.540 align:start position:0%
can't be controlled in the way that we
 

00:21:57.540 --> 00:22:00.769 align:start position:0%
can't be controlled in the way that we
need<00:21:57.750><c> to</c><00:21:57.990><c> simulate</c><00:21:58.230><c> within</c><00:21:58.890><c> our</c><00:21:59.010><c> tests</c>

00:22:00.769 --> 00:22:00.779 align:start position:0%
need to simulate within our tests
 

00:22:00.779 --> 00:22:04.049 align:start position:0%
need to simulate within our tests
in<00:22:01.779><c> such</c><00:22:02.019><c> cases</c><00:22:02.339><c> you</c><00:22:03.339><c> may</c><00:22:03.489><c> want</c><00:22:03.669><c> to</c><00:22:03.729><c> consider</c>

00:22:04.049 --> 00:22:04.059 align:start position:0%
in such cases you may want to consider
 

00:22:04.059 --> 00:22:06.449 align:start position:0%
in such cases you may want to consider
replacing<00:22:04.509><c> that</c><00:22:04.869><c> original</c><00:22:05.320><c> dependency</c><00:22:05.859><c> with</c>

00:22:06.449 --> 00:22:06.459 align:start position:0%
replacing that original dependency with
 

00:22:06.459 --> 00:22:09.509 align:start position:0%
replacing that original dependency with
a<00:22:06.489><c> test</c><00:22:06.789><c> double</c><00:22:07.589><c> test</c><00:22:08.589><c> doubles</c><00:22:08.919><c> our</c><00:22:09.099><c> standings</c>

00:22:09.509 --> 00:22:09.519 align:start position:0%
a test double test doubles our standings
 

00:22:09.519 --> 00:22:12.449 align:start position:0%
a test double test doubles our standings
for<00:22:09.759><c> the</c><00:22:09.820><c> real</c><00:22:10.029><c> objects</c><00:22:11.190><c> there</c><00:22:12.190><c> are</c><00:22:12.249><c> several</c>

00:22:12.449 --> 00:22:12.459 align:start position:0%
for the real objects there are several
 

00:22:12.459 --> 00:22:16.469 align:start position:0%
for the real objects there are several
categories<00:22:12.759><c> of</c><00:22:13.179><c> test</c><00:22:13.419><c> doubles</c><00:22:15.089><c> each</c><00:22:16.089><c> of</c><00:22:16.359><c> them</c>

00:22:16.469 --> 00:22:16.479 align:start position:0%
categories of test doubles each of them
 

00:22:16.479 --> 00:22:20.999 align:start position:0%
categories of test doubles each of them
range<00:22:16.690><c> in</c><00:22:16.899><c> fidelity</c><00:22:18.359><c> dummies</c><00:22:19.739><c> these</c><00:22:20.739><c> are</c><00:22:20.889><c> just</c>

00:22:20.999 --> 00:22:21.009 align:start position:0%
range in fidelity dummies these are just
 

00:22:21.009 --> 00:22:23.219 align:start position:0%
range in fidelity dummies these are just
intended<00:22:21.489><c> for</c><00:22:21.700><c> stand-in</c><00:22:22.149><c> for</c><00:22:22.389><c> the</c><00:22:23.080><c> real</c>

00:22:23.219 --> 00:22:23.229 align:start position:0%
intended for stand-in for the real
 

00:22:23.229 --> 00:22:26.570 align:start position:0%
intended for stand-in for the real
behavior<00:22:23.969><c> just</c><00:22:24.969><c> to</c><00:22:25.059><c> satisfy</c><00:22:25.239><c> dependencies</c>

00:22:26.570 --> 00:22:26.580 align:start position:0%
behavior just to satisfy dependencies
 

00:22:26.580 --> 00:22:30.149 align:start position:0%
behavior just to satisfy dependencies
then<00:22:27.580><c> stubs</c><00:22:27.999><c> which</c><00:22:28.989><c> aim</c><00:22:29.169><c> to</c><00:22:29.349><c> offer</c><00:22:29.379><c> one-off</c>

00:22:30.149 --> 00:22:30.159 align:start position:0%
then stubs which aim to offer one-off
 

00:22:30.159 --> 00:22:32.279 align:start position:0%
then stubs which aim to offer one-off
specific<00:22:30.669><c> behavior</c><00:22:31.149><c> that</c><00:22:31.779><c> allow</c><00:22:31.959><c> you</c><00:22:32.019><c> to</c>

00:22:32.279 --> 00:22:32.289 align:start position:0%
specific behavior that allow you to
 

00:22:32.289 --> 00:22:34.609 align:start position:0%
specific behavior that allow you to
configure<00:22:32.619><c> it</c><00:22:32.950><c> for</c><00:22:33.099><c> the</c><00:22:33.369><c> needs</c><00:22:33.549><c> of</c><00:22:33.639><c> your</c><00:22:33.789><c> test</c>

00:22:34.609 --> 00:22:34.619 align:start position:0%
configure it for the needs of your test
 

00:22:34.619 --> 00:22:37.019 align:start position:0%
configure it for the needs of your test
either<00:22:35.619><c> these</c><00:22:36.009><c> could</c><00:22:36.219><c> be</c><00:22:36.309><c> hand</c><00:22:36.519><c> rolled</c><00:22:36.789><c> or</c>

00:22:37.019 --> 00:22:37.029 align:start position:0%
either these could be hand rolled or
 

00:22:37.029 --> 00:22:39.149 align:start position:0%
either these could be hand rolled or
they<00:22:37.629><c> could</c><00:22:37.809><c> be</c><00:22:37.839><c> provided</c><00:22:38.349><c> by</c><00:22:38.559><c> your</c><00:22:38.589><c> mocking</c>

00:22:39.149 --> 00:22:39.159 align:start position:0%
they could be provided by your mocking
 

00:22:39.159 --> 00:22:43.739 align:start position:0%
they could be provided by your mocking
libraries<00:22:39.549><c> such</c><00:22:39.759><c> as</c><00:22:39.789><c> mojito</c><00:22:41.940><c> or</c><00:22:42.940><c> consider</c>

00:22:43.739 --> 00:22:43.749 align:start position:0%
libraries such as mojito or consider
 

00:22:43.749 --> 00:22:45.719 align:start position:0%
libraries such as mojito or consider
fakes<00:22:44.049><c> which</c><00:22:44.829><c> aim</c><00:22:45.009><c> to</c><00:22:45.039><c> be</c><00:22:45.219><c> a</c><00:22:45.249><c> more</c><00:22:45.489><c> accurate</c>

00:22:45.719 --> 00:22:45.729 align:start position:0%
fakes which aim to be a more accurate
 

00:22:45.729 --> 00:22:47.819 align:start position:0%
fakes which aim to be a more accurate
yet<00:22:46.450><c> lightweight</c><00:22:46.690><c> substitute</c><00:22:47.469><c> for</c><00:22:47.709><c> the</c><00:22:47.799><c> real</c>

00:22:47.819 --> 00:22:47.829 align:start position:0%
yet lightweight substitute for the real
 

00:22:47.829 --> 00:22:51.449 align:start position:0%
yet lightweight substitute for the real
thing<00:22:48.009><c> and</c><00:22:49.379><c> you</c><00:22:50.379><c> may</c><00:22:50.499><c> be</c><00:22:50.559><c> surprised</c><00:22:51.039><c> to</c><00:22:51.190><c> still</c>

00:22:51.449 --> 00:22:51.459 align:start position:0%
thing and you may be surprised to still
 

00:22:51.459 --> 00:22:54.899 align:start position:0%
thing and you may be surprised to still
see<00:22:51.669><c> real</c><00:22:51.940><c> objects</c><00:22:52.359><c> up</c><00:22:52.509><c> here</c><00:22:53.909><c> sometimes</c>

00:22:54.899 --> 00:22:54.909 align:start position:0%
see real objects up here sometimes
 

00:22:54.909 --> 00:22:56.579 align:start position:0%
see real objects up here sometimes
though<00:22:55.119><c> it</c><00:22:55.329><c> makes</c><00:22:55.629><c> sense</c><00:22:55.869><c> to</c><00:22:56.169><c> use</c><00:22:56.349><c> real</c>

00:22:56.579 --> 00:22:56.589 align:start position:0%
though it makes sense to use real
 

00:22:56.589 --> 00:22:59.310 align:start position:0%
though it makes sense to use real
objects<00:22:57.009><c> in</c><00:22:57.159><c> your</c><00:22:57.279><c> tests</c><00:22:57.669><c> if</c><00:22:58.629><c> it</c><00:22:58.809><c> avoids</c><00:22:59.049><c> any</c>

00:22:59.310 --> 00:22:59.320 align:start position:0%
objects in your tests if it avoids any
 

00:22:59.320 --> 00:23:01.019 align:start position:0%
objects in your tests if it avoids any
of<00:22:59.469><c> those</c><00:22:59.559><c> criteria</c><00:22:59.859><c> that</c><00:23:00.549><c> we</c><00:23:00.639><c> consider</c>

00:23:01.019 --> 00:23:01.029 align:start position:0%
of those criteria that we consider
 

00:23:01.029 --> 00:23:03.810 align:start position:0%
of those criteria that we consider
before<00:23:01.239><c> and</c><00:23:01.979><c> where</c><00:23:02.979><c> it</c><00:23:03.099><c> makes</c><00:23:03.249><c> the</c><00:23:03.429><c> test</c><00:23:03.609><c> more</c>

00:23:03.810 --> 00:23:03.820 align:start position:0%
before and where it makes the test more
 

00:23:03.820 --> 00:23:06.859 align:start position:0%
before and where it makes the test more
readable<00:23:04.149><c> and</c><00:23:04.479><c> robust</c><00:23:04.989><c> over</c><00:23:05.589><c> the</c><00:23:05.679><c> alternative</c>

00:23:06.859 --> 00:23:06.869 align:start position:0%
readable and robust over the alternative
 

00:23:06.869 --> 00:23:09.509 align:start position:0%
readable and robust over the alternative
value<00:23:07.869><c> objects</c><00:23:08.289><c> are</c><00:23:08.499><c> just</c><00:23:08.529><c> one</c><00:23:08.799><c> example</c><00:23:08.919><c> of</c>

00:23:09.509 --> 00:23:09.519 align:start position:0%
value objects are just one example of
 

00:23:09.519 --> 00:23:11.669 align:start position:0%
value objects are just one example of
where<00:23:09.789><c> you</c><00:23:09.820><c> should</c><00:23:09.909><c> always</c><00:23:10.329><c> prefer</c><00:23:10.779><c> using</c><00:23:11.619><c> a</c>

00:23:11.669 --> 00:23:11.679 align:start position:0%
where you should always prefer using a
 

00:23:11.679 --> 00:23:18.329 align:start position:0%
where you should always prefer using a
real<00:23:11.859><c> object</c><00:23:15.599><c> taking</c><00:23:16.599><c> a</c><00:23:16.659><c> closer</c><00:23:16.929><c> look</c><00:23:17.339><c> then</c>

00:23:18.329 --> 00:23:18.339 align:start position:0%
real object taking a closer look then
 

00:23:18.339 --> 00:23:20.310 align:start position:0%
real object taking a closer look then
now<00:23:18.459><c> some</c><00:23:18.669><c> candidates</c><00:23:19.089><c> where</c><00:23:19.389><c> we</c><00:23:19.509><c> might</c><00:23:19.659><c> want</c>

00:23:20.310 --> 00:23:20.320 align:start position:0%
now some candidates where we might want
 

00:23:20.320 --> 00:23:23.029 align:start position:0%
now some candidates where we might want
to<00:23:20.440><c> start</c><00:23:20.589><c> increasing</c><00:23:21.209><c> removing</c><00:23:22.209><c> the</c><00:23:22.329><c> scope</c>

00:23:23.029 --> 00:23:23.039 align:start position:0%
to start increasing removing the scope
 

00:23:23.039 --> 00:23:25.379 align:start position:0%
to start increasing removing the scope
we<00:23:24.039><c> could</c><00:23:24.190><c> drive</c><00:23:24.369><c> our</c><00:23:24.549><c> tests</c><00:23:24.820><c> through</c><00:23:25.089><c> task</c>

00:23:25.379 --> 00:23:25.389 align:start position:0%
we could drive our tests through task
 

00:23:25.389 --> 00:23:28.379 align:start position:0%
we could drive our tests through task
activity<00:23:25.899><c> but</c><00:23:26.889><c> this</c><00:23:27.639><c> is</c><00:23:27.820><c> concerned</c><00:23:28.179><c> with</c><00:23:28.329><c> the</c>

00:23:28.379 --> 00:23:28.389 align:start position:0%
activity but this is concerned with the
 

00:23:28.389 --> 00:23:30.479 align:start position:0%
activity but this is concerned with the
navigation<00:23:28.929><c> between</c><00:23:29.049><c> screens</c><00:23:29.679><c> and</c><00:23:29.950><c> we</c><00:23:30.339><c> don't</c>

00:23:30.479 --> 00:23:30.489 align:start position:0%
navigation between screens and we don't
 

00:23:30.489 --> 00:23:32.519 align:start position:0%
navigation between screens and we don't
need<00:23:30.579><c> to</c><00:23:30.639><c> test</c><00:23:30.940><c> this</c><00:23:31.119><c> at</c><00:23:31.479><c> this</c><00:23:31.690><c> level</c><00:23:31.899><c> that's</c>

00:23:32.519 --> 00:23:32.529 align:start position:0%
need to test this at this level that's
 

00:23:32.529 --> 00:23:35.430 align:start position:0%
need to test this at this level that's
more<00:23:32.799><c> of</c><00:23:32.889><c> an</c><00:23:32.979><c> end-to-end</c><00:23:33.279><c> test</c><00:23:34.139><c> so</c><00:23:35.139><c> instead</c>

00:23:35.430 --> 00:23:35.440 align:start position:0%
more of an end-to-end test so instead
 

00:23:35.440 --> 00:23:37.799 align:start position:0%
more of an end-to-end test so instead
we're<00:23:36.369><c> gonna</c><00:23:36.489><c> reach</c><00:23:36.729><c> for</c><00:23:36.940><c> fragment</c><00:23:37.359><c> scenario</c>

00:23:37.799 --> 00:23:37.809 align:start position:0%
we're gonna reach for fragment scenario
 

00:23:37.809 --> 00:23:40.259 align:start position:0%
we're gonna reach for fragment scenario
and<00:23:38.079><c> use</c><00:23:38.950><c> this</c><00:23:39.070><c> press</c><00:23:39.309><c> o</c><00:23:39.459><c> to</c><00:23:39.489><c> test</c><00:23:39.879><c> the</c><00:23:40.149><c> UI</c>

00:23:40.259 --> 00:23:40.269 align:start position:0%
and use this press o to test the UI
 

00:23:40.269 --> 00:23:43.379 align:start position:0%
and use this press o to test the UI
directly<00:23:41.669><c> we're</c><00:23:42.669><c> going</c><00:23:42.820><c> to</c><00:23:42.879><c> need</c><00:23:42.999><c> to</c><00:23:43.149><c> switch</c>

00:23:43.379 --> 00:23:43.389 align:start position:0%
directly we're going to need to switch
 

00:23:43.389 --> 00:23:45.359 align:start position:0%
directly we're going to need to switch
in<00:23:43.539><c> a</c><00:23:43.629><c> test</c><00:23:44.139><c> double</c><00:23:44.440><c> for</c><00:23:44.769><c> our</c><00:23:44.829><c> navigation</c>

00:23:45.359 --> 00:23:45.369 align:start position:0%
in a test double for our navigation
 

00:23:45.369 --> 00:23:49.619 align:start position:0%
in a test double for our navigation
controller<00:23:45.789><c> however</c><00:23:46.269><c> and</c><00:23:48.149><c> we</c><00:23:49.149><c> can</c><00:23:49.299><c> use</c><00:23:49.419><c> this</c>

00:23:49.619 --> 00:23:49.629 align:start position:0%
controller however and we can use this
 

00:23:49.629 --> 00:23:52.049 align:start position:0%
controller however and we can use this
to<00:23:49.869><c> verify</c><00:23:50.289><c> that</c><00:23:50.769><c> our</c><00:23:50.889><c> navigation</c><00:23:51.459><c> is</c><00:23:51.729><c> working</c>

00:23:52.049 --> 00:23:52.059 align:start position:0%
to verify that our navigation is working
 

00:23:52.059 --> 00:23:54.169 align:start position:0%
to verify that our navigation is working
as<00:23:52.149><c> expected</c>

00:23:54.169 --> 00:23:54.179 align:start position:0%
as expected
 

00:23:54.179 --> 00:23:57.359 align:start position:0%
as expected
tasks<00:23:55.179><c> repository</c><00:23:55.869><c> it</c><00:23:56.109><c> presents</c><00:23:56.589><c> a</c><00:23:56.709><c> clear</c><00:23:56.950><c> and</c>

00:23:57.359 --> 00:23:57.369 align:start position:0%
tasks repository it presents a clear and
 

00:23:57.369 --> 00:24:00.060 align:start position:0%
tasks repository it presents a clear and
well-defined<00:23:57.639><c> API</c><00:23:58.320><c> to</c><00:23:59.320><c> all</c><00:23:59.379><c> the</c><00:23:59.499><c> layers</c><00:23:59.679><c> above</c>

00:24:00.060 --> 00:24:00.070 align:start position:0%
well-defined API to all the layers above
 

00:24:00.070 --> 00:24:02.969 align:start position:0%
well-defined API to all the layers above
so<00:24:00.940><c> it's</c><00:24:01.029><c> good</c><00:24:01.179><c> practice</c><00:24:01.329><c> to</c><00:24:01.839><c> make</c><00:24:02.559><c> use</c><00:24:02.950><c> of</c>

00:24:02.969 --> 00:24:02.979 align:start position:0%
so it's good practice to make use of
 

00:24:02.979 --> 00:24:05.729 align:start position:0%
so it's good practice to make use of
this<00:24:03.190><c> API</c><00:24:03.519><c> from</c><00:24:03.759><c> tests</c><00:24:04.209><c> and</c><00:24:04.389><c> to</c><00:24:05.169><c> use</c><00:24:05.349><c> that</c><00:24:05.379><c> to</c>

00:24:05.729 --> 00:24:05.739 align:start position:0%
this API from tests and to use that to
 

00:24:05.739 --> 00:24:08.339 align:start position:0%
this API from tests and to use that to
check<00:24:05.979><c> to</c><00:24:06.369><c> see</c><00:24:06.399><c> if</c><00:24:06.579><c> our</c><00:24:06.700><c> tests</c><00:24:06.969><c> had</c><00:24:07.929><c> saved</c><00:24:08.200><c> the</c>

00:24:08.339 --> 00:24:08.349 align:start position:0%
check to see if our tests had saved the
 

00:24:08.349 --> 00:24:12.479 align:start position:0%
check to see if our tests had saved the
task<00:24:08.619><c> correctly</c><00:24:10.079><c> but</c><00:24:11.079><c> look</c><00:24:11.429><c> including</c><00:24:12.429><c> a</c>

00:24:12.479 --> 00:24:12.489 align:start position:0%
task correctly but look including a
 

00:24:12.489 --> 00:24:13.330 align:start position:0%
task correctly but look including a
remote<00:24:12.700><c> data</c>

00:24:13.330 --> 00:24:13.340 align:start position:0%
remote data
 

00:24:13.340 --> 00:24:14.950 align:start position:0%
remote data
which<00:24:13.730><c> connects</c><00:24:14.030><c> to</c><00:24:14.120><c> an</c><00:24:14.240><c> external</c><00:24:14.720><c> server</c>

00:24:14.950 --> 00:24:14.960 align:start position:0%
which connects to an external server
 

00:24:14.960 --> 00:24:16.960 align:start position:0%
which connects to an external server
that's<00:24:15.740><c> gonna</c><00:24:15.890><c> make</c><00:24:16.100><c> our</c><00:24:16.190><c> tests</c><00:24:16.430><c> slow</c><00:24:16.700><c> and</c>

00:24:16.960 --> 00:24:16.970 align:start position:0%
that's gonna make our tests slow and
 

00:24:16.970 --> 00:24:20.170 align:start position:0%
that's gonna make our tests slow and
flaky<00:24:17.720><c> so</c><00:24:18.530><c> let's</c><00:24:18.950><c> switch</c><00:24:19.040><c> that</c><00:24:19.310><c> out</c><00:24:19.370><c> also</c><00:24:19.790><c> for</c>

00:24:20.170 --> 00:24:20.180 align:start position:0%
flaky so let's switch that out also for
 

00:24:20.180 --> 00:24:26.500 align:start position:0%
flaky so let's switch that out also for
a<00:24:20.240><c> test</c><00:24:20.480><c> double</c><00:24:24.550><c> so</c><00:24:25.550><c> first</c><00:24:25.850><c> we're</c><00:24:26.360><c> using</c>

00:24:26.500 --> 00:24:26.510 align:start position:0%
a test double so first we're using
 

00:24:26.510 --> 00:24:30.960 align:start position:0%
a test double so first we're using
fragment<00:24:27.050><c> scenario</c><00:24:27.500><c> to</c><00:24:28.280><c> launch</c><00:24:28.460><c> our</c><00:24:28.700><c> fragment</c>

00:24:30.960 --> 00:24:30.970 align:start position:0%
fragment scenario to launch our fragment
 

00:24:30.970 --> 00:24:33.220 align:start position:0%
fragment scenario to launch our fragment
and<00:24:31.970><c> we</c><00:24:32.090><c> need</c><00:24:32.210><c> to</c><00:24:32.300><c> verify</c><00:24:32.480><c> that</c><00:24:32.750><c> our</c><00:24:32.990><c> floating</c>

00:24:33.220 --> 00:24:33.230 align:start position:0%
and we need to verify that our floating
 

00:24:33.230 --> 00:24:34.990 align:start position:0%
and we need to verify that our floating
action<00:24:33.470><c> button</c><00:24:33.980><c> sends</c><00:24:34.550><c> us</c><00:24:34.640><c> to</c><00:24:34.790><c> the</c><00:24:34.850><c> right</c>

00:24:34.990 --> 00:24:35.000 align:start position:0%
action button sends us to the right
 

00:24:35.000 --> 00:24:37.720 align:start position:0%
action button sends us to the right
screen<00:24:35.420><c> and</c><00:24:35.780><c> the</c><00:24:36.770><c> navigation</c><00:24:37.310><c> controller</c>

00:24:37.720 --> 00:24:37.730 align:start position:0%
screen and the navigation controller
 

00:24:37.730 --> 00:24:40.930 align:start position:0%
screen and the navigation controller
handles<00:24:38.660><c> this</c><00:24:38.870><c> kind</c><00:24:39.170><c> of</c><00:24:39.260><c> thing</c><00:24:39.820><c> we</c><00:24:40.820><c> don't</c>

00:24:40.930 --> 00:24:40.940 align:start position:0%
handles this kind of thing we don't
 

00:24:40.940 --> 00:24:42.490 align:start position:0%
handles this kind of thing we don't
actually<00:24:41.150><c> need</c><00:24:41.390><c> to</c><00:24:41.450><c> go</c><00:24:41.690><c> to</c><00:24:41.750><c> that</c><00:24:41.960><c> new</c><00:24:42.140><c> screen</c>

00:24:42.490 --> 00:24:42.500 align:start position:0%
actually need to go to that new screen
 

00:24:42.500 --> 00:24:45.190 align:start position:0%
actually need to go to that new screen
for<00:24:42.980><c> this</c><00:24:43.070><c> kind</c><00:24:43.310><c> of</c><00:24:43.430><c> test</c><00:24:43.750><c> we</c><00:24:44.750><c> just</c><00:24:44.930><c> need</c><00:24:45.080><c> to</c>

00:24:45.190 --> 00:24:45.200 align:start position:0%
for this kind of test we just need to
 

00:24:45.200 --> 00:24:48.760 align:start position:0%
for this kind of test we just need to
record<00:24:45.530><c> that</c><00:24:45.770><c> we</c><00:24:45.890><c> went</c><00:24:46.070><c> there</c><00:24:46.900><c> so</c><00:24:47.900><c> we</c><00:24:48.440><c> can</c><00:24:48.560><c> swap</c>

00:24:48.760 --> 00:24:48.770 align:start position:0%
record that we went there so we can swap
 

00:24:48.770 --> 00:24:50.440 align:start position:0%
record that we went there so we can swap
out<00:24:48.920><c> the</c><00:24:49.070><c> navigation</c><00:24:49.550><c> controller</c><00:24:49.940><c> for</c><00:24:50.180><c> a</c><00:24:50.210><c> test</c>

00:24:50.440 --> 00:24:50.450 align:start position:0%
out the navigation controller for a test
 

00:24:50.450 --> 00:24:53.170 align:start position:0%
out the navigation controller for a test
double<00:24:51.280><c> there</c><00:24:52.280><c> isn't</c><00:24:52.550><c> actually</c><00:24:52.880><c> a</c><00:24:52.970><c> fake</c>

00:24:53.170 --> 00:24:53.180 align:start position:0%
double there isn't actually a fake
 

00:24:53.180 --> 00:24:55.840 align:start position:0%
double there isn't actually a fake
version<00:24:53.600><c> provided</c><00:24:53.960><c> so</c><00:24:54.830><c> in</c><00:24:55.130><c> this</c><00:24:55.310><c> case</c><00:24:55.580><c> I</c><00:24:55.790><c> think</c>

00:24:55.840 --> 00:24:55.850 align:start position:0%
version provided so in this case I think
 

00:24:55.850 --> 00:24:58.030 align:start position:0%
version provided so in this case I think
it's<00:24:56.210><c> perfectly</c><00:24:56.660><c> acceptable</c><00:24:56.780><c> just</c><00:24:57.770><c> to</c><00:24:57.830><c> ship</c>

00:24:58.030 --> 00:24:58.040 align:start position:0%
it's perfectly acceptable just to ship
 

00:24:58.040 --> 00:25:04.090 align:start position:0%
it's perfectly acceptable just to ship
in<00:24:58.160><c> a</c><00:24:58.220><c> mock</c><00:24:58.400><c> like</c><00:24:58.820><c> this</c><00:25:01.900><c> and</c><00:25:02.900><c> now</c><00:25:03.830><c> we</c><00:25:03.860><c> can</c><00:25:04.070><c> use</c>

00:25:04.090 --> 00:25:04.100 align:start position:0%
in a mock like this and now we can use
 

00:25:04.100 --> 00:25:06.070 align:start position:0%
in a mock like this and now we can use
the<00:25:04.310><c> espresso</c><00:25:04.670><c> api's</c><00:25:05.060><c> to</c><00:25:05.390><c> enter</c><00:25:05.540><c> some</c><00:25:05.660><c> text</c><00:25:05.690><c> in</c>

00:25:06.070 --> 00:25:06.080 align:start position:0%
the espresso api's to enter some text in
 

00:25:06.080 --> 00:25:09.370 align:start position:0%
the espresso api's to enter some text in
the<00:25:06.170><c> fields</c><00:25:06.530><c> as</c><00:25:06.800><c> we</c><00:25:06.980><c> did</c><00:25:07.100><c> before</c><00:25:08.170><c> clicking</c><00:25:09.170><c> the</c>

00:25:09.370 --> 00:25:09.380 align:start position:0%
the fields as we did before clicking the
 

00:25:09.380 --> 00:25:12.120 align:start position:0%
the fields as we did before clicking the
floating<00:25:09.680><c> action</c><00:25:09.800><c> button</c><00:25:10.340><c> to</c><00:25:10.520><c> save</c><00:25:10.820><c> the</c><00:25:11.000><c> tasks</c>

00:25:12.120 --> 00:25:12.130 align:start position:0%
floating action button to save the tasks
 

00:25:12.130 --> 00:25:15.970 align:start position:0%
floating action button to save the tasks
and<00:25:13.930><c> for</c><00:25:14.930><c> the</c><00:25:14.990><c> final</c><00:25:15.200><c> part</c><00:25:15.440><c> of</c><00:25:15.470><c> the</c><00:25:15.560><c> test</c><00:25:15.590><c> we</c>

00:25:15.970 --> 00:25:15.980 align:start position:0%
and for the final part of the test we
 

00:25:15.980 --> 00:25:19.540 align:start position:0%
and for the final part of the test we
need<00:25:16.070><c> to</c><00:25:16.190><c> check</c><00:25:16.370><c> two</c><00:25:16.580><c> things</c><00:25:17.380><c> first</c><00:25:18.400><c> what</c><00:25:19.400><c> the</c>

00:25:19.540 --> 00:25:19.550 align:start position:0%
need to check two things first what the
 

00:25:19.550 --> 00:25:22.570 align:start position:0%
need to check two things first what the
tasks<00:25:19.790><c> save</c><00:25:20.120><c> correctly</c><00:25:21.040><c> so</c><00:25:22.040><c> we</c><00:25:22.100><c> can</c><00:25:22.160><c> do</c><00:25:22.370><c> this</c>

00:25:22.570 --> 00:25:22.580 align:start position:0%
tasks save correctly so we can do this
 

00:25:22.580 --> 00:25:24.910 align:start position:0%
tasks save correctly so we can do this
by<00:25:23.150><c> obtaining</c><00:25:23.330><c> the</c><00:25:23.750><c> tasks</c><00:25:23.960><c> service</c><00:25:24.470><c> or</c><00:25:24.710><c> the</c>

00:25:24.910 --> 00:25:24.920 align:start position:0%
by obtaining the tasks service or the
 

00:25:24.920 --> 00:25:26.290 align:start position:0%
by obtaining the tasks service or the
tasks<00:25:25.100><c> repository</c><00:25:25.700><c> from</c><00:25:25.850><c> the</c><00:25:26.000><c> service</c>

00:25:26.290 --> 00:25:26.300 align:start position:0%
tasks repository from the service
 

00:25:26.300 --> 00:25:29.980 align:start position:0%
tasks repository from the service
locator<00:25:26.980><c> and</c><00:25:27.980><c> we</c><00:25:28.130><c> can</c><00:25:28.280><c> use</c><00:25:28.400><c> its</c><00:25:28.580><c> api's</c><00:25:29.060><c> to</c><00:25:29.840><c> get</c>

00:25:29.980 --> 00:25:29.990 align:start position:0%
locator and we can use its api's to get
 

00:25:29.990 --> 00:25:32.970 align:start position:0%
locator and we can use its api's to get
a<00:25:30.020><c> list</c><00:25:30.260><c> of</c><00:25:30.380><c> the</c><00:25:30.500><c> tasks</c><00:25:30.710><c> that</c><00:25:30.800><c> were</c><00:25:30.980><c> saved</c><00:25:31.220><c> and</c>

00:25:32.970 --> 00:25:32.980 align:start position:0%
a list of the tasks that were saved and
 

00:25:32.980 --> 00:25:37.150 align:start position:0%
a list of the tasks that were saved and
then<00:25:33.980><c> we</c><00:25:34.670><c> can</c><00:25:34.790><c> make</c><00:25:34.940><c> sure</c><00:25:35.150><c> it</c><00:25:35.830><c> contains</c><00:25:36.830><c> one</c>

00:25:37.150 --> 00:25:37.160 align:start position:0%
then we can make sure it contains one
 

00:25:37.160 --> 00:25:39.400 align:start position:0%
then we can make sure it contains one
that<00:25:37.400><c> was</c><00:25:37.490><c> saved</c><00:25:37.760><c> the</c><00:25:38.240><c> match</c><00:25:38.450><c> is</c><00:25:38.690><c> the</c><00:25:39.080><c> one</c><00:25:39.260><c> we</c>

00:25:39.400 --> 00:25:39.410 align:start position:0%
that was saved the match is the one we
 

00:25:39.410 --> 00:25:44.500 align:start position:0%
that was saved the match is the one we
tried<00:25:39.710><c> to</c><00:25:39.830><c> save</c><00:25:40.010><c> through</c><00:25:40.250><c> the</c><00:25:40.370><c> UI</c><00:25:43.300><c> the</c><00:25:44.300><c> next</c>

00:25:44.500 --> 00:25:44.510 align:start position:0%
tried to save through the UI the next
 

00:25:44.510 --> 00:25:46.870 align:start position:0%
tried to save through the UI the next
assertion<00:25:44.990><c> is</c><00:25:45.260><c> did</c><00:25:46.160><c> we</c><00:25:46.250><c> get</c><00:25:46.400><c> back</c><00:25:46.580><c> to</c><00:25:46.760><c> the</c>

00:25:46.870 --> 00:25:46.880 align:start position:0%
assertion is did we get back to the
 

00:25:46.880 --> 00:25:49.960 align:start position:0%
assertion is did we get back to the
right<00:25:47.090><c> screen</c><00:25:47.480><c> okay</c><00:25:48.310><c> we</c><00:25:49.310><c> can</c><00:25:49.460><c> check</c><00:25:49.700><c> with</c><00:25:49.880><c> our</c>

00:25:49.960 --> 00:25:49.970 align:start position:0%
right screen okay we can check with our
 

00:25:49.970 --> 00:25:52.030 align:start position:0%
right screen okay we can check with our
mark<00:25:50.240><c> navigation</c><00:25:50.900><c> controller</c><00:25:51.350><c> to</c><00:25:51.710><c> make</c><00:25:51.860><c> sure</c>

00:25:52.030 --> 00:25:52.040 align:start position:0%
mark navigation controller to make sure
 

00:25:52.040 --> 00:25:53.830 align:start position:0%
mark navigation controller to make sure
that<00:25:52.250><c> the</c><00:25:52.370><c> right</c><00:25:52.550><c> navigation</c><00:25:52.820><c> event</c><00:25:53.390><c> was</c><00:25:53.570><c> sent</c>

00:25:53.830 --> 00:25:53.840 align:start position:0%
that the right navigation event was sent
 

00:25:53.840 --> 00:25:55.810 align:start position:0%
that the right navigation event was sent
that<00:25:54.530><c> would</c><00:25:54.680><c> have</c><00:25:54.770><c> directed</c><00:25:55.220><c> us</c><00:25:55.370><c> to</c><00:25:55.580><c> the</c><00:25:55.670><c> right</c>

00:25:55.810 --> 00:25:55.820 align:start position:0%
that would have directed us to the right
 

00:25:55.820 --> 00:26:00.880 align:start position:0%
that would have directed us to the right
screen

00:26:00.880 --> 00:26:00.890 align:start position:0%
 
 

00:26:00.890 --> 00:26:03.310 align:start position:0%
 
and<00:26:01.400><c> we</c><00:26:01.490><c> can</c><00:26:01.670><c> be</c><00:26:01.760><c> composed</c><00:26:02.059><c> further</c><00:26:02.390><c> and</c><00:26:02.720><c> look</c>

00:26:03.310 --> 00:26:03.320 align:start position:0%
and we can be composed further and look
 

00:26:03.320 --> 00:26:04.840 align:start position:0%
and we can be composed further and look
for<00:26:03.500><c> other</c><00:26:03.620><c> ways</c><00:26:03.770><c> that</c><00:26:03.980><c> we</c><00:26:04.130><c> may</c><00:26:04.309><c> want</c><00:26:04.549><c> to</c><00:26:04.640><c> limit</c>

00:26:04.840 --> 00:26:04.850 align:start position:0%
for other ways that we may want to limit
 

00:26:04.850 --> 00:26:08.470 align:start position:0%
for other ways that we may want to limit
scope<00:26:06.130><c> in</c><00:26:07.130><c> order</c><00:26:07.429><c> to</c><00:26:07.520><c> create</c><00:26:07.700><c> smaller</c><00:26:08.059><c> and</c>

00:26:08.470 --> 00:26:08.480 align:start position:0%
scope in order to create smaller and
 

00:26:08.480 --> 00:26:11.560 align:start position:0%
scope in order to create smaller and
smaller<00:26:08.809><c> integration</c><00:26:09.559><c> tests</c><00:26:10.360><c> let's</c><00:26:11.360><c> take</c>

00:26:11.560 --> 00:26:11.570 align:start position:0%
smaller integration tests let's take
 

00:26:11.570 --> 00:26:14.140 align:start position:0%
smaller integration tests let's take
test<00:26:11.809><c> repository</c><00:26:12.410><c> for</c><00:26:12.590><c> example</c><00:26:12.980><c> it</c><00:26:13.549><c> resent</c><00:26:13.970><c> it</c>

00:26:14.140 --> 00:26:14.150 align:start position:0%
test repository for example it resent it
 

00:26:14.150 --> 00:26:16.270 align:start position:0%
test repository for example it resent it
represents<00:26:14.600><c> our</c><00:26:14.690><c> model</c><00:26:15.020><c> it's</c><00:26:15.920><c> got</c><00:26:16.040><c> a</c><00:26:16.070><c> well</c>

00:26:16.270 --> 00:26:16.280 align:start position:0%
represents our model it's got a well
 

00:26:16.280 --> 00:26:18.789 align:start position:0%
represents our model it's got a well
defined<00:26:16.580><c> API</c><00:26:16.910><c> that</c><00:26:17.870><c> supports</c><00:26:18.230><c> all</c><00:26:18.440><c> the</c><00:26:18.559><c> tasks</c>

00:26:18.789 --> 00:26:18.799 align:start position:0%
defined API that supports all the tasks
 

00:26:18.799 --> 00:26:21.310 align:start position:0%
defined API that supports all the tasks
UI<00:26:19.040><c> features</c><00:26:19.610><c> as</c><00:26:19.850><c> well</c><00:26:20.630><c> as</c><00:26:20.780><c> features</c><00:26:21.110><c> in</c><00:26:21.200><c> other</c>

00:26:21.310 --> 00:26:21.320 align:start position:0%
UI features as well as features in other
 

00:26:21.320 --> 00:26:23.610 align:start position:0%
UI features as well as features in other
modules<00:26:21.500><c> like</c><00:26:22.280><c> the</c><00:26:22.429><c> progress</c><00:26:22.790><c> module</c><00:26:23.240><c> and</c>

00:26:23.610 --> 00:26:23.620 align:start position:0%
modules like the progress module and
 

00:26:23.620 --> 00:26:26.110 align:start position:0%
modules like the progress module and
it's<00:26:24.620><c> also</c><00:26:24.860><c> likely</c><00:26:25.100><c> to</c><00:26:25.280><c> contain</c><00:26:25.790><c> large</c>

00:26:26.110 --> 00:26:26.120 align:start position:0%
it's also likely to contain large
 

00:26:26.120 --> 00:26:28.870 align:start position:0%
it's also likely to contain large
amounts<00:26:26.720><c> of</c><00:26:27.080><c> complexity</c><00:26:27.740><c> and</c><00:26:27.950><c> business</c><00:26:28.520><c> value</c>

00:26:28.870 --> 00:26:28.880 align:start position:0%
amounts of complexity and business value
 

00:26:28.880 --> 00:26:30.640 align:start position:0%
amounts of complexity and business value
and<00:26:29.170><c> includes</c><00:26:30.170><c> a</c><00:26:30.290><c> good</c><00:26:30.470><c> deal</c><00:26:30.620><c> of</c>

00:26:30.640 --> 00:26:30.650 align:start position:0%
and includes a good deal of
 

00:26:30.650 --> 00:26:32.919 align:start position:0%
and includes a good deal of
collaborators<00:26:31.429><c> and</c><00:26:31.670><c> this</c><00:26:32.330><c> makes</c><00:26:32.570><c> it</c><00:26:32.750><c> a</c><00:26:32.809><c> great</c>

00:26:32.919 --> 00:26:32.929 align:start position:0%
collaborators and this makes it a great
 

00:26:32.929 --> 00:26:34.600 align:start position:0%
collaborators and this makes it a great
candidate<00:26:33.559><c> for</c><00:26:33.710><c> covering</c><00:26:34.220><c> with</c><00:26:34.520><c> an</c>

00:26:34.600 --> 00:26:34.610 align:start position:0%
candidate for covering with an
 

00:26:34.610 --> 00:26:37.810 align:start position:0%
candidate for covering with an
integration<00:26:35.030><c> test</c><00:26:35.799><c> so</c><00:26:36.799><c> let's</c><00:26:37.250><c> remove</c><00:26:37.520><c> all</c><00:26:37.669><c> of</c>

00:26:37.810 --> 00:26:37.820 align:start position:0%
integration test so let's remove all of
 

00:26:37.820 --> 00:26:41.740 align:start position:0%
integration test so let's remove all of
the<00:26:37.910><c> UI</c><00:26:38.030><c> from</c><00:26:38.480><c> the</c><00:26:38.570><c> scope</c><00:26:38.750><c> of</c><00:26:38.929><c> this</c><00:26:39.020><c> test</c><00:26:40.750><c> now</c>

00:26:41.740 --> 00:26:41.750 align:start position:0%
the UI from the scope of this test now
 

00:26:41.750 --> 00:26:43.990 align:start position:0%
the UI from the scope of this test now
we<00:26:41.809><c> can</c><00:26:42.049><c> proceed</c><00:26:42.200><c> to</c><00:26:42.650><c> directly</c><00:26:43.100><c> test</c><00:26:43.370><c> this</c>

00:26:43.990 --> 00:26:44.000 align:start position:0%
we can proceed to directly test this
 

00:26:44.000 --> 00:26:46.090 align:start position:0%
we can proceed to directly test this
well-defined<00:26:44.510><c> API</c><00:26:44.870><c> of</c><00:26:45.169><c> our</c><00:26:45.290><c> task</c><00:26:45.500><c> repository</c>

00:26:46.090 --> 00:26:46.100 align:start position:0%
well-defined API of our task repository
 

00:26:46.100 --> 00:26:48.880 align:start position:0%
well-defined API of our task repository
and<00:26:46.450><c> here</c><00:26:47.450><c> we'll</c><00:26:47.570><c> make</c><00:26:47.750><c> similar</c><00:26:48.020><c> choices</c><00:26:48.530><c> when</c>

00:26:48.880 --> 00:26:48.890 align:start position:0%
and here we'll make similar choices when
 

00:26:48.890 --> 00:26:50.860 align:start position:0%
and here we'll make similar choices when
it<00:26:48.980><c> comes</c><00:26:49.160><c> to</c><00:26:49.309><c> fidelity</c><00:26:49.870><c> telematic</c>

00:26:50.860 --> 00:26:50.870 align:start position:0%
it comes to fidelity telematic
 

00:26:50.870 --> 00:26:53.409 align:start position:0%
it comes to fidelity telematic
principles<00:26:51.440><c> and</c><00:26:51.710><c> speed</c><00:26:52.340><c> trade-offs</c><00:26:52.790><c> just</c>

00:26:53.409 --> 00:26:53.419 align:start position:0%
principles and speed trade-offs just
 

00:26:53.419 --> 00:26:57.100 align:start position:0%
principles and speed trade-offs just
like<00:26:53.570><c> we</c><00:26:53.660><c> did</c><00:26:53.809><c> in</c><00:26:53.900><c> the</c><00:26:53.960><c> last</c><00:26:54.110><c> test</c><00:26:55.929><c> we'll</c><00:26:56.929><c> keep</c>

00:26:57.100 --> 00:26:57.110 align:start position:0%
like we did in the last test we'll keep
 

00:26:57.110 --> 00:26:58.870 align:start position:0%
like we did in the last test we'll keep
using<00:26:57.320><c> a</c><00:26:57.530><c> fake</c><00:26:57.740><c> to</c><00:26:57.980><c> stand</c><00:26:58.250><c> in</c><00:26:58.400><c> for</c><00:26:58.610><c> the</c><00:26:58.700><c> real</c>

00:26:58.870 --> 00:26:58.880 align:start position:0%
using a fake to stand in for the real
 

00:26:58.880 --> 00:27:01.539 align:start position:0%
using a fake to stand in for the real
data<00:26:59.150><c> source</c><00:26:59.510><c> and</c><00:26:59.780><c> as</c><00:27:00.710><c> well</c><00:27:00.890><c> as</c><00:27:00.980><c> providing</c><00:27:01.429><c> us</c>

00:27:01.539 --> 00:27:01.549 align:start position:0%
data source and as well as providing us
 

00:27:01.549 --> 00:27:03.789 align:start position:0%
data source and as well as providing us
for<00:27:01.760><c> repeatable</c><00:27:02.150><c> tests</c><00:27:02.450><c> a</c><00:27:02.690><c> fake</c><00:27:03.230><c> here</c><00:27:03.500><c> allows</c>

00:27:03.789 --> 00:27:03.799 align:start position:0%
for repeatable tests a fake here allows
 

00:27:03.799 --> 00:27:06.100 align:start position:0%
for repeatable tests a fake here allows
us<00:27:03.830><c> to</c><00:27:04.040><c> configure</c><00:27:04.820><c> all</c><00:27:05.179><c> kinds</c><00:27:05.510><c> of</c><00:27:05.630><c> test</c><00:27:05.900><c> data</c>

00:27:06.100 --> 00:27:06.110 align:start position:0%
us to configure all kinds of test data
 

00:27:06.110 --> 00:27:08.770 align:start position:0%
us to configure all kinds of test data
sets<00:27:06.500><c> that</c><00:27:06.650><c> we</c><00:27:06.799><c> might</c><00:27:07.100><c> want</c><00:27:07.790><c> to</c><00:27:07.910><c> wire</c><00:27:08.090><c> up</c><00:27:08.299><c> for</c>

00:27:08.770 --> 00:27:08.780 align:start position:0%
sets that we might want to wire up for
 

00:27:08.780 --> 00:27:10.450 align:start position:0%
sets that we might want to wire up for
certain<00:27:09.080><c> conditions</c><00:27:09.230><c> testing</c><00:27:10.100><c> in</c><00:27:10.190><c> different</c>

00:27:10.450 --> 00:27:10.460 align:start position:0%
certain conditions testing in different
 

00:27:10.460 --> 00:27:14.080 align:start position:0%
certain conditions testing in different
ways<00:27:11.740><c> having</c><00:27:12.740><c> a</c><00:27:12.830><c> well-defined</c><00:27:13.250><c> API</c><00:27:13.580><c> the</c><00:27:13.669><c> model</c>

00:27:14.080 --> 00:27:14.090 align:start position:0%
ways having a well-defined API the model
 

00:27:14.090 --> 00:27:15.880 align:start position:0%
ways having a well-defined API the model
layer<00:27:14.270><c> also</c><00:27:14.870><c> allows</c><00:27:15.080><c> us</c><00:27:15.110><c> to</c><00:27:15.290><c> do</c><00:27:15.500><c> something</c>

00:27:15.880 --> 00:27:15.890 align:start position:0%
layer also allows us to do something
 

00:27:15.890 --> 00:27:19.750 align:start position:0%
layer also allows us to do something
else<00:27:16.040><c> that's</c><00:27:16.280><c> really</c><00:27:16.400><c> cool</c><00:27:18.429><c> what</c><00:27:19.429><c> if</c><00:27:19.520><c> we</c><00:27:19.610><c> take</c>

00:27:19.750 --> 00:27:19.760 align:start position:0%
else that's really cool what if we take
 

00:27:19.760 --> 00:27:22.270 align:start position:0%
else that's really cool what if we take
our<00:27:19.940><c> task</c><00:27:20.179><c> repository</c><00:27:20.809><c> and</c><00:27:21.440><c> extract</c><00:27:21.980><c> away</c><00:27:22.190><c> an</c>

00:27:22.270 --> 00:27:22.280 align:start position:0%
our task repository and extract away an
 

00:27:22.280 --> 00:27:26.169 align:start position:0%
our task repository and extract away an
interface<00:27:24.340><c> now</c><00:27:25.340><c> we</c><00:27:25.400><c> can</c><00:27:25.640><c> create</c><00:27:25.850><c> a</c><00:27:25.940><c> fake</c>

00:27:26.169 --> 00:27:26.179 align:start position:0%
interface now we can create a fake
 

00:27:26.179 --> 00:27:29.500 align:start position:0%
interface now we can create a fake
version<00:27:26.419><c> and</c><00:27:27.549><c> by</c><00:27:28.549><c> running</c><00:27:28.700><c> the</c><00:27:28.940><c> same</c><00:27:29.150><c> test</c>

00:27:29.500 --> 00:27:29.510 align:start position:0%
version and by running the same test
 

00:27:29.510 --> 00:27:31.720 align:start position:0%
version and by running the same test
against<00:27:29.929><c> the</c><00:27:30.020><c> fake</c><00:27:30.260><c> that</c><00:27:30.830><c> we</c><00:27:30.950><c> run</c><00:27:31.100><c> against</c><00:27:31.520><c> our</c>

00:27:31.720 --> 00:27:31.730 align:start position:0%
against the fake that we run against our
 

00:27:31.730 --> 00:27:35.440 align:start position:0%
against the fake that we run against our
production<00:27:32.620><c> repository</c><00:27:33.620><c> our</c><00:27:34.220><c> fate</c><00:27:34.940><c> becomes</c><00:27:35.210><c> a</c>

00:27:35.440 --> 00:27:35.450 align:start position:0%
production repository our fate becomes a
 

00:27:35.450 --> 00:27:37.960 align:start position:0%
production repository our fate becomes a
verified<00:27:35.900><c> fake</c><00:27:36.200><c> and</c><00:27:36.470><c> what</c><00:27:37.429><c> we're</c><00:27:37.580><c> doing</c><00:27:37.850><c> is</c>

00:27:37.960 --> 00:27:37.970 align:start position:0%
verified fake and what we're doing is
 

00:27:37.970 --> 00:27:40.360 align:start position:0%
verified fake and what we're doing is
guaranteeing<00:27:38.179><c> its</c><00:27:38.690><c> behavior</c><00:27:39.230><c> meets</c><00:27:40.040><c> the</c><00:27:40.160><c> same</c>

00:27:40.360 --> 00:27:40.370 align:start position:0%
guaranteeing its behavior meets the same
 

00:27:40.370 --> 00:27:43.330 align:start position:0%
guaranteeing its behavior meets the same
specification<00:27:41.210><c> as</c><00:27:41.650><c> our</c><00:27:42.650><c> real</c><00:27:42.830><c> production</c>

00:27:43.330 --> 00:27:43.340 align:start position:0%
specification as our real production
 

00:27:43.340 --> 00:27:47.080 align:start position:0%
specification as our real production
code<00:27:43.580><c> and</c><00:27:44.770><c> if</c><00:27:45.770><c> we</c><00:27:46.040><c> create</c><00:27:46.340><c> separate</c><00:27:46.640><c> modules</c>

00:27:47.080 --> 00:27:47.090 align:start position:0%
code and if we create separate modules
 

00:27:47.090 --> 00:27:49.870 align:start position:0%
code and if we create separate modules
for<00:27:47.419><c> both</c><00:27:47.540><c> our</c><00:27:47.690><c> api's</c><00:27:48.110><c> and</c><00:27:48.590><c> our</c><00:27:49.280><c> fakes</c>

00:27:49.870 --> 00:27:49.880 align:start position:0%
for both our api's and our fakes
 

00:27:49.880 --> 00:27:52.600 align:start position:0%
for both our api's and our fakes
other<00:27:50.780><c> modules</c><00:27:51.440><c> that</c><00:27:51.500><c> we</c><00:27:51.650><c> interact</c><00:27:51.919><c> with</c><00:27:52.309><c> will</c>

00:27:52.600 --> 00:27:52.610 align:start position:0%
other modules that we interact with will
 

00:27:52.610 --> 00:27:54.789 align:start position:0%
other modules that we interact with will
seed<00:27:52.850><c> faster</c><00:27:53.270><c> build</c><00:27:53.450><c> times</c><00:27:53.720><c> and</c><00:27:54.049><c> more</c>

00:27:54.789 --> 00:27:54.799 align:start position:0%
seed faster build times and more
 

00:27:54.799 --> 00:27:58.090 align:start position:0%
seed faster build times and more
lightweight<00:27:55.010><c> tests</c><00:27:56.410><c> so</c><00:27:57.410><c> here</c><00:27:57.620><c> we</c><00:27:57.710><c> have</c><00:27:57.799><c> a</c><00:27:57.830><c> fate</c>

00:27:58.090 --> 00:27:58.100 align:start position:0%
lightweight tests so here we have a fate
 

00:27:58.100 --> 00:27:59.620 align:start position:0%
lightweight tests so here we have a fate
for<00:27:58.280><c> our</c><00:27:58.370><c> model</c><00:27:58.640><c> layer</c><00:27:58.820><c> that</c><00:27:59.030><c> were</c><00:27:59.120><c> confident</c>

00:27:59.620 --> 00:27:59.630 align:start position:0%
for our model layer that were confident
 

00:27:59.630 --> 00:28:01.720 align:start position:0%
for our model layer that were confident
in<00:27:59.809><c> and</c><00:28:00.590><c> we</c><00:28:00.710><c> can</c><00:28:00.860><c> start</c><00:28:01.070><c> to</c><00:28:01.220><c> use</c><00:28:01.250><c> it</c><00:28:01.520><c> in</c><00:28:01.610><c> other</c>

00:28:01.720 --> 00:28:01.730 align:start position:0%
in and we can start to use it in other
 

00:28:01.730 --> 00:28:05.289 align:start position:0%
in and we can start to use it in other
tests<00:28:03.669><c> coming</c><00:28:04.669><c> back</c><00:28:04.880><c> to</c><00:28:05.000><c> the</c><00:28:05.090><c> first</c>

00:28:05.289 --> 00:28:05.299 align:start position:0%
tests coming back to the first
 

00:28:05.299 --> 00:28:07.000 align:start position:0%
tests coming back to the first
integration<00:28:05.750><c> test</c><00:28:06.110><c> we</c><00:28:06.260><c> wrote</c><00:28:06.440><c> for</c><00:28:06.740><c> the</c>

00:28:07.000 --> 00:28:07.010 align:start position:0%
integration test we wrote for the
 

00:28:07.010 --> 00:28:08.580 align:start position:0%
integration test we wrote for the
add/edit<00:28:07.400><c> task</c><00:28:07.640><c> cream</c>

00:28:08.580 --> 00:28:08.590 align:start position:0%
add/edit task cream
 

00:28:08.590 --> 00:28:10.540 align:start position:0%
add/edit task cream
we<00:28:09.590><c> could</c><00:28:09.710><c> have</c><00:28:09.800><c> equally</c><00:28:10.070><c> written</c><00:28:10.400><c> this</c>

00:28:10.540 --> 00:28:10.550 align:start position:0%
we could have equally written this
 

00:28:10.550 --> 00:28:12.340 align:start position:0%
we could have equally written this
integration<00:28:11.030><c> test</c><00:28:11.390><c> with</c><00:28:11.809><c> a</c><00:28:11.840><c> fake</c><00:28:12.110><c> task</c>

00:28:12.340 --> 00:28:12.350 align:start position:0%
integration test with a fake task
 

00:28:12.350 --> 00:28:13.520 align:start position:0%
integration test with a fake task
repository

00:28:13.520 --> 00:28:13.530 align:start position:0%
repository
 

00:28:13.530 --> 00:28:16.160 align:start position:0%
repository
we<00:28:14.190><c> trust</c><00:28:14.460><c> our</c><00:28:14.610><c> fake</c><00:28:14.880><c> because</c><00:28:15.810><c> it's</c><00:28:16.080><c> a</c>

00:28:16.160 --> 00:28:16.170 align:start position:0%
we trust our fake because it's a
 

00:28:16.170 --> 00:28:19.160 align:start position:0%
we trust our fake because it's a
verified<00:28:16.590><c> fake</c><00:28:16.830><c> and</c><00:28:17.130><c> it's</c><00:28:17.490><c> really</c><00:28:17.730><c> fast</c><00:28:18.000><c> -</c><00:28:18.240><c> it</c>

00:28:19.160 --> 00:28:19.170 align:start position:0%
verified fake and it's really fast - it
 

00:28:19.170 --> 00:28:20.780 align:start position:0%
verified fake and it's really fast - it
probably<00:28:19.350><c> stores</c><00:28:19.860><c> its</c><00:28:20.010><c> data</c><00:28:20.070><c> in</c><00:28:20.430><c> an</c><00:28:20.520><c> in-memory</c>

00:28:20.780 --> 00:28:20.790 align:start position:0%
probably stores its data in an in-memory
 

00:28:20.790 --> 00:28:24.440 align:start position:0%
probably stores its data in an in-memory
hash<00:28:21.150><c> map</c><00:28:22.160><c> we</c><00:28:23.160><c> can</c><00:28:23.280><c> apply</c><00:28:23.550><c> that</c><00:28:23.580><c> same</c><00:28:23.790><c> testing</c>

00:28:24.440 --> 00:28:24.450 align:start position:0%
hash map we can apply that same testing
 

00:28:24.450 --> 00:28:25.850 align:start position:0%
hash map we can apply that same testing
blueprint<00:28:24.870><c> across</c><00:28:25.170><c> all</c><00:28:25.380><c> of</c><00:28:25.560><c> the</c><00:28:25.740><c> other</c>

00:28:25.850 --> 00:28:25.860 align:start position:0%
blueprint across all of the other
 

00:28:25.860 --> 00:28:28.420 align:start position:0%
blueprint across all of the other
modules<00:28:26.070><c> in</c><00:28:26.520><c> the</c><00:28:26.970><c> tasks</c><00:28:27.360><c> UI</c>

00:28:28.420 --> 00:28:28.430 align:start position:0%
modules in the tasks UI
 

00:28:28.430 --> 00:28:31.550 align:start position:0%
modules in the tasks UI
these<00:28:29.430><c> UI</c><00:28:29.670><c> models</c><00:28:30.200><c> modules</c><00:28:31.200><c> are</c><00:28:31.410><c> another</c>

00:28:31.550 --> 00:28:31.560 align:start position:0%
these UI models modules are another
 

00:28:31.560 --> 00:28:33.440 align:start position:0%
these UI models modules are another
group<00:28:31.770><c> of</c><00:28:31.860><c> components</c><00:28:32.400><c> whose</c><00:28:32.790><c> integration</c>

00:28:33.440 --> 00:28:33.450 align:start position:0%
group of components whose integration
 

00:28:33.450 --> 00:28:36.170 align:start position:0%
group of components whose integration
were<00:28:33.780><c> really</c><00:28:34.110><c> concerned</c><00:28:34.590><c> with</c><00:28:34.880><c> we</c><00:28:35.880><c> want</c><00:28:36.060><c> to</c><00:28:36.120><c> be</c>

00:28:36.170 --> 00:28:36.180 align:start position:0%
were really concerned with we want to be
 

00:28:36.180 --> 00:28:37.790 align:start position:0%
were really concerned with we want to be
sure<00:28:36.210><c> that</c><00:28:36.420><c> view</c><00:28:36.810><c> models</c><00:28:37.110><c> collaborate</c>

00:28:37.790 --> 00:28:37.800 align:start position:0%
sure that view models collaborate
 

00:28:37.800 --> 00:28:39.710 align:start position:0%
sure that view models collaborate
correctly<00:28:38.130><c> with</c><00:28:38.250><c> our</c><00:28:38.340><c> fragments</c><00:28:38.880><c> is</c><00:28:39.300><c> our</c><00:28:39.510><c> data</c>

00:28:39.710 --> 00:28:39.720 align:start position:0%
correctly with our fragments is our data
 

00:28:39.720 --> 00:28:42.020 align:start position:0%
correctly with our fragments is our data
binding<00:28:40.140><c> wired</c><00:28:40.380><c> up</c><00:28:40.620><c> our</c><00:28:41.340><c> all</c><00:28:41.640><c> the</c><00:28:41.730><c> possible</c>

00:28:42.020 --> 00:28:42.030 align:start position:0%
binding wired up our all the possible
 

00:28:42.030 --> 00:28:44.170 align:start position:0%
binding wired up our all the possible
input<00:28:42.360><c> validation</c><00:28:42.540><c> cases</c><00:28:43.320><c> handled</c><00:28:43.530><c> correctly</c>

00:28:44.170 --> 00:28:44.180 align:start position:0%
input validation cases handled correctly
 

00:28:44.180 --> 00:28:50.360 align:start position:0%
input validation cases handled correctly
and<00:28:46.160><c> unit</c><00:28:47.160><c> tests</c><00:28:48.170><c> these</c><00:28:49.170><c> verify</c><00:28:49.740><c> the</c>

00:28:50.360 --> 00:28:50.370 align:start position:0%
and unit tests these verify the
 

00:28:50.370 --> 00:28:52.210 align:start position:0%
and unit tests these verify the
operations<00:28:50.910><c> of</c><00:28:51.000><c> very</c><00:28:51.180><c> small</c><00:28:51.420><c> units</c><00:28:51.780><c> of</c><00:28:51.840><c> code</c>

00:28:52.210 --> 00:28:52.220 align:start position:0%
operations of very small units of code
 

00:28:52.220 --> 00:28:55.250 align:start position:0%
operations of very small units of code
the<00:28:53.220><c> scope</c><00:28:53.490><c> of</c><00:28:53.640><c> these</c><00:28:53.820><c> kinds</c><00:28:54.120><c> of</c><00:28:54.210><c> tests</c><00:28:54.630><c> is</c><00:28:54.780><c> as</c>

00:28:55.250 --> 00:28:55.260 align:start position:0%
the scope of these kinds of tests is as
 

00:28:55.260 --> 00:28:57.440 align:start position:0%
the scope of these kinds of tests is as
small<00:28:55.440><c> as</c><00:28:55.500><c> possible</c><00:28:55.830><c> so</c><00:28:56.310><c> the</c><00:28:56.970><c> code</c><00:28:57.180><c> can</c><00:28:57.360><c> be</c>

00:28:57.440 --> 00:28:57.450 align:start position:0%
small as possible so the code can be
 

00:28:57.450 --> 00:29:00.500 align:start position:0%
small as possible so the code can be
tested<00:28:57.770><c> exco</c><00:28:58.770><c> exhaustively</c><00:28:59.340><c> and</c><00:28:59.670><c> give</c><00:29:00.270><c> very</c>

00:29:00.500 --> 00:29:00.510 align:start position:0%
tested exco exhaustively and give very
 

00:29:00.510 --> 00:29:02.840 align:start position:0%
tested exco exhaustively and give very
fast<00:29:00.840><c> and</c><00:29:01.170><c> very</c><00:29:01.710><c> specific</c><00:29:02.160><c> feedback</c><00:29:02.370><c> on</c>

00:29:02.840 --> 00:29:02.850 align:start position:0%
fast and very specific feedback on
 

00:29:02.850 --> 00:29:06.320 align:start position:0%
fast and very specific feedback on
failures<00:29:03.570><c> a</c><00:29:04.550><c> large</c><00:29:05.550><c> project</c><00:29:05.790><c> is</c><00:29:06.120><c> going</c><00:29:06.240><c> to</c>

00:29:06.320 --> 00:29:06.330 align:start position:0%
failures a large project is going to
 

00:29:06.330 --> 00:29:08.090 align:start position:0%
failures a large project is going to
have<00:29:06.420><c> thousands</c><00:29:06.840><c> of</c><00:29:06.960><c> these</c><00:29:07.140><c> so</c><00:29:07.800><c> they</c><00:29:07.920><c> should</c>

00:29:08.090 --> 00:29:08.100 align:start position:0%
have thousands of these so they should
 

00:29:08.100 --> 00:29:11.660 align:start position:0%
have thousands of these so they should
run<00:29:08.280><c> in</c><00:29:08.400><c> milliseconds</c><00:29:09.770><c> it's</c><00:29:10.770><c> totally</c><00:29:11.160><c> ok</c><00:29:11.460><c> to</c>

00:29:11.660 --> 00:29:11.670 align:start position:0%
run in milliseconds it's totally ok to
 

00:29:11.670 --> 00:29:14.480 align:start position:0%
run in milliseconds it's totally ok to
swap<00:29:11.970><c> out</c><00:29:12.150><c> production</c><00:29:12.690><c> dependencies</c><00:29:13.490><c> but</c>

00:29:14.480 --> 00:29:14.490 align:start position:0%
swap out production dependencies but
 

00:29:14.490 --> 00:29:16.190 align:start position:0%
swap out production dependencies but
they<00:29:14.610><c> should</c><00:29:14.790><c> still</c><00:29:15.030><c> be</c><00:29:15.150><c> black</c><00:29:15.360><c> box</c><00:29:15.600><c> in</c><00:29:15.810><c> nature</c>

00:29:16.190 --> 00:29:16.200 align:start position:0%
they should still be black box in nature
 

00:29:16.200 --> 00:29:18.470 align:start position:0%
they should still be black box in nature
we<00:29:16.770><c> want</c><00:29:16.950><c> to</c><00:29:17.010><c> be</c><00:29:17.070><c> testing</c><00:29:17.400><c> behavior</c><00:29:17.550><c> not</c>

00:29:18.470 --> 00:29:18.480 align:start position:0%
we want to be testing behavior not
 

00:29:18.480 --> 00:29:23.060 align:start position:0%
we want to be testing behavior not
implementation<00:29:19.400><c> and</c><00:29:21.320><c> the</c><00:29:22.320><c> line</c><00:29:22.530><c> between</c><00:29:22.710><c> the</c>

00:29:23.060 --> 00:29:23.070 align:start position:0%
implementation and the line between the
 

00:29:23.070 --> 00:29:24.530 align:start position:0%
implementation and the line between the
categories<00:29:23.490><c> of</c><00:29:23.520><c> tests</c><00:29:23.940><c> here</c><00:29:24.060><c> can</c><00:29:24.330><c> get</c><00:29:24.510><c> a</c>

00:29:24.530 --> 00:29:24.540 align:start position:0%
categories of tests here can get a
 

00:29:24.540 --> 00:29:27.620 align:start position:0%
categories of tests here can get a
little<00:29:24.810><c> blurry</c><00:29:25.880><c> let's</c><00:29:26.880><c> consider</c><00:29:27.180><c> writing</c><00:29:27.450><c> a</c>

00:29:27.620 --> 00:29:27.630 align:start position:0%
little blurry let's consider writing a
 

00:29:27.630 --> 00:29:31.400 align:start position:0%
little blurry let's consider writing a
task<00:29:27.870><c> for</c><00:29:28.530><c> our</c><00:29:28.560><c> tasks</c><00:29:28.980><c> local</c><00:29:29.280><c> datastore</c><00:29:30.410><c> tests</c>

00:29:31.400 --> 00:29:31.410 align:start position:0%
task for our tasks local datastore tests
 

00:29:31.410 --> 00:29:33.590 align:start position:0%
task for our tasks local datastore tests
local<00:29:31.770><c> datastore</c><00:29:32.220><c> takes</c><00:29:32.580><c> a</c><00:29:32.700><c> desk</c><00:29:32.940><c> tasks</c><00:29:33.360><c> Tao</c>

00:29:33.590 --> 00:29:33.600 align:start position:0%
local datastore takes a desk tasks Tao
 

00:29:33.600 --> 00:29:36.320 align:start position:0%
local datastore takes a desk tasks Tao
as<00:29:33.870><c> a</c><00:29:34.050><c> dependency</c><00:29:34.620><c> and</c><00:29:34.890><c> in</c><00:29:35.880><c> a</c><00:29:35.940><c> real</c><00:29:36.090><c> system</c>

00:29:36.320 --> 00:29:36.330 align:start position:0%
as a dependency and in a real system
 

00:29:36.330 --> 00:29:38.960 align:start position:0%
as a dependency and in a real system
this<00:29:37.080><c> is</c><00:29:37.260><c> provided</c><00:29:37.710><c> by</c><00:29:37.800><c> the</c><00:29:37.860><c> to</c><00:29:38.070><c> do</c><00:29:38.190><c> database</c><00:29:38.700><c> a</c>

00:29:38.960 --> 00:29:38.970 align:start position:0%
this is provided by the to do database a
 

00:29:38.970 --> 00:29:41.300 align:start position:0%
this is provided by the to do database a
class<00:29:39.450><c> generated</c><00:29:40.020><c> by</c><00:29:40.110><c> room</c><00:29:40.350><c> which</c><00:29:40.950><c> is</c><00:29:41.100><c> backed</c>

00:29:41.300 --> 00:29:41.310 align:start position:0%
class generated by room which is backed
 

00:29:41.310 --> 00:29:44.660 align:start position:0%
class generated by room which is backed
by<00:29:41.430><c> Android</c><00:29:42.120><c> sequel</c><00:29:42.510><c> ID</c><00:29:42.690><c> and</c><00:29:43.370><c> if</c><00:29:44.370><c> we</c><00:29:44.490><c> follow</c>

00:29:44.660 --> 00:29:44.670 align:start position:0%
by Android sequel ID and if we follow
 

00:29:44.670 --> 00:29:46.580 align:start position:0%
by Android sequel ID and if we follow
the<00:29:44.970><c> classic</c><00:29:45.330><c> principles</c><00:29:45.660><c> of</c><00:29:45.930><c> unit</c><00:29:46.200><c> testing</c>

00:29:46.580 --> 00:29:46.590 align:start position:0%
the classic principles of unit testing
 

00:29:46.590 --> 00:29:49.010 align:start position:0%
the classic principles of unit testing
we<00:29:47.400><c> can</c><00:29:47.550><c> ask</c><00:29:47.670><c> Marketo</c><00:29:48.060><c> to</c><00:29:48.210><c> provide</c><00:29:48.600><c> as</c><00:29:48.720><c> a</c><00:29:48.750><c> mock</c>

00:29:49.010 --> 00:29:49.020 align:start position:0%
we can ask Marketo to provide as a mock
 

00:29:49.020 --> 00:29:54.620 align:start position:0%
we can ask Marketo to provide as a mock
for<00:29:49.620><c> our</c><00:29:49.680><c> tasks</c><00:29:49.950><c> now</c><00:29:50.130><c> instead</c><00:29:53.390><c> here</c><00:29:54.390><c> in</c><00:29:54.510><c> our</c>

00:29:54.620 --> 00:29:54.630 align:start position:0%
for our tasks now instead here in our
 

00:29:54.630 --> 00:29:56.990 align:start position:0%
for our tasks now instead here in our
tests<00:29:54.900><c> we</c><00:29:55.410><c> can</c><00:29:55.530><c> create</c><00:29:55.740><c> that</c><00:29:55.920><c> mock</c><00:29:56.190><c> and</c><00:29:56.430><c> then</c>

00:29:56.990 --> 00:29:57.000 align:start position:0%
tests we can create that mock and then
 

00:29:57.000 --> 00:29:59.360 align:start position:0%
tests we can create that mock and then
pass<00:29:57.180><c> it</c><00:29:57.360><c> in</c><00:29:57.480><c> as</c><00:29:57.690><c> a</c><00:29:57.720><c> dependency</c><00:29:58.200><c> twelve</c><00:29:58.980><c> tasks</c>

00:29:59.360 --> 00:29:59.370 align:start position:0%
pass it in as a dependency twelve tasks
 

00:29:59.370 --> 00:30:03.020 align:start position:0%
pass it in as a dependency twelve tasks
local<00:29:59.730><c> datastore</c><00:30:01.190><c> we</c><00:30:02.190><c> can</c><00:30:02.340><c> create</c><00:30:02.490><c> a</c><00:30:02.580><c> new</c><00:30:02.760><c> task</c>

00:30:03.020 --> 00:30:03.030 align:start position:0%
local datastore we can create a new task
 

00:30:03.030 --> 00:30:07.610 align:start position:0%
local datastore we can create a new task
and<00:30:03.470><c> then</c><00:30:04.470><c> save</c><00:30:04.740><c> it</c><00:30:04.920><c> in</c><00:30:05.070><c> the</c><00:30:05.220><c> repository</c><00:30:06.620><c> and</c>

00:30:07.610 --> 00:30:07.620 align:start position:0%
and then save it in the repository and
 

00:30:07.620 --> 00:30:09.920 align:start position:0%
and then save it in the repository and
then<00:30:07.740><c> finally</c><00:30:08.190><c> we</c><00:30:08.670><c> can</c><00:30:08.760><c> validate</c><00:30:09.150><c> the</c><00:30:09.600><c> insert'</c>

00:30:09.920 --> 00:30:09.930 align:start position:0%
then finally we can validate the insert'
 

00:30:09.930 --> 00:30:12.560 align:start position:0%
then finally we can validate the insert'
task<00:30:10.260><c> coil</c><00:30:10.590><c> call</c><00:30:11.010><c> was</c><00:30:11.700><c> in</c><00:30:11.820><c> vote</c><00:30:11.970><c> on</c><00:30:12.240><c> our</c><00:30:12.330><c> test</c>

00:30:12.560 --> 00:30:12.570 align:start position:0%
task coil call was in vote on our test
 

00:30:12.570 --> 00:30:16.350 align:start position:0%
task coil call was in vote on our test
ow<00:30:14.360><c> but</c><00:30:15.360><c> wait</c>

00:30:16.350 --> 00:30:16.360 align:start position:0%
ow but wait
 

00:30:16.360 --> 00:30:18.720 align:start position:0%
ow but wait
this<00:30:17.260><c> test</c><00:30:17.529><c> here</c><00:30:17.769><c> already</c><00:30:18.190><c> knows</c><00:30:18.370><c> too</c><00:30:18.580><c> much</c>

00:30:18.720 --> 00:30:18.730 align:start position:0%
this test here already knows too much
 

00:30:18.730 --> 00:30:20.460 align:start position:0%
this test here already knows too much
about<00:30:18.880><c> the</c><00:30:19.029><c> implementation</c><00:30:19.690><c> details</c><00:30:20.080><c> of</c><00:30:20.289><c> save</c>

00:30:20.460 --> 00:30:20.470 align:start position:0%
about the implementation details of save
 

00:30:20.470 --> 00:30:23.850 align:start position:0%
about the implementation details of save
tasks<00:30:20.769><c> how</c><00:30:21.700><c> it's</c><00:30:21.880><c> implemented</c><00:30:22.529><c> if</c><00:30:23.529><c> we</c><00:30:23.799><c> were</c>

00:30:23.850 --> 00:30:23.860 align:start position:0%
tasks how it's implemented if we were
 

00:30:23.860 --> 00:30:25.340 align:start position:0%
tasks how it's implemented if we were
ever<00:30:24.070><c> gonna</c><00:30:24.190><c> change</c><00:30:24.309><c> that</c><00:30:24.640><c> implementation</c>

00:30:25.340 --> 00:30:25.350 align:start position:0%
ever gonna change that implementation
 

00:30:25.350 --> 00:30:27.750 align:start position:0%
ever gonna change that implementation
then<00:30:26.350><c> the</c><00:30:26.500><c> test</c><00:30:26.710><c> is</c><00:30:26.830><c> gonna</c><00:30:26.980><c> need</c><00:30:27.190><c> updating</c><00:30:27.640><c> as</c>

00:30:27.750 --> 00:30:27.760 align:start position:0%
then the test is gonna need updating as
 

00:30:27.760 --> 00:30:30.419 align:start position:0%
then the test is gonna need updating as
well<00:30:27.960><c> even</c><00:30:28.960><c> if</c><00:30:29.019><c> the</c><00:30:29.110><c> behavior</c><00:30:29.649><c> was</c><00:30:30.070><c> supposed</c>

00:30:30.419 --> 00:30:30.429 align:start position:0%
well even if the behavior was supposed
 

00:30:30.429 --> 00:30:33.509 align:start position:0%
well even if the behavior was supposed
to<00:30:30.549><c> remain</c><00:30:30.789><c> the</c><00:30:30.970><c> same</c><00:30:31.919><c> this</c><00:30:32.919><c> is</c><00:30:32.980><c> what</c><00:30:33.220><c> is</c><00:30:33.340><c> known</c>

00:30:33.509 --> 00:30:33.519 align:start position:0%
to remain the same this is what is known
 

00:30:33.519 --> 00:30:35.940 align:start position:0%
to remain the same this is what is known
as<00:30:33.700><c> a</c><00:30:33.730><c> change</c><00:30:34.090><c> detector</c><00:30:34.630><c> test</c><00:30:34.870><c> and</c><00:30:35.110><c> it's</c>

00:30:35.940 --> 00:30:35.950 align:start position:0%
as a change detector test and it's
 

00:30:35.950 --> 00:30:38.250 align:start position:0%
as a change detector test and it's
burdensome<00:30:36.190><c> maintenance</c><00:30:37.000><c> can</c><00:30:37.720><c> start</c><00:30:38.080><c> to</c>

00:30:38.250 --> 00:30:38.260 align:start position:0%
burdensome maintenance can start to
 

00:30:38.260 --> 00:30:41.970 align:start position:0%
burdensome maintenance can start to
quickly<00:30:38.649><c> outgrow</c><00:30:39.250><c> its</c><00:30:39.490><c> usefulness</c><00:30:40.980><c> effective</c>

00:30:41.970 --> 00:30:41.980 align:start position:0%
quickly outgrow its usefulness effective
 

00:30:41.980 --> 00:30:43.560 align:start position:0%
quickly outgrow its usefulness effective
unit<00:30:42.250><c> tests</c><00:30:42.490><c> should</c><00:30:42.820><c> really</c><00:30:43.120><c> focus</c><00:30:43.330><c> on</c>

00:30:43.560 --> 00:30:43.570 align:start position:0%
unit tests should really focus on
 

00:30:43.570 --> 00:30:47.310 align:start position:0%
unit tests should really focus on
testing<00:30:44.289><c> behavior</c><00:30:44.440><c> instead</c><00:30:45.990><c> but</c><00:30:46.990><c> how</c><00:30:47.140><c> should</c>

00:30:47.310 --> 00:30:47.320 align:start position:0%
testing behavior instead but how should
 

00:30:47.320 --> 00:30:51.539 align:start position:0%
testing behavior instead but how should
we<00:30:47.409><c> do</c><00:30:47.529><c> that</c><00:30:49.710><c> we</c><00:30:50.710><c> can</c><00:30:50.830><c> do</c><00:30:51.010><c> that</c><00:30:51.159><c> by</c><00:30:51.399><c> ignoring</c>

00:30:51.539 --> 00:30:51.549 align:start position:0%
we do that we can do that by ignoring
 

00:30:51.549 --> 00:30:54.029 align:start position:0%
we do that we can do that by ignoring
the<00:30:52.000><c> internal</c><00:30:52.360><c> implementation</c><00:30:52.539><c> and</c><00:30:53.260><c> focusing</c>

00:30:54.029 --> 00:30:54.039 align:start position:0%
the internal implementation and focusing
 

00:30:54.039 --> 00:30:57.210 align:start position:0%
the internal implementation and focusing
on<00:30:54.100><c> the</c><00:30:54.190><c> API</c><00:30:54.490><c> contracts</c><00:30:55.149><c> instead</c><00:30:55.950><c> take</c><00:30:56.950><c> test</c>

00:30:57.210 --> 00:30:57.220 align:start position:0%
on the API contracts instead take test
 

00:30:57.220 --> 00:31:00.600 align:start position:0%
on the API contracts instead take test
data<00:30:57.460><c> source</c><00:30:57.820><c> the</c><00:30:59.039><c> contract</c><00:31:00.039><c> states</c><00:31:00.309><c> that</c>

00:31:00.600 --> 00:31:00.610 align:start position:0%
data source the contract states that
 

00:31:00.610 --> 00:31:02.639 align:start position:0%
data source the contract states that
when<00:31:01.029><c> I</c><00:31:01.120><c> save</c><00:31:01.330><c> a</c><00:31:01.360><c> task</c><00:31:01.720><c> through</c><00:31:02.049><c> the</c><00:31:02.139><c> save</c><00:31:02.320><c> task</c>

00:31:02.639 --> 00:31:02.649 align:start position:0%
when I save a task through the save task
 

00:31:02.649 --> 00:31:05.460 align:start position:0%
when I save a task through the save task
method<00:31:03.039><c> I</c><00:31:03.510><c> should</c><00:31:04.510><c> still</c><00:31:04.750><c> then</c><00:31:05.139><c> be</c><00:31:05.289><c> able</c><00:31:05.350><c> to</c>

00:31:05.460 --> 00:31:05.470 align:start position:0%
method I should still then be able to
 

00:31:05.470 --> 00:31:07.710 align:start position:0%
method I should still then be able to
retrieve<00:31:05.889><c> that</c><00:31:06.070><c> same</c><00:31:06.340><c> task</c><00:31:06.669><c> by</c><00:31:07.210><c> looking</c><00:31:07.539><c> it</c><00:31:07.630><c> up</c>

00:31:07.710 --> 00:31:07.720 align:start position:0%
retrieve that same task by looking it up
 

00:31:07.720 --> 00:31:12.810 align:start position:0%
retrieve that same task by looking it up
by<00:31:07.929><c> ID</c><00:31:10.409><c> so</c><00:31:11.409><c> our</c><00:31:11.559><c> test</c><00:31:11.830><c> should</c><00:31:12.460><c> acts</c><00:31:12.639><c> to</c>

00:31:12.810 --> 00:31:12.820 align:start position:0%
by ID so our test should acts to
 

00:31:12.820 --> 00:31:14.700 align:start position:0%
by ID so our test should acts to
exercise<00:31:13.330><c> that</c><00:31:13.360><c> contract</c><00:31:13.990><c> rather</c><00:31:14.500><c> than</c>

00:31:14.700 --> 00:31:14.710 align:start position:0%
exercise that contract rather than
 

00:31:14.710 --> 00:31:16.470 align:start position:0%
exercise that contract rather than
concerning<00:31:15.190><c> itself</c><00:31:15.460><c> with</c><00:31:15.610><c> implementation</c>

00:31:16.470 --> 00:31:16.480 align:start position:0%
concerning itself with implementation
 

00:31:16.480 --> 00:31:17.750 align:start position:0%
concerning itself with implementation
details

00:31:17.750 --> 00:31:17.760 align:start position:0%
details
 

00:31:17.760 --> 00:31:21.210 align:start position:0%
details
so<00:31:18.760><c> we'll</c><00:31:19.690><c> exercise</c><00:31:20.139><c> the</c><00:31:20.350><c> save</c><00:31:20.559><c> test</c><00:31:20.860><c> method</c>

00:31:21.210 --> 00:31:21.220 align:start position:0%
so we'll exercise the save test method
 

00:31:21.220 --> 00:31:24.060 align:start position:0%
so we'll exercise the save test method
on<00:31:21.429><c> a</c><00:31:21.490><c> local</c><00:31:21.880><c> test</c><00:31:22.059><c> data</c><00:31:22.269><c> saw</c><00:31:22.710><c> but</c><00:31:23.710><c> we</c><00:31:23.799><c> won't</c><00:31:23.980><c> be</c>

00:31:24.060 --> 00:31:24.070 align:start position:0%
on a local test data saw but we won't be
 

00:31:24.070 --> 00:31:25.470 align:start position:0%
on a local test data saw but we won't be
concerned<00:31:24.490><c> with</c><00:31:24.669><c> the</c><00:31:24.760><c> fact</c><00:31:24.970><c> that</c><00:31:25.059><c> it</c><00:31:25.240><c> calls</c>

00:31:25.470 --> 00:31:25.480 align:start position:0%
concerned with the fact that it calls
 

00:31:25.480 --> 00:31:29.399 align:start position:0%
concerned with the fact that it calls
insert<00:31:25.899><c> tasks</c><00:31:26.230><c> on</c><00:31:26.409><c> the</c><00:31:26.500><c> Dow</c><00:31:27.480><c> then</c><00:31:28.480><c> we'll</c><00:31:29.230><c> call</c>

00:31:29.399 --> 00:31:29.409 align:start position:0%
insert tasks on the Dow then we'll call
 

00:31:29.409 --> 00:31:32.549 align:start position:0%
insert tasks on the Dow then we'll call
get<00:31:29.649><c> tasks</c><00:31:29.919><c> on</c><00:31:30.460><c> a</c><00:31:30.580><c> datastore</c><00:31:30.909><c> again</c><00:31:31.559><c> again</c>

00:31:32.549 --> 00:31:32.559 align:start position:0%
get tasks on a datastore again again
 

00:31:32.559 --> 00:31:35.340 align:start position:0%
get tasks on a datastore again again
forgetting<00:31:33.190><c> about</c><00:31:33.279><c> the</c><00:31:33.519><c> implementation</c><00:31:34.350><c> and</c>

00:31:35.340 --> 00:31:35.350 align:start position:0%
forgetting about the implementation and
 

00:31:35.350 --> 00:31:37.860 align:start position:0%
forgetting about the implementation and
one<00:31:36.100><c> thing</c><00:31:36.279><c> to</c><00:31:36.399><c> bear</c><00:31:36.519><c> in</c><00:31:36.580><c> mind</c><00:31:36.700><c> when</c><00:31:37.240><c> writing</c>

00:31:37.860 --> 00:31:37.870 align:start position:0%
one thing to bear in mind when writing
 

00:31:37.870 --> 00:31:39.779 align:start position:0%
one thing to bear in mind when writing
tests<00:31:38.289><c> like</c><00:31:38.380><c> this</c><00:31:38.559><c> where</c><00:31:39.370><c> the</c><00:31:39.429><c> code</c><00:31:39.639><c> under</c>

00:31:39.779 --> 00:31:39.789 align:start position:0%
tests like this where the code under
 

00:31:39.789 --> 00:31:41.370 align:start position:0%
tests like this where the code under
test<00:31:40.120><c> makes</c><00:31:40.360><c> use</c><00:31:40.510><c> of</c><00:31:40.630><c> co-routines</c>

00:31:41.370 --> 00:31:41.380 align:start position:0%
test makes use of co-routines
 

00:31:41.380 --> 00:31:43.019 align:start position:0%
test makes use of co-routines
is<00:31:41.470><c> that</c><00:31:42.309><c> we</c><00:31:42.429><c> need</c><00:31:42.580><c> to</c><00:31:42.669><c> make</c><00:31:42.850><c> these</c>

00:31:43.019 --> 00:31:43.029 align:start position:0%
is that we need to make these
 

00:31:43.029 --> 00:31:44.879 align:start position:0%
is that we need to make these
asynchronous<00:31:43.539><c> operations</c><00:31:44.289><c> appear</c>

00:31:44.879 --> 00:31:44.889 align:start position:0%
asynchronous operations appear
 

00:31:44.889 --> 00:31:47.129 align:start position:0%
asynchronous operations appear
synchronous<00:31:45.490><c> so</c><00:31:46.240><c> that</c><00:31:46.389><c> our</c><00:31:46.510><c> tests</c><00:31:46.899><c> are</c><00:31:46.990><c> going</c>

00:31:47.129 --> 00:31:47.139 align:start position:0%
synchronous so that our tests are going
 

00:31:47.139 --> 00:31:50.639 align:start position:0%
synchronous so that our tests are going
to<00:31:47.200><c> remain</c><00:31:47.500><c> deterministic</c><00:31:48.630><c> if</c><00:31:49.630><c> we</c><00:31:50.440><c> were</c><00:31:50.559><c> to</c>

00:31:50.639 --> 00:31:50.649 align:start position:0%
to remain deterministic if we were to
 

00:31:50.649 --> 00:31:52.230 align:start position:0%
to remain deterministic if we were to
get<00:31:50.799><c> the</c><00:31:51.010><c> if</c><00:31:51.220><c> we</c><00:31:51.429><c> were</c><00:31:51.519><c> to</c><00:31:51.610><c> call</c><00:31:51.730><c> a</c><00:31:51.760><c> get</c><00:31:51.970><c> task</c>

00:31:52.230 --> 00:31:52.240 align:start position:0%
get the if we were to call a get task
 

00:31:52.240 --> 00:31:54.779 align:start position:0%
get the if we were to call a get task
function<00:31:52.419><c> and</c><00:31:52.950><c> execute</c><00:31:53.950><c> it</c><00:31:54.100><c> and</c><00:31:54.250><c> sometimes</c>

00:31:54.779 --> 00:31:54.789 align:start position:0%
function and execute it and sometimes
 

00:31:54.789 --> 00:31:57.269 align:start position:0%
function and execute it and sometimes
the<00:31:55.269><c> save</c><00:31:55.510><c> task</c><00:31:55.809><c> function</c><00:31:55.990><c> hadn't</c><00:31:56.799><c> completed</c>

00:31:57.269 --> 00:31:57.279 align:start position:0%
the save task function hadn't completed
 

00:31:57.279 --> 00:32:00.649 align:start position:0%
the save task function hadn't completed
in<00:31:57.399><c> time</c><00:31:57.610><c> we'd</c><00:31:58.389><c> end</c><00:31:58.539><c> up</c><00:31:58.690><c> with</c><00:31:58.809><c> a</c><00:31:58.840><c> flaky</c><00:31:59.200><c> test</c>

00:32:00.649 --> 00:32:00.659 align:start position:0%
in time we'd end up with a flaky test
 

00:32:00.659 --> 00:32:03.450 align:start position:0%
in time we'd end up with a flaky test
luckily<00:32:02.010><c> doing</c><00:32:03.010><c> so</c><00:32:03.159><c> is</c><00:32:03.220><c> rather</c>

00:32:03.450 --> 00:32:03.460 align:start position:0%
luckily doing so is rather
 

00:32:03.460 --> 00:32:06.090 align:start position:0%
luckily doing so is rather
straightforward<00:32:03.929><c> by</c><00:32:04.929><c> asking</c><00:32:05.289><c> our</c><00:32:05.409><c> test</c><00:32:05.710><c> to</c>

00:32:06.090 --> 00:32:06.100 align:start position:0%
straightforward by asking our test to
 

00:32:06.100 --> 00:32:11.129 align:start position:0%
straightforward by asking our test to
run<00:32:06.279><c> blocking</c><00:32:09.299><c> one</c><00:32:10.299><c> of</c><00:32:10.389><c> the</c><00:32:10.450><c> first</c><00:32:10.720><c> tools</c><00:32:10.929><c> you</c>

00:32:11.129 --> 00:32:11.139 align:start position:0%
run blocking one of the first tools you
 

00:32:11.139 --> 00:32:13.200 align:start position:0%
run blocking one of the first tools you
learn<00:32:11.470><c> to</c><00:32:11.799><c> write</c><00:32:11.980><c> tests</c><00:32:12.460><c> that</c><00:32:12.880><c> uses</c>

00:32:13.200 --> 00:32:13.210 align:start position:0%
learn to write tests that uses
 

00:32:13.210 --> 00:32:13.919 align:start position:0%
learn to write tests that uses
co-routines

00:32:13.919 --> 00:32:13.929 align:start position:0%
co-routines
 

00:32:13.929 --> 00:32:17.580 align:start position:0%
co-routines
is<00:32:14.019><c> the</c><00:32:14.590><c> run</c><00:32:14.769><c> blocking</c><00:32:15.039><c> construct</c><00:32:16.440><c> in</c><00:32:17.440><c> the</c>

00:32:17.580 --> 00:32:17.590 align:start position:0%
is the run blocking construct in the
 

00:32:17.590 --> 00:32:19.379 align:start position:0%
is the run blocking construct in the
context<00:32:18.039><c> of</c><00:32:18.100><c> run</c><00:32:18.279><c> blocking</c><00:32:18.519><c> the</c><00:32:19.059><c> given</c>

00:32:19.379 --> 00:32:19.389 align:start position:0%
context of run blocking the given
 

00:32:19.389 --> 00:32:21.870 align:start position:0%
context of run blocking the given
suspend<00:32:19.809><c> function</c><00:32:20.260><c> and</c><00:32:20.470><c> all</c><00:32:21.279><c> of</c><00:32:21.399><c> the</c><00:32:21.519><c> calls</c>

00:32:21.870 --> 00:32:21.880 align:start position:0%
suspend function and all of the calls
 

00:32:21.880 --> 00:32:23.730 align:start position:0%
suspend function and all of the calls
children<00:32:22.510><c> in</c><00:32:22.570><c> the</c><00:32:22.659><c> call</c><00:32:22.840><c> hierarchy</c><00:32:23.110><c> are</c>

00:32:23.730 --> 00:32:23.740 align:start position:0%
children in the call hierarchy are
 

00:32:23.740 --> 00:32:25.169 align:start position:0%
children in the call hierarchy are
effectively<00:32:24.279><c> going</c><00:32:24.490><c> to</c><00:32:24.549><c> block</c><00:32:24.730><c> the</c><00:32:25.029><c> main</c>

00:32:25.169 --> 00:32:25.179 align:start position:0%
effectively going to block the main
 

00:32:25.179 --> 00:32:28.169 align:start position:0%
effectively going to block the main
thread<00:32:25.240><c> until</c><00:32:26.230><c> it</c><00:32:26.350><c> finishes</c><00:32:26.590><c> executing</c><00:32:27.179><c> and</c>

00:32:28.169 --> 00:32:28.179 align:start position:0%
thread until it finishes executing and
 

00:32:28.179 --> 00:32:29.370 align:start position:0%
thread until it finishes executing and
you're<00:32:28.419><c> going</c><00:32:28.539><c> to</c><00:32:28.600><c> find</c><00:32:28.779><c> this</c><00:32:28.870><c> a</c><00:32:28.929><c> really</c><00:32:29.260><c> too</c>

00:32:29.370 --> 00:32:29.380 align:start position:0%
you're going to find this a really too
 

00:32:29.380 --> 00:32:30.060 align:start position:0%
you're going to find this a really too
useful<00:32:29.529><c> tool</c>

00:32:30.060 --> 00:32:30.070 align:start position:0%
useful tool
 

00:32:30.070 --> 00:32:33.030 align:start position:0%
useful tool
when<00:32:30.340><c> exercising</c><00:32:30.960><c> code</c><00:32:31.960><c> whose</c><00:32:32.500><c> behavior</c>

00:32:33.030 --> 00:32:33.040 align:start position:0%
when exercising code whose behavior
 

00:32:33.040 --> 00:32:35.370 align:start position:0%
when exercising code whose behavior
relies<00:32:33.790><c> on</c><00:32:33.820><c> co-routines</c><00:32:34.480><c> and</c><00:32:34.750><c> needs</c><00:32:35.170><c> to</c><00:32:35.260><c> be</c>

00:32:35.370 --> 00:32:35.380 align:start position:0%
relies on co-routines and needs to be
 

00:32:35.380 --> 00:32:40.620 align:start position:0%
relies on co-routines and needs to be
highly<00:32:35.740><c> deterministic</c><00:32:39.210><c> so</c><00:32:40.210><c> the</c><00:32:40.330><c> test</c><00:32:40.540><c> we</c>

00:32:40.620 --> 00:32:40.630 align:start position:0%
highly deterministic so the test we
 

00:32:40.630 --> 00:32:42.360 align:start position:0%
highly deterministic so the test we
actually<00:32:40.660><c> want</c><00:32:41.080><c> to</c><00:32:41.170><c> look</c><00:32:41.380><c> right</c><00:32:41.980><c> is</c><00:32:42.190><c> gonna</c>

00:32:42.360 --> 00:32:42.370 align:start position:0%
actually want to look right is gonna
 

00:32:42.370 --> 00:32:44.730 align:start position:0%
actually want to look right is gonna
look<00:32:42.490><c> something</c><00:32:42.670><c> like</c><00:32:42.880><c> this</c><00:32:43.410><c> we</c><00:32:44.410><c> create</c><00:32:44.710><c> a</c>

00:32:44.730 --> 00:32:44.740 align:start position:0%
look something like this we create a
 

00:32:44.740 --> 00:32:49.320 align:start position:0%
look something like this we create a
task<00:32:45.450><c> save</c><00:32:46.450><c> it</c><00:32:46.570><c> to</c><00:32:46.660><c> the</c><00:32:46.750><c> data</c><00:32:46.930><c> source</c><00:32:48.300><c> then</c><00:32:49.300><c> we</c>

00:32:49.320 --> 00:32:49.330 align:start position:0%
task save it to the data source then we
 

00:32:49.330 --> 00:32:51.240 align:start position:0%
task save it to the data source then we
ask<00:32:49.540><c> the</c><00:32:49.660><c> local</c><00:32:49.900><c> data</c><00:32:50.080><c> source</c><00:32:50.440><c> to</c><00:32:50.950><c> retrieve</c>

00:32:51.240 --> 00:32:51.250 align:start position:0%
ask the local data source to retrieve
 

00:32:51.250 --> 00:32:55.410 align:start position:0%
ask the local data source to retrieve
that<00:32:51.430><c> task</c><00:32:51.700><c> back</c><00:32:51.910><c> for</c><00:32:52.120><c> us</c><00:32:52.210><c> and</c><00:32:53.640><c> finally</c><00:32:54.640><c> we</c><00:32:55.300><c> can</c>

00:32:55.410 --> 00:32:55.420 align:start position:0%
that task back for us and finally we can
 

00:32:55.420 --> 00:32:57.540 align:start position:0%
that task back for us and finally we can
make<00:32:55.570><c> an</c><00:32:55.660><c> assertion</c><00:32:55.990><c> that</c><00:32:56.410><c> we</c><00:32:56.920><c> got</c><00:32:57.100><c> what</c><00:32:57.400><c> we</c>

00:32:57.540 --> 00:32:57.550 align:start position:0%
make an assertion that we got what we
 

00:32:57.550 --> 00:33:00.200 align:start position:0%
make an assertion that we got what we
expected

00:33:00.200 --> 00:33:00.210 align:start position:0%
 
 

00:33:00.210 --> 00:33:03.060 align:start position:0%
 
in<00:33:01.210><c> fact</c><00:33:01.510><c> Google</c><00:33:02.110><c> and</c><00:33:02.230><c> JetBrains</c><00:33:02.650><c> have</c><00:33:02.890><c> just</c>

00:33:03.060 --> 00:33:03.070 align:start position:0%
in fact Google and JetBrains have just
 

00:33:03.070 --> 00:33:05.640 align:start position:0%
in fact Google and JetBrains have just
recently<00:33:03.280><c> collaborated</c><00:33:03.760><c> to</c><00:33:04.480><c> just</c><00:33:04.720><c> launch</c><00:33:04.960><c> the</c>

00:33:05.640 --> 00:33:05.650 align:start position:0%
recently collaborated to just launch the
 

00:33:05.650 --> 00:33:08.010 align:start position:0%
recently collaborated to just launch the
run<00:33:06.010><c> blocking</c><00:33:06.250><c> test</c><00:33:06.700><c> co-routine</c><00:33:07.510><c> builder</c><00:33:07.840><c> and</c>

00:33:08.010 --> 00:33:08.020 align:start position:0%
run blocking test co-routine builder and
 

00:33:08.020 --> 00:33:10.800 align:start position:0%
run blocking test co-routine builder and
this<00:33:08.890><c> makes</c><00:33:09.130><c> test</c><00:33:09.370><c> for</c><00:33:09.520><c> unko</c><00:33:09.640><c> routines</c><00:33:10.240><c> even</c>

00:33:10.800 --> 00:33:10.810 align:start position:0%
this makes test for unko routines even
 

00:33:10.810 --> 00:33:13.560 align:start position:0%
this makes test for unko routines even
easier<00:33:11.640><c> it's</c><00:33:12.640><c> currently</c><00:33:13.000><c> marked</c><00:33:13.360><c> as</c><00:33:13.480><c> an</c>

00:33:13.560 --> 00:33:13.570 align:start position:0%
easier it's currently marked as an
 

00:33:13.570 --> 00:33:16.500 align:start position:0%
easier it's currently marked as an
experimental<00:33:14.260><c> co-routines</c><00:33:14.800><c> API</c><00:33:15.210><c> so</c><00:33:16.210><c> please</c>

00:33:16.500 --> 00:33:16.510 align:start position:0%
experimental co-routines API so please
 

00:33:16.510 --> 00:33:18.450 align:start position:0%
experimental co-routines API so please
go<00:33:16.930><c> and</c><00:33:17.020><c> check</c><00:33:17.080><c> it</c><00:33:17.320><c> out</c><00:33:17.440><c> and</c><00:33:17.740><c> give</c><00:33:18.220><c> us</c><00:33:18.310><c> some</c>

00:33:18.450 --> 00:33:18.460 align:start position:0%
go and check it out and give us some
 

00:33:18.460 --> 00:33:19.980 align:start position:0%
go and check it out and give us some
feedback<00:33:18.610><c> and</c><00:33:19.120><c> any</c><00:33:19.300><c> bugs</c><00:33:19.570><c> that</c><00:33:19.780><c> you</c><00:33:19.840><c> might</c>

00:33:19.980 --> 00:33:19.990 align:start position:0%
feedback and any bugs that you might
 

00:33:19.990 --> 00:33:25.230 align:start position:0%
feedback and any bugs that you might
find<00:33:22.860><c> so</c><00:33:23.860><c> in</c><00:33:23.950><c> order</c><00:33:24.070><c> to</c><00:33:24.190><c> write</c><00:33:24.400><c> this</c><00:33:24.520><c> test</c><00:33:24.850><c> it's</c>

00:33:25.230 --> 00:33:25.240 align:start position:0%
find so in order to write this test it's
 

00:33:25.240 --> 00:33:26.910 align:start position:0%
find so in order to write this test it's
important<00:33:25.720><c> that</c><00:33:25.810><c> our</c><00:33:25.990><c> datastore</c><00:33:26.410><c> maintain</c>

00:33:26.910 --> 00:33:26.920 align:start position:0%
important that our datastore maintain
 

00:33:26.920 --> 00:33:29.070 align:start position:0%
important that our datastore maintain
state<00:33:27.280><c> and</c><00:33:28.270><c> it</c><00:33:28.390><c> does</c><00:33:28.540><c> this</c><00:33:28.690><c> through</c><00:33:28.900><c> its</c>

00:33:29.070 --> 00:33:29.080 align:start position:0%
state and it does this through its
 

00:33:29.080 --> 00:33:33.990 align:start position:0%
state and it does this through its
dependency<00:33:29.650><c> task</c><00:33:29.920><c> Tao</c><00:33:32.010><c> so</c><00:33:33.010><c> the</c><00:33:33.490><c> problem</c><00:33:33.850><c> is</c>

00:33:33.990 --> 00:33:34.000 align:start position:0%
dependency task Tao so the problem is
 

00:33:34.000 --> 00:33:36.300 align:start position:0%
dependency task Tao so the problem is
with<00:33:34.360><c> using</c><00:33:34.660><c> Marketo</c><00:33:35.110><c> trying</c><00:33:36.070><c> to</c><00:33:36.160><c> maintain</c>

00:33:36.300 --> 00:33:36.310 align:start position:0%
with using Marketo trying to maintain
 

00:33:36.310 --> 00:33:38.340 align:start position:0%
with using Marketo trying to maintain
state<00:33:37.000><c> through</c><00:33:37.330><c> these</c><00:33:37.630><c> one-off</c><00:33:37.960><c> stubbing</c>

00:33:38.340 --> 00:33:38.350 align:start position:0%
state through these one-off stubbing
 

00:33:38.350 --> 00:33:42.690 align:start position:0%
state through these one-off stubbing
calls<00:33:38.620><c> can</c><00:33:39.280><c> get</c><00:33:39.430><c> messy</c><00:33:39.790><c> really</c><00:33:40.210><c> fast</c><00:33:41.100><c> so</c><00:33:42.100><c> we</c>

00:33:42.690 --> 00:33:42.700 align:start position:0%
calls can get messy really fast so we
 

00:33:42.700 --> 00:33:44.810 align:start position:0%
calls can get messy really fast so we
could<00:33:42.880><c> instead</c><00:33:43.150><c> implement</c><00:33:43.660><c> our</c><00:33:43.840><c> fake</c><00:33:44.080><c> using</c>

00:33:44.810 --> 00:33:44.820 align:start position:0%
could instead implement our fake using
 

00:33:44.820 --> 00:33:48.120 align:start position:0%
could instead implement our fake using
implement<00:33:45.820><c> are</c><00:33:45.970><c> tossed</c><00:33:46.870><c> out</c><00:33:47.080><c> using</c><00:33:47.830><c> a</c><00:33:47.890><c> fake</c>

00:33:48.120 --> 00:33:48.130 align:start position:0%
implement are tossed out using a fake
 

00:33:48.130 --> 00:33:51.240 align:start position:0%
implement are tossed out using a fake
like<00:33:48.640><c> we</c><00:33:48.760><c> did</c><00:33:48.910><c> earlier</c><00:33:49.330><c> with</c><00:33:49.540><c> repository</c><00:33:50.250><c> but</c>

00:33:51.240 --> 00:33:51.250 align:start position:0%
like we did earlier with repository but
 

00:33:51.250 --> 00:33:52.500 align:start position:0%
like we did earlier with repository but
we're<00:33:51.400><c> gonna</c><00:33:51.550><c> choose</c><00:33:51.820><c> not</c><00:33:52.000><c> to</c><00:33:52.120><c> go</c><00:33:52.270><c> down</c><00:33:52.390><c> that</c>

00:33:52.500 --> 00:33:52.510 align:start position:0%
we're gonna choose not to go down that
 

00:33:52.510 --> 00:33:55.890 align:start position:0%
we're gonna choose not to go down that
route<00:33:52.840><c> for</c><00:33:53.050><c> some</c><00:33:53.260><c> good</c><00:33:53.410><c> reasons</c><00:33:54.510><c> firstly</c><00:33:55.510><c> it</c>

00:33:55.890 --> 00:33:55.900 align:start position:0%
route for some good reasons firstly it
 

00:33:55.900 --> 00:33:57.690 align:start position:0%
route for some good reasons firstly it
doesn't<00:33:56.440><c> seem</c><00:33:56.620><c> that</c><00:33:56.650><c> the</c><00:33:56.860><c> test</c><00:33:57.130><c> our</c><00:33:57.310><c> interface</c>

00:33:57.690 --> 00:33:57.700 align:start position:0%
doesn't seem that the test our interface
 

00:33:57.700 --> 00:33:59.040 align:start position:0%
doesn't seem that the test our interface
is<00:33:57.910><c> going</c><00:33:58.060><c> to</c><00:33:58.120><c> be</c><00:33:58.180><c> part</c><00:33:58.420><c> of</c><00:33:58.540><c> our</c><00:33:58.630><c> modules</c>

00:33:59.040 --> 00:33:59.050 align:start position:0%
is going to be part of our modules
 

00:33:59.050 --> 00:34:02.190 align:start position:0%
is going to be part of our modules
public<00:33:59.410><c> API</c><00:33:59.710><c> and</c><00:34:00.570><c> so</c><00:34:01.570><c> no</c><00:34:01.690><c> one</c><00:34:01.780><c> else</c><00:34:01.900><c> is</c><00:34:02.080><c> going</c>

00:34:02.190 --> 00:34:02.200 align:start position:0%
public API and so no one else is going
 

00:34:02.200 --> 00:34:04.430 align:start position:0%
public API and so no one else is going
to<00:34:02.230><c> benefit</c><00:34:02.680><c> from</c><00:34:02.890><c> reusing</c><00:34:03.610><c> that</c><00:34:03.700><c> fake</c><00:34:03.940><c> and</c>

00:34:04.430 --> 00:34:04.440 align:start position:0%
to benefit from reusing that fake and
 

00:34:04.440 --> 00:34:07.170 align:start position:0%
to benefit from reusing that fake and
secondly<00:34:05.440><c> right</c><00:34:05.950><c> now</c><00:34:06.130><c> I</c><00:34:06.430><c> can't</c><00:34:06.880><c> think</c><00:34:07.090><c> of</c>

00:34:07.170 --> 00:34:07.180 align:start position:0%
secondly right now I can't think of
 

00:34:07.180 --> 00:34:08.670 align:start position:0%
secondly right now I can't think of
another<00:34:07.270><c> part</c><00:34:07.840><c> of</c><00:34:07.900><c> our</c><00:34:08.050><c> code</c><00:34:08.290><c> that</c><00:34:08.590><c> would</c>

00:34:08.670 --> 00:34:08.680 align:start position:0%
another part of our code that would
 

00:34:08.680 --> 00:34:12.030 align:start position:0%
another part of our code that would
benefit<00:34:09.040><c> from</c><00:34:09.100><c> that</c><00:34:09.310><c> fake</c><00:34:09.520><c> two</c><00:34:10.800><c> and</c><00:34:11.800><c> this</c><00:34:11.890><c> is</c>

00:34:12.030 --> 00:34:12.040 align:start position:0%
benefit from that fake two and this is
 

00:34:12.040 --> 00:34:13.440 align:start position:0%
benefit from that fake two and this is
one<00:34:12.160><c> of</c><00:34:12.250><c> those</c><00:34:12.310><c> cases</c><00:34:12.610><c> where</c><00:34:13.120><c> it</c><00:34:13.180><c> actually</c>

00:34:13.440 --> 00:34:13.450 align:start position:0%
one of those cases where it actually
 

00:34:13.450 --> 00:34:15.380 align:start position:0%
one of those cases where it actually
makes<00:34:13.630><c> sense</c><00:34:13.750><c> to</c><00:34:14.320><c> make</c><00:34:14.470><c> use</c><00:34:14.650><c> of</c><00:34:14.680><c> the</c><00:34:14.980><c> real</c>

00:34:15.380 --> 00:34:15.390 align:start position:0%
makes sense to make use of the real
 

00:34:15.390 --> 00:34:19.380 align:start position:0%
makes sense to make use of the real
objects<00:34:16.390><c> rather</c><00:34:16.960><c> than</c><00:34:17.200><c> putting</c><00:34:17.680><c> in</c><00:34:17.860><c> a</c><00:34:17.920><c> fake</c><00:34:18.390><c> in</c>

00:34:19.380 --> 00:34:19.390 align:start position:0%
objects rather than putting in a fake in
 

00:34:19.390 --> 00:34:21.390 align:start position:0%
objects rather than putting in a fake in
this<00:34:20.320><c> case</c><00:34:20.560><c> room</c><00:34:20.830><c> provides</c><00:34:21.160><c> some</c><00:34:21.370><c> really</c>

00:34:21.390 --> 00:34:21.400 align:start position:0%
this case room provides some really
 

00:34:21.400 --> 00:34:26.250 align:start position:0%
this case room provides some really
useful<00:34:21.730><c> testing</c><00:34:22.330><c> infrastructure</c><00:34:22.810><c> for</c><00:34:23.140><c> us</c><00:34:25.260><c> we</c>

00:34:26.250 --> 00:34:26.260 align:start position:0%
useful testing infrastructure for us we
 

00:34:26.260 --> 00:34:28.440 align:start position:0%
useful testing infrastructure for us we
can<00:34:26.410><c> ask</c><00:34:26.560><c> room</c><00:34:26.860><c> to</c><00:34:27.130><c> build</c><00:34:27.340><c> us</c><00:34:27.490><c> an</c><00:34:27.610><c> in</c><00:34:27.730><c> memory</c><00:34:27.880><c> to</c>

00:34:28.440 --> 00:34:28.450 align:start position:0%
can ask room to build us an in memory to
 

00:34:28.450 --> 00:34:31.560 align:start position:0%
can ask room to build us an in memory to
do<00:34:28.570><c> database</c><00:34:29.080><c> and</c><00:34:29.620><c> then</c><00:34:30.460><c> we</c><00:34:30.550><c> can</c><00:34:30.760><c> use</c><00:34:30.940><c> that</c><00:34:31.120><c> to</c>

00:34:31.560 --> 00:34:31.570 align:start position:0%
do database and then we can use that to
 

00:34:31.570 --> 00:34:34.620 align:start position:0%
do database and then we can use that to
obtain<00:34:31.860><c> the</c><00:34:32.860><c> tostão</c><00:34:33.790><c> backed</c><00:34:34.390><c> by</c><00:34:34.600><c> that</c>

00:34:34.620 --> 00:34:34.630 align:start position:0%
obtain the tostão backed by that
 

00:34:34.630 --> 00:34:37.290 align:start position:0%
obtain the tostão backed by that
in-memory<00:34:35.050><c> database</c><00:34:35.560><c> and</c><00:34:35.860><c> provide</c><00:34:36.520><c> it</c><00:34:36.670><c> to</c><00:34:36.880><c> our</c>

00:34:37.290 --> 00:34:37.300 align:start position:0%
in-memory database and provide it to our
 

00:34:37.300 --> 00:34:40.149 align:start position:0%
in-memory database and provide it to our
local<00:34:37.510><c> datastore</c>

00:34:40.149 --> 00:34:40.159 align:start position:0%
 
 

00:34:40.159 --> 00:34:42.769 align:start position:0%
 
of<00:34:41.159><c> course</c><00:34:41.460><c> would</c><00:34:41.700><c> clean</c><00:34:41.909><c> it</c><00:34:41.940><c> up</c><00:34:42.119><c> after</c><00:34:42.359><c> tests</c>

00:34:42.769 --> 00:34:42.779 align:start position:0%
of course would clean it up after tests
 

00:34:42.779 --> 00:34:45.379 align:start position:0%
of course would clean it up after tests
but<00:34:43.619><c> in</c><00:34:43.859><c> all</c><00:34:44.039><c> of</c><00:34:44.159><c> the</c><00:34:44.220><c> senses</c><00:34:44.639><c> is</c><00:34:44.789><c> the</c><00:34:45.000><c> same</c><00:34:45.240><c> as</c>

00:34:45.379 --> 00:34:45.389 align:start position:0%
but in all of the senses is the same as
 

00:34:45.389 --> 00:34:47.960 align:start position:0%
but in all of the senses is the same as
the<00:34:45.480><c> production</c><00:34:45.779><c> database</c><00:34:46.319><c> but</c><00:34:47.190><c> is</c><00:34:47.279><c> faster</c><00:34:47.759><c> as</c>

00:34:47.960 --> 00:34:47.970 align:start position:0%
the production database but is faster as
 

00:34:47.970 --> 00:34:51.109 align:start position:0%
the production database but is faster as
it<00:34:48.269><c> doesn't</c><00:34:48.720><c> write</c><00:34:48.929><c> data</c><00:34:49.559><c> to</c><00:34:49.819><c> files</c><00:34:50.819><c> on</c><00:34:51.029><c> the</c>

00:34:51.109 --> 00:34:51.119 align:start position:0%
it doesn't write data to files on the
 

00:34:51.119 --> 00:34:53.599 align:start position:0%
it doesn't write data to files on the
file<00:34:51.299><c> system</c><00:34:51.480><c> and</c><00:34:52.220><c> therefore</c><00:34:53.220><c> it</c><00:34:53.519><c> also</c>

00:34:53.599 --> 00:34:53.609 align:start position:0%
file system and therefore it also
 

00:34:53.609 --> 00:34:55.930 align:start position:0%
file system and therefore it also
provides<00:34:54.089><c> better</c><00:34:54.299><c> isolation</c><00:34:54.960><c> through</c><00:34:55.200><c> tests</c>

00:34:55.930 --> 00:34:55.940 align:start position:0%
provides better isolation through tests
 

00:34:55.940 --> 00:35:00.019 align:start position:0%
provides better isolation through tests
so<00:34:56.940><c> is</c><00:34:57.269><c> this</c><00:34:57.839><c> still</c><00:34:58.049><c> a</c><00:34:58.079><c> unit</c><00:34:58.440><c> test</c><00:34:58.710><c> or</c><00:34:58.950><c> is</c><00:34:59.819><c> it</c>

00:35:00.019 --> 00:35:00.029 align:start position:0%
so is this still a unit test or is it
 

00:35:00.029 --> 00:35:01.880 align:start position:0%
so is this still a unit test or is it
now<00:35:00.180><c> an</c><00:35:00.299><c> integration</c><00:35:00.869><c> test</c><00:35:00.900><c> because</c><00:35:01.710><c> we're</c>

00:35:01.880 --> 00:35:01.890 align:start position:0%
now an integration test because we're
 

00:35:01.890 --> 00:35:05.289 align:start position:0%
now an integration test because we're
using<00:35:02.069><c> real</c><00:35:02.849><c> objects</c><00:35:03.359><c> rather</c><00:35:03.630><c> than</c><00:35:03.900><c> just</c><00:35:04.079><c> mugs</c>

00:35:05.289 --> 00:35:05.299 align:start position:0%
using real objects rather than just mugs
 

00:35:05.299 --> 00:35:08.390 align:start position:0%
using real objects rather than just mugs
it's<00:35:06.299><c> a</c><00:35:06.390><c> good</c><00:35:06.509><c> question</c><00:35:06.960><c> and</c><00:35:07.200><c> one</c><00:35:07.829><c> many</c><00:35:08.069><c> people</c>

00:35:08.390 --> 00:35:08.400 align:start position:0%
it's a good question and one many people
 

00:35:08.400 --> 00:35:12.049 align:start position:0%
it's a good question and one many people
who<00:35:08.519><c> will</c><00:35:09.119><c> disagree</c><00:35:09.450><c> on</c><00:35:09.630><c> and</c><00:35:10.460><c> it's</c><00:35:11.460><c> true</c><00:35:11.730><c> the</c>

00:35:12.049 --> 00:35:12.059 align:start position:0%
who will disagree on and it's true the
 

00:35:12.059 --> 00:35:15.140 align:start position:0%
who will disagree on and it's true the
lines<00:35:12.269><c> can</c><00:35:12.450><c> become</c><00:35:12.720><c> blurry</c><00:35:12.990><c> at</c><00:35:13.140><c> times</c><00:35:14.059><c> but</c><00:35:15.059><c> the</c>

00:35:15.140 --> 00:35:15.150 align:start position:0%
lines can become blurry at times but the
 

00:35:15.150 --> 00:35:16.880 align:start position:0%
lines can become blurry at times but the
key<00:35:15.299><c> takeaway</c><00:35:15.509><c> here</c><00:35:15.779><c> is</c><00:35:16.049><c> that</c><00:35:16.410><c> you</c><00:35:16.650><c> shouldn't</c>

00:35:16.880 --> 00:35:16.890 align:start position:0%
key takeaway here is that you shouldn't
 

00:35:16.890 --> 00:35:18.259 align:start position:0%
key takeaway here is that you shouldn't
ever<00:35:17.009><c> be</c><00:35:17.160><c> afraid</c><00:35:17.519><c> of</c><00:35:17.670><c> using</c><00:35:18.029><c> real</c>

00:35:18.259 --> 00:35:18.269 align:start position:0%
ever be afraid of using real
 

00:35:18.269 --> 00:35:20.509 align:start position:0%
ever be afraid of using real
dependencies<00:35:18.960><c> in</c><00:35:19.140><c> your</c><00:35:19.500><c> tests</c><00:35:19.980><c> where</c><00:35:20.400><c> it</c>

00:35:20.509 --> 00:35:20.519 align:start position:0%
dependencies in your tests where it
 

00:35:20.519 --> 00:35:22.579 align:start position:0%
dependencies in your tests where it
makes<00:35:20.700><c> sense</c><00:35:21.000><c> where</c><00:35:21.900><c> they're</c><00:35:22.049><c> more</c><00:35:22.170><c> readable</c>

00:35:22.579 --> 00:35:22.589 align:start position:0%
makes sense where they're more readable
 

00:35:22.589 --> 00:35:28.160 align:start position:0%
makes sense where they're more readable
more<00:35:23.009><c> lightweight</c><00:35:23.279><c> and</c><00:35:23.730><c> robust</c><00:35:26.990><c> so</c><00:35:27.990><c> let's</c>

00:35:28.160 --> 00:35:28.170 align:start position:0%
more lightweight and robust so let's
 

00:35:28.170 --> 00:35:30.319 align:start position:0%
more lightweight and robust so let's
just<00:35:28.349><c> recap</c><00:35:28.529><c> the</c><00:35:29.250><c> times</c><00:35:29.670><c> of</c><00:35:29.849><c> tests</c><00:35:30.059><c> that</c><00:35:30.150><c> we</c>

00:35:30.319 --> 00:35:30.329 align:start position:0%
just recap the times of tests that we
 

00:35:30.329 --> 00:35:34.039 align:start position:0%
just recap the times of tests that we
wrote<00:35:30.930><c> today</c><00:35:31.910><c> we</c><00:35:32.910><c> added</c><00:35:33.150><c> an</c><00:35:33.359><c> end-to-end</c><00:35:33.599><c> test</c>

00:35:34.039 --> 00:35:34.049 align:start position:0%
wrote today we added an end-to-end test
 

00:35:34.049 --> 00:35:36.319 align:start position:0%
wrote today we added an end-to-end test
that<00:35:34.829><c> covers</c><00:35:35.130><c> a</c><00:35:35.160><c> critical</c><00:35:35.609><c> key</c><00:35:35.789><c> user</c><00:35:36.000><c> journey</c>

00:35:36.319 --> 00:35:36.329 align:start position:0%
that covers a critical key user journey
 

00:35:36.329 --> 00:35:39.710 align:start position:0%
that covers a critical key user journey
through<00:35:36.779><c> our</c><00:35:36.900><c> application</c><00:35:38.089><c> we</c><00:35:39.089><c> decompose</c><00:35:39.539><c> the</c>

00:35:39.710 --> 00:35:39.720 align:start position:0%
through our application we decompose the
 

00:35:39.720 --> 00:35:41.990 align:start position:0%
through our application we decompose the
feature<00:35:39.930><c> to</c><00:35:40.470><c> add</c><00:35:40.559><c> an</c><00:35:40.680><c> integration</c><00:35:41.220><c> test</c><00:35:41.250><c> the</c>

00:35:41.990 --> 00:35:42.000 align:start position:0%
feature to add an integration test the
 

00:35:42.000 --> 00:35:43.970 align:start position:0%
feature to add an integration test the
tests<00:35:42.480><c> entire</c><00:35:42.869><c> vertical</c><00:35:43.109><c> slice</c><00:35:43.619><c> through</c><00:35:43.890><c> our</c>

00:35:43.970 --> 00:35:43.980 align:start position:0%
tests entire vertical slice through our
 

00:35:43.980 --> 00:35:46.640 align:start position:0%
tests entire vertical slice through our
application<00:35:44.160><c> from</c><00:35:45.150><c> the</c><00:35:45.329><c> UI</c><00:35:45.539><c> down</c><00:35:46.230><c> to</c><00:35:46.380><c> the</c><00:35:46.440><c> data</c>

00:35:46.640 --> 00:35:46.650 align:start position:0%
application from the UI down to the data
 

00:35:46.650 --> 00:35:49.819 align:start position:0%
application from the UI down to the data
layer<00:35:47.299><c> and</c><00:35:48.299><c> we</c><00:35:48.450><c> also</c><00:35:48.569><c> added</c><00:35:49.109><c> an</c><00:35:49.349><c> integration</c>

00:35:49.819 --> 00:35:49.829 align:start position:0%
layer and we also added an integration
 

00:35:49.829 --> 00:35:52.460 align:start position:0%
layer and we also added an integration
test<00:35:49.859><c> that</c><00:35:50.549><c> verifies</c><00:35:51.000><c> our</c><00:35:51.180><c> model</c><00:35:51.569><c> which</c><00:35:52.349><c> is</c>

00:35:52.460 --> 00:35:52.470 align:start position:0%
test that verifies our model which is
 

00:35:52.470 --> 00:35:54.380 align:start position:0%
test that verifies our model which is
key<00:35:52.710><c> because</c><00:35:53.250><c> other</c><00:35:53.490><c> modules</c><00:35:53.940><c> are</c><00:35:54.150><c> going</c><00:35:54.329><c> to</c>

00:35:54.380 --> 00:35:54.390 align:start position:0%
key because other modules are going to
 

00:35:54.390 --> 00:35:57.410 align:start position:0%
key because other modules are going to
be<00:35:54.450><c> depending</c><00:35:54.869><c> on</c><00:35:54.990><c> our</c><00:35:55.019><c> and</c><00:35:56.029><c> finally</c><00:35:57.029><c> we're</c>

00:35:57.410 --> 00:35:57.420 align:start position:0%
be depending on our and finally we're
 

00:35:57.420 --> 00:35:58.999 align:start position:0%
be depending on our and finally we're
able<00:35:57.569><c> to</c><00:35:57.750><c> decompose</c><00:35:58.230><c> and</c><00:35:58.289><c> write</c><00:35:58.680><c> smaller</c>

00:35:58.999 --> 00:35:59.009 align:start position:0%
able to decompose and write smaller
 

00:35:59.009 --> 00:36:00.859 align:start position:0%
able to decompose and write smaller
groups<00:35:59.339><c> of</c><00:35:59.519><c> integration</c><00:36:00.089><c> and</c><00:36:00.180><c> unit</c><00:36:00.480><c> tests</c>

00:36:00.859 --> 00:36:00.869 align:start position:0%
groups of integration and unit tests
 

00:36:00.869 --> 00:36:03.259 align:start position:0%
groups of integration and unit tests
such<00:36:01.529><c> as</c><00:36:01.710><c> the</c><00:36:01.769><c> ones</c><00:36:01.920><c> for</c><00:36:02.069><c> the</c><00:36:02.160><c> UI</c><00:36:02.339><c> or</c><00:36:02.789><c> the</c><00:36:03.000><c> local</c>

00:36:03.259 --> 00:36:03.269 align:start position:0%
such as the ones for the UI or the local
 

00:36:03.269 --> 00:36:07.609 align:start position:0%
such as the ones for the UI or the local
data<00:36:03.450><c> store</c><00:36:06.410><c> marginalization</c><00:36:07.410><c> of</c><00:36:07.500><c> your</c>

00:36:07.609 --> 00:36:07.619 align:start position:0%
data store marginalization of your
 

00:36:07.619 --> 00:36:10.099 align:start position:0%
data store marginalization of your
codebase<00:36:08.069><c> with</c><00:36:08.700><c> clearly</c><00:36:08.970><c> defined</c><00:36:09.109><c> intimate</c>

00:36:10.099 --> 00:36:10.109 align:start position:0%
codebase with clearly defined intimate
 

00:36:10.109 --> 00:36:12.559 align:start position:0%
codebase with clearly defined intimate
rural<00:36:10.380><c> contracts</c><00:36:11.069><c> allow</c><00:36:11.849><c> you</c><00:36:11.910><c> to</c><00:36:12.119><c> streamline</c>

00:36:12.559 --> 00:36:12.569 align:start position:0%
rural contracts allow you to streamline
 

00:36:12.569 --> 00:36:15.799 align:start position:0%
rural contracts allow you to streamline
your<00:36:12.599><c> project</c><00:36:13.200><c> build</c><00:36:14.180><c> create</c><00:36:15.180><c> compile</c><00:36:15.509><c> time</c>

00:36:15.799 --> 00:36:15.809 align:start position:0%
your project build create compile time
 

00:36:15.809 --> 00:36:18.289 align:start position:0%
your project build create compile time
dependencies<00:36:16.440><c> against</c><00:36:17.039><c> small</c><00:36:17.309><c> API</c><00:36:17.640><c> modules</c>

00:36:18.289 --> 00:36:18.299 align:start position:0%
dependencies against small API modules
 

00:36:18.299 --> 00:36:20.240 align:start position:0%
dependencies against small API modules
leading<00:36:18.990><c> to</c><00:36:19.109><c> faster</c><00:36:19.289><c> build</c><00:36:19.619><c> times</c><00:36:19.890><c> on</c><00:36:20.190><c> each</c>

00:36:20.240 --> 00:36:20.250 align:start position:0%
leading to faster build times on each
 

00:36:20.250 --> 00:36:24.680 align:start position:0%
leading to faster build times on each
change<00:36:20.910><c> an</c><00:36:22.309><c> export</c><00:36:23.309><c> testing</c><00:36:24.059><c> infrastructure</c>

00:36:24.680 --> 00:36:24.690 align:start position:0%
change an export testing infrastructure
 

00:36:24.690 --> 00:36:27.440 align:start position:0%
change an export testing infrastructure
such<00:36:25.079><c> as</c><00:36:25.109><c> lightweight</c><00:36:25.500><c> verified</c><00:36:26.400><c> fakes</c><00:36:26.730><c> that</c>

00:36:27.440 --> 00:36:27.450 align:start position:0%
such as lightweight verified fakes that
 

00:36:27.450 --> 00:36:29.569 align:start position:0%
such as lightweight verified fakes that
other<00:36:27.599><c> modules</c><00:36:28.019><c> can</c><00:36:28.170><c> swap</c><00:36:28.410><c> in</c><00:36:28.650><c> and</c><00:36:28.920><c> thereby</c>

00:36:29.569 --> 00:36:29.579 align:start position:0%
other modules can swap in and thereby
 

00:36:29.579 --> 00:36:30.920 align:start position:0%
other modules can swap in and thereby
decomp<00:36:30.059><c> decouple</c>

00:36:30.920 --> 00:36:30.930 align:start position:0%
decomp decouple
 

00:36:30.930 --> 00:36:32.930 align:start position:0%
decomp decouple
their<00:36:31.289><c> tests</c><00:36:31.769><c> from</c><00:36:32.279><c> your</c><00:36:32.490><c> heavyweight</c>

00:36:32.930 --> 00:36:32.940 align:start position:0%
their tests from your heavyweight
 

00:36:32.940 --> 00:36:37.309 align:start position:0%
their tests from your heavyweight
production<00:36:33.480><c> dependencies</c><00:36:35.809><c> so</c><00:36:36.809><c> while</c><00:36:36.960><c> you</c><00:36:37.079><c> can</c>

00:36:37.309 --> 00:36:37.319 align:start position:0%
production dependencies so while you can
 

00:36:37.319 --> 00:36:39.349 align:start position:0%
production dependencies so while you can
and<00:36:37.559><c> should</c><00:36:37.740><c> have</c><00:36:38.069><c> end-to-end</c><00:36:38.460><c> tests</c><00:36:39.029><c> to</c><00:36:39.210><c> give</c>

00:36:39.349 --> 00:36:39.359 align:start position:0%
and should have end-to-end tests to give
 

00:36:39.359 --> 00:36:41.420 align:start position:0%
and should have end-to-end tests to give
you<00:36:39.450><c> confidence</c><00:36:39.779><c> in</c><00:36:40.019><c> your</c><00:36:40.230><c> app</c><00:36:40.380><c> the</c><00:36:41.220><c> vast</c>

00:36:41.420 --> 00:36:41.430 align:start position:0%
you confidence in your app the vast
 

00:36:41.430 --> 00:36:43.039 align:start position:0%
you confidence in your app the vast
majority<00:36:41.579><c> of</c><00:36:41.970><c> tests</c><00:36:42.240><c> should</c><00:36:42.450><c> not</c><00:36:42.660><c> be</c><00:36:42.809><c> in</c><00:36:42.930><c> this</c>

00:36:43.039 --> 00:36:43.049 align:start position:0%
majority of tests should not be in this
 

00:36:43.049 --> 00:36:46.970 align:start position:0%
majority of tests should not be in this
category<00:36:44.569><c> motorizing</c><00:36:45.569><c> your</c><00:36:45.990><c> app</c><00:36:46.170><c> like</c><00:36:46.769><c> this</c>

00:36:46.970 --> 00:36:46.980 align:start position:0%
category motorizing your app like this
 

00:36:46.980 --> 00:36:48.920 align:start position:0%
category motorizing your app like this
allows<00:36:47.549><c> you</c><00:36:47.700><c> to</c><00:36:47.819><c> push</c><00:36:48.000><c> down</c><00:36:48.240><c> many</c><00:36:48.660><c> of</c><00:36:48.750><c> those</c>

00:36:48.920 --> 00:36:48.930 align:start position:0%
allows you to push down many of those
 

00:36:48.930 --> 00:36:51.799 align:start position:0%
allows you to push down many of those
large<00:36:49.289><c> end</c><00:36:49.559><c> to</c><00:36:49.920><c> end</c><00:36:50.069><c> tests</c><00:36:50.460><c> to</c><00:36:51.180><c> more</c><00:36:51.329><c> focused</c>

00:36:51.799 --> 00:36:51.809 align:start position:0%
large end to end tests to more focused
 

00:36:51.809 --> 00:36:52.680 align:start position:0%
large end to end tests to more focused
smaller

00:36:52.680 --> 00:36:52.690 align:start position:0%
smaller
 

00:36:52.690 --> 00:36:56.609 align:start position:0%
smaller
tests<00:36:53.500><c> at</c><00:36:53.650><c> the</c><00:36:53.770><c> module</c><00:36:54.039><c> level</c><00:36:55.200><c> and</c><00:36:56.200><c> each</c><00:36:56.349><c> one</c>

00:36:56.609 --> 00:36:56.619 align:start position:0%
tests at the module level and each one
 

00:36:56.619 --> 00:37:02.279 align:start position:0%
tests at the module level and each one
is<00:36:56.799><c> decoupled</c><00:36:57.339><c> from</c><00:36:57.579><c> the</c><00:36:57.760><c> next</c><00:37:01.020><c> finally</c><00:37:02.020><c> this</c>

00:37:02.279 --> 00:37:02.289 align:start position:0%
is decoupled from the next finally this
 

00:37:02.289 --> 00:37:03.930 align:start position:0%
is decoupled from the next finally this
allows<00:37:02.589><c> us</c><00:37:02.619><c> to</c><00:37:03.099><c> build</c><00:37:03.280><c> a</c><00:37:03.549><c> whirly</c>

00:37:03.930 --> 00:37:03.940 align:start position:0%
allows us to build a whirly
 

00:37:03.940 --> 00:37:07.109 align:start position:0%
allows us to build a whirly
well-balanced<00:37:04.450><c> pyramid</c><00:37:04.960><c> and</c><00:37:06.000><c> through</c><00:37:07.000><c> this</c>

00:37:07.109 --> 00:37:07.119 align:start position:0%
well-balanced pyramid and through this
 

00:37:07.119 --> 00:37:08.339 align:start position:0%
well-balanced pyramid and through this
success<00:37:07.539><c> through</c><00:37:07.960><c> this</c><00:37:08.079><c> thoughtful</c>

00:37:08.339 --> 00:37:08.349 align:start position:0%
success through this thoughtful
 

00:37:08.349 --> 00:37:10.440 align:start position:0%
success through this thoughtful
architecture<00:37:09.130><c> there's</c><00:37:09.670><c> a</c><00:37:09.789><c> number</c><00:37:10.030><c> of</c><00:37:10.150><c> obvious</c>

00:37:10.440 --> 00:37:10.450 align:start position:0%
architecture there's a number of obvious
 

00:37:10.450 --> 00:37:12.390 align:start position:0%
architecture there's a number of obvious
cutoff<00:37:10.839><c> points</c><00:37:11.230><c> that</c><00:37:11.829><c> have</c><00:37:11.980><c> surfaced</c>

00:37:12.390 --> 00:37:12.400 align:start position:0%
cutoff points that have surfaced
 

00:37:12.400 --> 00:37:15.450 align:start position:0%
cutoff points that have surfaced
naturally<00:37:12.940><c> within</c><00:37:13.420><c> the</c><00:37:13.539><c> pyramid</c><00:37:14.280><c> you'll</c><00:37:15.280><c> need</c>

00:37:15.450 --> 00:37:15.460 align:start position:0%
naturally within the pyramid you'll need
 

00:37:15.460 --> 00:37:17.430 align:start position:0%
naturally within the pyramid you'll need
to<00:37:15.549><c> identify</c><00:37:15.700><c> the</c><00:37:16.150><c> right</c><00:37:16.390><c> spots</c><00:37:16.750><c> for</c><00:37:17.049><c> testing</c>

00:37:17.430 --> 00:37:17.440 align:start position:0%
to identify the right spots for testing
 

00:37:17.440 --> 00:37:20.099 align:start position:0%
to identify the right spots for testing
in<00:37:17.559><c> your</c><00:37:17.710><c> own</c><00:37:17.829><c> application</c><00:37:18.750><c> what</c><00:37:19.750><c> works</c><00:37:19.990><c> for</c>

00:37:20.099 --> 00:37:20.109 align:start position:0%
in your own application what works for
 

00:37:20.109 --> 00:37:22.220 align:start position:0%
in your own application what works for
one<00:37:20.200><c> project</c><00:37:20.579><c> might</c><00:37:21.579><c> not</c><00:37:21.730><c> work</c><00:37:21.849><c> for</c><00:37:21.910><c> another</c>

00:37:22.220 --> 00:37:22.230 align:start position:0%
one project might not work for another
 

00:37:22.230 --> 00:37:24.779 align:start position:0%
one project might not work for another
so<00:37:23.230><c> it's</c><00:37:23.349><c> really</c><00:37:23.530><c> important</c><00:37:24.099><c> that</c><00:37:24.309><c> whatever</c>

00:37:24.779 --> 00:37:24.789 align:start position:0%
so it's really important that whatever
 

00:37:24.789 --> 00:37:27.420 align:start position:0%
so it's really important that whatever
you<00:37:24.910><c> choose</c><00:37:25.210><c> you</c><00:37:25.630><c> document</c><00:37:26.410><c> it</c><00:37:26.470><c> clearly</c><00:37:26.770><c> so</c>

00:37:27.420 --> 00:37:27.430 align:start position:0%
you choose you document it clearly so
 

00:37:27.430 --> 00:37:29.309 align:start position:0%
you choose you document it clearly so
that<00:37:27.579><c> all</c><00:37:27.730><c> collaborators</c><00:37:28.390><c> on</c><00:37:28.660><c> your</c><00:37:28.809><c> team</c><00:37:29.049><c> are</c>

00:37:29.309 --> 00:37:29.319 align:start position:0%
that all collaborators on your team are
 

00:37:29.319 --> 00:37:34.049 align:start position:0%
that all collaborators on your team are
on<00:37:29.740><c> the</c><00:37:29.920><c> same</c><00:37:30.130><c> page</c><00:37:32.190><c> in</c><00:37:33.190><c> Android</c><00:37:33.640><c> development</c>

00:37:34.049 --> 00:37:34.059 align:start position:0%
on the same page in Android development
 

00:37:34.059 --> 00:37:36.809 align:start position:0%
on the same page in Android development
there's<00:37:34.450><c> two</c><00:37:34.599><c> kinds</c><00:37:34.930><c> of</c><00:37:34.990><c> tests</c><00:37:35.490><c> local</c><00:37:36.490><c> tests</c>

00:37:36.809 --> 00:37:36.819 align:start position:0%
there's two kinds of tests local tests
 

00:37:36.819 --> 00:37:39.779 align:start position:0%
there's two kinds of tests local tests
that<00:37:36.910><c> run</c><00:37:37.030><c> on</c><00:37:37.180><c> the</c><00:37:37.299><c> VM</c><00:37:37.630><c> level</c><00:37:38.410><c> JVM</c><00:37:38.829><c> they</c><00:37:39.549><c> can</c><00:37:39.700><c> be</c>

00:37:39.779 --> 00:37:39.789 align:start position:0%
that run on the VM level JVM they can be
 

00:37:39.789 --> 00:37:42.240 align:start position:0%
that run on the VM level JVM they can be
just<00:37:39.910><c> pure</c><00:37:40.180><c> J</c><00:37:40.599><c> unit</c><00:37:40.780><c> tests</c><00:37:41.289><c> or</c><00:37:41.440><c> they</c><00:37:42.010><c> can</c><00:37:42.220><c> use</c>

00:37:42.240 --> 00:37:42.250 align:start position:0%
just pure J unit tests or they can use
 

00:37:42.250 --> 00:37:44.010 align:start position:0%
just pure J unit tests or they can use
robolectric<00:37:42.789><c> two</c><00:37:43.240><c> pi</c><00:37:43.420><c> to</c><00:37:43.480><c> provide</c><00:37:43.990><c> a</c>

00:37:44.010 --> 00:37:44.020 align:start position:0%
robolectric two pi to provide a
 

00:37:44.020 --> 00:37:46.380 align:start position:0%
robolectric two pi to provide a
simulation<00:37:44.500><c> of</c><00:37:44.829><c> Android</c><00:37:45.240><c> they're</c><00:37:46.240><c> much</c>

00:37:46.380 --> 00:37:46.390 align:start position:0%
simulation of Android they're much
 

00:37:46.390 --> 00:37:50.099 align:start position:0%
simulation of Android they're much
faster<00:37:47.069><c> they're</c><00:37:48.069><c> highly</c><00:37:48.369><c> scalable</c><00:37:48.990><c> but</c><00:37:49.990><c> they</c>

00:37:50.099 --> 00:37:50.109 align:start position:0%
faster they're highly scalable but they
 

00:37:50.109 --> 00:37:51.660 align:start position:0%
faster they're highly scalable but they
don't<00:37:50.289><c> offer</c><00:37:50.470><c> the</c><00:37:50.619><c> same</c><00:37:50.829><c> confidence</c><00:37:51.250><c> that</c><00:37:51.640><c> a</c>

00:37:51.660 --> 00:37:51.670 align:start position:0%
don't offer the same confidence that a
 

00:37:51.670 --> 00:37:55.799 align:start position:0%
don't offer the same confidence that a
real<00:37:51.880><c> device</c><00:37:52.180><c> would</c><00:37:54.000><c> on</c><00:37:55.000><c> the</c><00:37:55.329><c> other</c><00:37:55.450><c> hand</c><00:37:55.660><c> is</c>

00:37:55.799 --> 00:37:55.809 align:start position:0%
real device would on the other hand is
 

00:37:55.809 --> 00:37:57.930 align:start position:0%
real device would on the other hand is
instrumentation<00:37:56.349><c> tests</c><00:37:56.920><c> that</c><00:37:57.369><c> run</c><00:37:57.579><c> on</c><00:37:57.700><c> a</c><00:37:57.760><c> real</c>

00:37:57.930 --> 00:37:57.940 align:start position:0%
instrumentation tests that run on a real
 

00:37:57.940 --> 00:38:01.859 align:start position:0%
instrumentation tests that run on a real
or<00:37:58.089><c> a</c><00:37:58.119><c> virtual</c><00:37:58.510><c> device</c><00:37:59.099><c> while</c><00:38:00.099><c> slower</c><00:38:00.869><c> lacking</c>

00:38:01.859 --> 00:38:01.869 align:start position:0%
or a virtual device while slower lacking
 

00:38:01.869 --> 00:38:04.740 align:start position:0%
or a virtual device while slower lacking
scalability<00:38:03.089><c> they</c><00:38:04.089><c> are</c><00:38:04.240><c> true</c><00:38:04.539><c> to</c><00:38:04.569><c> the</c>

00:38:04.740 --> 00:38:04.750 align:start position:0%
scalability they are true to the
 

00:38:04.750 --> 00:38:09.210 align:start position:0%
scalability they are true to the
behavior<00:38:05.200><c> of</c><00:38:05.260><c> real</c><00:38:05.500><c> Android</c><00:38:07.859><c> last</c><00:38:08.859><c> year</c><00:38:09.069><c> we</c>

00:38:09.210 --> 00:38:09.220 align:start position:0%
behavior of real Android last year we
 

00:38:09.220 --> 00:38:11.819 align:start position:0%
behavior of real Android last year we
launched<00:38:09.579><c> jetpack</c><00:38:10.059><c> Android</c><00:38:10.539><c> X</c><00:38:10.690><c> test</c><00:38:11.020><c> which</c>

00:38:11.819 --> 00:38:11.829 align:start position:0%
launched jetpack Android X test which
 

00:38:11.829 --> 00:38:14.039 align:start position:0%
launched jetpack Android X test which
brought<00:38:12.069><c> together</c><00:38:12.250><c> a</c><00:38:12.700><c> unified</c><00:38:13.240><c> set</c><00:38:13.510><c> of</c><00:38:13.539><c> api's</c>

00:38:14.039 --> 00:38:14.049 align:start position:0%
brought together a unified set of api's
 

00:38:14.049 --> 00:38:16.440 align:start position:0%
brought together a unified set of api's
that<00:38:14.710><c> will</c><00:38:14.829><c> work</c><00:38:15.039><c> on</c><00:38:15.309><c> both</c><00:38:15.369><c> kinds</c><00:38:15.970><c> of</c><00:38:16.059><c> tests</c>

00:38:16.440 --> 00:38:16.450 align:start position:0%
that will work on both kinds of tests
 

00:38:16.450 --> 00:38:19.769 align:start position:0%
that will work on both kinds of tests
and<00:38:16.680><c> these</c><00:38:17.680><c> api's</c><00:38:18.190><c> allow</c><00:38:19.150><c> us</c><00:38:19.299><c> to</c><00:38:19.420><c> focus</c><00:38:19.720><c> on</c>

00:38:19.769 --> 00:38:19.779 align:start position:0%
and these api's allow us to focus on
 

00:38:19.779 --> 00:38:22.289 align:start position:0%
and these api's allow us to focus on
writing<00:38:19.990><c> Android</c><00:38:20.529><c> tests</c><00:38:21.069><c> without</c><00:38:21.760><c> thinking</c>

00:38:22.289 --> 00:38:22.299 align:start position:0%
writing Android tests without thinking
 

00:38:22.299 --> 00:38:23.880 align:start position:0%
writing Android tests without thinking
about<00:38:22.539><c> the</c><00:38:22.690><c> tools</c><00:38:22.930><c> that</c><00:38:23.260><c> were</c><00:38:23.650><c> using</c>

00:38:23.880 --> 00:38:23.890 align:start position:0%
about the tools that were using
 

00:38:23.890 --> 00:38:26.250 align:start position:0%
about the tools that were using
underneath<00:38:24.430><c> or</c><00:38:25.119><c> where</c><00:38:25.599><c> the</c><00:38:25.720><c> test</c><00:38:25.960><c> is</c><00:38:26.079><c> going</c><00:38:26.170><c> to</c>

00:38:26.250 --> 00:38:26.260 align:start position:0%
underneath or where the test is going to
 

00:38:26.260 --> 00:38:29.160 align:start position:0%
underneath or where the test is going to
be<00:38:26.319><c> executed</c><00:38:26.980><c> and</c><00:38:27.599><c> at</c><00:38:28.599><c> the</c><00:38:28.690><c> heart</c><00:38:28.869><c> of</c><00:38:28.930><c> what</c><00:38:29.079><c> we</c>

00:38:29.160 --> 00:38:29.170 align:start position:0%
be executed and at the heart of what we
 

00:38:29.170 --> 00:38:31.559 align:start position:0%
be executed and at the heart of what we
relent<00:38:29.440><c> releasing</c><00:38:30.010><c> today</c><00:38:30.130><c> is</c><00:38:31.089><c> increased</c>

00:38:31.559 --> 00:38:31.569 align:start position:0%
relent releasing today is increased
 

00:38:31.569 --> 00:38:33.779 align:start position:0%
relent releasing today is increased
stability<00:38:31.950><c> improved</c><00:38:32.950><c> interoperation</c><00:38:33.549><c> with</c>

00:38:33.779 --> 00:38:33.789 align:start position:0%
stability improved interoperation with
 

00:38:33.789 --> 00:38:36.480 align:start position:0%
stability improved interoperation with
Android<00:38:34.089><c> studio</c><00:38:34.559><c> better</c><00:38:35.559><c> off</c><00:38:35.770><c> device</c><00:38:36.099><c> support</c>

00:38:36.480 --> 00:38:36.490 align:start position:0%
Android studio better off device support
 

00:38:36.490 --> 00:38:39.809 align:start position:0%
Android studio better off device support
for<00:38:36.789><c> espresso</c><00:38:37.650><c> resources</c><00:38:38.650><c> and</c><00:38:38.890><c> the</c><00:38:39.339><c> UI</c><00:38:39.490><c> thread</c>

00:38:39.809 --> 00:38:39.819 align:start position:0%
for espresso resources and the UI thread
 

00:38:39.819 --> 00:38:42.900 align:start position:0%
for espresso resources and the UI thread
control<00:38:40.240><c> and</c><00:38:40.510><c> a</c><00:38:41.380><c> course</c><00:38:41.619><c> of</c><00:38:41.890><c> support</c><00:38:42.670><c> for</c><00:38:42.849><c> the</c>

00:38:42.900 --> 00:38:42.910 align:start position:0%
control and a course of support for the
 

00:38:42.910 --> 00:38:46.309 align:start position:0%
control and a course of support for the
latest<00:38:43.210><c> jetpack</c><00:38:43.690><c> architecture</c><00:38:44.349><c> components</c>

00:38:46.309 --> 00:38:46.319 align:start position:0%
latest jetpack architecture components
 

00:38:46.319 --> 00:38:48.930 align:start position:0%
latest jetpack architecture components
while<00:38:47.319><c> tests</c><00:38:47.770><c> of</c><00:38:47.859><c> all</c><00:38:47.950><c> sizes</c><00:38:48.279><c> can</c><00:38:48.670><c> run</c><00:38:48.789><c> on</c><00:38:48.910><c> a</c>

00:38:48.930 --> 00:38:48.940 align:start position:0%
while tests of all sizes can run on a
 

00:38:48.940 --> 00:38:50.880 align:start position:0%
while tests of all sizes can run on a
real<00:38:49.150><c> or</c><00:38:49.299><c> a</c><00:38:49.329><c> virtual</c><00:38:49.720><c> device</c><00:38:50.020><c> these</c>

00:38:50.880 --> 00:38:50.890 align:start position:0%
real or a virtual device these
 

00:38:50.890 --> 00:38:53.039 align:start position:0%
real or a virtual device these
improvements<00:38:51.369><c> have</c><00:38:52.059><c> made</c><00:38:52.270><c> it</c><00:38:52.390><c> possible</c><00:38:52.599><c> to</c>

00:38:53.039 --> 00:38:53.049 align:start position:0%
improvements have made it possible to
 

00:38:53.049 --> 00:38:54.660 align:start position:0%
improvements have made it possible to
run<00:38:53.109><c> increasingly</c><00:38:53.680><c> larger</c><00:38:54.069><c> integration</c>

00:38:54.660 --> 00:38:54.670 align:start position:0%
run increasingly larger integration
 

00:38:54.670 --> 00:38:59.400 align:start position:0%
run increasingly larger integration
tests<00:38:55.059><c> faster</c><00:38:55.900><c> on</c><00:38:56.079><c> the</c><00:38:56.559><c> local</c><00:38:56.859><c> JVM</c><00:38:58.109><c> all</c><00:38:59.109><c> of</c><00:38:59.349><c> the</c>

00:38:59.400 --> 00:38:59.410 align:start position:0%
tests faster on the local JVM all of the
 

00:38:59.410 --> 00:39:00.809 align:start position:0%
tests faster on the local JVM all of the
integration<00:38:59.920><c> tests</c><00:39:00.279><c> that</c><00:39:00.430><c> we've</c><00:39:00.520><c> documented</c>

00:39:00.809 --> 00:39:00.819 align:start position:0%
integration tests that we've documented
 

00:39:00.819 --> 00:39:03.120 align:start position:0%
integration tests that we've documented
today<00:39:01.329><c> and</c><00:39:01.660><c> in</c><00:39:01.839><c> the</c><00:39:01.930><c> code</c><00:39:02.140><c> lab</c><00:39:02.170><c> will</c><00:39:02.950><c> run</c>

00:39:03.120 --> 00:39:03.130 align:start position:0%
today and in the code lab will run
 

00:39:03.130 --> 00:39:06.060 align:start position:0%
today and in the code lab will run
equally<00:39:03.549><c> well</c><00:39:03.760><c> on</c><00:39:04.059><c> both</c><00:39:04.450><c> the</c><00:39:04.569><c> local</c><00:39:04.869><c> tree</c><00:39:05.049><c> VM</c>

00:39:06.060 --> 00:39:06.070 align:start position:0%
equally well on both the local tree VM
 

00:39:06.070 --> 00:39:10.830 align:start position:0%
equally well on both the local tree VM
on<00:39:06.130><c> a</c><00:39:06.280><c> real</c><00:39:06.490><c> or</c><00:39:06.730><c> a</c><00:39:06.760><c> virtual</c><00:39:07.180><c> device</c><00:39:09.840><c> project</c>

00:39:10.830 --> 00:39:10.840 align:start position:0%
on a real or a virtual device project
 

00:39:10.840 --> 00:39:12.720 align:start position:0%
on a real or a virtual device project
nitrogen<00:39:11.350><c> is</c><00:39:11.560><c> our</c><00:39:11.800><c> vision</c><00:39:12.130><c> for</c><00:39:12.310><c> a</c><00:39:12.340><c> unified</c>

00:39:12.720 --> 00:39:12.730 align:start position:0%
nitrogen is our vision for a unified
 

00:39:12.730 --> 00:39:15.420 align:start position:0%
nitrogen is our vision for a unified
test<00:39:13.060><c> execution</c><00:39:13.390><c> platform</c><00:39:14.170><c> it</c><00:39:15.160><c> brings</c>

00:39:15.420 --> 00:39:15.430 align:start position:0%
test execution platform it brings
 

00:39:15.430 --> 00:39:17.370 align:start position:0%
test execution platform it brings
together<00:39:15.640><c> all</c><00:39:16.030><c> these</c><00:39:16.300><c> many</c><00:39:16.540><c> disparate</c><00:39:16.990><c> tools</c>

00:39:17.370 --> 00:39:17.380 align:start position:0%
together all these many disparate tools
 

00:39:17.380 --> 00:39:21.390 align:start position:0%
together all these many disparate tools
and<00:39:17.650><c> environments</c><00:39:18.930><c> with</c><00:39:19.930><c> nitrogen</c><00:39:20.290><c> any</c><00:39:20.740><c> test</c>

00:39:21.390 --> 00:39:21.400 align:start position:0%
and environments with nitrogen any test
 

00:39:21.400 --> 00:39:24.140 align:start position:0%
and environments with nitrogen any test
that's<00:39:21.550><c> written</c><00:39:21.940><c> with</c><00:39:22.150><c> the</c><00:39:22.240><c> unified</c><00:39:22.660><c> API</c>

00:39:24.140 --> 00:39:24.150 align:start position:0%
that's written with the unified API
 

00:39:24.150 --> 00:39:27.150 align:start position:0%
that's written with the unified API
using<00:39:25.150><c> Android</c><00:39:25.450><c> X</c><00:39:25.600><c> test</c><00:39:25.900><c> can</c><00:39:26.620><c> be</c><00:39:26.710><c> run</c><00:39:26.920><c> on</c><00:39:26.950><c> any</c>

00:39:27.150 --> 00:39:27.160 align:start position:0%
using Android X test can be run on any
 

00:39:27.160 --> 00:39:29.130 align:start position:0%
using Android X test can be run on any
of<00:39:27.340><c> these</c><00:39:27.430><c> execution</c><00:39:28.120><c> platforms</c><00:39:28.630><c> seamlessly</c>

00:39:29.130 --> 00:39:29.140 align:start position:0%
of these execution platforms seamlessly
 

00:39:29.140 --> 00:39:31.920 align:start position:0%
of these execution platforms seamlessly
from<00:39:30.040><c> Android</c><00:39:30.340><c> studio</c><00:39:30.580><c> or</c><00:39:31.090><c> your</c><00:39:31.480><c> continuous</c>

00:39:31.920 --> 00:39:31.930 align:start position:0%
from Android studio or your continuous
 

00:39:31.930 --> 00:39:34.200 align:start position:0%
from Android studio or your continuous
build<00:39:32.170><c> system</c><00:39:32.250><c> you've</c><00:39:33.250><c> got</c><00:39:33.280><c> to</c><00:39:33.460><c> up</c><00:39:33.700><c> the</c><00:39:33.910><c> option</c>

00:39:34.200 --> 00:39:34.210 align:start position:0%
build system you've got to up the option
 

00:39:34.210 --> 00:39:36.330 align:start position:0%
build system you've got to up the option
to<00:39:34.420><c> run</c><00:39:34.540><c> any</c><00:39:34.690><c> Android</c><00:39:35.110><c> test</c><00:39:35.350><c> and</c><00:39:35.560><c> a</c><00:39:35.920><c> variety</c><00:39:36.310><c> of</c>

00:39:36.330 --> 00:39:36.340 align:start position:0%
to run any Android test and a variety of
 

00:39:36.340 --> 00:39:38.760 align:start position:0%
to run any Android test and a variety of
these<00:39:36.520><c> platforms</c><00:39:36.930><c> such</c><00:39:37.930><c> as</c><00:39:37.960><c> virtual</c><00:39:38.290><c> devices</c>

00:39:38.760 --> 00:39:38.770 align:start position:0%
these platforms such as virtual devices
 

00:39:38.770 --> 00:39:40.260 align:start position:0%
these platforms such as virtual devices
cloud<00:39:39.580><c> farms</c>

00:39:40.260 --> 00:39:40.270 align:start position:0%
cloud farms
 

00:39:40.270 --> 00:39:43.230 align:start position:0%
cloud farms
simulated<00:39:40.990><c> devices</c><00:39:41.470><c> and</c><00:39:42.400><c> while</c><00:39:42.790><c> a</c><00:39:42.820><c> team</c><00:39:43.090><c> is</c>

00:39:43.230 --> 00:39:43.240 align:start position:0%
simulated devices and while a team is
 

00:39:43.240 --> 00:39:44.700 align:start position:0%
simulated devices and while a team is
still<00:39:43.390><c> working</c><00:39:43.450><c> hard</c><00:39:43.960><c> to</c><00:39:44.140><c> bring</c><00:39:44.320><c> this</c><00:39:44.500><c> vision</c>

00:39:44.700 --> 00:39:44.710 align:start position:0%
still working hard to bring this vision
 

00:39:44.710 --> 00:39:47.160 align:start position:0%
still working hard to bring this vision
to<00:39:44.860><c> reality</c><00:39:45.100><c> in</c><00:39:45.670><c> the</c><00:39:46.300><c> meantime</c><00:39:46.480><c> we'll</c><00:39:46.930><c> share</c><00:39:47.110><c> a</c>

00:39:47.160 --> 00:39:47.170 align:start position:0%
to reality in the meantime we'll share a
 

00:39:47.170 --> 00:39:50.820 align:start position:0%
to reality in the meantime we'll share a
little<00:39:47.290><c> trick</c><00:39:47.590><c> with</c><00:39:47.740><c> you</c><00:39:49.440><c> normally</c><00:39:50.440><c> local</c>

00:39:50.820 --> 00:39:50.830 align:start position:0%
little trick with you normally local
 

00:39:50.830 --> 00:39:52.500 align:start position:0%
little trick with you normally local
tests<00:39:51.220><c> would</c><00:39:51.370><c> be</c><00:39:51.490><c> placed</c><00:39:51.730><c> in</c><00:39:51.910><c> the</c><00:39:52.000><c> test</c><00:39:52.240><c> source</c>

00:39:52.500 --> 00:39:52.510 align:start position:0%
tests would be placed in the test source
 

00:39:52.510 --> 00:39:56.250 align:start position:0%
tests would be placed in the test source
route<00:39:53.850><c> instrumentation</c><00:39:54.850><c> tests</c><00:39:55.240><c> go</c><00:39:56.020><c> in</c><00:39:56.170><c> the</c>

00:39:56.250 --> 00:39:56.260 align:start position:0%
route instrumentation tests go in the
 

00:39:56.260 --> 00:39:58.830 align:start position:0%
route instrumentation tests go in the
Android<00:39:56.590><c> test</c><00:39:56.800><c> source</c><00:39:57.010><c> route</c><00:39:57.570><c> but</c><00:39:58.570><c> to</c><00:39:58.660><c> show</c>

00:39:58.830 --> 00:39:58.840 align:start position:0%
Android test source route but to show
 

00:39:58.840 --> 00:40:00.480 align:start position:0%
Android test source route but to show
you<00:39:58.900><c> what's</c><00:39:59.140><c> possible</c><00:39:59.230><c> with</c><00:39:59.650><c> a</c><00:39:59.680><c> unified</c><00:40:00.040><c> API</c>

00:40:00.480 --> 00:40:00.490 align:start position:0%
you what's possible with a unified API
 

00:40:00.490 --> 00:40:02.940 align:start position:0%
you what's possible with a unified API
in<00:40:00.880><c> this</c><00:40:01.600><c> code</c><00:40:01.840><c> lab</c><00:40:02.050><c> we're</c><00:40:02.530><c> using</c><00:40:02.680><c> a</c><00:40:02.830><c> little</c>

00:40:02.940 --> 00:40:02.950 align:start position:0%
in this code lab we're using a little
 

00:40:02.950 --> 00:40:05.460 align:start position:0%
in this code lab we're using a little
trick<00:40:03.280><c> to</c><00:40:03.880><c> create</c><00:40:04.180><c> a</c><00:40:04.330><c> shared</c><00:40:04.810><c> test</c><00:40:05.260><c> route</c>

00:40:05.460 --> 00:40:05.470 align:start position:0%
trick to create a shared test route
 

00:40:05.470 --> 00:40:08.730 align:start position:0%
trick to create a shared test route
sauce<00:40:06.070><c> root</c><00:40:06.340><c> folder</c><00:40:06.730><c> and</c><00:40:07.290><c> here</c><00:40:08.290><c> we</c><00:40:08.410><c> can</c><00:40:08.560><c> place</c>

00:40:08.730 --> 00:40:08.740 align:start position:0%
sauce root folder and here we can place
 

00:40:08.740 --> 00:40:11.510 align:start position:0%
sauce root folder and here we can place
tests<00:40:09.280><c> that</c><00:40:09.790><c> written</c><00:40:10.150><c> with</c><00:40:10.390><c> the</c><00:40:10.480><c> unified</c><00:40:10.810><c> API</c>

00:40:11.510 --> 00:40:11.520 align:start position:0%
tests that written with the unified API
 

00:40:11.520 --> 00:40:15.860 align:start position:0%
tests that written with the unified API
run<00:40:12.520><c> on</c><00:40:12.790><c> both</c><00:40:13.030><c> device</c><00:40:13.690><c> and</c><00:40:14.110><c> off</c><00:40:14.740><c> device</c><00:40:15.100><c> and</c>

00:40:15.860 --> 00:40:15.870 align:start position:0%
run on both device and off device and
 

00:40:15.870 --> 00:40:18.210 align:start position:0%
run on both device and off device and
how<00:40:16.870><c> and</c><00:40:17.050><c> where</c><00:40:17.200><c> you</c><00:40:17.350><c> decide</c><00:40:17.710><c> to</c><00:40:17.830><c> run</c><00:40:17.980><c> them</c>

00:40:18.210 --> 00:40:18.220 align:start position:0%
how and where you decide to run them
 

00:40:18.220 --> 00:40:19.530 align:start position:0%
how and where you decide to run them
really<00:40:18.670><c> depends</c><00:40:18.940><c> on</c><00:40:19.000><c> your</c><00:40:19.120><c> project's</c>

00:40:19.530 --> 00:40:19.540 align:start position:0%
really depends on your project's
 

00:40:19.540 --> 00:40:21.690 align:start position:0%
really depends on your project's
philosophies<00:40:20.020><c> or</c><00:40:20.170><c> needs</c><00:40:20.380><c> but</c><00:40:21.220><c> here</c><00:40:21.430><c> you</c><00:40:21.580><c> can</c>

00:40:21.690 --> 00:40:21.700 align:start position:0%
philosophies or needs but here you can
 

00:40:21.700 --> 00:40:26.460 align:start position:0%
philosophies or needs but here you can
start<00:40:21.940><c> see</c><00:40:22.240><c> the</c><00:40:22.450><c> possibilities</c><00:40:25.140><c> today</c><00:40:26.140><c> we're</c>

00:40:26.460 --> 00:40:26.470 align:start position:0%
start see the possibilities today we're
 

00:40:26.470 --> 00:40:28.020 align:start position:0%
start see the possibilities today we're
also<00:40:26.590><c> launching</c><00:40:26.890><c> an</c><00:40:27.250><c> early</c><00:40:27.460><c> access</c><00:40:27.760><c> program</c>

00:40:28.020 --> 00:40:28.030 align:start position:0%
also launching an early access program
 

00:40:28.030 --> 00:40:31.560 align:start position:0%
also launching an early access program
for<00:40:28.420><c> nitrogen</c><00:40:28.750><c> for</c><00:40:29.260><c> tools</c><00:40:29.470><c> integrators</c><00:40:30.480><c> so</c><00:40:31.480><c> if</c>

00:40:31.560 --> 00:40:31.570 align:start position:0%
for nitrogen for tools integrators so if
 

00:40:31.570 --> 00:40:32.970 align:start position:0%
for nitrogen for tools integrators so if
you're<00:40:31.720><c> a</c><00:40:31.750><c> developer</c><00:40:31.840><c> that</c><00:40:32.500><c> maintains</c>

00:40:32.970 --> 00:40:32.980 align:start position:0%
you're a developer that maintains
 

00:40:32.980 --> 00:40:36.140 align:start position:0%
you're a developer that maintains
monitoring<00:40:33.640><c> profiling</c><00:40:34.420><c> performance</c><00:40:34.990><c> tools</c>

00:40:36.140 --> 00:40:36.150 align:start position:0%
monitoring profiling performance tools
 

00:40:36.150 --> 00:40:38.190 align:start position:0%
monitoring profiling performance tools
you<00:40:37.150><c> provide</c><00:40:37.480><c> continuous</c><00:40:37.990><c> integration</c>

00:40:38.190 --> 00:40:38.200 align:start position:0%
you provide continuous integration
 

00:40:38.200 --> 00:40:41.940 align:start position:0%
you provide continuous integration
platforms<00:40:40.050><c> you</c><00:40:41.050><c> build</c><00:40:41.290><c> real</c><00:40:41.500><c> or</c><00:40:41.680><c> device</c>

00:40:41.940 --> 00:40:41.950 align:start position:0%
platforms you build real or device
 

00:40:41.950 --> 00:40:46.290 align:start position:0%
platforms you build real or device
services<00:40:42.610><c> for</c><00:40:43.000><c> developers</c><00:40:43.510><c> you</c><00:40:44.430><c> make</c><00:40:45.430><c> IDs</c><00:40:45.970><c> or</c>

00:40:46.290 --> 00:40:46.300 align:start position:0%
services for developers you make IDs or
 

00:40:46.300 --> 00:40:49.260 align:start position:0%
services for developers you make IDs or
build<00:40:46.870><c> farms</c><00:40:47.460><c> we're</c><00:40:48.460><c> looking</c><00:40:48.730><c> to</c><00:40:48.910><c> hear</c><00:40:49.150><c> from</c>

00:40:49.260 --> 00:40:49.270 align:start position:0%
build farms we're looking to hear from
 

00:40:49.270 --> 00:40:52.200 align:start position:0%
build farms we're looking to hear from
you<00:40:49.510><c> and</c><00:40:49.900><c> get</c><00:40:50.590><c> your</c><00:40:50.710><c> feedback</c><00:40:50.980><c> on</c><00:40:51.430><c> our</c><00:40:51.940><c> early</c>

00:40:52.200 --> 00:40:52.210 align:start position:0%
you and get your feedback on our early
 

00:40:52.210 --> 00:40:57.090 align:start position:0%
you and get your feedback on our early
access<00:40:54.180><c> so</c><00:40:55.180><c> please</c><00:40:55.420><c> go</c><00:40:55.600><c> ahead</c><00:40:55.830><c> check</c><00:40:56.830><c> out</c><00:40:56.980><c> the</c>

00:40:57.090 --> 00:40:57.100 align:start position:0%
access so please go ahead check out the
 

00:40:57.100 --> 00:40:59.160 align:start position:0%
access so please go ahead check out the
code<00:40:57.280><c> in</c><00:40:57.430><c> the</c><00:40:57.520><c> code</c><00:40:57.670><c> lab</c><00:40:57.730><c> you</c><00:40:58.720><c> can</c><00:40:58.870><c> see</c><00:40:59.020><c> the</c>

00:40:59.160 --> 00:40:59.170 align:start position:0%
code in the code lab you can see the
 

00:40:59.170 --> 00:41:01.050 align:start position:0%
code in the code lab you can see the
great<00:40:59.380><c> examples</c><00:40:59.950><c> for</c><00:41:00.160><c> project</c><00:41:00.520><c> structure</c><00:41:00.940><c> and</c>

00:41:01.050 --> 00:41:01.060 align:start position:0%
great examples for project structure and
 

00:41:01.060 --> 00:41:03.240 align:start position:0%
great examples for project structure and
blueprints<00:41:01.650><c> examples</c><00:41:02.650><c> of</c><00:41:02.830><c> the</c><00:41:02.890><c> kinds</c><00:41:03.190><c> of</c>

00:41:03.240 --> 00:41:03.250 align:start position:0%
blueprints examples of the kinds of
 

00:41:03.250 --> 00:41:04.710 align:start position:0%
blueprints examples of the kinds of
tests<00:41:03.490><c> you</c><00:41:03.610><c> should</c><00:41:03.640><c> be</c><00:41:03.880><c> writing</c><00:41:04.090><c> at</c><00:41:04.390><c> different</c>

00:41:04.710 --> 00:41:04.720 align:start position:0%
tests you should be writing at different
 

00:41:04.720 --> 00:41:07.980 align:start position:0%
tests you should be writing at different
level<00:41:05.020><c> using</c><00:41:05.590><c> the</c><00:41:05.830><c> unified</c><00:41:06.220><c> API</c><00:41:06.400><c> and</c><00:41:07.060><c> see</c><00:41:07.720><c> just</c>

00:41:07.980 --> 00:41:07.990 align:start position:0%
level using the unified API and see just
 

00:41:07.990 --> 00:41:09.750 align:start position:0%
level using the unified API and see just
what<00:41:08.080><c> kind</c><00:41:08.380><c> of</c><00:41:08.620><c> tests</c><00:41:08.980><c> are</c><00:41:09.070><c> possible</c><00:41:09.460><c> to</c><00:41:09.580><c> run</c>

00:41:09.750 --> 00:41:09.760 align:start position:0%
what kind of tests are possible to run
 

00:41:09.760 --> 00:41:12.330 align:start position:0%
what kind of tests are possible to run
on<00:41:09.940><c> an</c><00:41:10.300><c> off</c><00:41:10.720><c> device</c><00:41:11.050><c> which</c><00:41:11.770><c> leads</c><00:41:12.040><c> the</c><00:41:12.190><c> way</c><00:41:12.310><c> to</c>

00:41:12.330 --> 00:41:12.340 align:start position:0%
on an off device which leads the way to
 

00:41:12.340 --> 00:41:14.910 align:start position:0%
on an off device which leads the way to
project<00:41:12.700><c> nitrogen</c><00:41:13.440><c> this</c><00:41:14.440><c> is</c><00:41:14.650><c> all</c><00:41:14.770><c> available</c>

00:41:14.910 --> 00:41:14.920 align:start position:0%
project nitrogen this is all available
 

00:41:14.920 --> 00:41:17.760 align:start position:0%
project nitrogen this is all available
online<00:41:15.400><c> now</c><00:41:15.790><c> and</c><00:41:16.120><c> is</c><00:41:16.780><c> right</c><00:41:17.020><c> available</c><00:41:17.620><c> right</c>

00:41:17.760 --> 00:41:17.770 align:start position:0%
online now and is right available right
 

00:41:17.770 --> 00:41:18.550 align:start position:0%
online now and is right available right
here<00:41:17.830><c> in</c><00:41:18.310><c> the</c>

00:41:18.550 --> 00:41:18.560 align:start position:0%
here in the
 

00:41:18.560 --> 00:41:21.190 align:start position:0%
here in the
whole<00:41:18.710><c> other</c><00:41:18.920><c> section</c><00:41:19.190><c> for</c><00:41:19.700><c> you</c><00:41:19.790><c> to</c><00:41:19.820><c> check</c><00:41:20.090><c> out</c>

00:41:21.190 --> 00:41:21.200 align:start position:0%
whole other section for you to check out
 

00:41:21.200 --> 00:41:42.590 align:start position:0%
whole other section for you to check out
[Music]

