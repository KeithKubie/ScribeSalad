WEBVTT
Kind: captions
Language: en

00:00:08.070 --> 00:00:10.350
hey everybody this is jeff posnick from

00:00:10.350 --> 00:00:10.360
hey everybody this is jeff posnick from
 

00:00:10.360 --> 00:00:12.170
hey everybody this is jeff posnick from
the youtube developer relations team and

00:00:12.170 --> 00:00:12.180
the youtube developer relations team and
 

00:00:12.180 --> 00:00:14.520
the youtube developer relations team and
we're continuing a series of videos

00:00:14.520 --> 00:00:14.530
we're continuing a series of videos
 

00:00:14.530 --> 00:00:17.880
we're continuing a series of videos
about the migration between the older

00:00:17.880 --> 00:00:17.890
about the migration between the older
 

00:00:17.890 --> 00:00:20.519
about the migration between the older
legacy version of the YouTube data API

00:00:20.519 --> 00:00:20.529
legacy version of the YouTube data API
 

00:00:20.529 --> 00:00:23.820
legacy version of the YouTube data API
v2 onto the newer version of the data

00:00:23.820 --> 00:00:23.830
v2 onto the newer version of the data
 

00:00:23.830 --> 00:00:26.670
v2 onto the newer version of the data
API v3 we strongly encourage folks to

00:00:26.670 --> 00:00:26.680
API v3 we strongly encourage folks to
 

00:00:26.680 --> 00:00:28.650
API v3 we strongly encourage folks to
begin that migration process if you

00:00:28.650 --> 00:00:28.660
begin that migration process if you
 

00:00:28.660 --> 00:00:30.180
begin that migration process if you
haven't done so yet and we wanted to

00:00:30.180 --> 00:00:30.190
haven't done so yet and we wanted to
 

00:00:30.190 --> 00:00:33.180
haven't done so yet and we wanted to
highlight certain types of functionality

00:00:33.180 --> 00:00:33.190
highlight certain types of functionality
 

00:00:33.190 --> 00:00:35.430
highlight certain types of functionality
and talk about the v2 way of doing

00:00:35.430 --> 00:00:35.440
and talk about the v2 way of doing
 

00:00:35.440 --> 00:00:37.290
and talk about the v2 way of doing
things and how you would go and do the

00:00:37.290 --> 00:00:37.300
things and how you would go and do the
 

00:00:37.300 --> 00:00:39.930
things and how you would go and do the
same sort of thing in v3 we're going to

00:00:39.930 --> 00:00:39.940
same sort of thing in v3 we're going to
 

00:00:39.940 --> 00:00:42.660
same sort of thing in v3 we're going to
start by talking about how you would

00:00:42.660 --> 00:00:42.670
start by talking about how you would
 

00:00:42.670 --> 00:00:44.819
start by talking about how you would
actually get a list of videos that are

00:00:44.819 --> 00:00:44.829
actually get a list of videos that are
 

00:00:44.829 --> 00:00:48.319
actually get a list of videos that are
in a given channel using v3 the data API

00:00:48.319 --> 00:00:48.329
in a given channel using v3 the data API
 

00:00:48.329 --> 00:00:51.630
in a given channel using v3 the data API
folks familiar with v2 the data API know

00:00:51.630 --> 00:00:51.640
folks familiar with v2 the data API know
 

00:00:51.640 --> 00:00:53.369
folks familiar with v2 the data API know
that you do this pretty much with a

00:00:53.369 --> 00:00:53.379
that you do this pretty much with a
 

00:00:53.379 --> 00:00:57.119
that you do this pretty much with a
single restful api call you look for the

00:00:57.119 --> 00:00:57.129
single restful api call you look for the
 

00:00:57.129 --> 00:00:59.610
single restful api call you look for the
user uploads feed for a given channel

00:00:59.610 --> 00:00:59.620
user uploads feed for a given channel
 

00:00:59.620 --> 00:01:02.430
user uploads feed for a given channel
and you get back a list of videos you

00:01:02.430 --> 00:01:02.440
and you get back a list of videos you
 

00:01:02.440 --> 00:01:05.040
and you get back a list of videos you
know by default and XML format although

00:01:05.040 --> 00:01:05.050
know by default and XML format although
 

00:01:05.050 --> 00:01:06.810
know by default and XML format although
you could also ask for it in JSON format

00:01:06.810 --> 00:01:06.820
you could also ask for it in JSON format
 

00:01:06.820 --> 00:01:11.820
you could also ask for it in JSON format
if you want in v3 involves slightly

00:01:11.820 --> 00:01:11.830
if you want in v3 involves slightly
 

00:01:11.830 --> 00:01:13.859
if you want in v3 involves slightly
different set of operations and it's

00:01:13.859 --> 00:01:13.869
different set of operations and it's
 

00:01:13.869 --> 00:01:15.270
different set of operations and it's
just kind of keeping with the overall

00:01:15.270 --> 00:01:15.280
just kind of keeping with the overall
 

00:01:15.280 --> 00:01:18.870
just kind of keeping with the overall
philosophy with v3 in that you return

00:01:18.870 --> 00:01:18.880
philosophy with v3 in that you return
 

00:01:18.880 --> 00:01:20.910
philosophy with v3 in that you return
you know a very specific set of

00:01:20.910 --> 00:01:20.920
you know a very specific set of
 

00:01:20.920 --> 00:01:23.820
you know a very specific set of
information for a specific API call

00:01:23.820 --> 00:01:23.830
information for a specific API call
 

00:01:23.830 --> 00:01:25.260
information for a specific API call
rather than returning a lot of

00:01:25.260 --> 00:01:25.270
rather than returning a lot of
 

00:01:25.270 --> 00:01:26.999
rather than returning a lot of
information so it's a little bit more

00:01:26.999 --> 00:01:27.009
information so it's a little bit more
 

00:01:27.009 --> 00:01:30.180
information so it's a little bit more
focused API and the other main

00:01:30.180 --> 00:01:30.190
focused API and the other main
 

00:01:30.190 --> 00:01:32.790
focused API and the other main
difference is that in v3 we work

00:01:32.790 --> 00:01:32.800
difference is that in v3 we work
 

00:01:32.800 --> 00:01:36.330
difference is that in v3 we work
primarily with channel IDs rather than

00:01:36.330 --> 00:01:36.340
primarily with channel IDs rather than
 

00:01:36.340 --> 00:01:39.240
primarily with channel IDs rather than
legacy user names so if you're familiar

00:01:39.240 --> 00:01:39.250
legacy user names so if you're familiar
 

00:01:39.250 --> 00:01:41.370
legacy user names so if you're familiar
with the more v2 way of doing things

00:01:41.370 --> 00:01:41.380
with the more v2 way of doing things
 

00:01:41.380 --> 00:01:42.630
with the more v2 way of doing things
where every channel had a legacy

00:01:42.630 --> 00:01:42.640
where every channel had a legacy
 

00:01:42.640 --> 00:01:45.630
where every channel had a legacy
username you know you need to kind of

00:01:45.630 --> 00:01:45.640
username you know you need to kind of
 

00:01:45.640 --> 00:01:47.370
username you know you need to kind of
start thinking about channel IDs instead

00:01:47.370 --> 00:01:47.380
start thinking about channel IDs instead
 

00:01:47.380 --> 00:01:49.380
start thinking about channel IDs instead
and this is particularly important

00:01:49.380 --> 00:01:49.390
and this is particularly important
 

00:01:49.390 --> 00:01:51.630
and this is particularly important
because moving forward not every channel

00:01:51.630 --> 00:01:51.640
because moving forward not every channel
 

00:01:51.640 --> 00:01:53.669
because moving forward not every channel
does have a legacy username so if you

00:01:53.669 --> 00:01:53.679
does have a legacy username so if you
 

00:01:53.679 --> 00:01:56.339
does have a legacy username so if you
didn't want to uniquely identify any

00:01:56.339 --> 00:01:56.349
didn't want to uniquely identify any
 

00:01:56.349 --> 00:01:58.919
didn't want to uniquely identify any
given Channel there you know arguably

00:01:58.919 --> 00:01:58.929
given Channel there you know arguably
 

00:01:58.929 --> 00:02:00.359
given Channel there you know arguably
those channels that don't have legacy

00:02:00.359 --> 00:02:00.369
those channels that don't have legacy
 

00:02:00.369 --> 00:02:01.710
those channels that don't have legacy
usernames and you do need to get

00:02:01.710 --> 00:02:01.720
usernames and you do need to get
 

00:02:01.720 --> 00:02:03.870
usernames and you do need to get
comfortable working with channel IDs

00:02:03.870 --> 00:02:03.880
comfortable working with channel IDs
 

00:02:03.880 --> 00:02:05.699
comfortable working with channel IDs
so let's actually walk through the steps

00:02:05.699 --> 00:02:05.709
so let's actually walk through the steps
 

00:02:05.709 --> 00:02:07.889
so let's actually walk through the steps
of doing the operation of getting the

00:02:07.889 --> 00:02:07.899
of doing the operation of getting the
 

00:02:07.899 --> 00:02:10.919
of doing the operation of getting the
uploads in a channel using Version three

00:02:10.919 --> 00:02:10.929
uploads in a channel using Version three
 

00:02:10.929 --> 00:02:13.050
uploads in a channel using Version three
of the API and we're going to switch now

00:02:13.050 --> 00:02:13.060
of the API and we're going to switch now
 

00:02:13.060 --> 00:02:15.990
of the API and we're going to switch now
to a screen share that I have up and

00:02:15.990 --> 00:02:16.000
to a screen share that I have up and
 

00:02:16.000 --> 00:02:18.030
to a screen share that I have up and
what I have open here is the Google API

00:02:18.030 --> 00:02:18.040
what I have open here is the Google API
 

00:02:18.040 --> 00:02:18.630
what I have open here is the Google API
Explorer

00:02:18.630 --> 00:02:18.640
Explorer
 

00:02:18.640 --> 00:02:21.240
Explorer
this is a great resource for playing

00:02:21.240 --> 00:02:21.250
this is a great resource for playing
 

00:02:21.250 --> 00:02:24.210
this is a great resource for playing
around with version 3 of the data API or

00:02:24.210 --> 00:02:24.220
around with version 3 of the data API or
 

00:02:24.220 --> 00:02:27.150
around with version 3 of the data API or
you know using our analytics API or any

00:02:27.150 --> 00:02:27.160
you know using our analytics API or any
 

00:02:27.160 --> 00:02:29.990
you know using our analytics API or any
other of the modern Google API s and

00:02:29.990 --> 00:02:30.000
other of the modern Google API s and
 

00:02:30.000 --> 00:02:33.690
other of the modern Google API s and
gives you a way making API calls within

00:02:33.690 --> 00:02:33.700
gives you a way making API calls within
 

00:02:33.700 --> 00:02:36.510
gives you a way making API calls within
the context of this nice browser web

00:02:36.510 --> 00:02:36.520
the context of this nice browser web
 

00:02:36.520 --> 00:02:38.100
the context of this nice browser web
form and trying out different parameters

00:02:38.100 --> 00:02:38.110
form and trying out different parameters
 

00:02:38.110 --> 00:02:40.740
form and trying out different parameters
so when you are actually writing code

00:02:40.740 --> 00:02:40.750
so when you are actually writing code
 

00:02:40.750 --> 00:02:43.290
so when you are actually writing code
for using this sort of thing in your own

00:02:43.290 --> 00:02:43.300
for using this sort of thing in your own
 

00:02:43.300 --> 00:02:44.640
for using this sort of thing in your own
applications you're probably gonna want

00:02:44.640 --> 00:02:44.650
applications you're probably gonna want
 

00:02:44.650 --> 00:02:46.740
applications you're probably gonna want
to use our client libraries but this is

00:02:46.740 --> 00:02:46.750
to use our client libraries but this is
 

00:02:46.750 --> 00:02:48.900
to use our client libraries but this is
kind of a neutral agnostic way of

00:02:48.900 --> 00:02:48.910
kind of a neutral agnostic way of
 

00:02:48.910 --> 00:02:52.110
kind of a neutral agnostic way of
showing off the API calls so that being

00:02:52.110 --> 00:02:52.120
showing off the API calls so that being
 

00:02:52.120 --> 00:02:54.449
showing off the API calls so that being
said there are two different steps for

00:02:54.449 --> 00:02:54.459
said there are two different steps for
 

00:02:54.459 --> 00:02:57.540
said there are two different steps for
getting the uploads in a given channel

00:02:57.540 --> 00:02:57.550
getting the uploads in a given channel
 

00:02:57.550 --> 00:03:00.270
getting the uploads in a given channel
assuming that you know we're going to

00:03:00.270 --> 00:03:00.280
assuming that you know we're going to
 

00:03:00.280 --> 00:03:01.110
assuming that you know we're going to
assume right now that we know that

00:03:01.110 --> 00:03:01.120
assume right now that we know that
 

00:03:01.120 --> 00:03:04.500
assume right now that we know that
channels legacy username the first step

00:03:04.500 --> 00:03:04.510
channels legacy username the first step
 

00:03:04.510 --> 00:03:11.460
channels legacy username the first step
is to get back the playlist ID that

00:03:11.460 --> 00:03:11.470
is to get back the playlist ID that
 

00:03:11.470 --> 00:03:13.860
is to get back the playlist ID that
corresponds to the uploads for that

00:03:13.860 --> 00:03:13.870
corresponds to the uploads for that
 

00:03:13.870 --> 00:03:17.400
corresponds to the uploads for that
channel and the way we do that is by

00:03:17.400 --> 00:03:17.410
channel and the way we do that is by
 

00:03:17.410 --> 00:03:21.180
channel and the way we do that is by
making a YouTube channels list call and

00:03:21.180 --> 00:03:21.190
making a YouTube channels list call and
 

00:03:21.190 --> 00:03:22.680
making a YouTube channels list call and
we have that open here in the API

00:03:22.680 --> 00:03:22.690
we have that open here in the API
 

00:03:22.690 --> 00:03:25.860
we have that open here in the API
Explorer and when making version 3 API

00:03:25.860 --> 00:03:25.870
Explorer and when making version 3 API
 

00:03:25.870 --> 00:03:29.460
Explorer and when making version 3 API
calls pretty much the convention that

00:03:29.460 --> 00:03:29.470
calls pretty much the convention that
 

00:03:29.470 --> 00:03:32.310
calls pretty much the convention that
all the list operations follow is that

00:03:32.310 --> 00:03:32.320
all the list operations follow is that
 

00:03:32.320 --> 00:03:35.190
all the list operations follow is that
you have one parameter called part and

00:03:35.190 --> 00:03:35.200
you have one parameter called part and
 

00:03:35.200 --> 00:03:39.150
you have one parameter called part and
you set this to a value that is a little

00:03:39.150 --> 00:03:39.160
you set this to a value that is a little
 

00:03:39.160 --> 00:03:41.880
you set this to a value that is a little
bit dependent upon the given method in

00:03:41.880 --> 00:03:41.890
bit dependent upon the given method in
 

00:03:41.890 --> 00:03:43.949
bit dependent upon the given method in
this particular case the YouTube

00:03:43.949 --> 00:03:43.959
this particular case the YouTube
 

00:03:43.959 --> 00:03:47.190
this particular case the YouTube
channels that list takes these values

00:03:47.190 --> 00:03:47.200
channels that list takes these values
 

00:03:47.200 --> 00:03:49.650
channels that list takes these values
over here in the documentation we

00:03:49.650 --> 00:03:49.660
over here in the documentation we
 

00:03:49.660 --> 00:03:52.319
over here in the documentation we
describe exactly what all of them do and

00:03:52.319 --> 00:03:52.329
describe exactly what all of them do and
 

00:03:52.329 --> 00:03:55.020
describe exactly what all of them do and
what we want is the content details part

00:03:55.020 --> 00:03:55.030
what we want is the content details part
 

00:03:55.030 --> 00:03:57.330
what we want is the content details part
so instead of returning every single

00:03:57.330 --> 00:03:57.340
so instead of returning every single
 

00:03:57.340 --> 00:03:59.039
so instead of returning every single
piece of information that we know about

00:03:59.039 --> 00:03:59.049
piece of information that we know about
 

00:03:59.049 --> 00:04:01.740
piece of information that we know about
the channel in every API response which

00:04:01.740 --> 00:04:01.750
the channel in every API response which
 

00:04:01.750 --> 00:04:03.539
the channel in every API response which
could get very bloated you have to

00:04:03.539 --> 00:04:03.549
could get very bloated you have to
 

00:04:03.549 --> 00:04:05.009
could get very bloated you have to
explicitly state what kind of

00:04:05.009 --> 00:04:05.019
explicitly state what kind of
 

00:04:05.019 --> 00:04:06.660
explicitly state what kind of
information you want to get back and you

00:04:06.660 --> 00:04:06.670
information you want to get back and you
 

00:04:06.670 --> 00:04:10.020
information you want to get back and you
get a nice really compact API response

00:04:10.020 --> 00:04:10.030
get a nice really compact API response
 

00:04:10.030 --> 00:04:12.330
get a nice really compact API response
back so we're going to say we want the

00:04:12.330 --> 00:04:12.340
back so we're going to say we want the
 

00:04:12.340 --> 00:04:14.069
back so we're going to say we want the
content details part back and this is

00:04:14.069 --> 00:04:14.079
content details part back and this is
 

00:04:14.079 --> 00:04:16.650
content details part back and this is
how we get the uploads playlist I do

00:04:16.650 --> 00:04:16.660
how we get the uploads playlist I do
 

00:04:16.660 --> 00:04:19.710
how we get the uploads playlist I do
and there's this parameter called for

00:04:19.710 --> 00:04:19.720
and there's this parameter called for
 

00:04:19.720 --> 00:04:23.910
and there's this parameter called for
username as the documentation states it

00:04:23.910 --> 00:04:23.920
username as the documentation states it
 

00:04:23.920 --> 00:04:25.710
username as the documentation states it
lets you pass in a legacy YouTube

00:04:25.710 --> 00:04:25.720
lets you pass in a legacy YouTube
 

00:04:25.720 --> 00:04:27.720
lets you pass in a legacy YouTube
username assuming that the channel that

00:04:27.720 --> 00:04:27.730
username assuming that the channel that
 

00:04:27.730 --> 00:04:30.450
username assuming that the channel that
you're interested in has one and it will

00:04:30.450 --> 00:04:30.460
you're interested in has one and it will
 

00:04:30.460 --> 00:04:32.370
you're interested in has one and it will
return information corresponding to that

00:04:32.370 --> 00:04:32.380
return information corresponding to that
 

00:04:32.380 --> 00:04:33.450
return information corresponding to that
channel so this is kind of like a

00:04:33.450 --> 00:04:33.460
channel so this is kind of like a
 

00:04:33.460 --> 00:04:36.300
channel so this is kind of like a
shortcut of getting information about a

00:04:36.300 --> 00:04:36.310
shortcut of getting information about a
 

00:04:36.310 --> 00:04:37.680
shortcut of getting information about a
channel or looking up the channel's ID

00:04:37.680 --> 00:04:37.690
channel or looking up the channel's ID
 

00:04:37.690 --> 00:04:41.010
channel or looking up the channel's ID
if all you know is the legacy username

00:04:41.010 --> 00:04:41.020
if all you know is the legacy username
 

00:04:41.020 --> 00:04:43.530
if all you know is the legacy username
so in this particular case we're going

00:04:43.530 --> 00:04:43.540
so in this particular case we're going
 

00:04:43.540 --> 00:04:45.390
so in this particular case we're going
to look up the Google developers channel

00:04:45.390 --> 00:04:45.400
to look up the Google developers channel
 

00:04:45.400 --> 00:04:48.810
to look up the Google developers channel
that's the legacy username and we're

00:04:48.810 --> 00:04:48.820
that's the legacy username and we're
 

00:04:48.820 --> 00:04:50.070
that's the legacy username and we're
gonna scroll down a bit we don't need

00:04:50.070 --> 00:04:50.080
gonna scroll down a bit we don't need
 

00:04:50.080 --> 00:04:51.720
gonna scroll down a bit we don't need
any of these other fields right now and

00:04:51.720 --> 00:04:51.730
any of these other fields right now and
 

00:04:51.730 --> 00:04:54.450
any of these other fields right now and
click execute and it's making the API

00:04:54.450 --> 00:04:54.460
click execute and it's making the API
 

00:04:54.460 --> 00:04:56.820
click execute and it's making the API
call for us you'll see these are the

00:04:56.820 --> 00:04:56.830
call for us you'll see these are the
 

00:04:56.830 --> 00:04:58.530
call for us you'll see these are the
parameters this is the actual restful

00:04:58.530 --> 00:04:58.540
parameters this is the actual restful
 

00:04:58.540 --> 00:05:01.530
parameters this is the actual restful
URL that's being requested and you get

00:05:01.530 --> 00:05:01.540
URL that's being requested and you get
 

00:05:01.540 --> 00:05:05.730
URL that's being requested and you get
back this JSON response and you'll see

00:05:05.730 --> 00:05:05.740
back this JSON response and you'll see
 

00:05:05.740 --> 00:05:08.700
back this JSON response and you'll see
over here because we're only asking for

00:05:08.700 --> 00:05:08.710
over here because we're only asking for
 

00:05:08.710 --> 00:05:10.860
over here because we're only asking for
information about one specific channel

00:05:10.860 --> 00:05:10.870
information about one specific channel
 

00:05:10.870 --> 00:05:13.320
information about one specific channel
the items return array only has one

00:05:13.320 --> 00:05:13.330
the items return array only has one
 

00:05:13.330 --> 00:05:16.020
the items return array only has one
elements not surprisingly you do get

00:05:16.020 --> 00:05:16.030
elements not surprisingly you do get
 

00:05:16.030 --> 00:05:18.090
elements not surprisingly you do get
this channel ID right here if we you

00:05:18.090 --> 00:05:18.100
this channel ID right here if we you
 

00:05:18.100 --> 00:05:19.680
this channel ID right here if we you
know did want to use that information

00:05:19.680 --> 00:05:19.690
know did want to use that information
 

00:05:19.690 --> 00:05:22.470
know did want to use that information
later on that might be useful but in

00:05:22.470 --> 00:05:22.480
later on that might be useful but in
 

00:05:22.480 --> 00:05:24.090
later on that might be useful but in
particular context of what we're doing

00:05:24.090 --> 00:05:24.100
particular context of what we're doing
 

00:05:24.100 --> 00:05:28.110
particular context of what we're doing
here we want the uploads playlist ID so

00:05:28.110 --> 00:05:28.120
here we want the uploads playlist ID so
 

00:05:28.120 --> 00:05:30.240
here we want the uploads playlist ID so
I'm going to just copy that if you're

00:05:30.240 --> 00:05:30.250
I'm going to just copy that if you're
 

00:05:30.250 --> 00:05:32.490
I'm going to just copy that if you're
writing real code you would obviously

00:05:32.490 --> 00:05:32.500
writing real code you would obviously
 

00:05:32.500 --> 00:05:34.620
writing real code you would obviously
save it to a local variable and use it

00:05:34.620 --> 00:05:34.630
save it to a local variable and use it
 

00:05:34.630 --> 00:05:37.680
save it to a local variable and use it
in a follow-up call and I'm going to now

00:05:37.680 --> 00:05:37.690
in a follow-up call and I'm going to now
 

00:05:37.690 --> 00:05:42.300
in a follow-up call and I'm going to now
make another API call and just open up a

00:05:42.300 --> 00:05:42.310
make another API call and just open up a
 

00:05:42.310 --> 00:05:45.480
make another API call and just open up a
new tab for that and this is going to be

00:05:45.480 --> 00:05:45.490
new tab for that and this is going to be
 

00:05:45.490 --> 00:05:51.430
new tab for that and this is going to be
a YouTube playlist items list

00:05:51.430 --> 00:05:51.440
a YouTube playlist items list
 

00:05:51.440 --> 00:05:54.580
a YouTube playlist items list
and you know again the thing to keep in

00:05:54.580 --> 00:05:54.590
and you know again the thing to keep in
 

00:05:54.590 --> 00:05:57.280
and you know again the thing to keep in
mind is that in Version three of the API

00:05:57.280 --> 00:05:57.290
mind is that in Version three of the API
 

00:05:57.290 --> 00:05:59.920
mind is that in Version three of the API
many things are considered playlists

00:05:59.920 --> 00:05:59.930
many things are considered playlists
 

00:05:59.930 --> 00:06:02.620
many things are considered playlists
like if you instead of in version two

00:06:02.620 --> 00:06:02.630
like if you instead of in version two
 

00:06:02.630 --> 00:06:04.570
like if you instead of in version two
where you would go and get specifically

00:06:04.570 --> 00:06:04.580
where you would go and get specifically
 

00:06:04.580 --> 00:06:07.150
where you would go and get specifically
the uploads feed corresponding to a

00:06:07.150 --> 00:06:07.160
the uploads feed corresponding to a
 

00:06:07.160 --> 00:06:09.460
the uploads feed corresponding to a
given channel in Version three you first

00:06:09.460 --> 00:06:09.470
given channel in Version three you first
 

00:06:09.470 --> 00:06:11.530
given channel in Version three you first
look up the playlist that corresponds to

00:06:11.530 --> 00:06:11.540
look up the playlist that corresponds to
 

00:06:11.540 --> 00:06:13.540
look up the playlist that corresponds to
the uploads for the channel and then you

00:06:13.540 --> 00:06:13.550
the uploads for the channel and then you
 

00:06:13.550 --> 00:06:15.460
the uploads for the channel and then you
do the standard YouTube playlist items

00:06:15.460 --> 00:06:15.470
do the standard YouTube playlist items
 

00:06:15.470 --> 00:06:17.740
do the standard YouTube playlist items
list call and this is the same API call

00:06:17.740 --> 00:06:17.750
list call and this is the same API call
 

00:06:17.750 --> 00:06:19.090
list call and this is the same API call
that you would use if you were getting

00:06:19.090 --> 00:06:19.100
that you would use if you were getting
 

00:06:19.100 --> 00:06:21.280
that you would use if you were getting
information about you know a

00:06:21.280 --> 00:06:21.290
information about you know a
 

00:06:21.290 --> 00:06:23.410
information about you know a
user-generated playlist

00:06:23.410 --> 00:06:23.420
user-generated playlist
 

00:06:23.420 --> 00:06:26.110
user-generated playlist
it's really quite equivalent so you'll

00:06:26.110 --> 00:06:26.120
it's really quite equivalent so you'll
 

00:06:26.120 --> 00:06:27.340
it's really quite equivalent so you'll
see that a lot in version 3 of the API

00:06:27.340 --> 00:06:27.350
see that a lot in version 3 of the API
 

00:06:27.350 --> 00:06:30.580
see that a lot in version 3 of the API
where we kind of reuse methods or kind

00:06:30.580 --> 00:06:30.590
where we kind of reuse methods or kind
 

00:06:30.590 --> 00:06:34.510
where we kind of reuse methods or kind
of overload the the function of methods

00:06:34.510 --> 00:06:34.520
of overload the the function of methods
 

00:06:34.520 --> 00:06:37.150
of overload the the function of methods
so that they could be used for a variety

00:06:37.150 --> 00:06:37.160
so that they could be used for a variety
 

00:06:37.160 --> 00:06:39.760
so that they could be used for a variety
of different operations so in this

00:06:39.760 --> 00:06:39.770
of different operations so in this
 

00:06:39.770 --> 00:06:41.770
of different operations so in this
particular case we have this part primer

00:06:41.770 --> 00:06:41.780
particular case we have this part primer
 

00:06:41.780 --> 00:06:43.780
particular case we have this part primer
again I'm going to pass in the value

00:06:43.780 --> 00:06:43.790
again I'm going to pass in the value
 

00:06:43.790 --> 00:06:49.360
again I'm going to pass in the value
snippet here and snippet is a part of

00:06:49.360 --> 00:06:49.370
snippet here and snippet is a part of
 

00:06:49.370 --> 00:06:51.040
snippet here and snippet is a part of
that it contains the most relevant

00:06:51.040 --> 00:06:51.050
that it contains the most relevant
 

00:06:51.050 --> 00:06:55.120
that it contains the most relevant
information about any given response

00:06:55.120 --> 00:06:55.130
information about any given response
 

00:06:55.130 --> 00:06:57.460
information about any given response
item the things that would be useful if

00:06:57.460 --> 00:06:57.470
item the things that would be useful if
 

00:06:57.470 --> 00:06:59.409
item the things that would be useful if
you were to for instance want to display

00:06:59.409 --> 00:06:59.419
you were to for instance want to display
 

00:06:59.419 --> 00:07:01.690
you were to for instance want to display
information about the response like in a

00:07:01.690 --> 00:07:01.700
information about the response like in a
 

00:07:01.700 --> 00:07:03.159
information about the response like in a
web browser so it'll contain like the

00:07:03.159 --> 00:07:03.169
web browser so it'll contain like the
 

00:07:03.169 --> 00:07:05.290
web browser so it'll contain like the
title for each item it'll contain a

00:07:05.290 --> 00:07:05.300
title for each item it'll contain a
 

00:07:05.300 --> 00:07:07.570
title for each item it'll contain a
thumbnail will contain a description and

00:07:07.570 --> 00:07:07.580
thumbnail will contain a description and
 

00:07:07.580 --> 00:07:09.550
thumbnail will contain a description and
that's type of information that we want

00:07:09.550 --> 00:07:09.560
that's type of information that we want
 

00:07:09.560 --> 00:07:12.930
that's type of information that we want
about all the uploads in a given channel

00:07:12.930 --> 00:07:12.940
about all the uploads in a given channel
 

00:07:12.940 --> 00:07:18.690
about all the uploads in a given channel
so I am going to take that copied

00:07:18.690 --> 00:07:18.700
so I am going to take that copied
 

00:07:18.700 --> 00:07:20.770
so I am going to take that copied
playlist ID and I'm going to paste it

00:07:20.770 --> 00:07:20.780
playlist ID and I'm going to paste it
 

00:07:20.780 --> 00:07:23.620
playlist ID and I'm going to paste it
into the playlist ID field this is

00:07:23.620 --> 00:07:23.630
into the playlist ID field this is
 

00:07:23.630 --> 00:07:25.240
into the playlist ID field this is
something to really keep in mind you

00:07:25.240 --> 00:07:25.250
something to really keep in mind you
 

00:07:25.250 --> 00:07:26.820
something to really keep in mind you
want this into playlist ID parameter

00:07:26.820 --> 00:07:26.830
want this into playlist ID parameter
 

00:07:26.830 --> 00:07:29.470
want this into playlist ID parameter
there's a separate parameter called ID

00:07:29.470 --> 00:07:29.480
there's a separate parameter called ID
 

00:07:29.480 --> 00:07:32.800
there's a separate parameter called ID
and that takes in something that's

00:07:32.800 --> 00:07:32.810
and that takes in something that's
 

00:07:32.810 --> 00:07:36.100
and that takes in something that's
different than the playlist ID so please

00:07:36.100 --> 00:07:36.110
different than the playlist ID so please
 

00:07:36.110 --> 00:07:38.470
different than the playlist ID so please
you know this common source of confusion

00:07:38.470 --> 00:07:38.480
you know this common source of confusion
 

00:07:38.480 --> 00:07:40.659
you know this common source of confusion
make sure that you're setting the

00:07:40.659 --> 00:07:40.669
make sure that you're setting the
 

00:07:40.669 --> 00:07:42.430
make sure that you're setting the
playlist ID parameter in this particular

00:07:42.430 --> 00:07:42.440
playlist ID parameter in this particular
 

00:07:42.440 --> 00:07:45.220
playlist ID parameter in this particular
case and I'm also going to set max

00:07:45.220 --> 00:07:45.230
case and I'm also going to set max
 

00:07:45.230 --> 00:07:48.310
case and I'm also going to set max
results to fifty one of the things

00:07:48.310 --> 00:07:48.320
results to fifty one of the things
 

00:07:48.320 --> 00:07:50.409
results to fifty one of the things
you'll notice is that max max results is

00:07:50.409 --> 00:07:50.419
you'll notice is that max max results is
 

00:07:50.419 --> 00:07:53.020
you'll notice is that max max results is
by default set to five inversion through

00:07:53.020 --> 00:07:53.030
by default set to five inversion through
 

00:07:53.030 --> 00:07:55.840
by default set to five inversion through
the API which is fine if you are going

00:07:55.840 --> 00:07:55.850
the API which is fine if you are going
 

00:07:55.850 --> 00:07:57.310
the API which is fine if you are going
to be you know displaying the results on

00:07:57.310 --> 00:07:57.320
to be you know displaying the results on
 

00:07:57.320 --> 00:07:59.380
to be you know displaying the results on
a web page and you don't want a really

00:07:59.380 --> 00:07:59.390
a web page and you don't want a really
 

00:07:59.390 --> 00:08:02.590
a web page and you don't want a really
really long list of videos but you know

00:08:02.590 --> 00:08:02.600
really long list of videos but you know
 

00:08:02.600 --> 00:08:04.440
really long list of videos but you know
in this particular case I want to get in

00:08:04.440 --> 00:08:04.450
in this particular case I want to get in
 

00:08:04.450 --> 00:08:07.320
in this particular case I want to get in
about as many as I could in a single API

00:08:07.320 --> 00:08:07.330
about as many as I could in a single API
 

00:08:07.330 --> 00:08:11.150
about as many as I could in a single API
call and most you could get back is 50

00:08:11.150 --> 00:08:11.160
call and most you could get back is 50
 

00:08:11.160 --> 00:08:14.990
call and most you could get back is 50
and click execute at this point and

00:08:14.990 --> 00:08:15.000
and click execute at this point and
 

00:08:15.000 --> 00:08:17.520
and click execute at this point and
scroll down and you'll see this items

00:08:17.520 --> 00:08:17.530
scroll down and you'll see this items
 

00:08:17.530 --> 00:08:21.480
scroll down and you'll see this items
array similar to what we saw for the

00:08:21.480 --> 00:08:21.490
array similar to what we saw for the
 

00:08:21.490 --> 00:08:23.250
array similar to what we saw for the
previous one but in this case the items

00:08:23.250 --> 00:08:23.260
previous one but in this case the items
 

00:08:23.260 --> 00:08:26.070
previous one but in this case the items
array has multiple items in it because

00:08:26.070 --> 00:08:26.080
array has multiple items in it because
 

00:08:26.080 --> 00:08:28.170
array has multiple items in it because
there are not surprisingly quite a few

00:08:28.170 --> 00:08:28.180
there are not surprisingly quite a few
 

00:08:28.180 --> 00:08:31.730
there are not surprisingly quite a few
uploads in the Google developers Channel

00:08:31.730 --> 00:08:31.740
uploads in the Google developers Channel
 

00:08:31.740 --> 00:08:33.750
uploads in the Google developers Channel
you'll have information about like when

00:08:33.750 --> 00:08:33.760
you'll have information about like when
 

00:08:33.760 --> 00:08:36.540
you'll have information about like when
that upload was published and titles

00:08:36.540 --> 00:08:36.550
that upload was published and titles
 

00:08:36.550 --> 00:08:38.610
that upload was published and titles
descriptions of some nails things I

00:08:38.610 --> 00:08:38.620
descriptions of some nails things I
 

00:08:38.620 --> 00:08:41.010
descriptions of some nails things I
mentioned before one other thing that I

00:08:41.010 --> 00:08:41.020
mentioned before one other thing that I
 

00:08:41.020 --> 00:08:43.080
mentioned before one other thing that I
wanted to point out is the way paging

00:08:43.080 --> 00:08:43.090
wanted to point out is the way paging
 

00:08:43.090 --> 00:08:45.840
wanted to point out is the way paging
works in version 3 of the API because

00:08:45.840 --> 00:08:45.850
works in version 3 of the API because
 

00:08:45.850 --> 00:08:47.160
works in version 3 of the API because
this is something that's different than

00:08:47.160 --> 00:08:47.170
this is something that's different than
 

00:08:47.170 --> 00:08:49.830
this is something that's different than
version 2 as well so previously in

00:08:49.830 --> 00:08:49.840
version 2 as well so previously in
 

00:08:49.840 --> 00:08:51.630
version 2 as well so previously in
version 2 you could kind of pass in

00:08:51.630 --> 00:08:51.640
version 2 you could kind of pass in
 

00:08:51.640 --> 00:08:54.000
version 2 you could kind of pass in
whatever you wanted as the start index

00:08:54.000 --> 00:08:54.010
whatever you wanted as the start index
 

00:08:54.010 --> 00:08:56.580
whatever you wanted as the start index
and that will allow you to jump to

00:08:56.580 --> 00:08:56.590
and that will allow you to jump to
 

00:08:56.590 --> 00:08:59.100
and that will allow you to jump to
different places within something like

00:08:59.100 --> 00:08:59.110
different places within something like
 

00:08:59.110 --> 00:09:01.260
different places within something like
an upload speed in version 3 of the API

00:09:01.260 --> 00:09:01.270
an upload speed in version 3 of the API
 

00:09:01.270 --> 00:09:03.510
an upload speed in version 3 of the API
we don't take in a start index parameter

00:09:03.510 --> 00:09:03.520
we don't take in a start index parameter
 

00:09:03.520 --> 00:09:05.340
we don't take in a start index parameter
we take in what's known as a paging

00:09:05.340 --> 00:09:05.350
we take in what's known as a paging
 

00:09:05.350 --> 00:09:09.240
we take in what's known as a paging
token and that gets returned in the API

00:09:09.240 --> 00:09:09.250
token and that gets returned in the API
 

00:09:09.250 --> 00:09:11.520
token and that gets returned in the API
response and it's used when you build up

00:09:11.520 --> 00:09:11.530
response and it's used when you build up
 

00:09:11.530 --> 00:09:14.040
response and it's used when you build up
your next request as a way of saying hey

00:09:14.040 --> 00:09:14.050
your next request as a way of saying hey
 

00:09:14.050 --> 00:09:15.390
your next request as a way of saying hey
you know I've gotten this page of

00:09:15.390 --> 00:09:15.400
you know I've gotten this page of
 

00:09:15.400 --> 00:09:17.180
you know I've gotten this page of
results give me the next page results

00:09:17.180 --> 00:09:17.190
results give me the next page results
 

00:09:17.190 --> 00:09:19.530
results give me the next page results
this allows for our certain efficiencies

00:09:19.530 --> 00:09:19.540
this allows for our certain efficiencies
 

00:09:19.540 --> 00:09:22.110
this allows for our certain efficiencies
on the server and it means that you get

00:09:22.110 --> 00:09:22.120
on the server and it means that you get
 

00:09:22.120 --> 00:09:25.290
on the server and it means that you get
a more reliable paging experience when

00:09:25.290 --> 00:09:25.300
a more reliable paging experience when
 

00:09:25.300 --> 00:09:28.290
a more reliable paging experience when
you're using version 3 it just allows

00:09:28.290 --> 00:09:28.300
you're using version 3 it just allows
 

00:09:28.300 --> 00:09:29.880
you're using version 3 it just allows
things to be a little bit more efficient

00:09:29.880 --> 00:09:29.890
things to be a little bit more efficient
 

00:09:29.890 --> 00:09:32.310
things to be a little bit more efficient
and it means that less likely to be

00:09:32.310 --> 00:09:32.320
and it means that less likely to be
 

00:09:32.320 --> 00:09:35.400
and it means that less likely to be
duplicates or things that are unordered

00:09:35.400 --> 00:09:35.410
duplicates or things that are unordered
 

00:09:35.410 --> 00:09:37.710
duplicates or things that are unordered
so let's actually take in that next page

00:09:37.710 --> 00:09:37.720
so let's actually take in that next page
 

00:09:37.720 --> 00:09:42.900
so let's actually take in that next page
token value from this response and we're

00:09:42.900 --> 00:09:42.910
token value from this response and we're
 

00:09:42.910 --> 00:09:45.060
token value from this response and we're
going to construct the next page of

00:09:45.060 --> 00:09:45.070
going to construct the next page of
 

00:09:45.070 --> 00:09:48.450
going to construct the next page of
requests by pasting it in here so we're

00:09:48.450 --> 00:09:48.460
requests by pasting it in here so we're
 

00:09:48.460 --> 00:09:50.070
requests by pasting it in here so we're
going to have all the same parameters

00:09:50.070 --> 00:09:50.080
going to have all the same parameters
 

00:09:50.080 --> 00:09:52.770
going to have all the same parameters
but we're sending page token now and if

00:09:52.770 --> 00:09:52.780
but we're sending page token now and if
 

00:09:52.780 --> 00:09:55.770
but we're sending page token now and if
I click execute

00:09:55.770 --> 00:09:55.780
 

00:09:55.780 --> 00:09:59.070
things should return back but in this

00:09:59.070 --> 00:09:59.080
things should return back but in this
 

00:09:59.080 --> 00:10:00.570
things should return back but in this
particular case I get a different set of

00:10:00.570 --> 00:10:00.580
particular case I get a different set of
 

00:10:00.580 --> 00:10:03.270
particular case I get a different set of
results this is basically results 51

00:10:03.270 --> 00:10:03.280
results this is basically results 51
 

00:10:03.280 --> 00:10:06.480
results this is basically results 51
through 100 and we can continue doing

00:10:06.480 --> 00:10:06.490
through 100 and we can continue doing
 

00:10:06.490 --> 00:10:09.270
through 100 and we can continue doing
that basically as long as there's a next

00:10:09.270 --> 00:10:09.280
that basically as long as there's a next
 

00:10:09.280 --> 00:10:10.950
that basically as long as there's a next
page token returned that means that

00:10:10.950 --> 00:10:10.960
page token returned that means that
 

00:10:10.960 --> 00:10:12.530
page token returned that means that
there is another page a result of

00:10:12.530 --> 00:10:12.540
there is another page a result of
 

00:10:12.540 --> 00:10:14.940
there is another page a result of
results that you could get back and you

00:10:14.940 --> 00:10:14.950
results that you could get back and you
 

00:10:14.950 --> 00:10:18.600
results that you could get back and you
could loop more or less until you stop

00:10:18.600 --> 00:10:18.610
could loop more or less until you stop
 

00:10:18.610 --> 00:10:20.640
could loop more or less until you stop
getting back next page tokens as soon as

00:10:20.640 --> 00:10:20.650
getting back next page tokens as soon as
 

00:10:20.650 --> 00:10:23.790
getting back next page tokens as soon as
that stops being returned you know that

00:10:23.790 --> 00:10:23.800
that stops being returned you know that
 

00:10:23.800 --> 00:10:26.880
that stops being returned you know that
you've reached the end of the list so

00:10:26.880 --> 00:10:26.890
you've reached the end of the list so
 

00:10:26.890 --> 00:10:30.300
you've reached the end of the list so
hopefully that's a good overview for how

00:10:30.300 --> 00:10:30.310
hopefully that's a good overview for how
 

00:10:30.310 --> 00:10:31.770
hopefully that's a good overview for how
you would do something in version 2 and

00:10:31.770 --> 00:10:31.780
you would do something in version 2 and
 

00:10:31.780 --> 00:10:34.820
you would do something in version 2 and
then how you would do the v3 equivalents

00:10:34.820 --> 00:10:34.830
then how you would do the v3 equivalents
 

00:10:34.830 --> 00:10:38.460
then how you would do the v3 equivalents
stay tuned for future shows they cover

00:10:38.460 --> 00:10:38.470
stay tuned for future shows they cover
 

00:10:38.470 --> 00:10:42.680
stay tuned for future shows they cover
more topics and version 3 of the API and

00:10:42.680 --> 00:10:42.690
more topics and version 3 of the API and
 

00:10:42.690 --> 00:10:45.840
more topics and version 3 of the API and
thanks so much for joining us again i'm

00:10:45.840 --> 00:10:45.850
thanks so much for joining us again i'm
 

00:10:45.850 --> 00:10:46.500
thanks so much for joining us again i'm
jeff posnick

00:10:46.500 --> 00:10:46.510
jeff posnick
 

00:10:46.510 --> 00:10:48.650
jeff posnick
from the developer relations team and

00:10:48.650 --> 00:10:48.660
from the developer relations team and
 

00:10:48.660 --> 00:10:52.410
from the developer relations team and
stay tuned Cheers

