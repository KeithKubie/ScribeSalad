WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.395
[MUSIC PLAYING]

00:00:07.760 --> 00:00:09.780
BILL LUAN: Good
afternoon, everyone.

00:00:09.780 --> 00:00:13.520
Welcome to the AIY
introductory session.

00:00:13.520 --> 00:00:18.298
How's everybody for I/O so far?

00:00:18.298 --> 00:00:21.480
Everybody had a
good lunch today?

00:00:21.480 --> 00:00:21.980
Yes.

00:00:21.980 --> 00:00:22.480
OK.

00:00:22.480 --> 00:00:25.670
As you can see on the screen,
the name of this session

00:00:25.670 --> 00:00:28.250
is called Introduction to AIY.

00:00:28.250 --> 00:00:29.880
But what is AIY?

00:00:29.880 --> 00:00:32.810
AIY is a new line
of product Google

00:00:32.810 --> 00:00:36.710
makes for developers like you,
makers all around the world,

00:00:36.710 --> 00:00:39.930
to make applications for
artificial intelligence

00:00:39.930 --> 00:00:41.190
by yourself.

00:00:41.190 --> 00:00:43.950
That's the name of AIY,
where that came from.

00:00:43.950 --> 00:00:46.215
Today joining with
me, my colleagues

00:00:46.215 --> 00:00:48.140
in developer relations.

00:00:48.140 --> 00:00:49.130
My name is Bill Luan.

00:00:49.130 --> 00:00:51.230
I have Dushyantsinh
Sebastian joining me.

00:00:51.230 --> 00:00:55.040
We will give you a full
introduction of the current AIY

00:00:55.040 --> 00:00:56.340
product line.

00:00:56.340 --> 00:00:59.830
So before we start, let me
introduce my colleagues.

00:00:59.830 --> 00:01:01.826
So, Dushyantsinh.

00:01:01.826 --> 00:01:03.400
DUSHYANTSINH JADEJA:
Thank you, Bill.

00:01:03.400 --> 00:01:04.379
Hello, everyone.

00:01:04.379 --> 00:01:05.379
My name is Dushyantsinh.

00:01:05.379 --> 00:01:08.500
I'm part of Google's developer
relations team in India.

00:01:08.500 --> 00:01:11.590
I'm really excited here to show
you some amazing demos on AIY

00:01:11.590 --> 00:01:12.580
script.

00:01:12.580 --> 00:01:15.160
But before we start,
I'll invite Sebastian

00:01:15.160 --> 00:01:17.890
to give you a quick
overview of what is AIY

00:01:17.890 --> 00:01:19.582
and set the context
for this talk.

00:01:19.582 --> 00:01:21.790
SEBASTIAN TRZCINSKI-CLEMENT:
Thank you, Dushyantsinh.

00:01:21.790 --> 00:01:24.460
So thank you very much
for being here in person

00:01:24.460 --> 00:01:26.870
or watching this on YouTube.

00:01:26.870 --> 00:01:31.030
I'm Sebastian, with this
very complicated last name.

00:01:31.030 --> 00:01:33.430
I've joined Google
quite recently, just

00:01:33.430 --> 00:01:35.240
about 11 years ago.

00:01:35.240 --> 00:01:38.180
And with my teams, what
we do around the world,

00:01:38.180 --> 00:01:39.850
especially in
emerging markets, is

00:01:39.850 --> 00:01:42.800
we help developers and
start-ups build better

00:01:42.800 --> 00:01:45.010
mobile and web applications.

00:01:45.010 --> 00:01:47.050
Today I want to talk
to you about AIY.

00:01:47.050 --> 00:01:49.960
But before this,
let's talk about DIY--

00:01:49.960 --> 00:01:52.010
do it yourself.

00:01:52.010 --> 00:01:54.740
So do you know what this is?

00:01:54.740 --> 00:01:56.500
It's not a UFO.

00:01:56.500 --> 00:01:58.570
It's actually a
musical instrument

00:01:58.570 --> 00:02:01.420
which makes very nice sounds.

00:02:01.420 --> 00:02:04.270
But no, it was not invented
in prehistoric times.

00:02:04.270 --> 00:02:08.301
It was actually created in
the year 2000 in Switzerland.

00:02:08.301 --> 00:02:09.759
Switzerland is
actually the country

00:02:09.759 --> 00:02:11.334
where I'm officially based.

00:02:11.334 --> 00:02:13.750
Well, that is when I'm not in
one of the other UFOs, which

00:02:13.750 --> 00:02:17.470
we call planes, because I travel
quite a bit to visit my teams.

00:02:17.470 --> 00:02:19.670
Do you know what this is also?

00:02:19.670 --> 00:02:22.780
It's a window into DIY culture.

00:02:22.780 --> 00:02:26.530
Let me take you through a very
brief history of humankind's

00:02:26.530 --> 00:02:28.560
appetite for DIY.

00:02:28.560 --> 00:02:30.509
And if you read
the book "Sapiens--

00:02:30.509 --> 00:02:32.050
A Brief History of
Humankind," you'll

00:02:32.050 --> 00:02:34.360
know what I'm talking about.

00:02:34.360 --> 00:02:37.000
Our human ancestors were
already building tools,

00:02:37.000 --> 00:02:39.790
as probably you know--
weapons, instruments

00:02:39.790 --> 00:02:41.590
using stone and wood.

00:02:41.590 --> 00:02:43.900
Now if we skip a few
generations of humans,

00:02:43.900 --> 00:02:46.430
we're still using
wood to create things.

00:02:46.430 --> 00:02:49.120
This is one of my brothers,
Mattias, and my sister,

00:02:49.120 --> 00:02:51.520
Lydia, some 30 years ago.

00:02:51.520 --> 00:02:52.900
And I'm sure you
or your siblings

00:02:52.900 --> 00:02:55.450
did the same thing-- tinkering
with stuff or everything

00:02:55.450 --> 00:02:57.890
you could lay your hands on.

00:02:57.890 --> 00:02:59.870
Now let's fast forward
to the, what I call,

00:02:59.870 --> 00:03:01.510
the electronics age.

00:03:01.510 --> 00:03:03.800
Do you remember in the '90s
how desktop computers--

00:03:03.800 --> 00:03:05.300
I'm not even talking
about laptops--

00:03:05.300 --> 00:03:08.930
but desktops were so expensive?

00:03:08.930 --> 00:03:11.050
Who among you, show
of hands maybe, to see

00:03:11.050 --> 00:03:13.550
who built computers
with spare parts?

00:03:13.550 --> 00:03:14.050
Yeah.

00:03:14.050 --> 00:03:14.675
I did that too.

00:03:14.675 --> 00:03:16.920
Quite a few of you, and
I'm not the only one

00:03:16.920 --> 00:03:18.660
who's too old for this.

00:03:18.660 --> 00:03:21.190
On this animated
image you can see

00:03:21.190 --> 00:03:25.000
how I've used an overhead
projector and a dismantled LCD

00:03:25.000 --> 00:03:29.050
screen to build a cheap
homemade video projector.

00:03:29.050 --> 00:03:30.596
But then obviously
my mom got annoyed

00:03:30.596 --> 00:03:33.220
because all the electronics were
everywhere in the living room.

00:03:33.220 --> 00:03:35.530
So she said, go outside,
you need some fresh air.

00:03:35.530 --> 00:03:37.000
OK, so I went
outside, and that's

00:03:37.000 --> 00:03:39.650
me reusing garbage bags--

00:03:39.650 --> 00:03:43.530
one dollar of garbage bags
to build a solar balloon.

00:03:43.530 --> 00:03:45.910
It can almost lift
me up, not quite,

00:03:45.910 --> 00:03:48.490
but I'll get there one day.

00:03:48.490 --> 00:03:51.470
But the appeal of electronics
was just too strong,

00:03:51.470 --> 00:03:55.330
so my siblings and I got back
inside and one of my brothers--

00:03:55.330 --> 00:03:56.710
the other one, Florian--

00:03:56.710 --> 00:04:02.380
started tinkering with 3D
printers, homemade 3D printers.

00:04:02.380 --> 00:04:05.901
This is my other brother,
the one on the right.

00:04:05.901 --> 00:04:07.960
On the left is actually
a photo in the museum.

00:04:07.960 --> 00:04:13.480
As I said, DIY is in our DNA
from very, very early on.

00:04:13.480 --> 00:04:15.040
It's also in Google's DNA.

00:04:15.040 --> 00:04:17.740
Four years ago, you may
remember a Google engineer from

00:04:17.740 --> 00:04:19.450
the Paris office--
and I mentioned Paris

00:04:19.450 --> 00:04:21.940
because I'm actually French--

00:04:21.940 --> 00:04:25.210
and this engineer came here
at I/O to show the VR platform

00:04:25.210 --> 00:04:29.980
he had built using cardboard
during his 20% innovation time.

00:04:29.980 --> 00:04:32.140
Since then, this has
become, two years ago,

00:04:32.140 --> 00:04:35.860
what we call the Daydream
VR platform at Google.

00:04:35.860 --> 00:04:37.110
Here's what's interesting now.

00:04:37.110 --> 00:04:39.240
The maker culture is
all about hardware

00:04:39.240 --> 00:04:43.860
on one side, physical objects,
and on the other hand,

00:04:43.860 --> 00:04:46.680
software-- this
combination of DIY culture

00:04:46.680 --> 00:04:48.100
with a hacker culture.

00:04:48.100 --> 00:04:51.480
You may have heard of
Maker Faire, since 2006.

00:04:51.480 --> 00:04:53.670
You may have maker spaces
around you, and if there's

00:04:53.670 --> 00:04:56.310
none in your city where you
live, then why don't you start

00:04:56.310 --> 00:04:58.590
one of these maker spaces?

00:04:58.590 --> 00:05:00.300
The great thing about
this maker culture

00:05:00.300 --> 00:05:03.360
is that you learn through
doing with your hands.

00:05:03.360 --> 00:05:04.860
You make mistakes, so what?

00:05:04.860 --> 00:05:05.550
Doesn't matter.

00:05:05.550 --> 00:05:08.400
That's a very good way to
learn, to try new things

00:05:08.400 --> 00:05:11.972
and learn from each other,
figure out new applications

00:05:11.972 --> 00:05:13.680
that you can create
with that technology.

00:05:13.680 --> 00:05:15.305
It doesn't matter
what your background.

00:05:15.305 --> 00:05:17.880
In fact, it's even better
when you can mix and match

00:05:17.880 --> 00:05:22.140
different domains to find new
applications of the technology.

00:05:22.140 --> 00:05:24.030
Now let's take a
look at what has

00:05:24.030 --> 00:05:26.440
happened in the past few years.

00:05:26.440 --> 00:05:28.980
You now have micro-controllers,
like Raspberry Pi.

00:05:28.980 --> 00:05:30.750
The cloud has become cheaper.

00:05:30.750 --> 00:05:32.910
Lithium batteries
have become cheaper.

00:05:32.910 --> 00:05:35.850
Did you know that lithium
battery, their cost,

00:05:35.850 --> 00:05:40.230
has decreased by 80% over
the past eight years?

00:05:40.230 --> 00:05:42.730
And I'm sure you've heard about
AI, artificial intelligence,

00:05:42.730 --> 00:05:45.810
especially since
yesterday, and concepts

00:05:45.810 --> 00:05:47.970
like machine learning,
deep neural networks.

00:05:47.970 --> 00:05:50.100
Sounds complicated, right?

00:05:50.100 --> 00:05:51.360
It doesn't have to be.

00:05:51.360 --> 00:05:52.320
It doesn't have to be.

00:05:52.320 --> 00:05:54.835
And this is why, with
AIY, do it yourself

00:05:54.835 --> 00:05:58.380
AI, artificial intelligence,
that we introduced last year,

00:05:58.380 --> 00:06:00.000
you can have fun.

00:06:00.000 --> 00:06:01.685
Because the idea of
this maker culture

00:06:01.685 --> 00:06:03.060
is, before anything
else, to have

00:06:03.060 --> 00:06:06.710
fun using, in this case,
artificial intelligence.

00:06:06.710 --> 00:06:09.890
We want to put AI
literally in your hands

00:06:09.890 --> 00:06:13.520
so that you can
solve real problems.

00:06:13.520 --> 00:06:16.730
Our AIY kits are open source.

00:06:16.730 --> 00:06:18.620
They combine
hardware and software

00:06:18.620 --> 00:06:23.580
and they integrate AI directly
on the device themselves.

00:06:23.580 --> 00:06:25.990
The essence, as I
mentioned previously,

00:06:25.990 --> 00:06:28.980
is to keep it low cost using
readily available components

00:06:28.980 --> 00:06:31.756
that you can find almost
anywhere on the planet.

00:06:31.756 --> 00:06:33.380
And the kits are very
easy to assemble.

00:06:33.380 --> 00:06:34.430
Dushyantsinh, how
long does it take

00:06:34.430 --> 00:06:35.697
to assemble one of these kits?

00:06:35.697 --> 00:06:37.280
DUSHYANTSINH JADEJA:
15 to 30 minutes.

00:06:37.280 --> 00:06:38.100
SEBASTIAN TRZCINSKI-CLEMENT:
15, 30 minutes.

00:06:38.100 --> 00:06:39.852
OK, let's say one
hour because my mom is

00:06:39.852 --> 00:06:41.060
going to say I'm very clumsy.

00:06:41.060 --> 00:06:41.730
Thank you, mom.

00:06:41.730 --> 00:06:43.220
I know she's watching.

00:06:43.220 --> 00:06:47.020
So let's say not more than an
hour to assemble these kits.

00:06:47.020 --> 00:06:49.430
Dushyantsinh and Bill right
after, in just a few minutes,

00:06:49.430 --> 00:06:51.472
will demo some of
these kits to show

00:06:51.472 --> 00:06:53.930
what you can do with them-- so
the Voice Kit and the Vision

00:06:53.930 --> 00:06:54.430
Kit.

00:06:54.430 --> 00:06:55.330
But stay with us.

00:06:55.330 --> 00:06:57.079
In the coming weeks
and the coming months,

00:06:57.079 --> 00:07:00.120
there'll be more to
announce in that space.

00:07:00.120 --> 00:07:02.840
Now let's take a look and
I'll finish off with this.

00:07:02.840 --> 00:07:05.670
What some of you
have already created,

00:07:05.670 --> 00:07:08.700
in this example I'm going to
show you in just a few seconds,

00:07:08.700 --> 00:07:11.460
a 16-year-old with no
programming experience

00:07:11.460 --> 00:07:13.890
has managed to come up with
the following use case.

00:07:13.890 --> 00:07:17.901
Let's play the video for
just about 20 seconds.

00:07:17.901 --> 00:07:21.390
LAWRENCE: Shop for New
York Yankees baseball hats.

00:07:21.390 --> 00:07:23.062
So what's actually
happening now?

00:07:23.062 --> 00:07:24.036
VOICE KIT: Done.

00:07:24.036 --> 00:07:25.660
LAWRENCE: So she just
said done, right?

00:07:25.660 --> 00:07:26.130
SPEAKER: Yeah.

00:07:26.130 --> 00:07:26.490
LAWRENCE: OK.

00:07:26.490 --> 00:07:27.906
SPEAKER: So what
actually happened

00:07:27.906 --> 00:07:29.580
was that, when it
said done, it's

00:07:29.580 --> 00:07:33.330
just sent links to my email
after finding it on eBay.

00:07:33.330 --> 00:07:37.110
So it'll find results online,
send links in an email to me,

00:07:37.110 --> 00:07:39.600
and I'm going to receive
those so then I can quickly

00:07:39.600 --> 00:07:41.472
click and buy something.

00:07:41.472 --> 00:07:42.972
SEBASTIAN
TRZCINSKI-CLEMENT: So what

00:07:42.972 --> 00:07:45.970
happened here with Lawrence
and the high school kid

00:07:45.970 --> 00:07:47.140
was shopping for a product.

00:07:47.140 --> 00:07:48.730
I don't know if you heard
that at the beginning--

00:07:48.730 --> 00:07:50.313
"I'm shopping for
some baseball caps,"

00:07:50.313 --> 00:07:52.640
and it was searching
on eBay for results,

00:07:52.640 --> 00:07:56.060
which were emailed right after
when the device was done.

00:07:56.060 --> 00:07:57.800
So let me take you
through the code.

00:07:57.800 --> 00:07:59.680
It's just, if you
heard at the beginning,

00:07:59.680 --> 00:08:01.310
"I'm shopping for
some baseball caps.

00:08:01.310 --> 00:08:03.550
And it was searching
on eBay for results,

00:08:03.550 --> 00:08:08.160
which [AUDIO OUT] were
emailed right after, when

00:08:08.160 --> 00:08:09.700
the device had done.

00:08:09.700 --> 00:08:14.180
So let me take you
[AUDIO OUT] through the code.

00:08:14.180 --> 00:08:17.410
It's just [AUDIO OUT] if you
heard it at the beginning.

00:08:17.410 --> 00:08:21.400
I'm shopping for some
baseball [AUDIO OUT]

00:08:21.400 --> 00:08:26.830
and we're searching on eBay
for results [AUDIO OUT]

00:08:26.830 --> 00:08:34.640
were emailed right after
[AUDIO OUT] through the code.

00:08:34.640 --> 00:08:37.890
It's just [AUDIO OUT] if you
heard it at the beginning.

00:08:37.890 --> 00:08:52.840
I'm shopping for some
baseball cap [AUDIO OUT]

00:08:52.840 --> 00:08:56.140
through the code it's just
[AUDIO OUT] if you heard it

00:08:56.140 --> 00:08:56.884
at the beginning.

00:08:56.884 --> 00:08:58.800
I'm shopping for some
baseball cap [AUDIO OUT]

00:08:58.800 --> 00:09:00.960
You may remember in the
video that all the results

00:09:00.960 --> 00:09:01.920
are sent over email.

00:09:01.920 --> 00:09:02.940
Here's the code.

00:09:02.940 --> 00:09:05.430
We're going to go through
each result, the first three

00:09:05.430 --> 00:09:09.384
lines of the code up there, and
format all this in an email.

00:09:09.384 --> 00:09:11.550
You can recognize, even if
you're not an experienced

00:09:11.550 --> 00:09:14.890
programmer, something like,
from, to, subject line.

00:09:14.890 --> 00:09:15.390
That's it.

00:09:15.390 --> 00:09:16.120
Nothing more.

00:09:16.120 --> 00:09:18.210
The last thing we
do is just connect

00:09:18.210 --> 00:09:22.230
to the server, the email
server, and just send the email,

00:09:22.230 --> 00:09:24.680
and get the device
to say, "done."

00:09:24.680 --> 00:09:25.180
That's it.

00:09:25.180 --> 00:09:26.054
There's nothing more.

00:09:26.054 --> 00:09:28.050
You can literally copy
and paste that code.

00:09:28.050 --> 00:09:30.310
It will work.

00:09:30.310 --> 00:09:32.380
Now it's your turn to
do things with AIY.

00:09:32.380 --> 00:09:34.670
And if you're not
inspired enough,

00:09:34.670 --> 00:09:37.120
I'll have Dushyantsinh
now to come on stage

00:09:37.120 --> 00:09:39.430
to do a demo with a voice kit.

00:09:39.430 --> 00:09:41.266
So thank you very
much for listening,

00:09:41.266 --> 00:09:42.890
and welcome Dushyantsinh
back on stage.

00:09:48.722 --> 00:09:51.679
DUSHYANTSINH JADEJA:
Thank you, Sebastian.

00:09:51.679 --> 00:09:54.220
My name is Dushyantsinh and I'm
part of a developer relations

00:09:54.220 --> 00:09:55.790
teams at Google.

00:09:55.790 --> 00:10:01.120
And like everybody, we all are
excited about the possibility

00:10:01.120 --> 00:10:04.600
of AI has in front
of us, correct?

00:10:04.600 --> 00:10:08.530
This only becomes more
meaningful and more impactful

00:10:08.530 --> 00:10:10.840
when all of us
can have an access

00:10:10.840 --> 00:10:14.340
to this wonderful platform.

00:10:14.340 --> 00:10:18.400
At Google, we have been sharing
our work and advancement

00:10:18.400 --> 00:10:20.740
in the field of
artificial intelligence

00:10:20.740 --> 00:10:24.970
by building products, sharing
to our research papers,

00:10:24.970 --> 00:10:28.300
and now with the
AIY kits, we are

00:10:28.300 --> 00:10:31.470
taking to even more people
in a more playful way,

00:10:31.470 --> 00:10:35.410
yet it is strong
enough for you to solve

00:10:35.410 --> 00:10:37.730
some really good problems.

00:10:37.730 --> 00:10:41.400
So let's see how we can
solve some of those things.

00:10:41.400 --> 00:10:45.630
And when we are thinking
about this kit together,

00:10:45.630 --> 00:10:47.920
your thinking, what
makes sense, what

00:10:47.920 --> 00:10:51.960
would be right way of putting
this in front of people?

00:10:51.960 --> 00:10:54.520
And, of course, voice
was one of the things

00:10:54.520 --> 00:10:56.060
that was very evident.

00:10:56.060 --> 00:10:57.550
We all like talking.

00:10:57.550 --> 00:11:01.130
Imagine if we have a
power of playing around

00:11:01.130 --> 00:11:03.830
with a voice, how
fun it would be.

00:11:03.830 --> 00:11:05.410
[INAUDIBLE] mentioned
in the keynote

00:11:05.410 --> 00:11:10.720
yesterday about WaveNet, how
you can create different voices.

00:11:10.720 --> 00:11:13.900
So in this demo, I'm
just going to talk

00:11:13.900 --> 00:11:16.930
about the capabilities
of AIY kit

00:11:16.930 --> 00:11:21.130
with Cloud Speech API
and Google Assistant API

00:11:21.130 --> 00:11:25.480
but, of course, there's
much more than this.

00:11:25.480 --> 00:11:29.680
So the Voice Kit was launched
sometime mid-last year,

00:11:29.680 --> 00:11:33.160
if I'm not wrong, and it
had got a lot of attention.

00:11:33.160 --> 00:11:37.600
The Voice Kit basically has
a combination of few software

00:11:37.600 --> 00:11:40.160
and some of the hardware there.

00:11:40.160 --> 00:11:43.580
It was marketed along with
Raspberry Pi Foundation

00:11:43.580 --> 00:11:48.380
to see what are the feedback we
can get from the existing maker

00:11:48.380 --> 00:11:51.410
community and try to
improve our offering.

00:11:51.410 --> 00:11:54.635
We launched the second
version of Voice Kit

00:11:54.635 --> 00:11:59.150
sometime in January to
incorporate all those feedbacks

00:11:59.150 --> 00:12:02.722
and make it all in a
one box component kit.

00:12:02.722 --> 00:12:03.930
So that's what you get today.

00:12:03.930 --> 00:12:08.390
If you go to AIY website
and look at Voice Kit,

00:12:08.390 --> 00:12:12.480
this is what you'll
probably find there.

00:12:12.480 --> 00:12:14.880
But what does the kit contain?

00:12:14.880 --> 00:12:20.760
From a hardware point of view
it has Raspberry Pi Zero,

00:12:20.760 --> 00:12:23.040
it has Voice Bonnet,
which is basically

00:12:23.040 --> 00:12:30.180
a piece of hardware which
does audio processing for you,

00:12:30.180 --> 00:12:32.190
and the Voice Bonnet has
different components.

00:12:32.190 --> 00:12:36.180
It has a mic, it has a codec,
a micro-controller, general

00:12:36.180 --> 00:12:38.850
all-purpose input output,
and an arcade button

00:12:38.850 --> 00:12:41.880
to basically give you
visual indication of what's

00:12:41.880 --> 00:12:46.020
happening with your Voice
Kit at any point of time.

00:12:46.020 --> 00:12:48.150
And from a software
point of view,

00:12:48.150 --> 00:12:52.200
it basically runs
on Raspbian Linux.

00:12:52.200 --> 00:12:56.070
It uses Google Assistant API
and uses Cloud Speech API.

00:12:56.070 --> 00:12:58.440
But of course, you could do
a bunch of things with that.

00:12:58.440 --> 00:13:02.730
This is just scratching the
surface of the Voice Kit.

00:13:02.730 --> 00:13:04.910
So how can you get started?

00:13:04.910 --> 00:13:06.590
Very straightforward.

00:13:06.590 --> 00:13:08.520
Think of it as a
three-step process.

00:13:08.520 --> 00:13:12.110
Step one is in terms
of assembling the kit,

00:13:12.110 --> 00:13:14.310
step two is setting
up your device,

00:13:14.310 --> 00:13:16.850
and step 3 is, now that
you have set up everything,

00:13:16.850 --> 00:13:21.490
you could go ahead and build
some of solution by yourself.

00:13:21.490 --> 00:13:25.920
So if you open the kit,
this is what it looks like.

00:13:25.920 --> 00:13:29.820
First thing, ensure you have
all the right components.

00:13:29.820 --> 00:13:32.550
You have a cardboard, all
the different hardwares that

00:13:32.550 --> 00:13:34.530
is mentioned on the website.

00:13:34.530 --> 00:13:37.980
Just verify that you have all
those components ready with you

00:13:37.980 --> 00:13:40.680
before you start
assembling together.

00:13:40.680 --> 00:13:43.320
Once you verify, the next
step what you need to do

00:13:43.320 --> 00:13:44.600
is build an engine.

00:13:44.600 --> 00:13:46.470
Think of it as building a car.

00:13:46.470 --> 00:13:49.080
You're building an engine,
so putting Raspberry Pi

00:13:49.080 --> 00:13:51.840
and your Voice Bonnet together.

00:13:51.840 --> 00:13:54.180
Once you put the
engine together,

00:13:54.180 --> 00:13:56.520
then now you're
building a chassis.

00:13:56.520 --> 00:13:59.620
So it's kind of a
structure for your car,

00:13:59.620 --> 00:14:01.650
or structure for your Voice Kit.

00:14:01.650 --> 00:14:04.290
So you basically
take the cardboard

00:14:04.290 --> 00:14:07.437
and get of give it a
structure of a speaker.

00:14:07.437 --> 00:14:09.020
Once you build the
cardboard, then you

00:14:09.020 --> 00:14:10.690
put the engine inside it.

00:14:10.690 --> 00:14:14.360
You put the Raspberry Pi
and Voice Bonnet inside it.

00:14:14.360 --> 00:14:15.830
That's it.

00:14:15.830 --> 00:14:18.860
It's super easy, super fun.

00:14:18.860 --> 00:14:20.910
For me, when I tried first
time it took something

00:14:20.910 --> 00:14:22.370
around 15 to 20 minutes.

00:14:22.370 --> 00:14:24.680
But I'm sure you
guys are much, much

00:14:24.680 --> 00:14:28.830
advanced than me and you could
try to get it even faster.

00:14:28.830 --> 00:14:31.430
The key here is not
to do fast, but do it

00:14:31.430 --> 00:14:33.620
in a nice fun way out of it.

00:14:33.620 --> 00:14:34.120
So, yeah.

00:14:34.120 --> 00:14:35.150
That's it.

00:14:35.150 --> 00:14:40.560
You assembled your Voice Kit.

00:14:40.560 --> 00:14:44.670
Step two is basically
set up your device.

00:14:44.670 --> 00:14:46.170
At this point of
time, what you want

00:14:46.170 --> 00:14:48.500
to do is that now
I have my device,

00:14:48.500 --> 00:14:52.800
or my Voice Kit is more or
less in a nice shape and form,

00:14:52.800 --> 00:14:54.330
let me give a voice to it.

00:14:54.330 --> 00:14:56.950
Let me see if everything
is working fine.

00:14:56.950 --> 00:14:59.830
So I have a already
built Voice Kit

00:14:59.830 --> 00:15:03.670
here, and I'm going to
switch back to my Voice Kit

00:15:03.670 --> 00:15:07.730
and see if everything
is working fine there.

00:15:07.730 --> 00:15:12.410
So before you start, you want to
ensure that you have everything

00:15:12.410 --> 00:15:13.790
running for you.

00:15:13.790 --> 00:15:16.520
So things like, let's say
you're connected to network--

00:15:16.520 --> 00:15:20.120
this could be either a wired
network or a wireless network

00:15:20.120 --> 00:15:22.070
or, if you're tethering
from your phone,

00:15:22.070 --> 00:15:23.903
essentially you have
some sort of connection

00:15:23.903 --> 00:15:28.940
because a Voice Kit needs
to be connected to internet.

00:15:28.940 --> 00:15:31.500
It's using Google
Assistant and Speech

00:15:31.500 --> 00:15:34.160
API for recognition purposes.

00:15:34.160 --> 00:15:35.740
Let me see if I'm online.

00:15:38.590 --> 00:15:39.090
Good.

00:15:39.090 --> 00:15:43.490
Looks like I'm all set from
an internet point of view.

00:15:43.490 --> 00:15:48.262
Let's see if my audio
is working fine,

00:15:48.262 --> 00:15:49.720
if the kit's audio
is working fine.

00:15:49.720 --> 00:15:52.250
VOICE KIT: Front, center.

00:15:52.250 --> 00:15:55.060
DUSHYANTSINH JADEJA: Seems OK.

00:15:55.060 --> 00:15:56.830
Let me see if it
recognizes my voice.

00:16:00.420 --> 00:16:00.990
Testing.

00:16:00.990 --> 00:16:03.179
One, two, three.

00:16:03.179 --> 00:16:03.970
VOICE KIT: Testing.

00:16:03.970 --> 00:16:05.091
One, two, three.

00:16:05.091 --> 00:16:06.590
DUSHYANTSINH JADEJA:
Seems to be OK.

00:16:09.770 --> 00:16:12.950
So now I'm almost set.

00:16:12.950 --> 00:16:15.950
The good thing is that
Voice Kit comes with some

00:16:15.950 --> 00:16:18.620
of the pre-built demos as well.

00:16:18.620 --> 00:16:23.210
It's good to see if those are
also looking fine before you

00:16:23.210 --> 00:16:25.120
start building yourself.

00:16:25.120 --> 00:16:31.370
So if you go to the Pi
directory and look at Pi10 voice

00:16:31.370 --> 00:16:33.440
examples, which is here.

00:16:37.670 --> 00:16:43.510
And I'm just going to
try this library demo.

00:16:43.510 --> 00:16:46.670
Hey, Google, what's
the time right now?

00:16:46.670 --> 00:16:47.959
VOICE KIT: It's 1:50.

00:16:47.959 --> 00:16:49.250
DUSHYANTSINH JADEJA: Thank you.

00:16:55.540 --> 00:16:57.030
So you could try
a bunch of things.

00:16:57.030 --> 00:16:59.190
What I was doing is
that I was just testing

00:16:59.190 --> 00:17:00.870
if things are working fine.

00:17:00.870 --> 00:17:04.000
Now, of course you could,
at this point in time ask,

00:17:04.000 --> 00:17:06.240
a bunch of other questions.

00:17:06.240 --> 00:17:10.230
Now, things seem to be OK.

00:17:10.230 --> 00:17:14.099
Let me see if I can
build something or not.

00:17:14.099 --> 00:17:15.779
Let me go back to presentation.

00:17:18.339 --> 00:17:19.380
Can we go back to slides?

00:17:22.960 --> 00:17:23.530
Yeah.

00:17:23.530 --> 00:17:30.940
So it's always good to see
if the device is working fine

00:17:30.940 --> 00:17:33.640
before you start
building by yourself.

00:17:33.640 --> 00:17:38.500
I have built a typical
shopping experience.

00:17:38.500 --> 00:17:41.700
Hopefully it should work
fine, but let's see,

00:17:41.700 --> 00:17:44.800
given the set up was not
really up to the mark,

00:17:44.800 --> 00:17:46.480
but let's give it one more shot.

00:17:51.390 --> 00:17:53.456
Can we switch to demo?

00:17:57.240 --> 00:18:02.320
So Sebastian did show, he
was showing the code which

00:18:02.320 --> 00:18:08.290
was mostly about giving a
command to a Voice Assistant

00:18:08.290 --> 00:18:10.480
saying, shop for something.

00:18:10.480 --> 00:18:13.480
And then it was trying
to identify a text,

00:18:13.480 --> 00:18:17.110
and it was calling
one of the API, which

00:18:17.110 --> 00:18:18.990
was from eBay I
believe, and then

00:18:18.990 --> 00:18:20.970
trying to basically fed
some some of the result

00:18:20.970 --> 00:18:23.480
and send it as an email.

00:18:23.480 --> 00:18:25.040
I've tried to mimic
similar behavior.

00:18:30.100 --> 00:18:36.588
And let's see if the
demo codes are with me.

00:18:46.544 --> 00:18:48.210
So what I'm doing at
this point of time,

00:18:48.210 --> 00:18:52.750
I'm just going to maybe
shop for something.

00:18:52.750 --> 00:18:55.010
Because Mother's
Day is coming up

00:18:55.010 --> 00:18:57.360
and I won't be in time
for it, and I want

00:18:57.360 --> 00:18:59.180
to send something to my mom.

00:18:59.180 --> 00:19:02.590
And I was thinking, what
could be an interesting thing?

00:19:02.590 --> 00:19:05.460
Apparently the smartwatches
is a big thing,

00:19:05.460 --> 00:19:08.870
so I thought, OK, maybe let
me give her a smartwatch.

00:19:08.870 --> 00:19:13.980
So let's see if I can find a
smartwatch using my Voice Kit.

00:19:13.980 --> 00:19:15.090
Hey, Google.

00:19:15.090 --> 00:19:18.750
Shop for a smartwatch.

00:19:18.750 --> 00:19:19.250
Cool.

00:19:22.680 --> 00:19:23.500
VOICE KIT: Done.

00:19:29.152 --> 00:19:31.340
DUSHYANTSINH JADEJA: So if
you look at what it did,

00:19:31.340 --> 00:19:36.540
it basically recognized
my voice or my command,

00:19:36.540 --> 00:19:39.620
and connected with the
particular service,

00:19:39.620 --> 00:19:42.980
and displayed some of those
smartwatches available for me

00:19:42.980 --> 00:19:43.910
to purchase.

00:19:43.910 --> 00:19:46.820
And now, at this point of
time, I could take this output

00:19:46.820 --> 00:19:50.150
and either send an email, like
what Sebastian was mentioning

00:19:50.150 --> 00:19:52.280
or, if I have a
smart display device,

00:19:52.280 --> 00:19:57.854
I could basically post it there,
give a nice visual of list,

00:19:57.854 --> 00:19:59.270
like these are
some of the things,

00:19:59.270 --> 00:20:01.394
or I could engage in a
little bit more conversation

00:20:01.394 --> 00:20:02.030
with that.

00:20:05.670 --> 00:20:06.870
Can we move back to slides?

00:20:09.020 --> 00:20:11.270
But there's tons of things
you could do that, correct?

00:20:11.270 --> 00:20:12.860
What I was trying
to emphasize here

00:20:12.860 --> 00:20:16.880
is that there's a lot of
things possible with the device

00:20:16.880 --> 00:20:18.590
that you could play
around with it.

00:20:18.590 --> 00:20:21.830
You could also not just look
at the software as a one

00:20:21.830 --> 00:20:24.200
side of it, but you could
also experiment with some

00:20:24.200 --> 00:20:25.970
of the things in the hardware.

00:20:25.970 --> 00:20:30.290
So we have seen people
taking the old toys

00:20:30.290 --> 00:20:34.480
and putting the Voice Kits
or some of the other AIY kits

00:20:34.480 --> 00:20:39.060
into it and revive the bodies
or bring life to those toys.

00:20:39.060 --> 00:20:44.210
We have seen people customize
shelves for Voice Kits.

00:20:44.210 --> 00:20:46.640
There are people who have
done device remix, so

00:20:46.640 --> 00:20:50.720
giving voice and vision to
a Roomba vacuum cleaner.

00:20:50.720 --> 00:20:52.524
So you could tell
them, OK, don't

00:20:52.524 --> 00:20:54.940
go to this side of the house,
but go to the different side

00:20:54.940 --> 00:20:56.590
of house section.

00:20:56.590 --> 00:21:00.820
Or you could create completely
custom voice actions.

00:21:00.820 --> 00:21:02.530
So tons of things is possible.

00:21:02.530 --> 00:21:05.450
If you want to know
more about what is that,

00:21:05.450 --> 00:21:09.940
you could follow us on
Instagram, or Twitter,

00:21:09.940 --> 00:21:13.220
or follow the discussion on
Reddit with AIY projects.

00:21:13.220 --> 00:21:17.170
With that, I'll invite Bill
to know more about what's

00:21:17.170 --> 00:21:18.490
happening on Vision Kit.

00:21:22.426 --> 00:21:23.676
BILL LUAN: Thank you.

00:21:23.676 --> 00:21:24.676
Thank you, Dushyantsinh.

00:21:24.676 --> 00:21:27.410
[INAUDIBLE] OK?

00:21:27.410 --> 00:21:27.910
All right.

00:21:27.910 --> 00:21:33.100
Let me continue with the second
product line in the AIY product

00:21:33.100 --> 00:21:37.910
family which, as you can
see, is the Vision Kit.

00:21:37.910 --> 00:21:41.570
The Vision Kit is a
relatively new product,

00:21:41.570 --> 00:21:45.530
and it's just been
released end of last year,

00:21:45.530 --> 00:21:48.890
and we've had a
new version update

00:21:48.890 --> 00:21:50.510
the first quarter of this year.

00:21:50.510 --> 00:21:53.210
So the latest version is
1.1 where, as you can see,

00:21:53.210 --> 00:21:56.770
launched in December
of last year.

00:21:56.770 --> 00:22:01.610
It has the latest Raspberry
Pi Zero and the WH,

00:22:01.610 --> 00:22:03.850
the header is
soldered on the board.

00:22:03.850 --> 00:22:06.540
So it doesn't have the
problem in the early version

00:22:06.540 --> 00:22:08.560
that you have to solder
the pins yourself.

00:22:08.560 --> 00:22:09.700
It's much easier.

00:22:09.700 --> 00:22:13.570
It comes with the Raspberry
Pi camera version 2,

00:22:13.570 --> 00:22:16.495
and Google-made Vision
Bonnet circuit board,

00:22:16.495 --> 00:22:19.570
and that's where all the
software, hardware, artificial

00:22:19.570 --> 00:22:22.635
intelligence, where Google
put it into the product.

00:22:22.635 --> 00:22:24.820
It's on the Vision [INAUDIBLE].

00:22:24.820 --> 00:22:28.270
The most unique things of
this particular product,

00:22:28.270 --> 00:22:30.550
it doesn't require you
to connect to internet.

00:22:30.550 --> 00:22:33.760
You can work with the
vision recognition software

00:22:33.760 --> 00:22:36.880
on the box by itself alone.

00:22:36.880 --> 00:22:40.030
So, before we start, let's go
through the list of materials

00:22:40.030 --> 00:22:43.180
that Dushyantsinh did for the
Voice Kit-- a similar thing.

00:22:43.180 --> 00:22:45.410
In terms of the
hardware, as I mentioned,

00:22:45.410 --> 00:22:49.990
it has the latest Raspberry
Pi Zero board and a camera,

00:22:49.990 --> 00:22:52.380
and Google produced
this Vision Bonnet.

00:22:52.380 --> 00:22:57.460
This Vision Bonnet circuit
board contains the Intel vision

00:22:57.460 --> 00:22:59.980
recognition processor,
which has all the computing

00:22:59.980 --> 00:23:02.740
power to help you do
the vision recognition.

00:23:02.740 --> 00:23:05.800
In addition to that, it
has the camera support

00:23:05.800 --> 00:23:10.210
and it has the connections
to the Raspberry Pi cable

00:23:10.210 --> 00:23:11.800
connector.

00:23:11.800 --> 00:23:14.560
It also has the general
purpose input output,

00:23:14.560 --> 00:23:17.440
so-called GPIO
connector allows you

00:23:17.440 --> 00:23:20.600
to do more things, which
I'm going to cover shortly.

00:23:20.600 --> 00:23:24.530
And also, it has the
crypto chip on board

00:23:24.530 --> 00:23:29.080
to help you to encrypt the
signals to add more securities

00:23:29.080 --> 00:23:31.560
in terms of the application.

00:23:31.560 --> 00:23:34.980
Then on the software side-- oh,
it also has the button as well

00:23:34.980 --> 00:23:39.090
as the cardboard form, allow
you to fold in to the device.

00:23:39.090 --> 00:23:42.430
On the software side, the
operating system is the same.

00:23:42.430 --> 00:23:45.990
It runs on the Linux
Raspbian operating system,

00:23:45.990 --> 00:23:50.580
will include a TensorFlow,
the so-called Inception

00:23:50.580 --> 00:23:54.150
and MobileNet software,
a sound device,

00:23:54.150 --> 00:23:58.650
which allow you to build AI
models to work with this device

00:23:58.650 --> 00:24:01.530
to do applications in AI.

00:24:01.530 --> 00:24:04.920
It has the built-in software
for facial recognition

00:24:04.920 --> 00:24:07.870
as well as general
object recognition.

00:24:07.870 --> 00:24:12.630
So all this software is on
the device, ready to use.

00:24:12.630 --> 00:24:15.440
And in terms of
its component, let

00:24:15.440 --> 00:24:17.460
me get into a bit more
detail because this

00:24:17.460 --> 00:24:19.820
is a relatively new product.

00:24:19.820 --> 00:24:21.570
On the hardware level
at the bottom, which

00:24:21.570 --> 00:24:24.720
is the Raspberry Pi Zero
with the head soldered on,

00:24:24.720 --> 00:24:28.950
as I said, the Raspberry Pi
Zero has the built-in Wi-Fi

00:24:28.950 --> 00:24:30.624
and Bluetooth support.

00:24:30.624 --> 00:24:32.040
So you can connect
to the internet

00:24:32.040 --> 00:24:37.130
if you want without a cable with
Wi-Fi connected to internet.

00:24:37.130 --> 00:24:42.440
It has a GPIO connection, which
allows it to connect directly

00:24:42.440 --> 00:24:47.200
with a flex cable to the Google
Vision Bonnet circuit board.

00:24:47.200 --> 00:24:50.120
That circuit board, with
additional flex cable,

00:24:50.120 --> 00:24:54.470
connects to Pi camera as well
as the additional accessories,

00:24:54.470 --> 00:24:59.980
like the LED, and the push
button, and the buzzer.

00:24:59.980 --> 00:25:01.760
There's a piece of
buzzer on the device

00:25:01.760 --> 00:25:04.910
that, as your
application necessary,

00:25:04.910 --> 00:25:07.160
you can have it generate sound.

00:25:07.160 --> 00:25:15.410
Then on the software side, it
runs on the same Linux Raspbian

00:25:15.410 --> 00:25:18.350
operating system,
and the program

00:25:18.350 --> 00:25:22.520
runs all in Python code, so
it has the Python interpreter

00:25:22.520 --> 00:25:23.810
on top of that.

00:25:23.810 --> 00:25:26.390
And at Google, the
software we put together

00:25:26.390 --> 00:25:30.210
contains three different
modules, if you will,

00:25:30.210 --> 00:25:31.860
in terms of division process.

00:25:31.860 --> 00:25:35.230
The first is the
TensorFlow module

00:25:35.230 --> 00:25:37.370
that does the vision inception.

00:25:37.370 --> 00:25:39.350
Secondly, it has
the facial detection

00:25:39.350 --> 00:25:43.650
software, and the third, it has
the object detection software.

00:25:43.650 --> 00:25:46.820
So with these software on board
and with all these hardware,

00:25:46.820 --> 00:25:50.660
and you, through the API
course, write your applications

00:25:50.660 --> 00:25:52.620
interface with these components.

00:25:52.620 --> 00:25:56.690
So this is how everything
is put together.

00:25:56.690 --> 00:25:58.610
And then let me go
through the same process

00:25:58.610 --> 00:26:02.210
Dushyantsinh mentioned in
terms of the Voice Kit.

00:26:02.210 --> 00:26:04.460
So first is, you assemble it.

00:26:04.460 --> 00:26:07.050
In terms of assemble,
very similar.

00:26:07.050 --> 00:26:10.550
You bought the box, it has these
parts, cardboard or whatever.

00:26:10.550 --> 00:26:13.910
As you can see on the screen,
in terms of the process,

00:26:13.910 --> 00:26:15.560
building is relatively easy.

00:26:15.560 --> 00:26:18.485
You basically hook up the
Raspberry Pi with the Vision

00:26:18.485 --> 00:26:21.110
Bonnet-- a cable with that
orange-colored cable--

00:26:21.110 --> 00:26:23.840
hook them together, stack
them together, and then

00:26:23.840 --> 00:26:27.224
fold the cardboard box, insert
this module into the middle--

00:26:27.224 --> 00:26:28.890
almost like you put
the engine in a car,

00:26:28.890 --> 00:26:33.657
as Dushyantsinh mentioned-- hook
up the button, and that's it.

00:26:33.657 --> 00:26:35.990
The first time I built this,
about 40-something minutes.

00:26:35.990 --> 00:26:38.300
Second time I built it, it
took me only 20 minutes.

00:26:38.300 --> 00:26:39.840
So it's very simple.

00:26:39.840 --> 00:26:42.050
In fact, I have a
plug for myself.

00:26:42.050 --> 00:26:46.511
I made a video tutorial of
how to assemble it on YouTube.

00:26:46.511 --> 00:26:49.010
So for those of you who don't
want to read the instructions,

00:26:49.010 --> 00:26:50.890
you can watch the video.

00:26:50.890 --> 00:26:52.940
But it's very simple, very easy.

00:26:52.940 --> 00:26:53.520
OK.

00:26:53.520 --> 00:26:54.020
All right.

00:26:54.020 --> 00:26:56.210
So to assemble that,
congratulations.

00:26:56.210 --> 00:26:58.400
In less than an hour,
you'll be able to just build

00:26:58.400 --> 00:27:00.660
a device like that.

00:27:00.660 --> 00:27:03.800
OK in terms of set-up,
this is very simple.

00:27:03.800 --> 00:27:06.290
As I said, this
does not necessarily

00:27:06.290 --> 00:27:07.820
need to hook up to internet.

00:27:07.820 --> 00:27:11.570
So the connection, all you
need is just a power supply.

00:27:11.570 --> 00:27:15.980
A power supply connects to
it and you're ready to go.

00:27:15.980 --> 00:27:19.550
And because of the facial
recognition software

00:27:19.550 --> 00:27:21.820
we built into the
device, after you power

00:27:21.820 --> 00:27:25.940
it up it will automatically run
the facial detection software.

00:27:25.940 --> 00:27:31.730
So right now, on the desk,
I have this Vision Bonnet

00:27:31.730 --> 00:27:32.730
with me.

00:27:32.730 --> 00:27:36.500
And as you can see, the
top LED blue light--

00:27:36.500 --> 00:27:38.340
the button-- is lighted up.

00:27:38.340 --> 00:27:42.320
Now if I point this to
my face, as you can see,

00:27:42.320 --> 00:27:47.060
the blue light indicating the
camera is capturing my face.

00:27:47.060 --> 00:27:51.050
If I show it to the camera with
a smiley face, a happy face,

00:27:51.050 --> 00:27:54.990
the light color of the
LCD will change to yellow.

00:27:54.990 --> 00:27:58.380
And if I'm showing a frowning
face, it will go back to blue.

00:27:58.380 --> 00:27:59.700
So let me demonstrate this.

00:28:07.640 --> 00:28:08.500
Can everybody see?

00:28:08.500 --> 00:28:09.100
Right?

00:28:09.100 --> 00:28:10.600
It changes the color.

00:28:10.600 --> 00:28:14.240
Now let me say, this is
not some kind of a magic.

00:28:14.240 --> 00:28:16.400
It is AI at working.

00:28:16.400 --> 00:28:20.680
So what happened, it is a
software inside with the AI

00:28:20.680 --> 00:28:23.760
TensorFlow model with the
facial recognition-- actually,

00:28:23.760 --> 00:28:25.780
I'm going to get
to it in a minute--

00:28:25.780 --> 00:28:29.450
to make a facial recognition
software just like that.

00:28:29.450 --> 00:28:31.240
So there's not much of a set up.

00:28:31.240 --> 00:28:33.010
Just power it on,
hook up the power,

00:28:33.010 --> 00:28:35.080
and you can do
facial recognition.

00:28:35.080 --> 00:28:38.140
This demo is called
Joy Detection.

00:28:38.140 --> 00:28:42.470
It's a part of a product
we ship with the device.

00:28:42.470 --> 00:28:42.970
All right.

00:28:42.970 --> 00:28:46.400
So assembly very easy,
set-up, it's very easy.

00:28:46.400 --> 00:28:47.992
How to make your own solutions.

00:28:47.992 --> 00:28:49.450
There's a lot of
software you could

00:28:49.450 --> 00:28:52.610
do, and let me do another demo.

00:28:52.610 --> 00:28:58.150
So please switch the screen to
the output of my other device.

00:28:58.150 --> 00:29:01.660
So as you can see right now, I'm
running the Raspbian software

00:29:01.660 --> 00:29:05.350
operating system and there's
a window showing the software.

00:29:05.350 --> 00:29:08.830
Let me, by starting
a simple demo, which

00:29:08.830 --> 00:29:11.530
is the object classification.

00:29:11.530 --> 00:29:14.020
So I'm going to start
with demo, and as you

00:29:14.020 --> 00:29:15.940
will see on the screen,
on the right hand

00:29:15.940 --> 00:29:20.200
side it will have the camera,
the video image coming captured

00:29:20.200 --> 00:29:23.600
by the camera.

00:29:23.600 --> 00:29:27.440
And on the table I have
a apple, and a banana,

00:29:27.440 --> 00:29:29.480
and also a Coke can.

00:29:29.480 --> 00:29:31.770
This is some random objects
that I put together.

00:29:31.770 --> 00:29:35.180
Now as you can see, on the
left side of the screen,

00:29:35.180 --> 00:29:37.340
there's the output
stream out starting

00:29:37.340 --> 00:29:41.030
putting on the screen, which
is by the object classification

00:29:41.030 --> 00:29:42.937
software that we
put on the device.

00:29:42.937 --> 00:29:45.020
Now, I'm going to explain
all of that in a minute,

00:29:45.020 --> 00:29:46.145
but first let me do a demo.

00:29:46.145 --> 00:29:49.900
Let me just point
this to banana.

00:29:49.900 --> 00:29:54.260
And you should see on the
left hand of the screen,

00:29:54.260 --> 00:29:56.820
it will say it
detects this object--

00:29:56.820 --> 00:29:59.860
a banana, I hope.

00:29:59.860 --> 00:30:03.860
Now if I point to
an apple, not only

00:30:03.860 --> 00:30:07.030
it will recognize
it's an apple, in fact

00:30:07.030 --> 00:30:09.275
it should say Granny Smith.

00:30:09.275 --> 00:30:14.584
It actually recognizes
the type of the apple.

00:30:14.584 --> 00:30:19.860
And I already tried earlier,
I pointed this Coca-Cola can.

00:30:19.860 --> 00:30:23.280
I don't know what it will say,
but earlier it was telling me

00:30:23.280 --> 00:30:25.080
it thinks it's a punching bag.

00:30:25.080 --> 00:30:29.120
Well, lots of punching bags is
red color, it looks like this.

00:30:29.120 --> 00:30:32.264
So let me stop the
application and let me make

00:30:32.264 --> 00:30:33.430
this window a little bigger.

00:30:39.590 --> 00:30:46.960
And as you can see on the left
side, the first column number,

00:30:46.960 --> 00:30:48.450
it is the object recognition.

00:30:48.450 --> 00:30:49.590
It recognizes it.

00:30:49.590 --> 00:30:51.090
It says it's a banana.

00:30:51.090 --> 00:30:54.420
The number after that is the
so-called confidence score--

00:30:54.420 --> 00:30:59.410
how confident the AI thinks
this is a banana, or similarly,

00:30:59.410 --> 00:31:02.930
to an apple, which is
a Granny Smith apple.

00:31:02.930 --> 00:31:06.860
So this confidence level tells
you, the recognition part, will

00:31:06.860 --> 00:31:10.010
it think it truly is
the object it detects.

00:31:10.010 --> 00:31:13.760
These numbers, these kind of
feedback from their software,

00:31:13.760 --> 00:31:17.040
you can use to make a
lot of applications.

00:31:17.040 --> 00:31:20.940
Let's switch back to the slides.

00:31:20.940 --> 00:31:23.870
So this image on the
screen, as you can see,

00:31:23.870 --> 00:31:25.040
very similar, right?

00:31:25.040 --> 00:31:28.560
It recognized the object
along with a confidence score.

00:31:28.560 --> 00:31:32.580
You can use this number to help
you design your applications.

00:31:32.580 --> 00:31:37.355
So exactly what can you
do with a Vision Kit?

00:31:37.355 --> 00:31:40.440
Well, number one, as I
said, you can see it already

00:31:40.440 --> 00:31:42.450
does the object detection.

00:31:42.450 --> 00:31:44.540
And it has the
facial detection--

00:31:44.540 --> 00:31:47.830
these are software built into
it, and through the API course

00:31:47.830 --> 00:31:49.620
you can leverage this.

00:31:49.620 --> 00:31:52.790
It has the automatically to be
able to taking photos, videos,

00:31:52.790 --> 00:31:55.740
and send an output
to your application.

00:31:55.740 --> 00:31:57.900
It has the image
classification, which you just

00:31:57.900 --> 00:31:59.880
saw, be able to tell
apple and banana,

00:31:59.880 --> 00:32:02.730
and a whole bunch
of other stuff.

00:32:02.730 --> 00:32:07.110
But most importantly, as
the Joy Detect demonstrate,

00:32:07.110 --> 00:32:11.280
you can run your own AI
machine learning software

00:32:11.280 --> 00:32:14.770
in this device by building
your own customized TensorFlow

00:32:14.770 --> 00:32:16.230
model.

00:32:16.230 --> 00:32:18.930
Now some of you may be
thinking, how do I do that?

00:32:18.930 --> 00:32:22.366
It's a bit confusing in terms
of building a TensorFlow model.

00:32:22.366 --> 00:32:23.490
That's very powerful stuff.

00:32:23.490 --> 00:32:24.300
How do you do that?

00:32:24.300 --> 00:32:24.800
All right.

00:32:24.800 --> 00:32:27.750
So let me introduce
to you the process

00:32:27.750 --> 00:32:31.060
of how do you do your
customized model.

00:32:31.060 --> 00:32:33.300
So first of all, the
first number one--

00:32:33.300 --> 00:32:36.020
every machine learning model
you build in TensorFlow,

00:32:36.020 --> 00:32:38.070
you're building
a model to train.

00:32:38.070 --> 00:32:42.470
So specify and train your
own model is the first step.

00:32:42.470 --> 00:32:45.390
And the second, just like
any other TensorFlow model,

00:32:45.390 --> 00:32:49.800
you get the end results, you
do a so-called export model

00:32:49.800 --> 00:32:52.320
to a so-called frozen graph.

00:32:52.320 --> 00:32:54.310
Any model, you can
generate frozen graph.

00:32:54.310 --> 00:32:56.950
But a frozen graph
has its own format.

00:32:56.950 --> 00:33:02.610
That format is not understood
by the Vision Bonnet hardware.

00:33:02.610 --> 00:33:04.190
So somehow, we need
to make a match,

00:33:04.190 --> 00:33:06.180
and that match is
then the next step,

00:33:06.180 --> 00:33:08.280
is the so-called compiler.

00:33:08.280 --> 00:33:11.910
Google provides this so-called
Bonnet Model Compiler.

00:33:11.910 --> 00:33:14.280
You take the frozen
graph binary code

00:33:14.280 --> 00:33:17.090
and run the compiling
through the compiled code.

00:33:17.090 --> 00:33:22.080
You generate a so-called your
own customized computer graph.

00:33:22.080 --> 00:33:24.147
So the other fact-wise
is, in end result,

00:33:24.147 --> 00:33:25.980
you're going through
with these three steps,

00:33:25.980 --> 00:33:27.440
you have a binary file.

00:33:27.440 --> 00:33:30.740
That file defines your
machine learning model.

00:33:30.740 --> 00:33:33.270
Then on the hardware side of
course, we have Raspberry Pi,

00:33:33.270 --> 00:33:34.610
we have Vision Bonnet.

00:33:34.610 --> 00:33:37.020
Raspberry Pi has
a Python program.

00:33:37.020 --> 00:33:40.295
You use the API course, you
send this computer graph,

00:33:40.295 --> 00:33:42.300
if you will, to
the Vision Bonnet.

00:33:42.300 --> 00:33:44.850
So the next step,
you write some code--

00:33:44.850 --> 00:33:48.210
you can look at our tutorials
and example models--

00:33:48.210 --> 00:33:50.440
code in a model
function, basically it

00:33:50.440 --> 00:33:53.730
sends this computer graph
into the Vision Bonnet.

00:33:53.730 --> 00:33:56.430
In this particular
case, the computer graph

00:33:56.430 --> 00:33:58.260
and Vision Bonnet match.

00:33:58.260 --> 00:34:00.640
They understood what's going on.

00:34:00.640 --> 00:34:02.875
And then you have a
camera coming and stream

00:34:02.875 --> 00:34:04.130
all the inputs.

00:34:04.130 --> 00:34:06.650
Those inputs are coming
as a binary number,

00:34:06.650 --> 00:34:08.639
but because of these
computer graphs,

00:34:08.639 --> 00:34:13.040
we arrange these inputs into
whatever the machine learning

00:34:13.040 --> 00:34:16.000
tensors, which
basically is a bunch

00:34:16.000 --> 00:34:19.260
of multi-dimensional arrays.

00:34:19.260 --> 00:34:21.989
So now, next step
is you need to match

00:34:21.989 --> 00:34:29.199
this tensor, bunch of arrays,
to the image with your model.

00:34:29.199 --> 00:34:31.739
And this is what we
call do this computing.

00:34:31.739 --> 00:34:35.239
Basically the step is
you write a program,

00:34:35.239 --> 00:34:38.489
you have this Vision
Bonnet hardware,

00:34:38.489 --> 00:34:41.159
it does the calculation,
and will send the signal

00:34:41.159 --> 00:34:43.590
to the output.

00:34:43.590 --> 00:34:45.179
And here's the code.

00:34:45.179 --> 00:34:48.540
How do you define your face
object, as you can see?

00:34:48.540 --> 00:34:51.750
The face object was defined
with the bounding box, the face

00:34:51.750 --> 00:34:53.620
score, and the joy score.

00:34:53.620 --> 00:34:55.830
You write a arguments
code like that

00:34:55.830 --> 00:34:57.720
and this is your structure.

00:34:57.720 --> 00:35:01.680
You send it as a structure
and say, in my model,

00:35:01.680 --> 00:35:02.980
I need this to have four.

00:35:02.980 --> 00:35:06.249
And these four numbers match
with my machine learning model.

00:35:06.249 --> 00:35:07.790
And finally, in your
application code

00:35:07.790 --> 00:35:11.260
you just say, let me get
results from this tensor

00:35:11.260 --> 00:35:14.120
whether the joy scores,
the face score, whatever,

00:35:14.120 --> 00:35:16.720
and you take that
into your end result.

00:35:16.720 --> 00:35:18.540
And you can make a
decision and say,

00:35:18.540 --> 00:35:21.510
the score is based on some
number above some number,

00:35:21.510 --> 00:35:23.100
change my color light.

00:35:23.100 --> 00:35:25.080
So this is exactly
what you do in terms

00:35:25.080 --> 00:35:27.290
of using your own
machine learning model

00:35:27.290 --> 00:35:28.650
with the Vision Kit.

00:35:28.650 --> 00:35:29.380
All right.

00:35:29.380 --> 00:35:32.730
So with that, let's talk
about extending our project.

00:35:32.730 --> 00:35:35.370
We talked about software,
but how about hardware?

00:35:35.370 --> 00:35:39.870
On the AIY board, there's the
red circle area I pointed out.

00:35:39.870 --> 00:35:41.800
It has additional GPI pins.

00:35:41.800 --> 00:35:43.830
With those pins, you
can control output--

00:35:43.830 --> 00:35:46.170
turn on the lights,
turn on the fans,

00:35:46.170 --> 00:35:48.710
send out making some noise,
whatever you could do.

00:35:48.710 --> 00:35:51.710
So with these things, you
could expand your project

00:35:51.710 --> 00:35:56.010
and, with that control on board,
you can do a lot more things.

00:35:56.010 --> 00:35:58.660
So hardware-wise, is a maker
which can do the most things.

00:35:58.660 --> 00:35:59.160
All right.

00:35:59.160 --> 00:36:00.493
So we've gone through all these.

00:36:00.493 --> 00:36:03.600
We talked about the
assemble, how do you set up,

00:36:03.600 --> 00:36:05.340
and how do you do
your own things.

00:36:05.340 --> 00:36:08.660
And most importantly, I
want to say, to use AIY,

00:36:08.660 --> 00:36:11.040
the power of AIY
really is connected

00:36:11.040 --> 00:36:14.780
to many of the services
Google provides, like Google

00:36:14.780 --> 00:36:16.140
Assistant, like TensorFlow.

00:36:16.140 --> 00:36:19.600
You want to leverage all this
power of service behind you.

00:36:19.600 --> 00:36:23.220
And AIY, we are part of a
global open source community.

00:36:23.220 --> 00:36:26.310
We publish this on GitHub,
we work with Raspberry Pi

00:36:26.310 --> 00:36:28.440
Foundation, we
work with Hackster,

00:36:28.440 --> 00:36:32.190
so immerse yourself
with the online maker

00:36:32.190 --> 00:36:33.990
communities around the world.

00:36:33.990 --> 00:36:36.350
And this is the part of the
fun of building makers--

00:36:36.350 --> 00:36:37.620
AIY.

00:36:37.620 --> 00:36:40.320
I want to mention, take this
opportunity to tell everybody,

00:36:40.320 --> 00:36:43.630
for the audience here,
those of you from the US,

00:36:43.630 --> 00:36:47.130
you could join a contest
going on right now organized

00:36:47.130 --> 00:36:50.580
by Hackster with the Ministry
of Education in China,

00:36:50.580 --> 00:36:54.160
is so-called the Young
US-China Makers Contest.

00:36:54.160 --> 00:36:57.100
The winners will get a
all-expense paid trip to China.

00:36:57.100 --> 00:37:00.120
So those of you in the room,
you are American makers,

00:37:00.120 --> 00:37:03.130
please join this contest.

00:37:03.130 --> 00:37:06.640
And more details on
Hackster's website.

00:37:06.640 --> 00:37:07.270
All right.

00:37:07.270 --> 00:37:09.370
The key takeaway
from our talk today,

00:37:09.370 --> 00:37:12.100
what Sebastian and
Dushyantsinh mention

00:37:12.100 --> 00:37:15.880
in their part of the talk,
and mine, the key takeaway is,

00:37:15.880 --> 00:37:18.610
resource-wise, the
global AIY website

00:37:18.610 --> 00:37:22.960
is this address--
aiyprojects.withgoogle.com.

00:37:22.960 --> 00:37:25.030
The kits can be
purchased right now

00:37:25.030 --> 00:37:27.700
at the Target store in the US.

00:37:27.700 --> 00:37:29.940
And also, next weekend
in the Bay Area

00:37:29.940 --> 00:37:31.330
there is a Maker's Faire.

00:37:31.330 --> 00:37:34.150
Those of you who are in the
area joining the Maker's Faire,

00:37:34.150 --> 00:37:37.600
you can get the kits
from the Maker's Faire.

00:37:37.600 --> 00:37:40.680
Learning using Raspberry
Pi using Python programming

00:37:40.680 --> 00:37:42.200
is part of the
thing that you need

00:37:42.200 --> 00:37:46.410
to get yourself involved to
expand your applications,

00:37:46.410 --> 00:37:48.885
and using TensorFlow
machine learning model

00:37:48.885 --> 00:37:53.290
to really build the power
of AI into applications.

00:37:53.290 --> 00:37:55.640
And that's the power of AIY.

00:37:55.640 --> 00:38:00.510
And finally, to summary, and
I would say call to action,

00:38:00.510 --> 00:38:02.290
the things you guys could do--

00:38:02.290 --> 00:38:05.080
everyone could do-- getting our
kits and start building, have

00:38:05.080 --> 00:38:09.250
a lot of fun, of course, and
learning many Google services.

00:38:09.250 --> 00:38:13.390
At Google I/O we have sessions
on Google Cloud, on Google

00:38:13.390 --> 00:38:14.560
Assistant, on TensorFlow.

00:38:14.560 --> 00:38:18.650
Please join in the learning
of those knowledge and skills

00:38:18.650 --> 00:38:21.970
and get a lot of different
sensors, controls.

00:38:21.970 --> 00:38:25.000
Hook up to the GPIO
ports on those devices.

00:38:25.000 --> 00:38:26.820
You can build a lot
of fun applications

00:38:26.820 --> 00:38:29.160
and leverage your AI capability.

00:38:29.160 --> 00:38:32.020
And lastly, joining
online communities.

00:38:32.020 --> 00:38:35.740
We will very soon publish
a global AIY model exchange

00:38:35.740 --> 00:38:37.480
and put your
application on that,

00:38:37.480 --> 00:38:41.600
share your knowledge with the
global developer communities.

00:38:41.600 --> 00:38:45.550
So with that, along with
Sebastian and Dushyantsinh,

00:38:45.550 --> 00:38:48.100
we want to thank you for coming,
joining our session today.

00:38:48.100 --> 00:38:50.300
Start your AIY journey today.

00:38:50.300 --> 00:38:52.230
Thank you very much.

