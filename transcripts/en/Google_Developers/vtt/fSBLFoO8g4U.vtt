WEBVTT
Kind: captions
Language: en

00:02:04.515 --> 00:02:09.192
Caption test.  This is a caption
 test.  Caption test.   test.  

00:02:32.562 --> 00:02:34.562
Android with the Android Testing
 Support Library 

00:02:36.476 --> 00:02:41.617
  One two, one, two, three, 
four.   Yeah.  

00:22:58.734 --> 00:23:00.734
Android with the Android Testing
 Support Library

00:23:02.912 --> 00:23:09.175
   Welcome.  Thank you for 
joining.  Our session will be 

00:23:09.176 --> 00:23:11.176
starting

00:26:55.544 --> 00:26:57.544
 soon.  

00:27:00.634 --> 00:27:04.781
 Welcome.  Thank you for 
joining.  Our session will

00:28:35.453 --> 00:28:37.453
 begin soon.  

00:28:40.668 --> 00:28:46.254
 At this time, please find your 
seat.  Our session will

00:29:27.445 --> 00:29:29.445
 begin soon.  

00:29:33.690 --> 00:29:38.502
 Hello, everyone.  Welcome to 
this morning's session on 

00:29:38.503 --> 00:29:38.811
Test-Driven Development on 
Android with the Android Testing

00:29:38.812 --> 00:29:43.518
 Support Library.  My name is 
Jonathan Gerrish.  I'm part of 

00:29:43.519 --> 00:29:45.989
the mobile ninjas. 

00:29:48.991 --> 00:29:52.350
 show of hands for those of you 
writing test as part of your 

00:29:52.351 --> 00:30:00.413
normal software development 
practice? FANTS.  If you have 

00:30:00.414 --> 00:30:03.553
written tests for Android 
before, you have probably used 

00:30:03.554 --> 00:30:10.745
some of our tools.  We have the 
J unit, the Espresso testing 

00:30:10.746 --> 00:30:14.405
framework and active 
contributors to Robolectric, the

00:30:15.015 --> 00:30:18.676
 Android source testing 
framework.  Everyone is telling 

00:30:18.677 --> 00:30:22.805
you to write tests.  should you 
do it?  It is true that tests 

00:30:22.806 --> 00:30:27.042
take time to write.  They're 
adding code to your code base 

00:30:27.043 --> 00:30:30.190
and perhaps you have been in a 
situation where the manager or 

00:30:30.191 --> 00:30:33.952
client has been telling you it 
is slowing you down.  There are 

00:30:33.953 --> 00:30:39.300
so many compelling reasons to 
write tests.  They give you 

00:30:39.301 --> 00:30:45.250
rapid feedback on failures.  
Ones that are spotted earlier 

00:30:45.251 --> 00:30:52.293
are far easier to fix than once 
you have gone live.  Tests give 

00:30:52.294 --> 00:30:57.932
you a safety net.  You can 
cleanup code and safe in the 

00:30:57.933 --> 00:31:01.868
knowledge you will not break 
existing behavior.  TestTests 

00:31:01.869 --> 00:31:05.350
are the backbone of software 
development.  You can maintain 

00:31:05.351 --> 00:31:08.913
the stable velocity throughout 
the lifetime of your project.  

00:31:08.914 --> 00:31:14.792
You will avoid the boom-bust 
cycles of crunch feature and 

00:31:14.793 --> 00:31:19.347
aggregation of technical  In 
software testing, there exists 

00:31:19.348 --> 00:31:23.204
the concept of the testing 
pyramid.  This is made up of a 

00:31:23.205 --> 00:31:27.797
number of layers. layer brings 
with it the tradeoffs that you 

00:31:27.798 --> 00:31:29.798
have to 

00:31:33.488 --> 00:31:39.346
weigh.  Smallest layers of the 
small unit tests.  These should 

00:31:39.347 --> 00:31:44.135
be fast and focused.  are known 
as local unit tests, run on your

00:31:44.354 --> 00:31:47.659
 local desktop machine.  The 
tradeoff you are making with 

00:31:47.660 --> 00:31:52.236
these tests is infidelity, 
because you are not running on a

00:31:52.850 --> 00:31:55.476
 realistic environment and 
probably substituting in a bunch

00:31:55.792 --> 00:32:04.013
 of mocks and fakes.  As we move
 up the pyramid now into the 

00:32:04.014 --> 00:32:09.325
realms of end-to-end and 
testing.  We suggest you run 

00:32:09.326 --> 00:32:13.125
these tests on a real device or 
emulator.  These are the kinds 

00:32:13.126 --> 00:32:16.963
of tests that will tell you your
 software actually works.  

00:32:17.276 --> 00:32:21.163
However, they are less focused, 
so a failure in one of these 

00:32:21.164 --> 00:32:24.978
kinds of tests might take longer
 to track down than it would in 

00:32:24.979 --> 00:32:29.058
the unit test.  One of the big 
tradeoffs you are making is in 

00:32:29.059 --> 00:32:33.223
test execution speed.  Because 
you are assembling multiple 

00:32:33.345 --> 00:32:36.439
components, they have to be 
built, package shipped to a 

00:32:36.440 --> 00:32:40.072
device where the tests are run 
and results reflected back.  

00:32:40.073 --> 00:32:43.302
will take extra time.  So there 
is no language layer in this 

00:32:43.303 --> 00:32:48.623
testing pyramid that can 
suffice.  You need to blend in 

00:32:48.624 --> 00:32:53.122
tests of each different tier, 
leveraging the strengths of one 

00:32:53.123 --> 00:32:56.075
category to weigh off the 
tradeoffs in another.  There is 

00:32:56.076 --> 00:33:01.271
no real hard and fast rule here.
  But Google's own internal 

00:33:01.272 --> 00:33:07.859
experts recommend the 70/20/10 
rule of thumb as the ratio 

00:33:07.860 --> 00:33:12.475
between small, medium and large 
tests.  Let's look at work flow.

00:33:12.947 --> 00:33:16.299
 with test driven development, 
the idea is you start by writing

00:33:16.676 --> 00:33:20.112
 tests, implement the codes to 
make the test passes, when the 

00:33:20.113 --> 00:33:23.699
tests are green, you can submit.
  Again, a quick show of hands, 

00:33:23.700 --> 00:33:28.961
who out there has test-driven 
their code, tried test driven 

00:33:28.962 --> 00:33:33.797
development in the past?  Okay 
cool.  We like test driven 

00:33:33.964 --> 00:33:37.932
development.  It makes you think
 about the design of your 

00:33:37.933 --> 00:33:41.994
application up-front.  It gives 
consideration to the API and 

00:33:41.995 --> 00:33:46.325
structure of your code.  With 
test driven development you 

00:33:46.326 --> 00:33:49.414
write less code because you only
 write the code necessary to 

00:33:49.415 --> 00:33:53.657
satisfy your tests.  This will 
enable you to release early and 

00:33:53.658 --> 00:33:58.666
often as you are constantly 
green, you will deploy an early 

00:33:58.667 --> 00:34:01.220
application at a moment's 
notice.  If we are following the

00:34:01.413 --> 00:34:05.178
 test pyramid, the work flow 
will look something like this.  

00:34:05.179 --> 00:34:07.179
First of all, we have a larger

00:34:10.171 --> 00:34:13.945
 out duration, with the feature 
development.  Here it is driven 

00:34:13.946 --> 00:34:19.382
by a UI test.  The mantra with 
test driven development is red, 

00:34:20.758 --> 00:34:23.664
green, refactor.  We start off 
with the test, implement code to

00:34:23.921 --> 00:34:29.481
 make the test pass and then we 
refactor.  Inside the larger 

00:34:29.708 --> 00:34:32.718
iteration are a series of 
smaller iterations and these are

00:34:32.719 --> 00:34:35.740
 concerned with the unit tests. 
 Here you're building the units 

00:34:35.741 --> 00:34:39.520
required to make the feature 
pass.  And again, you use the 

00:34:39.521 --> 00:34:45.546
same mantra here, red green, 
refactor.  Red, green, refactor.

00:34:45.547 --> 00:34:50.128
  Let's take a look at a sample 
application.  The feature we 

00:34:50.129 --> 00:34:57.439
will implement today is the add 
note flow.  is an add note 

00:34:57.658 --> 00:35:02.029
feature.  start on the list 
screen full of existing notes.  

00:35:02.030 --> 00:35:05.930
action at the bottom. user will 
click this, taking them on to 

00:35:05.931 --> 00:35:09.116
the new add note screen.  They 
can enter a title and 

00:35:09.117 --> 00:35:12.872
description for the note before 
clicking save.  note will be 

00:35:12.873 --> 00:35:15.739
persisted and returned back to 
the notes list screen where they

00:35:16.005 --> 00:35:19.808
 can see the newly added note 
and any other notes that 

00:35:19.809 --> 00:35:22.889
previously existed.  So coming 
back to our work flow for a 

00:35:23.248 --> 00:35:28.233
moment.   we start with a 
failing UI test.  Take a look at

00:35:28.494 --> 00:35:33.395
 how this test would look like 
using Espresso, the UI testing 

00:35:33.657 --> 00:35:39.135
framework.  The first step is to
 click on the add note button.  

00:35:39.136 --> 00:35:43.280
Then we enter the title and 
description and click save 

00:35:43.281 --> 00:35:47.612
before returning to the notes 
list screen.  Here, we're going 

00:35:47.613 --> 00:35:52.613
to verify that the note we just 
added actually shows up.  Now, 

00:35:52.729 --> 00:35:55.997
remember, with test-driven 
development, we're not 

00:35:55.998 --> 00:35:59.409
implementing code yet.  we have 
to do is implement enough of the

00:35:59.990 --> 00:36:03.200
 application to satisfy the 
specification of our test.  An 

00:36:03.201 --> 00:36:06.391
empty activity and just 
resources we need will suffice. 

00:36:06.531 --> 00:36:10.114
 Once we have that, we can run 
our test and we will see it will

00:36:10.263 --> 00:36:16.561
 fail.  Now we have to implement
 this feature.  So applications 

00:36:16.562 --> 00:36:21.477
are built up of many small 
units.  are small, highly 

00:36:21.608 --> 00:36:24.995
focused, specialized components 
that do one thing and do it 

00:36:25.389 --> 00:36:28.138
well.  Collection of the small 
units are then assembled 

00:36:28.139 --> 00:36:34.624
together so their collaborations
 will satisfy our feature.  

00:36:34.625 --> 00:36:37.492
Let's take a moment to summarize
 the key characteristic

00:36:38.237 --> 00:36:42.342
characteristics that make up a 
good unit  As well as the normal

00:36:42.751 --> 00:36:47.802
 conditions, you want to test 
your failure conditions, invalid

00:36:48.629 --> 00:36:52.252
 inputs, boundary conditions.  
You can end up writing a lot of 

00:36:52.253 --> 00:36:58.525
unit tests.  tests must always 
give you the same result every 

00:36:58.698 --> 00:37:01.702
time.  Avoid depending on things
 that might change.  For 

00:37:01.703 --> 00:37:04.852
example, an external server or 
the current time of date, 

00:37:04.853 --> 00:37:09.818
because this is going to bring 
flakiness into your unit tests. 

00:37:11.333 --> 00:37:15.141
 Unit tests should exercise one 
specific aspect of your code at 

00:37:15.142 --> 00:37:19.025
a time.  You are wanting to see 
that a failure in a unit test 

00:37:19.026 --> 00:37:23.179
will lead you quickly to an 
actual bug in your code.  When 

00:37:23.180 --> 00:37:27.311
you write unit tests, avoid 
making too many assumptions on 

00:37:27.312 --> 00:37:31.293
the actual implementation of 
your code.  You want your unit 

00:37:31.294 --> 00:37:36.634
test to avoid behavior and avoid
 rewriting tests when the 

00:37:36.635 --> 00:37:40.475
implementation is changing.   of
 the most important aspects of 

00:37:40.476 --> 00:37:44.816
unit tests is they've got to be 
fast, especially because you are

00:37:45.200 --> 00:37:51.694
 writing so many of them and you
 are in TDD work flow write -- 

00:37:51.695 --> 00:37:55.722
running them rapidly. would be 
unfortunate if you are 

00:37:55.723 --> 00:37:58.018
discouraged because of the 
tests, because of the pain in 

00:37:58.019 --> 00:38:02.851
the execution time of the  
Finally, unit tests are an 

00:38:02.852 --> 00:38:05.560
excellent source of 
documentation.  The way that is 

00:38:05.561 --> 00:38:11.103
constantly evolving with the 
code as it changes unlike static

00:38:11.104 --> 00:38:16.403
 documents that will stagnate 
over time.  Let's write a unit 

00:38:16.404 --> 00:38:21.382
test for the add notes activity.
  will take in user input and 

00:38:21.383 --> 00:38:26.351
persist it to local storage on 
the device.   so we will create 

00:38:26.352 --> 00:38:29.988
the add note activity class, and
 this will extend activity which

00:38:30.178 --> 00:38:34.073
 is an Android framework class. 
 It has a view which will be 

00:38:34.074 --> 00:38:38.741
inflated with the layout.  The 
user will enter the data.  We 

00:38:38.742 --> 00:38:44.511
will persist that note into 
Android shared preferences 

00:38:44.928 --> 00:38:49.688
mechanism.  So it is conceivable
 as our application evolves, so 

00:38:49.689 --> 00:38:53.123
does our requirement and perhaps
 storage requirements evolve to 

00:38:53.124 --> 00:39:00.459
persist the notes on to Cloud 
storage and we have to build a 

00:39:00.460 --> 00:39:04.798
synchronization method for the 
storage of the offload case.  

00:39:04.799 --> 00:39:07.778
these, we see opportunity for 
abstraction.  We might see that 

00:39:07.779 --> 00:39:12.246
we can extract notes for 
repository.  However, one of the

00:39:12.985 --> 00:39:17.147
 key aspects of test-driven 
development is we only start by 

00:39:17.148 --> 00:39:21.266
writing the simplest case first 
and then iterate.  We will 

00:39:21.267 --> 00:39:25.569
resist the temptation to do this
 early.  Let's take a look at a 

00:39:25.570 --> 00:39:30.308
sample of what an idealized unit
 test would look like.  

00:39:30.309 --> 00:39:33.904
Generally built up in three 
stages.  So the first stage is 

00:39:33.905 --> 00:39:36.539
you're setting the conditions 
for the test.  And this includes

00:39:37.392 --> 00:39:41.523
 preparing the environment, 
setting up your dependencies 

00:39:41.524 --> 00:39:45.635
with the required state and 
preparing any input data.  Next,

00:39:45.835 --> 00:39:49.489
 we'll exercise the code and the
 test before finally making 

00:39:49.490 --> 00:39:54.196
assertions on the results or the
 state.  So I like to clearly 

00:39:54.197 --> 00:39:57.752
separate each of the three 
stages of the test and bring the

00:39:58.703 --> 00:40:03.105
 pertinent aspects of each test 
front and center to make for a 

00:40:03.106 --> 00:40:09.826
really readable test.  up until 
now, with the Android platform, 

00:40:09.827 --> 00:40:18.753
you're writing your unit tests 
using the mocking jarring jargon

00:40:19.112 --> 00:40:24.329
 such as mockito.  Let's look at
 a test written with mockito.  

00:40:24.582 --> 00:40:33.668
Wow, that's a lot of code.  
Okay.  So because of so many 

00:40:33.669 --> 00:40:36.606
interactions with the Android 
framework, we need stubbing just

00:40:36.777 --> 00:40:40.817
 to satisfy the execution paths 
of our test.  furthermore, 

00:40:40.818 --> 00:40:46.214
because Android uses a lot of 
static methods, we're forced to 

00:40:47.567 --> 00:40:49.646
introduce a second mocking 
library, a power mock to handle 

00:40:49.647 --> 00:40:55.151
this special case for us.  There
 are also some pretty bad codes 

00:40:55.326 --> 00:40:58.756
here.  Take a look.  You see we 
are forced to spy on the 

00:40:58.757 --> 00:41:03.095
activity on the test.  And we're
 needing to do this to modify 

00:41:03.096 --> 00:41:08.387
its behavior and stubbing it out
 and providing no-ops.  We're 

00:41:08.388 --> 00:41:12.496
moving to the realms of black 
box testing.  Finally, at the 

00:41:12.650 --> 00:41:15.783
end, we're making assertions 
about the implementation 

00:41:16.463 --> 00:41:21.973
details.  If these change, our 
test will need to change, too. 

00:41:21.974 --> 00:41:24.818
So remembering the 
characteristics of a good unit 

00:41:24.819 --> 00:41:28.154
test, let's take a moment to 
score this particular test.   it

00:41:28.155 --> 00:41:34.092
 is very focused.  just testing 
the happy path of our add notes.

00:41:34.093 --> 00:41:37.203
  And it is certainly fast 
because it is running on the 

00:41:37.204 --> 00:41:42.326
local JVF.   we were making a 
rather lot of assumptions about 

00:41:42.327 --> 00:41:47.088
the implementation in that test 
and with this, if any of our 

00:41:47.089 --> 00:41:50.659
implementation changes, it is 
likely we'll need to rewrite 

00:41:50.660 --> 00:41:57.589
that test substantially.  And 
finally, all that excess boiler 

00:41:57.590 --> 00:42:01.180
plate stubbing is distracting.  
It is distracting from the key 

00:42:01.181 --> 00:42:06.196
conditions of the test that 
you're trying to document.  

00:42:06.197 --> 00:42:09.098
Well, luckily, there is a tool 
that helps address some of these

00:42:09.789 --> 00:42:12.783
 issues.  So 
introducingintroducing 

00:42:13.151 --> 00:42:17.162
Robolectric.   is an Android 
unit testing tool that is open 

00:42:17.163 --> 00:42:21.045
source that we're actively 
contributing to.  And to tell 

00:42:22.128 --> 00:42:25.073
you more about how to write 
great tests with Robolectric.  

00:42:25.074 --> 00:42:28.271
will hand you over to Christian 
Williams, the original author of

00:42:28.799 --> 00:42:30.799
 Robolectric.  (Applause)

00:42:34.174 --> 00:42:37.166
   CHRISTIAN WILLIAMS: Thanks, 
Jonathan.  It is awesome to see 

00:42:37.167 --> 00:42:42.754
so many people that are into 
Android testing and TDD.  is 

00:42:42.755 --> 00:42:45.972
this scrappy little open source 
project that I started hacking 

00:42:45.973 --> 00:42:49.445
on back in the early days of 
Android testing, because I was 

00:42:49.446 --> 00:42:53.528
super annoyed at how long it 
took to deploy and run tests on 

00:42:53.529 --> 00:42:58.526
an emulator.  And it has been a 
side project of a bunch of 

00:42:58.527 --> 00:43:02.927
different people until last year
 when I had the privilege of 

00:43:02.928 --> 00:43:06.392
joining my friend Jonathan at 
Google where he was already 

00:43:06.393 --> 00:43:10.944
working to improve Robolectric 
for the internal test  then we 

00:43:10.945 --> 00:43:13.561
have been beefing up Robolectric
 and contributing back to the 

00:43:13.562 --> 00:43:19.269
open source project. Today, 
Robolectric isn't an officially 

00:43:19.270 --> 00:43:22.453
supported part of the Android 
testing platform, but we found 

00:43:22.454 --> 00:43:26.154
that when it is used correctly, 
it can be a useful part of the 

00:43:26.155 --> 00:43:31.019
testing strategy.  I will show 
you a little bit about how to do

00:43:31.146 --> 00:43:35.358
 that too.  Let's go back to the
 notes unit test and see how to 

00:43:35.359 --> 00:43:38.343
approach it with Robolectric.  
Since Robolectric runs as a 

00:43:38.344 --> 00:43:41.927
local unit test, it will still 
be running on the workstation 

00:43:41.928 --> 00:43:46.251
not an emulator.  Robolectric 
provides an Android Sandbox next

00:43:46.252 --> 00:43:48.252
 to your test, where the actual

00:43:51.146 --> 00:43:55.443
 SDK code is running.  will have
 access to activities, layouts, 

00:43:55.829 --> 00:43:58.930
resources.  And you can call 
most Android methods and they 

00:43:58.931 --> 00:44:02.553
work as you would expect.  are 
parts of the Android framework 

00:44:02.554 --> 00:44:06.770
that rely on native code or call
 out to hardware or interact 

00:44:06.771 --> 00:44:11.789
with external system services.  
For that, Robolectric provides a

00:44:12.149 --> 00:44:16.783
 test double that we call 
shadows.  provide alternative 

00:44:16.784 --> 00:44:20.369
limitations of the code that is 
appropriate for unit  So 

00:44:20.370 --> 00:44:25.007
remember that test that we just 
saw that had like 20 lines of 

00:44:25.008 --> 00:44:29.452
like mock setup code?  Let's see
 how it looks in Robolectric.  

00:44:29.453 --> 00:44:34.476
So that is a lot less.  You have
 gotten rid of the boiler plate.

00:44:34.477 --> 00:44:38.387
  The test is about half the 
size.  Much more concise.  Not 

00:44:38.388 --> 00:44:42.011
forced to think about 
deimplementation details as 

00:44:42.012 --> 00:44:45.595
we're writing the test, which is
 nice.  will set up the 

00:44:46.093 --> 00:44:50.749
application according to 
manifest.  Here we ask it to set

00:44:50.750 --> 00:44:54.178
 up the activity.  It goes 
through the appropriate life 

00:44:54.179 --> 00:44:59.152
cycle to get in the right state.
  Views, all that, that we 

00:44:59.153 --> 00:45:03.677
expect from the can interact 
with it as if you are on the 

00:45:03.792 --> 00:45:09.775
device.  You add texts, fields, 
click on it.  Assert the note in

00:45:09.914 --> 00:45:13.756
 the repository.  We are not 
going as far as the UI test we 

00:45:13.757 --> 00:45:18.739
wrote at the beginning.  We're 
not asserting that the new note 

00:45:18.740 --> 00:45:23.843
appears on the view screen.  be 
the job of another unit test.  

00:45:24.140 --> 00:45:29.296
Now, I mentioned Robolectric 
shadows. actually give extended 

00:45:29.297 --> 00:45:34.481
testing API to Android classes 
that let us query internal state

00:45:34.692 --> 00:45:38.080
 and sometimes change a 
behavior.  this example, we're 

00:45:38.081 --> 00:45:43.060
asking the application if any of
 our activityes requested that 

00:45:43.061 --> 00:45:47.240
an intent be launched during the
 test.  We can use that to 

00:45:47.241 --> 00:45:50.986
assert after saving the note to 
the repository, we are going to 

00:45:50.987 --> 00:45:57.723
go to the view notes activity.  
Similar testing APIs exist for 

00:45:57.724 --> 00:46:01.399
simulating hardware responses or
 external services, things like 

00:46:02.450 --> 00:46:07.523
that.  So at this point, we have
 a failing unit test.   we get 

00:46:07.524 --> 00:46:13.484
to -- we're ready for the easy 
part.  the production code.  the

00:46:14.216 --> 00:46:19.679
 spirit of TDB, we're only go to
 write exactly as much as is 

00:46:19.680 --> 00:46:24.273
needed to make the test pass.  
No more, no speculative coding. 

00:46:24.403 --> 00:46:29.946
 We inflate a layout, attach a 
click handler.  When the click 

00:46:29.947 --> 00:46:31.947
happens we create a note and

00:46:35.085 --> 00:46:39.560
 add it to the repository.  We 
can write a note, watch it pass.

00:46:39.561 --> 00:46:44.343
  We can refactor.  Then repeat.
  This is where you get the 

00:46:44.479 --> 00:46:47.593
thoroughness.  Robolectric is 
handy for this because you have 

00:46:47.594 --> 00:46:53.415
nice fast test runs.  You can 
get into a comfy cycle.  we want

00:46:53.416 --> 00:46:58.026
 to not just test the happy path
 here.   to test all the 

00:46:58.465 --> 00:47:02.063
different cases that our code is
 likely to encounter.  For 

00:47:02.064 --> 00:47:06.741
example, input validation, 
external conditions like the 

00:47:06.742 --> 00:47:12.013
network being down, stuff like 
that.  can help with simulating 

00:47:12.014 --> 00:47:16.750
device conditions that you'll 
encounter.  For example, you can

00:47:17.598 --> 00:47:21.099
 specify qualifiers that the 
note -- the test should run 

00:47:21.362 --> 00:47:24.991
with.  Here is a certain screen 
size, orientation, which might 

00:47:24.992 --> 00:47:29.660
change the layout a bit.  You 
can ask Robolectric to run the 

00:47:29.661 --> 00:47:35.348
test under a specific SDK.  
We'll say jelly bean.  It uses 

00:47:35.349 --> 00:47:39.278
the SDK code from that version. 
 you can also tell Robolectric, 

00:47:39.279 --> 00:47:44.421
I want to run this test under 
every SDK that you support or 

00:47:44.422 --> 00:47:47.509
some range of them that you are 
interested in.  We support jelly

00:47:47.805 --> 00:47:55.740
 bean through -- right now.  At 
Google we rely heavily on 

00:47:55.741 --> 00:47:58.329
Robolectric and investing in 
making it better. have dozens of

00:47:58.658 --> 00:48:02.263
 apps, including these that have
 hundreds of thousands of unit 

00:48:02.264 --> 00:48:08.072
tests running internally, it is 
well battle tested.  We started 

00:48:08.073 --> 00:48:12.211
running the Android CTS, the 
official Android test suite.  

00:48:12.212 --> 00:48:17.015
Against Robolectric.   getting 
better with every release.  If 

00:48:17.016 --> 00:48:20.109
you used Robolectric in the past
 and found it had come up short 

00:48:20.110 --> 00:48:22.944
or if you are stuck in an old 
version.  I definitely recommend

00:48:23.067 --> 00:48:29.014
 that you get up to the latest 
because it has come a long way. 

00:48:30.275 --> 00:48:34.344
 We've been working on reducing 
friction and integrating 

00:48:34.345 --> 00:48:38.223
Robolectric with the Android 
tool chain.  It works well with 

00:48:38.224 --> 00:48:43.653
Android Studio, with cradle, we 
have support for bezel, the open

00:48:44.326 --> 00:48:51.403
 source gold system coming soon.
  So Robolectric isn't a 

00:48:51.404 --> 00:48:55.092
one-size-fits-all testing tool. 
 It is fast, but not 100% 

00:48:55.093 --> 00:48:59.369
identical to Android in every 
way.  You want to use it 

00:48:59.370 --> 00:49:03.069
judiciously.  As we said before,
 avoid writing unit tests that 

00:49:03.070 --> 00:49:07.130
link multiple activities 
together.  That is not so much a

00:49:07.340 --> 00:49:12.677
 unit test, that is more 
Espresso.  Multiple threads, 

00:49:12.678 --> 00:49:16.408
synchronization issues, that is 
probably not a unit test.  Not 

00:49:16.409 --> 00:49:19.634
good for Robolectric.  
Particularly avoid using 

00:49:19.635 --> 00:49:24.615
Robolectric to test integration 
with Android APIs and things 

00:49:24.616 --> 00:49:29.769
like Google Play services.  You 
really need higher level tests 

00:49:29.770 --> 00:49:33.849
to give you confidence that that
 is  Now that we have passing 

00:49:33.850 --> 00:49:37.026
unit tests, I will hand you over

00:49:40.481 --> 00:49:42.481
 to my colleague Stephan to talk
 about higher level testing.  

00:49:45.394 --> 00:49:49.619
   STEPHAN LINZNER: Thank you, 
Christian.  So let's go back to 

00:49:49.620 --> 00:49:53.134
our developer work flow diagram.
  And so at this point, we 

00:49:53.135 --> 00:49:58.084
hopefully have a ton of unit 
tests and they thoroughly test 

00:49:58.085 --> 00:50:02.341
all our business logic.  But 
let's switch gears and see how 

00:50:02.342 --> 00:50:06.185
we can write integration tests 
to see how the units integrate 

00:50:06.186 --> 00:50:09.807
and how they integrate with 
Android and how they run in a 

00:50:09.808 --> 00:50:13.558
real environment.  So on 
Android, these tests are usually

00:50:13.559 --> 00:50:17.011
 referred to as instrumentation 
tests.  And I'm pretty sure most

00:50:17.300 --> 00:50:20.982
 of you have written an 
instrumentation test before.   

00:50:20.983 --> 00:50:24.686
they look super simple on the 
surface, there is actually a lot

00:50:25.204 --> 00:50:28.095
 going on under the hood, if you
 think about it.  You have to 

00:50:28.096 --> 00:50:30.970
compile the code.  You have to 
process your resources.  You 

00:50:30.971 --> 00:50:35.378
have to bring up a full system 
image and then run your test.  

00:50:35.379 --> 00:50:40.081
There is a lot of things that go
 on, on various levels of the 

00:50:40.082 --> 00:50:44.523
Android stack.  So these tests 
give you high fidelity, but

00:50:48.372 --> 00:50:54.900
 as Jon was mentioning, they 
come at a test.  But they're 

00:50:54.901 --> 00:51:00.167
slower and more flaky than a 
unit  Let's see how it works in 

00:51:00.168 --> 00:51:03.320
the day-to-day development flow.
  Say you are in Android Studio,

00:51:03.466 --> 00:51:09.110
 you have written the espresso 
test and hit the run button to 

00:51:09.111 --> 00:51:16.849
run the test.  The first thing 
Android will do is instuthe APK,

00:51:17.236 --> 00:51:24.732
 and the test, and APK.  It 
contains the test runner and the

00:51:24.995 --> 00:51:31.895
 test manifest.  calls ADB shell
 A.  Android change runner will 

00:51:31.896 --> 00:51:38.821
use instrumentation to control 
your app on the test.  So what 

00:51:38.822 --> 00:51:43.804
is instrumentation?  I think you
 guys may have noticed this.  a 

00:51:44.383 --> 00:51:51.808
top-level tag in the manifest.  
Why is that?   something used 

00:51:51.809 --> 00:51:55.114
deeply inside the Android 
framework and used to control 

00:51:55.115 --> 00:51:58.555
the life cycle of your 
activities, for instance. if you

00:51:58.715 --> 00:52:02.701
 think about it, it is the 
perfect interception point that 

00:52:02.702 --> 00:52:08.362
we can use to inject the test 
runner.  That is why Android 

00:52:08.363 --> 00:52:12.132
runner is nothing more or less 
than an instrumentation.  So 

00:52:12.133 --> 00:52:16.931
let's go a little bit deeper and
 see what happens when Android 

00:52:16.932 --> 00:52:21.554
Studio actually runs your test. 
 It runs ADB shell instrument, 

00:52:21.555 --> 00:52:25.314
which will call out to activity 
manager.  manager will then call

00:52:25.618 --> 00:52:30.971
 at one point on create on your 
instrumentation.  So now that we

00:52:31.503 --> 00:52:37.516
 know that Android runner is the
 instrumentation, at this point,

00:52:37.517 --> 00:52:40.970
 it will call on create on the 
runner.  Then the runner is 

00:52:40.971 --> 00:52:45.101
going to do a few things for 
you.  It will collect all your 

00:52:45.277 --> 00:52:49.310
tests, then it will run all the 
tests sequentially.  And then it

00:52:49.311 --> 00:52:53.811
 is reporting back to results.  
thing to note here is Android 

00:52:53.812 --> 00:52:57.074
runner -- and you may have 
noticed this, runs in the same 

00:52:57.075 --> 00:53:01.319
process than your application.  
And more importantly, if you 

00:53:01.320 --> 00:53:06.472
usually use Android runner, it 
runs all the tests in one single

00:53:06.473 --> 00:53:11.484
 instrumentation invocation.  
runner is heavily used inside 

00:53:11.628 --> 00:53:15.627
Google.  We run billions of 
tests each month using Android 

00:53:15.965 --> 00:53:20.755
runner.  While doing so, we saw 
some challenges that we faced 

00:53:20.756 --> 00:53:27.078
and we had to solve.  One thing 
that we see a lot is shared 

00:53:27.448 --> 00:53:30.186
state.  And I'm not talking 
about the kind of like shared 

00:53:30.187 --> 00:53:33.660
state that you control and that 
you code in your app.  I'm 

00:53:33.661 --> 00:53:37.044
talking about the shared state 
that builds up on memory.  

00:53:37.045 --> 00:53:41.672
Builds up on disk and makes your
 test fail for, you know, no 

00:53:41.673 --> 00:53:45.995
reason or unpredictable 
conditions.  And this, among 

00:53:45.996 --> 00:53:50.197
other things will at one point 
lead to crashes.  in the 

00:53:50.198 --> 00:53:55.200
previous model that I just 
showed you, if one of the tests 

00:53:55.201 --> 00:53:58.177
crashes the instrumentation, it 
will take the whole app process 

00:53:58.178 --> 00:54:03.449
with it. the subsequent tests 
will not run any more.  This is 

00:54:03.450 --> 00:54:10.531
obviously a problem worry  -- 
large test suites.  if you think

00:54:12.361 --> 00:54:15.311
 about debugging, if you run 
several tests, think about what 

00:54:15.312 --> 00:54:20.293
the loghead will look like and 
what to go through for  Inside 

00:54:20.294 --> 00:54:23.209
of Google, we have taken a 
different approach.  Inside of 

00:54:23.411 --> 00:54:28.724
Google, every test method runs 
in its own instrumentation 

00:54:28.990 --> 00:54:33.155
invocation.  So now, you can do 
this today, right?  You can, you

00:54:33.329 --> 00:54:40.397
 know, make multiple ADP calls, 
use a runner arc and create a 

00:54:40.398 --> 00:54:44.981
custom script.  problem is it 
may not develop well with the 

00:54:45.402 --> 00:54:48.061
development environment.   I'm 
happy to announce the Android 

00:54:48.062 --> 00:54:54.591
test orchestrator. Android test 
orchestrator is a way to run 

00:54:54.592 --> 00:54:59.771
tests like we do at Google.  It 
is an APK that runs in the 

00:54:59.772 --> 00:55:03.361
background and each test in the 
single instrumentation 

00:55:03.538 --> 00:55:09.739
invocation.  it obviously has 
benefits, right?  There is no 

00:55:09.740 --> 00:55:14.469
short state.  In fact, the 
Android test orchestrator runs. 

00:55:14.470 --> 00:55:20.531
clear before it runs each test. 
 More so, crashes are now 

00:55:20.532 --> 00:55:24.460
completely isolated because we 
have single instrumentation 

00:55:24.461 --> 00:55:29.254
invocations if a crash happens 
or the subsequent tests will 

00:55:29.255 --> 00:55:34.719
still run.  Similarly for 
debugging. the debugging 

00:55:34.720 --> 00:55:37.550
information you pull off the 
device is scoped to a particular

00:55:37.862 --> 00:55:42.652
 test.  is great -- this is 
great and we benefit a lot from 

00:55:43.098 --> 00:55:52.913
it, inside of  Let's see how it 
works.  top of installing the

00:55:53.767 --> 00:55:59.762
 top we install a third ABK.  It
 is running in the background, 

00:55:59.763 --> 00:56:07.669
containing the orchestrator.  of
 multiple ADB, we run a single 

00:56:08.438 --> 00:56:12.149
ADB, we instrument the 
orchestrator directly.  The 

00:56:12.150 --> 00:56:15.069
orchestrator will do all the 
work on the device.  It is going

00:56:15.211 --> 00:56:19.568
 to use Android change runner to
 collect your test but then it 

00:56:19.767 --> 00:56:25.076
will run each of the tests in 
its own invocation.  This is 

00:56:25.260 --> 00:56:28.608
amazing.  I'm pretty sure you 
will like this a lot.  It will 

00:56:28.609 --> 00:56:30.854
be available in the next Android
 testing support

00:56:33.905 --> 00:56:37.414
 library release.  We will have 
integration with Android Studio,

00:56:37.931 --> 00:56:46.103
 available in Gradle and have 
intGRAGD with fire base Test Lab

00:56:46.659 --> 00:56:52.045
 later this year. we know how to
 run our test let's look at how 

00:56:52.046 --> 00:56:54.046
to write the int-Greg

00:56:58.967 --> 00:57:03.984
g test -- test.  There is a 
nice, simple API.  It works 

00:57:04.217 --> 00:57:08.322
simple.  What it does is you 
give us a view matcher and we 

00:57:08.323 --> 00:57:12.925
find a view that matches the 
matcher and we perform a view 

00:57:13.101 --> 00:57:17.085
action, a check of the 
assertion.  of this API is so 

00:57:17.215 --> 00:57:22.365
simple, it is the perfect tool, 
too, for fast TDD prototyping of

00:57:22.489 --> 00:57:28.332
 the eye test.  In order to 
provide you such a simple API, 

00:57:28.333 --> 00:57:32.472
there are a lot of things that 
need to go on under the hood.  

00:57:32.473 --> 00:57:37.109
Let's look at how Espresso 
works.  When you call on view 

00:57:37.110 --> 00:57:40.386
and give us your matcher.  The 
first thing we will do is create

00:57:40.754 --> 00:57:45.227
 a view interaction for you.  
And then the next thing is we 

00:57:45.228 --> 00:57:52.193
make sure that your app is in an
 idle and safe state before we 

00:57:52.194 --> 00:57:56.999
interact with it.  This is the 
core of Espresso.  It is well 

00:57:57.000 --> 00:58:00.285
known for the synchronization 
guaranties.  The way we do it is

00:58:00.463 --> 00:58:04.421
 we loop the message queue until
 there are no messages for a 

00:58:04.422 --> 00:58:08.046
reasonable amount of time.  We 
look at all the idoling 

00:58:08.047 --> 00:58:17.485
resources and make sure they're 
idle and make sure the async 

00:58:17.762 --> 00:58:21.929
task.  Only when we continue is 
in a sane and stable state, then

00:58:22.113 --> 00:58:26.705
 we will move on.  We will go to
 the hierarchy and find the view

00:58:26.865 --> 00:58:31.182
 that matches your matcher.   
have the view, we will perform 

00:58:31.183 --> 00:58:35.778
the view action or view 
assertion.  is great.  So now 

00:58:35.779 --> 00:58:38.954
let's circle back to the test 
that we showed you in the 

00:58:38.955 --> 00:58:42.870
beginning and have a closer look
 now that we know how Espresso 

00:58:43.043 --> 00:58:46.801
works.  In the first line, as 
you may remember, we tried to 

00:58:46.802 --> 00:58:51.723
click on the add note button.  
Here we will use with I.D. 

00:58:52.174 --> 00:58:55.551
matcher.  That is a simple 
matcher, matching the view in 

00:58:55.552 --> 00:58:59.061
the view hierarchy.  next thing 
we want to do is click on the 

00:58:59.335 --> 00:59:03.951
view.  We use the click view 
action for this.  So now, where 

00:59:03.952 --> 00:59:09.453
it gets interesting is the next 
line.  on this line, we want to 

00:59:09.454 --> 00:59:13.889
type the title and description 
and we want to use a type text 

00:59:13.890 --> 00:59:18.849
action for that.   the Espresso 
synchronization guaranties will 

00:59:18.850 --> 00:59:22.680
kick in, but only if we know you
 are ready to interact with your

00:59:22.968 --> 00:59:26.483
 application, we're going to 
invoke the you type test act.  

00:59:26.484 --> 00:59:31.282
This is great.  it frees you 
from adding additional boiler 

00:59:31.283 --> 00:59:34.621
plate code and additional 
sleeping code to your task.  

00:59:34.817 --> 00:59:38.122
Similarly, we are going to save 
the note and then we will verify

00:59:38.418 --> 00:59:42.777
 that it is displayed on screen.
  is great. we know how Espresso

00:59:43.160 --> 00:59:47.543
 works and we know how it is a 
great tool to do test-driven 

00:59:47.713 --> 00:59:52.419
development.  And now I will 
hand over to Nick to talk more 

00:59:52.420 --> 00:59:57.618
about how to improve your UI 
test and large and medium 

00:59:57.619 --> 01:00:04.705
testing strategy.     NICK 
KOROSTELEV: Thank you, Stephan. 

01:00:05.741 --> 01:00:09.687
 One good attribute of a UI test
 is a test that never sleeps.  

01:00:09.688 --> 01:00:13.971
Let's go back to our example to 
illustrate this point further.  

01:00:13.972 --> 01:00:17.256
In the example, as you remember,
 we have a note we save into 

01:00:17.431 --> 01:00:21.334
memory, which is fast and 
reliable.  However in reality, 

01:00:21.335 --> 01:00:25.620
as your app grows you probably 
want to extend this 

01:00:25.771 --> 01:00:28.141
functionality and save your note
 to the Cloud or

01:00:31.618 --> 01:00:35.280
 Google Drive, for example. the 
large end-to-end test we want a 

01:00:35.281 --> 01:00:38.391
real environment and real 
server.  And depending on the 

01:00:38.392 --> 01:00:41.422
network connection, this may 
take a long time.  You probably 

01:00:41.423 --> 01:00:45.851
want to do it in the background.
  The problem is Espresso 

01:00:45.852 --> 01:00:49.354
synchronization is not aware of 
the long-running task.  This is 

01:00:49.355 --> 01:00:52.643
somewhere where developers would
 probably do something as ugly 

01:00:52.644 --> 01:00:56.856
as putting a thread sleep in 
their code.  Espresso it is not 

01:00:57.385 --> 01:01:02.366
required because you can write 
an idling resource.  That is a 

01:01:02.367 --> 01:01:06.853
simple interface to teach 
Espresso synchronization of the 

01:01:07.014 --> 01:01:14.589
custom, long-running tasks of 
your app.  So with this idling 

01:01:14.822 --> 01:01:18.547
resource, we made the large 
end-to-end test more reliable.  

01:01:18.548 --> 01:01:25.908
Let's see how to add more 
medium-sized tests to the suite.

01:01:25.909 --> 01:01:30.860
  We want to keep them small and
 focused.  There may be a 

01:01:30.861 --> 01:01:33.684
specific view fragment or 
activity.  Let's go back to the 

01:01:33.685 --> 01:01:38.011
example to see how to isolate 
the large end-to-end test to 

01:01:38.012 --> 01:01:41.197
more isolated components.  Here 
in the example, you may have 

01:01:41.198 --> 01:01:44.923
noticed that there are two 
activities.  The list activity 

01:01:44.924 --> 01:01:49.759
on the left and the add note 
activity on the right.  Until 

01:01:50.110 --> 01:01:53.500
now we have a large end-to-end 
test that gives confidence 

01:01:53.501 --> 01:01:57.073
because it touches upon code in 
your app, which is great for 

01:01:57.074 --> 01:02:04.761
large end-to-end but not great 
for iterative test development  

01:02:04.762 --> 01:02:08.856
Let's see how to isolate these 
and have isolated tests for each

01:02:09.488 --> 01:02:13.811
 activity in isolation.  To 
isolate the left-hand side, the 

01:02:13.812 --> 01:02:19.632
list activity.  We can use 
Espresso intent.  Espresso 

01:02:19.633 --> 01:02:23.344
intent is a simple PIP 
Punxsutawney Phil that will 

01:02:23.345 --> 01:02:31.281
allow you to share and verify 
contest and  look at the result.

01:02:31.282 --> 01:02:35.888
  Let's see what the API looks 
like.  have an intent matcher 

01:02:35.889 --> 01:02:41.226
that will match your intent and 
you can provide a version of the

01:02:43.248 --> 01:02:47.058
 activity result back to the 
caller.  Let's use the API to 

01:02:47.059 --> 01:02:50.294
write the first isolated test.  
In this test, you can see on the

01:02:51.060 --> 01:02:55.133
 first line, we do exactly that.
  We intercept our intent and we

01:02:55.479 --> 01:02:58.806
 provide a stub version of the 
activity result.  Now, on the 

01:02:58.807 --> 01:03:02.828
second line, when we perform 
click, instead of setting up a 

01:03:02.829 --> 01:03:06.732
new activity, Espresso will 
intercept this intent and 

01:03:07.080 --> 01:03:11.727
provide a result that we can 
then use on the last line to 

01:03:11.728 --> 01:03:16.872
verify that our UI was updated 
accordingly.  Now, we have an 

01:03:17.084 --> 01:03:20.678
isolated test.  Okay.  So let's 
go back to example and see how 

01:03:20.679 --> 01:03:25.324
we can isolate the second part. 
 So when you usually write 

01:03:25.502 --> 01:03:29.651
tests, you end up in a position 
where you may have some external

01:03:30.801 --> 01:03:34.600
 dependencies in place that are 
outside of your control.  So in 

01:03:34.601 --> 01:03:39.307
our example, right, as I showed 
before, we have a note we saved 

01:03:39.308 --> 01:03:43.064
and it hits the real server.  
Now, even though we have another

01:03:43.407 --> 01:03:47.269
 resource that makes it more 
reliable, your test can still 

01:03:47.270 --> 01:03:50.654
fail because your server may 
crash for some reason, so your 

01:03:50.655 --> 01:03:53.945
test will fail.  So wouldn't it 
be better if you completely 

01:03:53.946 --> 01:03:58.080
isolate ourselves from these 
conditions and run our tests in 

01:03:58.081 --> 01:04:02.604
a hermetic environment?  will 
make your tests run faster but 

01:04:02.605 --> 01:04:06.523
also eliminate any flakiness.  
And beyond the specific example,

01:04:06.687 --> 01:04:10.406
 you further want to isolate 
yourself from any external 

01:04:10.652 --> 01:04:14.095
dependency.  So for example, you
 don't want to test any Android 

01:04:14.096 --> 01:04:18.050
system UI or any other UI 
components you don't own because

01:04:18.670 --> 01:04:21.419
 they probably already tested 
and can also change without your

01:04:21.881 --> 01:04:25.722
 knowing so your test will 
actually fail.  So let's see how

01:04:25.928 --> 01:04:29.911
 our second isolated test will 
look like in code.  So here, we 

01:04:29.912 --> 01:04:34.470
see the main point here is we're
 no longer using the real server

01:04:34.674 --> 01:04:39.692
 and instead, you know, we set 
up a hermetic repository.  There

01:04:39.775 --> 01:04:43.206
 are many different ways to do 
this.  is just one way.  So then

01:04:43.338 --> 01:04:47.315
 you can use this hermetic 
repository to verify that the 

01:04:47.316 --> 01:04:50.947
note is saved without ever 
leaving the context of the app 

01:04:50.948 --> 01:04:56.477
or hitting the network.  So at 
this point, if you think about 

01:04:57.516 --> 01:05:00.681
it, you have two smaller tests 
that are run much more -- that 

01:05:00.682 --> 01:05:07.303
are way more reliable and run 
much at the same time, you 

01:05:08.100 --> 01:05:10.692
maintain the same amount of test
 coverage as the same end-to-end

01:05:10.892 --> 01:05:15.429
 test.  This is why we want more
 of the smaller isolated tests 

01:05:15.430 --> 01:05:18.583
compared to the large end-to-end
 tests we showed before.  Okay. 

01:05:18.727 --> 01:05:22.692
 So at this point, we iterated 
through our developer cycle a 

01:05:22.693 --> 01:05:26.980
few times.  And we should see 
all of our tests start turning 

01:05:26.981 --> 01:05:31.106
green and we should be confident
 to release our feature.  

01:05:31.253 --> 01:05:35.122
However, before we conclude, 
let's jump into the future for a

01:05:35.123 --> 01:05:39.537
 second.  As your app grows and 
your team grows, you continue 

01:05:39.538 --> 01:05:43.319
adding more and more features to
 your app.  may find yourself in

01:05:43.548 --> 01:05:46.755
 the position where you may have
 UI running in multiple 

01:05:47.056 --> 01:05:49.984
processes, which is exactly what
 happened at Google.  So if you 

01:05:49.985 --> 01:05:53.054
go to the add notes example, 
this may look something like 

01:05:53.165 --> 01:05:56.916
this.  have the first activity 
that runs in the main process on

01:05:56.917 --> 01:06:02.303
 the left-hand side.  Now, the 
second activity will run in a 

01:06:02.304 --> 01:06:06.648
process and in this case we will
 call it add note.  How do we 

01:06:06.649 --> 01:06:11.588
test that?  Before Android O, it
 was impossible to test.  With 

01:06:11.589 --> 01:06:15.905
Android O, there is a new 
instrumentation attribute that 

01:06:15.906 --> 01:06:19.693
we can use in order to define 
which process you want to 

01:06:19.813 --> 01:06:22.582
instrument.  While instrumenting
 and running tests, I guess each

01:06:23.084 --> 01:06:26.350
 process in isolation is a great
 idea, you should do it.  You 

01:06:26.351 --> 01:06:31.328
may find yourself in a position 
where you want to cross process 

01:06:31.329 --> 01:06:35.124
boundaries within one test.  
will probably want to write an 

01:06:35.125 --> 01:06:38.918
Espresso test that looks like  
While this was not only possible

01:06:39.405 --> 01:06:44.396
 on the framework level on 
Android O, it was impossible on 

01:06:44.397 --> 01:06:48.810
the Espresso level.  In this 
example, Espresso is not aware 

01:06:48.811 --> 01:06:54.167
of the process and nor can it 
maintain the synchronization 

01:06:54.168 --> 01:06:58.158
guaranties we know and love.   
I'm proud to announce 

01:06:58.159 --> 01:07:03.699
multiprocess Espresso support. 
any test code or app code, this 

01:07:03.700 --> 01:07:08.949
will allow you to seamlessly 
interact with the UI test 

01:07:08.950 --> 01:07:12.120
process and maintaining the 
guaranties.  And available in 

01:07:12.121 --> 01:07:18.011
the next version of the Android 
test release.  Let's have a 

01:07:18.012 --> 01:07:23.157
quick overview of how it works. 
 as we know in your example, we 

01:07:23.158 --> 01:07:28.483
start in one process, where we 
have an instance of the note 

01:07:28.484 --> 01:07:30.484
runner and 

01:07:33.761 --> 01:07:37.905
Espresso.  When the click add 
note, there is a new activity 

01:07:37.906 --> 01:07:43.648
and a new process.   now is we 
have two processes, two 

01:07:43.649 --> 01:07:47.820
different instances of the 
Android runner and Espresso.  

01:07:47.821 --> 01:07:51.077
They're not aware of each other.
  The first thing we want to do 

01:07:51.078 --> 01:07:54.926
is establish communication 
between the runners.  Now that 

01:07:54.927 --> 01:07:59.177
we have the communication, we 
can use it to establish the 

01:07:59.863 --> 01:08:03.828
communication to Espresso, for 
instance. way we do that is by 

01:08:03.829 --> 01:08:09.590
having an ability in Android 
runner to register any testing 

01:08:09.591 --> 01:08:14.771
framework with Espresso with the
 Android runner and the runner 

01:08:14.772 --> 01:08:18.946
will facilitiate the 
communication required in 

01:08:18.947 --> 01:08:23.209
between the two Espresso 
instances.  Now that the two 

01:08:23.210 --> 01:08:27.615
Espresso instances can talk to 
each other, it can use it for 

01:08:27.616 --> 01:08:33.635
cross process testing and 
maintaining the synchronization 

01:08:33.636 --> 01:08:37.307
guaranties we had  So with that,
 we are reaching the end of the 

01:08:37.308 --> 01:08:40.763
developer work flow and showed 
you all the tools to use across 

01:08:40.764 --> 01:08:46.439
each step of the way to make TDD
 happen on Android.  that said, 

01:08:46.440 --> 01:08:50.152
if any of you don't follow this 
flow exactly.  Hopefully you 

01:08:50.153 --> 01:08:54.243
know how to use every single 
tool and write good tests to 

01:08:54.244 --> 01:08:58.578
bring your app quality to the 
next level.  So if you like to 

01:08:58.579 --> 01:09:01.976
write tests and you want to 
write and run tests like we do 

01:09:01.977 --> 01:09:05.573
at Google, here's resources to 
get you started.  I want to 

01:09:05.574 --> 01:09:09.375
thank you, and I think we have 
some time for questions.  And if

01:09:09.561 --> 01:09:17.459
 not, we have office hours at 
3:30 today.  So hopefully we'll 

01:09:17.460 --> 01:09:19.460
see you there.  Thank you.  
(Applause)

01:09:22.388 --> 01:09:26.846
   Thank you for joining this 
session.  Brand ambassadors will

01:09:27.425 --> 01:09:33.221
 assist with directing you true 
the exits.  We'll make room for 

01:09:33.222 --> 01:09:35.817
the next session.  If you 
registered for the next session 

01:09:35.818 --> 01:09:39.244
in this room, we ask that you 
please clear the room and return

01:09:39.922 --> 01:09:41.922
 via the registration line 

01:12:49.379 --> 01:12:52.082
 Google Assistant to any device 

01:22:18.016 --> 01:22:21.866
  Welcome.  Thank you for 
joining.  Our session will begin

01:25:48.322 --> 01:25:50.322
 soon.  

01:25:53.412 --> 01:25:57.207
 Welcome.  Please fill in the 
seats near the front of the 

01:25:57.424 --> 01:25:59.424
room.  Thank you.  

01:27:37.426 --> 01:27:40.346
 Welcome.  Thank you for 
joining.  Our session will 

01:29:08.728 --> 01:29:10.728
begin soon.  

01:29:14.427 --> 01:29:20.553
 Hello, welcome to Google io17. 
 I hope everybody had a great 

01:29:20.554 --> 01:29:24.132
first day and people got to 
checkout the sessions, Sandboxes

01:29:24.133 --> 01:29:26.133
 and labs. 

01:29:28.923 --> 01:29:36.204
 I'm Chris Ramsdale and I'm Glen
 Shires.  We want to talk to you

01:29:36.354 --> 01:29:41.307
 about the one ubiquitous 
experience that impact your 

01:29:41.308 --> 01:29:43.308
everyday life. 

01:29:45.288 --> 01:29:50.055
 made the debut with Allo.  Much
 of what was made up for years, 

01:29:50.056 --> 01:29:54.336
like voice search, automated 
speech recognition, energy 

01:29:54.337 --> 01:29:57.396
language understanding.  They 
were in the works for years, it 

01:29:57.397 --> 01:30:01.414
was the first time they made 
their public debut in the form 

01:30:01.415 --> 01:30:05.375
of the assistant.  Since then, 
the teams have been hard at work

01:30:05.737 --> 01:30:09.017
 to flesh out the story that 
Google wants to tell, in terms 

01:30:09.018 --> 01:30:14.086
of launching new devices like 
Google home, pixel and other 

01:30:14.087 --> 01:30:19.944
Android platforms.  We have also
 brought third party services 

01:30:19.945 --> 01:30:25.085
into the fold, like via actions 
in Google, in terms of home 

01:30:25.086 --> 01:30:28.313
graph and smart home agents I 
will talk about in a bit.  And 

01:30:28.314 --> 01:30:33.324
while this was great, when we 
took a step back, we realized 

01:30:33.325 --> 01:30:36.722
something was missing.  Within 
Google, one of the

01:30:39.810 --> 01:30:44.323
 missions is to help you with 
what you want, whatever you 

01:30:44.479 --> 01:30:51.045
want, wherever you are.  of 
these things were only available

01:30:51.368 --> 01:30:55.976
 from devices Google provided.  
Let's be honest, we don't expect

01:30:56.221 --> 01:31:02.023
 a Google home in every governor
 corner of our house or have an 

01:31:02.024 --> 01:31:06.366
appliance in every area of your 
house.  We needed to empower the

01:31:06.962 --> 01:31:12.114
 diverse ecosystem that could 
embed the Google Assistant in 

01:31:12.115 --> 01:31:17.449
the devices they were building. 
 actions enable to extend the 

01:31:17.450 --> 01:31:23.509
assistant to third party 
services.  We needed an 

01:31:23.510 --> 01:31:32.870
analogous device.  We needed to 
embed the assistant.  Enter the 

01:31:32.871 --> 01:31:37.632
Google Assistant SDK.  It is a 
kit that allowed third party 

01:31:37.633 --> 01:31:42.136
manufacturers to embed the 
assistant in the device.   core 

01:31:42.137 --> 01:31:44.137
is the

01:31:47.770 --> 01:31:52.986
 third part gRPC API that allows
 the implementation into the 

01:31:52.987 --> 01:31:58.946
devices.  The API is an audio 
in, audio out API.  Users can 

01:31:59.085 --> 01:32:03.639
interact with the assistant, in 
a general form, hey Google how 

01:32:03.640 --> 01:32:08.915
big is Mount Everest, to a 
personal form, what is on my 

01:32:08.916 --> 01:32:13.681
calendar today.  To extend to 
the actions on Google.  The API 

01:32:13.682 --> 01:32:19.564
is built on the gRPC protocol, 
you can be sure your audio 

01:32:19.565 --> 01:32:23.975
flowing smoothly and processed  
While it was only announced 

01:32:23.976 --> 01:32:29.500
three weeks ago, we have seen a 
lot of cool innovation 

01:32:29.796 --> 01:32:33.994
happening.  For starters, there 
is a mocktails mixer.  I 

01:32:33.995 --> 01:32:38.138
encourage you to come out and 
see it.  It is a collaboration 

01:32:38.139 --> 01:32:45.531
between the STK team and deep 
local.  It has the Google 

01:32:45.532 --> 01:32:49.588
Assistant building in and it 
will make you the drink of your 

01:32:49.800 --> 01:32:51.800
choice.  We have the

01:32:54.471 --> 01:32:56.471
 auto Pi

01:32:58.927 --> 01:33:04.513
.IO and a smart rabbit Wi-Fi, if
 you have a smart rabbit rather 

01:33:04.514 --> 01:33:11.023
than a Google home, you have 
options.  We are working with 

01:33:11.024 --> 01:33:17.222
commercial OEM to include it in 
their devices.  We will have 

01:33:17.223 --> 01:33:22.891
branding and UX guidelines 
coming.  Speaking of spurring 

01:33:23.051 --> 01:33:25.051
innovation, another program was 

01:33:27.584 --> 01:33:33.669
AIY, similar to DIY, it is to 
bringartrtificial intelligence 

01:33:33.670 --> 01:33:37.214
to the maker tool kit.  At the 
core of the program is a set of 

01:33:37.215 --> 01:33:44.943
kits to build.  The first kit 
was a voice kit with the Google 

01:33:44.944 --> 01:33:50.703
Assistant SDK.  A box and 
instructions to make your own 

01:33:50.704 --> 01:33:55.301
Google home to help you extend 
in ways we never dreamed of.  is

01:33:55.768 --> 01:33:58.178
 one up here, and glen will do 
demos on it shortly.  

01:34:07.946 --> 01:34:12.540
 As of yesterday we added a 
thick client library to the SDK 

01:34:12.541 --> 01:34:18.988
to automate level plumbing and 
support and timers and alarms.  

01:34:18.989 --> 01:34:21.551
With the addition of the 
library, developers have o

01:34:22.052 --> 01:34:26.699
ptions.  If you want more 
automation or hotword support or

01:34:26.700 --> 01:34:32.453
 timers aligns, we think the 
thick client library is a good 

01:34:32.454 --> 01:34:36.972
fit.  You need to be familiar 
with the Linux and other 

01:34:36.973 --> 01:34:40.809
platforms that it is tied  On 
the other hand, if you need 

01:34:40.810 --> 01:34:45.859
platform independence with the 
gRPC API is a great right.  It 

01:34:45.860 --> 01:34:50.556
accessible from any platform, 
hardware or language, with the 

01:34:50.557 --> 01:34:55.491
caveat of not having hotwords, 
timers, alarms, but that is just

01:34:56.042 --> 01:35:01.590
 for  I want to take a moment to
 actually preview some of the 

01:35:01.591 --> 01:35:06.008
tools that we're building to 
make voice controlled devices 

01:35:06.009 --> 01:35:09.793
much easier.  Glen will have a 
demo and we have demos in 

01:35:09.794 --> 01:35:15.160
Sandbox B of this, but I wanted 
to take a moment to provide a 

01:35:15.161 --> 01:35:19.219
higher level view to understand 
broadly what we wanted to 

01:35:19.220 --> 01:35:22.310
achieve with more devices in 
your life with the assistant on 

01:35:22.311 --> 01:35:27.588
them.  It is important to know 
what devices you have access to 

01:35:27.589 --> 01:35:33.434
in your house.  Be it the TV, 
speaker, oven, or the Wi-Fi 

01:35:33.435 --> 01:35:36.525
enabled rabbit we talked about. 
 By knowing what you have access

01:35:36.644 --> 01:35:40.519
 to in your house, we can enable
 and create more natural 

01:35:40.520 --> 01:35:43.062
conversations with the devices. 
 We think that is important.  

01:35:43.063 --> 01:35:46.933
Because if we don't get this 
right, this whole voice-enabled 

01:35:46.934 --> 01:35:49.866
thing we're trying to do and 
make happen, right, it will be 

01:35:49.867 --> 01:35:52.679
very hard for the masses to 
adopt it.  You want to have 

01:35:52.680 --> 01:35:55.621
normal conversations with the 
things in your life, like with 

01:35:55.622 --> 01:35:58.527
the people in your life.  By 
knowing what devices you have 

01:35:58.708 --> 01:36:02.132
access to, we can make the 
conversation more natural.  of 

01:36:02.295 --> 01:36:06.419
saying, for example, if you had 
a smart-enabled oven and in the 

01:36:06.420 --> 01:36:10.518
living room talking to Google 
home, instead of saying hey 

01:36:10.686 --> 01:36:14.126
Google, let me talk to my 
company.  My company, set the 

01:36:14.127 --> 01:36:20.026
oven to bake and set the oven to
 425.  What you can say is okay,

01:36:20.657 --> 01:36:25.491
 Google, set the oven to bake at
 425.  Just as you would talk to

01:36:25.914 --> 01:36:29.017
 your child or wife or somebody 
else in the kitchen.  It is more

01:36:30.806 --> 01:36:36.424
  Now I moved from the living 
room to the kitchen, say, 

01:36:36.425 --> 01:36:40.725
preparing dinner.  I am talking 
to the device itself.  you talk 

01:36:40.726 --> 01:36:43.825
to the device and say hey 
Google, let me talk to my 

01:36:44.062 --> 01:36:49.672
company, set the oven to back 
and set the oven to 425.  you 

01:36:49.673 --> 01:36:58.230
want to do while chopping, say 
Ok Google, set to back at 425.  

01:36:58.231 --> 01:37:01.800
It is more energy if you are 
talking to the Google home 

01:37:01.801 --> 01:37:05.190
device or the device itself.  
That is the beginning of the 

01:37:05.191 --> 01:37:08.356
end-user experience we are 
trying to achieve.  Let's go 

01:37:08.357 --> 01:37:12.134
deeper and talk about how that 
would actually  Take the case 

01:37:12.135 --> 01:37:16.193
where you have got -- you're 
actually doing remote 

01:37:16.698 --> 01:37:19.176
invocation, talking to the 
Google home, setting up the 

01:37:19.506 --> 01:37:24.825
oven.  In that case, you say set
 the oven to bake at 425°.  So 

01:37:24.826 --> 01:37:28.524
that query goes from me to 
Google home, then to the 

01:37:28.525 --> 01:37:32.633
assistant service running.  The 
assistant service is made up of 

01:37:32.634 --> 01:37:34.735
speech recognition, natural 
language understanding, the 

01:37:34.736 --> 01:37:38.187
smart home. technology called 
the home graph.  So what it can 

01:37:38.188 --> 01:37:42.540
do is take that query, what I 
said, and start to parse it 

01:37:42.815 --> 01:37:46.998
apart.  When it parses it apart 
the speech recognition speaks to

01:37:46.999 --> 01:37:50.777
 the home graph and says do you 
recognize any of the pieces in 

01:37:50.778 --> 01:37:55.053
the phrase.  The home photograph
 says I do.  I recognize the 

01:37:55.054 --> 01:37:57.637
oven as being a device 
registered with the home graph. 

01:37:57.951 --> 01:38:01.158
 The way it is registered is 
when you go to your home device,

01:38:01.598 --> 01:38:07.200
 on the assist app you say I 
want to add that to the home 

01:38:07.591 --> 01:38:10.852
graph.  home graph says I 
understand that is the oven.  

01:38:10.853 --> 01:38:14.242
speech recognition says that is 
great, I have the oven, the 

01:38:14.613 --> 01:38:17.687
noun, the thing I'm operating 
on.  And other things that look 

01:38:17.688 --> 01:38:21.241
like verbs and nouns as well.  
It passes it to the natural 

01:38:21.242 --> 01:38:24.601
language understanding, that 
serve, it takes that and said to

01:38:24.788 --> 01:38:27.489
 the home graph, do you 
understand what it means to set 

01:38:27.490 --> 01:38:31.067
this program, which is bake.  
And set this temperature.  Home 

01:38:31.068 --> 01:38:35.203
graph says yes.  The oven is 
capable of these certain traits,

01:38:35.360 --> 01:38:39.315
 programs that are like bake, 
warm, broil and temperatures.  

01:38:39.316 --> 01:38:42.980
That's a number.  At that point 
in time the natural language 

01:38:42.981 --> 01:38:45.355
understanding says cool, I 
understand what they said and 

01:38:45.356 --> 01:38:49.084
what they intended.  But it says
 I have no idea what to do with 

01:38:49.287 --> 01:38:53.385
it.  I have an intent, but I 
don't know what to do with it.  

01:38:53.386 --> 01:38:57.515
It sends it to the smart home.  
It says cool, I know what to do 

01:38:57.516 --> 01:39:01.201
with this intent.  I know this 
oven is of this type, tied to 

01:39:01.202 --> 01:39:03.831
this manufacturer and this 
manufacturer has a third-party 

01:39:03.832 --> 01:39:08.448
Cloud that knows how to get the 
intent down to the device. is a 

01:39:08.449 --> 01:39:14.677
very analogous -- to give a 
concrete example, this is 

01:39:14.678 --> 01:39:18.603
analogous to the nest 
thermostat.  You talk to the 

01:39:18.604 --> 01:39:22.916
Google home, at the end, the 
smart home component hands it 

01:39:23.238 --> 01:39:26.725
off to the nest Cloud and the 
Cloud says I know how to query 

01:39:26.726 --> 01:39:31.662
for the device of the 
temperature or set the device on

01:39:31.860 --> 01:39:36.760
 the device.  This says local 
execution, this is the remote 

01:39:36.761 --> 01:39:39.011
invocation path.  This is when I
 talk to the 

01:39:42.030 --> 01:39:46.406
device.  Let's talk about the 
local invocation path.  This is 

01:39:46.407 --> 01:39:51.468
in the oven talking to the 
device.  That query comes back 

01:39:51.469 --> 01:39:55.011
in the same path.  I didn't say 
the oven.  The speech 

01:39:55.208 --> 01:39:59.614
recognition, it gets the query, 
missing the oven piece, but it 

01:39:59.615 --> 01:40:04.193
gets metadata, the device I.D.  
From the assistant being 

01:40:04.194 --> 01:40:08.546
embedded on the oven, picking up
 the query, figuring out the 

01:40:08.547 --> 01:40:11.843
device and passing it up to the 
Cloud.  The speech recognition 

01:40:11.844 --> 01:40:16.727
says I got this set to back at 
425°.  But I also have this 

01:40:16.728 --> 01:40:21.403
divide I.D. graph, do you know 
what to do with this.  In a 

01:40:21.404 --> 01:40:27.571
similar fashion, the graph says 
it is this device I.D., and it 

01:40:27.572 --> 01:40:32.043
is tied to this manufacturer and
 this is an oven.  It has the 

01:40:32.044 --> 01:40:37.059
same building blocks from remote
 and local invocation.  will 

01:40:37.060 --> 01:40:40.975
pass on to the natural language 
understanding.  And the NLU can 

01:40:40.976 --> 01:40:44.785
do the same thing it did before 
and pass it to the smart home.  

01:40:44.786 --> 01:40:49.741
This point in time, things  The 
smart home said I understand the

01:40:50.519 --> 01:40:54.213
 intent of the user, but that 
came from an interaction of the 

01:40:54.361 --> 01:40:57.173
device.  smart home gets the 
device I.D. as well.  When it 

01:40:57.174 --> 01:41:00.400
talks to the home graph, the 
home graph says you can send 

01:41:00.401 --> 01:41:04.217
that back down to the device, 
you don't have to go through a 

01:41:04.218 --> 01:41:08.152
third party Cloud.  The smart 
home sends back to the device, 

01:41:08.153 --> 01:41:13.534
so setting oven to 425° and the 
structured response in terms of 

01:41:13.535 --> 01:41:17.870
the Jason payload to the device 
to say, cool, when it sends to 

01:41:17.871 --> 01:41:21.805
the device, it is sending to the
 assist embedded on the device. 

01:41:21.998 --> 01:41:25.796
 The assistant says I don't know
 what to do with this, but let 

01:41:25.797 --> 01:41:29.703
me see if I have a module to 
register this response.  

01:41:31.209 --> 01:41:35.058
Do-do-do.  I do.  it on the 
device and that sets the oven to

01:41:35.748 --> 01:41:39.032
 bake at 425°.  Now, to the end 
user, this is great, because 

01:41:39.254 --> 01:41:41.597
again, it creates a natural 
conversation no matter where you

01:41:41.892 --> 01:41:46.232
 are in your home, right?  while
 I gave an example of just one 

01:41:46.360 --> 01:41:49.646
device, fast forward two to five
 years.  Imagine a bunch of 

01:41:49.647 --> 01:41:53.080
devices in your home that are 
listening and interacting.  If 

01:41:53.081 --> 01:41:55.652
you have odd conversations, that
 will not work out in your 

01:41:55.791 --> 01:42:01.269
favor.  That is good from the 
user experience  From the device

01:42:02.397 --> 01:42:07.337
 manufacturer perspective, you 
get code readings.  The same 

01:42:07.338 --> 01:42:11.706
code from my home device to my 
oven is the same as the device. 

01:42:12.081 --> 01:42:16.207
 With a developer you get code 
reuse.  That is good. a device 

01:42:16.533 --> 01:42:19.411
manufacturer, it is a shorter 
path to getting to market.  You 

01:42:19.412 --> 01:42:22.894
don't have to have a Cloud 
presence to have the assist 

01:42:22.895 --> 01:42:28.750
running on a device.  If your 
goal is to make the devices 

01:42:28.751 --> 01:42:34.923
smarter by embedding the assist 
on them.  can go the local 

01:42:34.924 --> 01:42:39.550
colocation route you can get the
 speech smart home and home 

01:42:39.551 --> 01:42:43.367
graph handle all this on the 
Cloud.  You notice on the screen

01:42:43.552 --> 01:42:48.141
 no Cloud presence.  We dropped 
the yellow bit on the path.  You

01:42:48.269 --> 01:42:51.884
 get code use and device 
manufacturer, a shorter time to 

01:42:52.006 --> 01:42:55.620
market.  Enough with the 
high-level  I will turn it over 

01:42:55.621 --> 01:43:01.977
to Glen to do demo and talk 
about code.  Thank you, Chris.  

01:43:01.978 --> 01:43:03.978
I appreciate that.  

01:43:12.315 --> 01:43:17.021
 so as Chris mentioned, 
yesterday, we announced the 

01:43:17.022 --> 01:43:20.739
hotword library that is 
available for download.  So you 

01:43:20.740 --> 01:43:24.363
can start experimenting with it 
and start building it into your 

01:43:24.364 --> 01:43:28.824
project and products.  What I'd 
like to do is demonstrate that. 

01:43:30.051 --> 01:43:32.051
 Jump right into a 

01:43:35.193 --> 01:43:43.590
demo.  And um, Ok Google, what 
sound does a whale make?   whale

01:43:43.862 --> 01:43:47.218
 sound.   sounds)

01:43:51.018 --> 01:43:57.125
   GLEN SHIRES: Ok Google, what 
is 18% of $57?  The answer is 

01:43:59.383 --> 01:44:06.558
$10.26. Okay, Google, add peanut
 butter to your shopping  Okay, 

01:44:06.559 --> 01:44:15.117
I added peanut butter to your 
shopping list.  you go.  we have

01:44:15.329 --> 01:44:19.594
 done is downloaded a library to
 make it easy to incorporate 

01:44:19.595 --> 01:44:26.246
okay going -- Ok Google into 
your projects and include 

01:44:26.247 --> 01:44:31.664
timers, alarms, other things.  
I'm sorry.  I should have -- 

01:44:31.665 --> 01:44:35.705
could we show this one more 
time?  sorry.  Let's go back to 

01:44:36.083 --> 01:44:40.537
that.  What I want to do is show
 you exactly what I had here.  

01:44:40.538 --> 01:44:46.063
This is a Raspberry pie.  I have
 a microphone, single microphone

01:44:46.294 --> 01:44:53.583
 and speaker plugged into a 
Raspberry pie.  Ethernet, 

01:44:53.584 --> 01:44:57.876
because Wi-Fi in here is tricky.
  We have a speaker, microphone 

01:44:57.877 --> 01:45:01.485
and Internet connection, that is
 all we need to implement the 

01:45:01.486 --> 01:45:09.839
capability of far field, 
activation of the hotword and to

01:45:10.652 --> 01:45:12.652
 implement Google 

01:45:17.163 --> 01:45:21.163
Assistant. Let me show you 
exactly what is in the library. 

01:45:24.443 --> 01:45:29.047
 What is really cool is it is 
extremely simply to use.  You 

01:45:29.048 --> 01:45:32.479
need a few method calls to make 
it work.  Actually, you can only

01:45:32.685 --> 01:45:36.130
 call one method if you want to.
  You just call start.  It will 

01:45:36.131 --> 01:45:40.377
just run autonomously waiting 
locally to listen for the 

01:45:40.378 --> 01:45:48.664
hotword "okayGoogleGoogle".  It 
will hear that, send it

01:45:51.875 --> 01:45:57.495
 up for processing.   start and 
then be done.  You might want

01:46:01.331 --> 01:46:04.623
 a microphonemicrophone button 
to mute it.  you might want a 

01:46:04.624 --> 01:46:10.795
button or remote control to push
 it instead of Ok Google.  So 

01:46:10.796 --> 01:46:15.605
you can call start i have a 
number of events that come out 

01:46:15.606 --> 01:46:19.565
as it is processing so you can 
watch the status and perhaps 

01:46:19.566 --> 01:46:23.739
have lights that indicate the 
current status.  For example, 

01:46:23.740 --> 01:46:28.998
conversation term started, means
 somebody said Ok Google and you

01:46:29.499 --> 01:46:34.681
 begin the conversation.  End of
 utterance means the person has 

01:46:34.682 --> 01:46:39.154
finished talking and recognizing
 speech finish means the server 

01:46:39.155 --> 01:46:43.356
has finished recognizing the 
speech and responding started.  

01:46:43.357 --> 01:46:46.532
It is talking back to you, 
responding finished.  You can 

01:46:46.533 --> 01:46:52.353
set up light bulbs that indicate
 the status as it is going on.  

01:46:52.354 --> 01:46:58.359
Alert started, finished.  For 
timers aand alarms.  The number 

01:46:58.360 --> 01:47:01.958
of events handled or not, 
depending on what you want to do

01:47:02.212 --> 01:47:05.550
 with your  Let me show you 
another option.  This is an 

01:47:05.551 --> 01:47:08.836
option if you want to do 
something very minimal or if you

01:47:09.095 --> 01:47:12.657
 want more flexibility and you 
don't need a hotword, we have 

01:47:12.658 --> 01:47:18.227
other options as well, which is 
in this case, a way that you can

01:47:18.774 --> 01:47:22.523
 make -- excuse me.  A way that 
you can make remote procedure 

01:47:23.044 --> 01:47:25.795
calls directly against the 
server.  So minimal processing 

01:47:25.796 --> 01:47:31.250
on the board.  In this case, I 
actually have a Raspberry pie 

01:47:31.251 --> 01:47:35.217
zero.  5 or $10 retail product, 
which is really all you need to 

01:47:35.218 --> 01:47:39.178
do this.  All it is doing is 
sending audio to the Cloud and 

01:47:39.179 --> 01:47:42.984
getting audio back.  Not doing 
any processing here.  This is 

01:47:42.985 --> 01:47:46.643
also very portable to most 
platforms, most operating 

01:47:46.773 --> 01:47:49.465
systems and most of the 
programming languages and 

01:47:49.647 --> 01:47:51.647
completely open source. 

01:47:54.833 --> 01:47:59.370
 So what we have with this is a 
way to talk to the Cloud, the 

01:47:59.371 --> 01:48:06.045
Google Cloud called GRPC or 
remote procedure calls.  These 

01:48:06.046 --> 01:48:10.584
run on any platform.  You can --
 these are already on Linux, 

01:48:11.061 --> 01:48:18.634
Mac, windows, Android, iPhone, 
supporting languages of Python, 

01:48:19.158 --> 01:48:23.885
PHP, ruby.  There is an open 
pool chain to import these into 

01:48:23.886 --> 01:48:28.727
any other platform. thing about 
it is a nice robust protocol, 

01:48:28.728 --> 01:48:32.182
air handling, that allows 
bidirectional streaming.  What 

01:48:32.183 --> 01:48:36.343
that means is you could send 
audio to the server, while it is

01:48:37.188 --> 01:48:40.616
 sending back.  When the server 
is responding you can continue 

01:48:40.617 --> 01:48:44.506
to send things out.  It is a 
bidirectional protocol and 

01:48:44.507 --> 01:48:50.570
available for any platform.  So 
what I would like to do is 

01:48:50.571 --> 01:48:52.571
demonstrate 

01:48:55.375 --> 01:48:59.246
this.  And in this case, I 
actually have the voice

01:49:04.672 --> 01:49:09.085
 kit that -- the voice kit that 
Chris was talking about.  I'm 

01:49:09.283 --> 01:49:14.437
sorry.  is all the pieces you 
need to build this.  Of course, 

01:49:14.438 --> 01:49:18.571
if you want to have a speaker 
and microphone, you can do it 

01:49:18.572 --> 01:49:21.914
that way.  Let me show you how 
it works.  In this case, I use 

01:49:21.915 --> 01:49:26.758
push to talk. a simpler protocol
 without the hotword library.  

01:49:26.759 --> 01:49:29.289
we get this on the screen?

01:49:33.436 --> 01:49:41.598
 we get the device up there?  
Thank you very much.    ... how 

01:49:41.599 --> 01:49:48.113
do you say "nice to meet you" in
 Korean.  (Speaking Korean)

01:49:53.026 --> 01:49:58.165
   GLEN SHIRES: What time is it 
in Berlin?  The time in Berlin 

01:49:58.166 --> 01:50:00.166
Germany is 6:50 p.m. 

01:50:04.686 --> 01:50:13.972
 Set the light to green.  Okay. 
 Doesn't show up as well there, 

01:50:13.973 --> 01:50:15.973
but maybe

01:50:19.804 --> 01:50:21.205
 you can see live that the light
 turned green.  Make it red.  

01:50:21.206 --> 01:50:28.027
Oops, got to press the button.  
Make it red.  It's not raining 

01:50:28.209 --> 01:50:37.130
there, it is mostly sunny. 
Ha-ha.  Make it yellow.  Okay.  

01:50:37.131 --> 01:50:41.975
There we go.  is demonstrating 
the device actions which we're 

01:50:41.976 --> 01:50:45.017
previewing right now, which 
allows you to directly talk to 

01:50:45.018 --> 01:50:49.847
the device.  So rather than, 
let's say if I'm using my Google

01:50:49.848 --> 01:50:54.164
 Assistant on my phone, I might 
have to say tell my oven to set 

01:50:54.165 --> 01:51:01.001
the temperature to 425.  If I go
 over to the oven and press the 

01:51:01.166 --> 01:51:04.934
button, I don't want to say tell
 my oven, I want to say set the 

01:51:04.935 --> 01:51:08.171
temperature to 425.  What we 
have done is when the device 

01:51:08.172 --> 01:51:11.529
with the microphone is 
listening, it takes precedence 

01:51:11.530 --> 01:51:17.003
over all other actions.  You can
 program actions to do your own 

01:51:17.004 --> 01:51:19.701
custom actions and on your 
device, you would take 

01:51:19.833 --> 01:51:23.715
precedence.  You don't have to 
preference it with tell me oven 

01:51:23.716 --> 01:51:30.835
to set the temperature.   say 
set the temperature to 425.  Let

01:51:31.199 --> 01:51:38.224
 me show one more that's kind of
 fun.  Play trivia game.  You 

01:51:38.225 --> 01:51:43.130
said the magic words!  to game 
show mode, my friend.  

01:51:48.417 --> 01:51:52.458
   GLEN SHIRES: You can see we 
play all sorts of audio through 

01:51:52.796 --> 01:51:55.414
it.  Not just our favorite lady 
assistant, but whatever you want

01:51:55.584 --> 01:51:58.654
 to do when you are making your 
own actions.  You can create 

01:51:58.655 --> 01:52:01.937
actions that have all sorts of 
sound effects.  Mix and match 

01:52:02.184 --> 01:52:10.837
those.  I'm the host of this 
silly  I'll stop that.  

01:52:12.535 --> 01:52:16.189
 Yeah, so, you know what, I keep
 going back and forth.  I 

01:52:16.418 --> 01:52:19.966
apologize.  is one more thing I 
wanted to point out on this.  

01:52:19.967 --> 01:52:23.050
Let's play five rounds.  hear 
from you now.  I have important 

01:52:23.051 --> 01:52:30.512
questions to ask.  Contestant 1,
 can you say smarty  I wanted to

01:52:31.074 --> 01:52:33.815
 point out is there are two 
microphones here.  I will not 

01:52:33.816 --> 01:52:37.609
play the trivia game.  I wanted 
to point out the fact that we 

01:52:37.610 --> 01:52:39.610
work well with one

01:52:42.890 --> 01:52:48.892
 or two microphones.  I'll get 
to that in a  So the gRPC API is

01:52:49.228 --> 01:52:54.433
 a very flexible API that lets 
you have a lot more control.  

01:52:54.434 --> 01:52:57.821
wanted to run through how the 
API worked.  First of all, if 

01:52:57.822 --> 01:53:01.727
you wanted to connect to the 
API, it basically -- you just 

01:53:01.728 --> 01:53:05.430
create a connection with a 
couple simple commands, make a 

01:53:05.732 --> 01:53:12.977
channel, gives you a stub, you 
can call a service.  We have a 

01:53:12.978 --> 01:53:16.828
service called converse so we 
can converse back and forth with

01:53:17.161 --> 01:53:21.040
 the server.  Once you set up a 
connection with the server, you 

01:53:21.041 --> 01:53:24.651
want to configure how you want 
to send audio to the server and 

01:53:24.652 --> 01:53:28.769
how you want to receive it.  
We're sending audio as linear 

01:53:28.770 --> 01:53:33.660
16, which is plain old PCM, 
doesn't have to be compressed.We

01:53:33.661 --> 01:53:40.344
 do allow flack compression, a 
lockless compression.  It cuts 

01:53:40.345 --> 01:53:43.307
down the bandwidth.   it with 
16,000

01:53:46.410 --> 01:53:50.446
 Hertz and tell the server what 
we want back.  We will get an 

01:53:50.447 --> 01:53:54.501
open sinologue, which is a nice 
tight compression engine and 

01:53:54.502 --> 01:53:59.644
have a sample rate of 22K. gives
 us some better quality audio.  

01:53:59.645 --> 01:54:03.568
So we basically set up a 
configuration, and then we start

01:54:03.949 --> 01:54:08.186
 sending things to the server.  
The first thing we send is the 

01:54:08.187 --> 01:54:11.636
configuration followed by audio.
  We send audio in chunks.  

01:54:11.637 --> 01:54:15.093
We're streaming audio to the 
server. then the server will 

01:54:15.094 --> 01:54:19.193
tell us when it has enough 
audio, when it has heard theend 

01:54:19.194 --> 01:54:23.808
of the query -- the end of the 
query.  And then we can be 

01:54:23.809 --> 01:54:28.115
receiving the audio and process.
  So when we receive end of 

01:54:28.287 --> 01:54:32.233
utterance, we will actually stop
 sending  we're going to gather 

01:54:32.234 --> 01:54:37.514
the audio coming back from the 
server and play that back.  It 

01:54:37.515 --> 01:54:42.694
also has a microphone mode that 
allows us to continue to talk.  

01:54:42.695 --> 01:54:47.218
So in other words, as you're 
having something like trivia 

01:54:47.219 --> 01:54:51.268
game as you're playing, you 
don't have to keep pressing the 

01:54:51.269 --> 01:54:54.722
button each time.  When it asks 
you a question, it keeps the 

01:54:54.723 --> 01:54:56.723
microphone open so you can 

01:54:59.760 --> 01:55:04.846
continue.  Finally, I wanted to 
talk about the two microphones 

01:55:04.847 --> 01:55:10.028
and the neural beam forming.  
thing that we do to keep costs 

01:55:10.029 --> 01:55:13.618
down in the client is make it 
work well with one or two 

01:55:13.792 --> 01:55:17.092
microphones.  With two 
microphones we do neural beam 

01:55:17.093 --> 01:55:21.480
forming in the Cloud.  So the 
Cloud is optimized for far 

01:55:21.481 --> 01:55:27.292
afield recognition.  In other 
words, it can be far away.  It 

01:55:27.293 --> 01:55:32.978
is noise robust.  We use machine
 learning to work with that.  It

01:55:32.979 --> 01:55:37.876
 is common that you may be 
speaking, other kids, dogs, 

01:55:37.877 --> 01:55:42.091
dishwashers running at the same 
time.  A lot of noise.  On the 

01:55:42.244 --> 01:55:45.836
server, we do all the processing
 to filter that out.  You don't 

01:55:45.837 --> 01:55:50.191
need any additional client 
processing, send the two 

01:55:50.192 --> 01:55:53.904
channels up to the server and we
 do the neural beam forming for 

01:55:54.108 --> 01:55:57.282
you.  keeps the cost of the 
client to a 

01:56:01.341 --> 01:56:06.170
minimum.  One thing I like about
 this voice kit and just the 

01:56:06.171 --> 01:56:10.409
fact that we have the SDK and 
made it so available is a lot of

01:56:10.632 --> 01:56:15.058
 people have started using it in
 just the three weeks itself 

01:56:15.059 --> 01:56:18.961
been available.  A friend of 
mine actually told me that his 

01:56:18.962 --> 01:56:21.906
daughter came to him and said 
she wanted to be an engineer and

01:56:22.269 --> 01:56:26.893
 make a kitty she can talk to.  
And the amazing thing is, she 

01:56:26.894 --> 01:56:30.675
was able to do that.  They 
actually got together one 

01:56:30.676 --> 01:56:34.649
evening, built a voice kit 
together.  Put together the 

01:56:34.650 --> 01:56:38.347
Google Assistant and now she's 
actually got a kitty that she 

01:56:38.348 --> 01:56:43.363
can talk to.  I think back when 
I was a kid, there was no way.  

01:56:43.364 --> 01:56:47.626
It was just a dream that I could
 build a robot I could talk to 

01:56:47.807 --> 01:56:51.396
and it would understand what I 
am saying and talk back and be 

01:56:51.397 --> 01:56:54.763
intelligent, let alone the fact 
I could ask it virtually any 

01:56:54.764 --> 01:56:57.757
question in the world and 
actually get a response because 

01:56:57.758 --> 01:57:02.840
it would know the answers.   
it's really inspiring to me that

01:57:03.247 --> 01:57:07.544
 we can inspire young engineers.
  I hope we're also inspiring 

01:57:07.545 --> 01:57:10.967
you to create wonderful new 
devices.  Let me turn it back 

01:57:10.968 --> 01:57:12.968
over to Chris

01:57:17.654 --> 01:57:19.654
 Thanks. 

01:57:22.096 --> 01:57:29.678
e) Thanks, Glen.  Awesome demos 
and words of inspiration at at 

01:57:29.679 --> 01:57:31.916
the end.  We wanted to create

01:57:37.478 --> 01:57:40.142
 one ubiquitous experience for 
you to get the Google Assistant 

01:57:40.143 --> 01:57:43.776
when you need it and wherever 
you need it.  We have the 

01:57:43.777 --> 01:57:48.585
whatever covered.  With the 
assistant SDK we can handle the 

01:57:48.865 --> 01:57:52.035
whenever, wherever because we 
extend out from the Google home 

01:57:52.036 --> 01:57:55.872
device or pixel or Android phone
 to other devices you have in 

01:57:55.873 --> 01:57:59.411
your life.  And technologies 
like the home graph and smart 

01:57:59.412 --> 01:58:02.088
home agent tie it together to 
have a natural conversation with

01:58:02.280 --> 01:58:06.055
 the devices in your life and 
feel very comfortable.  So I 

01:58:06.056 --> 01:58:13.514
wanted to SKAI thanks for oo say
 thanks for coming out and 

01:58:13.515 --> 01:58:17.722
listen to our talk.  We have 
actions on developer Google  you

01:58:18.023 --> 01:58:20.023
 sign up at 

01:58:26.011 --> 01:58:28.813
G.CO/actions challenge.  You 
could win tickets to next year's

01:58:28.943 --> 01:58:32.241
 show and other items.  Beyond 
that, we have demos in Sandbox 

01:58:32.505 --> 01:58:37.609
B.  I will be there, Glen will 
be there, other engineers and 

01:58:37.610 --> 01:58:43.322
developer folks.  We have a code
 lab for hands-on hacking. 

01:58:43.323 --> 01:58:47.088
enabled mocktails mixer which I 
will demo throughout the 

01:58:47.089 --> 01:58:52.016
afternoon.  And home automation 
system that goes in deeper with 

01:58:52.017 --> 01:58:56.083
the agents with our colleagues 
mark and David.  And we have 

01:58:56.189 --> 01:59:01.228
documentation, getting started 
and developer downloads.  So 

01:59:01.372 --> 01:59:04.255
cool, thank you so much.  take 
questions, because I think we 

01:59:04.256 --> 01:59:07.465
have 10 minutes left, if you 
want to come up and ask.  

01:59:07.835 --> 01:59:09.835
Thanks,

01:59:12.639 --> 01:59:14.639
 (end of 

01:59:17.333 --> 01:59:21.442
 session)   Thank you for 
joining this session.  We will 

01:59:21.443 --> 01:59:23.932
be making room for those who 
registered for the next session.

01:59:23.933 --> 01:59:27.257
  If you registered for the next
 session in this room, we ask 

01:59:27.258 --> 01:59:32.201
that you please clear the room 
and return via the registration 

01:59:32.202 --> 01:59:34.202
line 

01:59:43.365 --> 01:59:45.365
 of session (person 

01:59:49.560 --> 01:59:51.560
 (End of

01:59:55.010 --> 01:59:57.010
 session)

01:59:59.824 --> 02:00:03.780
 .           

02:01:01.603 --> 02:01:03.603
.  

02:03:52.730 --> 02:03:56.093
 Thank you for joining this 
session.  Brand ambassadors will

02:03:56.094 --> 02:04:04.885
 assist in directing you to the 
designated exits.  If you are 

02:04:04.886 --> 02:04:08.590
registered for the next session 
in this room, we ask that you 

02:04:08.591 --> 02:04:12.727
clear the room and return via 
the registration lines outside. 

02:30:30.114 --> 02:30:34.624
 at Google.  But it is not just 
because VR is fun or makes you 

02:30:34.625 --> 02:30:38.835
feel like it is somewhere else 
it is an obvious fit for 

02:30:39.125 --> 02:30:41.875
learning, because with our team,
 it powerfully supports what our

02:30:42.351 --> 02:30:45.442
 values are as people who are 
trying to enable better learning

02:30:45.680 --> 02:30:50.196
 with technology.  are the 
values?  For us, we think good 

02:30:50.197 --> 02:30:52.197
learning experiences should

02:30:57.075 --> 02:30:59.015
 be fundamentally immersive, 
interactive and social.  No 

02:30:59.016 --> 02:31:02.186
surprise, we believe those same 
things are what characterize 

02:31:02.187 --> 02:31:08.298
good VR experiences.   We think 
they should be immersive because

02:31:09.010 --> 02:31:12.517
 being engaged, emotionally 
invested these are important 

02:31:12.518 --> 02:31:16.686
contexts to learn.  When things 
are immersive, less abstract, 

02:31:16.687 --> 02:31:20.210
less cognitive load to process. 
 we think they need to be 

02:31:20.653 --> 02:31:24.043
interactive, because it is 
empowering to have agency as a 

02:31:24.044 --> 02:31:28.311
user, not feel constrained, to 
have a thought, see a result, to

02:31:28.435 --> 02:31:32.846
 dig in deeper when you see 
something that piques your 

02:31:33.022 --> 02:31:36.906
interest.  And social, because 
when people come together as a 

02:31:37.019 --> 02:31:41.871
group, diverse viewpoints that 
they discuss, synthesize, then 

02:31:41.872 --> 02:31:45.477
we learn from one another.  We 
end up with a sum that is 

02:31:45.478 --> 02:31:50.475
greater than the parts.  This is
 important to us at Google 

02:31:50.476 --> 02:31:56.133
because we're not interested in 
just creating future graduates. 

02:31:56.304 --> 02:32:01.057
 We want to create future 
inventors, creators, problem 

02:32:01.412 --> 02:32:03.639
solvers, dreamers.  why we

02:32:07.196 --> 02:32:13.241
 started Expeditions.  We wanted
 to give them tool to use VR in 

02:32:13.242 --> 02:32:17.608
the classroom and create those 
experiences on a more readily 

02:32:17.609 --> 02:32:21.843
available basis.  Here to talk 
more is Jen. 

02:32:25.299 --> 02:32:29.908
 Thanks, Ben.  Expeditions was 
the first large scale way to get

02:32:29.909 --> 02:32:34.773
 VR in the classroom.  Schools 
needed a smartphone, tablet or 

02:32:34.774 --> 02:32:39.731
VR viewer, and they could be 
teleported all over the world, 

02:32:39.732 --> 02:32:45.939
underwater and even to Mars.  On
 our team, many of the people 

02:32:45.940 --> 02:32:50.452
that built classroom and G suite
 for education is the same 

02:32:50.453 --> 02:32:55.539
people that built Expeditions.  
We relied heavily on the 

02:32:55.540 --> 02:32:58.893
insights we acquired.  One of 
the important things we learned 

02:32:58.894 --> 02:33:02.683
is to embrace the key functions 
of a classroom.  Students 

02:33:02.902 --> 02:33:07.218
engaging, interacting, engaging 
with each other and their peers.

02:33:07.219 --> 02:33:10.610
  There are things that are 
critical.  One, it needs to be 

02:33:10.611 --> 02:33:14.195
so easy to use.  can't rely on 
teachers to go to professional 

02:33:14.196 --> 02:33:16.949
development training to get 
trained on your tool.  Two, you 

02:33:16.950 --> 02:33:21.447
need to really make that 
immersion, that social 

02:33:21.448 --> 02:33:24.500
connection between teachers and 
students and students and 

02:33:24.852 --> 02:33:29.827
students.  And making sure that 
it is engaging and interacting. 

02:33:29.963 --> 02:33:33.744
 And you need to make sure your 
product works on multiple 

02:33:33.745 --> 02:33:36.426
devices and platforms.  That is 
really important.  Because 

02:33:36.427 --> 02:33:39.930
schools have a variety of 
devices and they have a variety 

02:33:39.931 --> 02:33:44.237
of platforms, and they're not 
just going to pick You can't 

02:33:44.238 --> 02:33:47.539
expect teachers to replace their
 materials overnight.  So you 

02:33:47.540 --> 02:33:52.080
need to make sure that your tool
 or your product can easily fit 

02:33:52.081 --> 02:33:57.913
into the existing curriculum.  
That's what we did with 

02:33:58.840 --> 02:34:02.834
Expeditions.  Just like with 
Chrome books, we imagined the 

02:34:02.835 --> 02:34:07.176
kits would be a shared resource 
between classes and schools.  

02:34:07.177 --> 02:34:12.347
And one of the most -- the 
biggest things we realized is 

02:34:12.348 --> 02:34:16.187
that most teachers weren't 
actually aware of VR when we 

02:34:16.188 --> 02:34:20.792
first started this.   we decided
 to do was bring Expeditions to 

02:34:20.793 --> 02:34:24.407
schools through the Expeditions 
pioneer program.  And you know, 

02:34:24.408 --> 02:34:28.039
what we saw is that once 
teachers got a chance to see VR 

02:34:28.040 --> 02:34:31.772
in action and see how 
Expeditions could transform 

02:34:31.773 --> 02:34:35.918
their classroom, they were 
immediately hooked.  So the 

02:34:35.919 --> 02:34:39.795
first year, we took Expeditions 
to over a million students in 11

02:34:39.796 --> 02:34:42.610
 countries.  We got incredible 
feedback, particularly from 

02:34:42.611 --> 02:34:46.394
teachers in the U.K.  This past 
year, we went back to the U.K. 

02:34:46.395 --> 02:34:49.220
and we just wrapped up our 
program there, and we took 

02:34:49.221 --> 02:34:55.796
another million students in the 
U.K. an Expeditions.  That is 

02:34:55.797 --> 02:35:00.601
one in about every eight primary
 and secondary students in all 

02:35:00.602 --> 02:35:05.225
of the U.K.   that brings our 
total number of students that 

02:35:05.226 --> 02:35:08.317
have gone on and used 
Expeditions to over 2 million in

02:35:08.497 --> 02:35:12.629
 the last two years.  And even 
after Expeditions has been used 

02:35:12.630 --> 02:35:17.207
for weeks or months or years, we
 still get the same teacher 

02:35:17.208 --> 02:35:20.721
feedback like this each and 
every day.  And so it is not 

02:35:20.722 --> 02:35:25.149
just the novelty of VR.  
something is working in the 

02:35:26.274 --> 02:35:29.790
classroom.  And even more 
importantly, we have heard from 

02:35:29.791 --> 02:35:32.650
thousands of students from 
around the world who have sent 

02:35:32.651 --> 02:35:35.605
us personal letters and 
actually, these are just the 

02:35:35.606 --> 02:35:40.108
ones we got last week.  So you 
can see.  I want to share one of

02:35:40.264 --> 02:35:45.311
 them with you. it's really too 
precious not to share.  This is 

02:35:45.312 --> 02:35:49.295
from Lozen, a student in the 
U.K.  He sent us this letter.  

02:35:49.296 --> 02:35:53.141
He said the whole experience has
 made me even more keen to 

02:35:53.142 --> 02:35:56.820
become a doctor and study the 
human body thoroughly.  The 

02:35:56.821 --> 02:36:00.323
technology I used helped me 
understand such complex subjects

02:36:00.846 --> 02:36:04.434
 easily.  The solar system trip 
was incredibly fascinating.  I 

02:36:04.435 --> 02:36:10.245
did not feel myself sitting in 
class.  Instead I felt like Tim 

02:36:10.246 --> 02:36:13.276
Peek orbiting the solar system. 
 Now, I'm not sure whether I 

02:36:13.277 --> 02:36:16.479
should be a doctor or an 
astronaut.  I'm quite confused 

02:36:16.480 --> 02:36:21.036
at this moment.  My mum says I 
should watch more of the Google 

02:36:21.037 --> 02:36:24.042
Expeditionses before I make up 
my mind, and for once, I think I

02:36:24.474 --> 02:36:28.392
 will listen to her.  

02:36:31.499 --> 02:36:33.499
 Yes,

02:36:42.686 --> 02:36:47.552
 Lozen with agree with your mum 
and think you should use 

02:36:47.553 --> 02:36:51.075
Expeditions more before making 
up your mind.  There are 

02:36:51.076 --> 02:36:55.017
traditional and nontraditional 
partners.  with museum and 

02:36:55.018 --> 02:36:59.187
cultural institutions to create 
the expeditions.  We have a 

02:36:59.188 --> 02:37:03.343
growing library of 600 tours and
 work with many hardware 

02:37:03.344 --> 02:37:06.740
partners to create certified 
Expeditions kits.  the hardware 

02:37:06.741 --> 02:37:13.247
a class of third would need to 
take an expedition.  Best buy 

02:37:13.248 --> 02:37:18.294
education was one of the first 
partners we used to launch the 

02:37:18.295 --> 02:37:22.598
Expeditions kit.  We worked with
 several other partners to make 

02:37:22.599 --> 02:37:26.870
sure schools actually have 
certified kits to use.  We have 

02:37:26.871 --> 02:37:29.732
worked closely with teachers to 
create supporting lesson plans, 

02:37:29.733 --> 02:37:33.011
which is really important.  As I
 mentioned earlier, the lessons 

02:37:33.012 --> 02:37:36.945
need to be incorporated into the
 actual curriculum so teachers 

02:37:36.946 --> 02:37:41.056
can use it seamlessly.  We 
partnered with tez to upload the

02:37:42.074 --> 02:37:46.622
 lessons.   over 8 million 
teachers sharing and learning 

02:37:46.623 --> 02:37:50.129
with each other and their lesson
 materials.  And what's really 

02:37:50.130 --> 02:37:53.445
cool is that we're also seeing 
Expeditions used outside of the 

02:37:53.446 --> 02:37:57.866
class room.  something we didn't
 initially anticipate.  We're 

02:37:57.867 --> 02:38:01.597
seeing government organizations,
 nonprofits and seeing 

02:38:01.598 --> 02:38:05.278
businesses start to use 
ExpeditionsExpeditions.  let's 

02:38:05.279 --> 02:38:08.990
take a look at one example.  And
 what you see on the screen is 

02:38:08.991 --> 02:38:16.415
actually our coral bleaching 
expedition.  highlighting the 

02:38:16.416 --> 02:38:26.196
Coraal  -- corel breaching event
 in -- bleaching

02:38:26.536 --> 02:38:31.956
 event teacher used this to 
explain the impact that happened

02:38:32.094 --> 02:38:38.231
 to the students.  went 
underwater and explored the 

02:38:38.232 --> 02:38:42.677
coral bleaching event.  He said 
that continues to add another 

02:38:42.678 --> 02:38:47.451
layer of authenticity to the 
classroom, by using it 

02:38:47.452 --> 02:38:50.733
effectively and seamlessly and 
integrating it into the 

02:38:50.860 --> 02:38:54.593
curriculum.  What amazed me 
about this expedition in 

02:38:54.729 --> 02:38:58.972
particular, it was used at cop 
21, which happened in Paris, the

02:38:59.499 --> 02:39:04.462
 U.N. change conference.  I was 
fortunate enough to attend.  It 

02:39:04.463 --> 02:39:07.892
was a presentation with about 
150 different scientists.  A big

02:39:08.212 --> 02:39:10.656
 panel.  You know, what was

02:39:16.752 --> 02:39:19.386
 a one-way dialogue and 
panelists became lively when 

02:39:19.387 --> 02:39:22.635
they started passing out the 
Expeditions kits to the 

02:39:22.758 --> 02:39:27.813
audience.  was observing the big
 coral bleaching event that 

02:39:27.814 --> 02:39:32.234
happened in Hawaii whole room 
was transformed instantly.  

02:39:32.235 --> 02:39:34.857
We're seeing some of the 
examples occur rather 

02:39:35.329 --> 02:39:38.319
frequently.  It is really 
exciting for us to see not only 

02:39:38.320 --> 02:39:43.560
how Expeditionses is used in the
 classroom but also outside of 

02:39:43.561 --> 02:39:48.809
the classroom the past two 
years.  What is next? One of the

02:39:48.810 --> 02:39:52.474
 most important things we value 
as an education product team is 

02:39:52.648 --> 02:39:55.087
listening to teachers and 
students.  We take feedback 

02:39:55.088 --> 02:39:59.732
really seriously.  We actually 
read every single piece of 

02:39:59.733 --> 02:40:03.877
feedback that we receive.  I kid
 you not, because my team is the

02:40:04.137 --> 02:40:09.352
 one that does it.   to address 
some of the top future questions

02:40:09.562 --> 02:40:14.978
 from teachers and students.  
take a sneak peek.  With over 

02:40:14.979 --> 02:40:17.882
600 tours available, we know it 
can be a bit challenging for 

02:40:17.883 --> 02:40:22.305
teachers to actually find the 
Expeditions that we're looking 

02:40:22.306 --> 02:40:28.228
for.  So rolling out soon, 
you'll see a new UI in the 

02:40:28.229 --> 02:40:32.037
Expeditions app to allow you to 
see a set of featured 

02:40:32.389 --> 02:40:35.937
Expeditions.  You can search by 
a specific category.  And we've 

02:40:35.938 --> 02:40:40.890
also improved the search.  It 
will make browsing easier to 

02:40:40.891 --> 02:40:44.145
find the Expeditions you want.  
The other important thing is 

02:40:44.146 --> 02:40:46.146
that the

02:40:47.768 --> 02:40:51.997
 UI is responsive.  It works in 
tablet or phone.  If you are in 

02:40:51.998 --> 02:40:58.016
magic window mode or the phone 
or tablet, or mobile, it will 

02:40:58.017 --> 02:41:04.802
work fine.  Now, I will turn it 
over to Ben.   have heard that 

02:41:04.803 --> 02:41:07.821
teachers want more tools to 
highlight the scenes and 

02:41:07.968 --> 02:41:11.818
environments.  So we'll be 
bringing this new sort of 

02:41:11.819 --> 02:41:14.510
annotations tool that lets you 
draw on top of Expeditions.  

02:41:14.511 --> 02:41:17.648
think it will be really, really 
useful.  If you think sort of 

02:41:17.649 --> 02:41:21.739
the number of times when you 
watch a sports commentator to 

02:41:21.740 --> 02:41:25.726
use a telestrator to illustrate 
a particularly interesting play 

02:41:25.727 --> 02:41:28.944
in a game.  That is the same 
thing here.  The way this works,

02:41:29.084 --> 02:41:32.724
 the guide can draw something on
 the scene with their finger or 

02:41:32.852 --> 02:41:36.834
stylus.  Like here, pointing out
 where a new set of solar panels

02:41:37.175 --> 02:41:40.780
 might go.  of the connected 
explorers, they see the same 

02:41:40.781 --> 02:41:46.789
thing reflected on theirs as 
well.  There you go.  It's 

02:41:47.332 --> 02:41:50.879
really cool. Okay.  And now for 
the number one most requested 

02:41:50.880 --> 02:41:54.771
feature of all.  The ability to 
explore on your own.  Now, we 

02:41:54.772 --> 02:41:58.478
see firsthand each day how 
powerful a teaching tool 

02:41:58.886 --> 02:42:01.129
Expeditions can be when used in 
a classroom of

02:42:04.986 --> 02:42:06.719
 30 opportunities.  We 
acknowledge as much learning 

02:42:06.720 --> 02:42:09.962
happening outside of the class 
room as within it.  You don't 

02:42:09.963 --> 02:42:12.907
always find yourself with a 
willing and able teacher in the 

02:42:12.908 --> 02:42:17.223
room with you.  We'll make 
Expeditions available in a solo 

02:42:17.224 --> 02:42:21.114
made that lets you experience 
without a live guide present.  

02:42:21.115 --> 02:42:29.519
We built out a full VR UI.  When
 you found the Expeditions you 

02:42:29.714 --> 02:42:34.151
like, you can dive in, step 
through the scenes and sites 

02:42:34.152 --> 02:42:38.611
within the Expeditions at your 
own pace.  can learn more with 

02:42:38.612 --> 02:42:42.304
the info panel with relevant 
facts and details.  So you don't

02:42:42.564 --> 02:42:47.037
 feel like you're alone.  We 
added narrations to accompany 

02:42:47.038 --> 02:42:53.324
you as  View of the spot where 
HamiltonHamilton fell.  This 

02:42:53.325 --> 02:42:56.628
shows memorial to Hamilton in 
the background.  After being 

02:42:56.747 --> 02:43:01.156
shot, Hamilton was rode back 
across the river to Manhattan by

02:43:02.262 --> 02:43:09.709
  That gives you a taste.  We 
had amazing folks to provide 

02:43:09.884 --> 02:43:14.994
narrations.  I will pass it back
 to Jen to tell you about that. 

02:43:16.535 --> 02:43:21.124
 Anyone recognize the voice?  It
 was Lynn Manuel Miranda the 

02:43:21.453 --> 02:43:25.134
American act or and playwright, 
wrote and starred in Hamilton.  

02:43:25.135 --> 02:43:29.257
Some of the new tours that will 
be coming out as part of the 

02:43:29.258 --> 02:43:33.396
solo mode will be -- a couple of
 Hamilton tours and about 

02:43:33.653 --> 02:43:36.385
Hamilton's life and the place 
where he duelled with

02:43:40.486 --> 02:43:42.486
 B

02:43:45.697 --> 02:43:50.148
urr.  These won't save you any 
money on a Broadway ticket.  

02:43:50.737 --> 02:43:54.194
Ha-ha.  With baseball, we have 
five narrated tours with them.  

02:43:54.195 --> 02:43:59.971
You can step up to home plate at
 Camden Yards or city fields and

02:44:00.335 --> 02:44:03.077
 learn about the stat cast and 
learn about the career of a 

02:44:03.078 --> 02:44:06.359
baseball beat reporter.  All of 
the new Expeditions will also be

02:44:06.494 --> 02:44:11.067
 available to schools through 
the live guided mode.  we had 

02:44:11.068 --> 02:44:14.388
several teachers that already 
created lessons to correspond 

02:44:14.389 --> 02:44:19.122
with these specific Expeditions 
which makes it easy to 

02:44:19.123 --> 02:44:24.503
incorporate and those are also 
on tez.  So solo mode will work 

02:44:24.504 --> 02:44:29.822
on cardboard, Android and iOS 
and we're really excited that 

02:44:29.823 --> 02:44:33.139
Expeditions will come soon to

02:44:36.373 --> 02:44:40.205
 Daydream devices so you can 
explore on your own or with a 

02:44:40.206 --> 02:44:42.206
live 

02:44:44.070 --> 02:44:49.906
guide.  We're doing demos in the
 Daydream tent next-door.  Check

02:44:50.273 --> 02:44:54.071
 it out in the Sandbox.  VR is 
amazing at making you feel like 

02:44:54.072 --> 02:44:57.316
you are somewhere else, 
transported to a new place.  We 

02:44:57.317 --> 02:45:00.182
heard from many students and 
teachers they want to interact 

02:45:00.183 --> 02:45:04.509
more with things or objects you 
might find in the places.  one 

02:45:04.510 --> 02:45:08.253
of the first things that struck 
us when watching Expeditions VR 

02:45:08.254 --> 02:45:10.254
in

02:45:11.547 --> 02:45:14.794
 the classroom.  Things in VR 
scenes had a physical placement.

02:45:14.795 --> 02:45:18.582
  Like a student that would see 
an Expeditions about a shark, 

02:45:18.583 --> 02:45:22.525
they would point to the place in
 the scene where they saw the 

02:45:22.669 --> 02:45:27.644
shark.  It was fixed in their 
spatial memory, not like a 

02:45:27.645 --> 02:45:32.037
textbook on the desk.  There may
 well be something else going on

02:45:32.161 --> 02:45:38.446
 here.  There is an idea popular
 in popular science, embodied 

02:45:38.804 --> 02:45:42.125
cognition.  bodies play a bigger
 role in how we think, learn, 

02:45:42.126 --> 02:45:45.175
remember than we generally 
thought in the past.  So the 

02:45:45.176 --> 02:45:49.309
theory is that when we move 
around, look around, see things 

02:45:49.310 --> 02:45:53.071
presented in AR or VR, that can 
tap into powerful capabilities 

02:45:53.072 --> 02:45:59.886
of our bodies, plus our minds.  
So Tango is the technology that 

02:46:00.083 --> 02:46:04.271
allows us to do that with AR.  
combined the live, social sort 

02:46:04.272 --> 02:46:08.327
of teacher curated capables of 
Google Expeditions with the 

02:46:08.328 --> 02:46:12.427
power of Tango to augment the 
environment with virtual objects

02:46:14.140 --> 02:46:18.981
 and animations.  Tango uses 
sophisticated computer vision 

02:46:18.982 --> 02:46:22.404
and simple sensors like the 
smartphones you have in your 

02:46:22.405 --> 02:46:25.311
pocket now to sense the depth 
and dimensions of the 

02:46:25.478 --> 02:46:29.081
environment that you hold that 
phone up to.  So like what does 

02:46:29.082 --> 02:46:34.011
this mean in practice in terms 
of how a teacher would do it?  

02:46:34.012 --> 02:46:40.424
It makes it possible for the 
teacher to place objects in the 

02:46:40.425 --> 02:46:45.877
classroom and tag them as if 
they're there for real. These 

02:46:45.878 --> 02:46:52.212
are persistent, and allow 
students and teachers to share a

02:46:52.419 --> 02:46:56.872
 common view of that.  one of 
the key things that makes Tango 

02:46:56.873 --> 02:47:02.071
a unique and powerful thing in 
the classroom.  AR is not new.  

02:47:02.072 --> 02:47:05.504
are lots of learning 
applications that use device 

02:47:05.759 --> 02:47:09.579
cameras, pass through to show 
digital objects.  The cameras. 

02:47:09.580 --> 02:47:14.646
the world as a flat 2D 
environment and can't create the

02:47:14.647 --> 02:47:17.521
 shared social experience where 
a classroom can stand in front 

02:47:17.522 --> 02:47:21.759
of an object and talk about it 
like it was in front of the 

02:47:22.102 --> 02:47:24.994
room.  We have given teachers 
similar controls to what we have

02:47:25.202 --> 02:47:28.007
 in the Expeditions VR to point 
things out, change the object 

02:47:28.008 --> 02:47:33.087
and control the pace of the 
class. It has been really fun to

02:47:33.565 --> 02:47:37.428
 grant teachers this new super 
power to magically go deeper 

02:47:37.429 --> 02:47:41.498
into any subject in the 
classroom.  Instead of, or more 

02:47:41.499 --> 02:47:44.573
important in addition to the 
traditional content used in 

02:47:44.836 --> 02:47:48.664
schools.  AR can place 
inaccessible things in front of 

02:47:48.665 --> 02:47:54.009
the student.  We have seen it 
encourage more curiosity, 

02:47:54.010 --> 02:47:56.292
engender more questions, 
conversation among teachers and 

02:47:56.644 --> 02:48:01.539
students.  We think it can serve
 as a powerful complement to VR 

02:48:01.540 --> 02:48:05.226
experience as well.  VR takes 
you anywhere in the world and AR

02:48:05.227 --> 02:48:08.918
 brings anything in the world to
 you.  Let's take a look at how 

02:48:08.919 --> 02:48:13.215
AR is being used in the 
classroom.  Let's watch this 

02:48:13.584 --> 02:48:18.760
video.  Same one we saw at the 
keynote, but we love  Who wants 

02:48:18.761 --> 02:48:20.791
to see a volcano? 

02:48:24.692 --> 02:48:30.771
  Look at the lava, the smoke 
coming out of that.  Pretend 

02:48:30.772 --> 02:48:37.817
your an airplane and fly  That 
is theAsteroids, meteoroids.  

02:48:37.818 --> 02:48:42.441
about D.N.A., genes, things we 
can't see.   exciting thing for 

02:48:42.442 --> 02:48:47.054
me with the AR technology is I 
could see kids get an ah-hah 

02:48:47.055 --> 02:48:50.198
moment that I couldn't get by 
just telling them about it.  

02:48:50.199 --> 02:48:53.533
minute I saw it pop up on the 
screen, it made me want to get 

02:48:53.534 --> 02:48:58.250
up and walk to  You can turn 
around, look at things from all 

02:48:58.358 --> 02:49:03.315
angles.  It give us a nice 
perspective.  you can figure out

02:49:03.505 --> 02:49:09.322
 what that might  I saw where 
the alveoli branched off, I 

02:49:09.323 --> 02:49:13.180
being look inside them and see 
how everything worked, which I 

02:49:13.181 --> 02:49:16.982
never saw before.  It was 
really, really cool.  

02:49:23.226 --> 02:49:26.349
   JENNIFER HOLLAND: So that 
video is actually from a couple 

02:49:26.350 --> 02:49:31.671
of our pilot schools that have 
been using AR in their classroom

02:49:31.812 --> 02:49:35.472
 and we've been piloting with a 
number of schools all over the 

02:49:35.705 --> 02:49:38.703
world.   has been incredibly 
positive.  We have learned a 

02:49:38.704 --> 02:49:42.635
great deal and really seen some 
amazing, creative ways that 

02:49:42.636 --> 02:49:47.255
teachers have incorporated AR 
into the classroom.  Similarly, 

02:49:47.256 --> 02:49:51.711
how we saw Expeditions VR 
incorporated into the classroom.

02:49:51.712 --> 02:49:55.894
  And so, here's just one 
example from our pilot, which I 

02:49:55.895 --> 02:49:59.241
just love.  How many of you 
remember taking a math field 

02:50:00.398 --> 02:50:05.323
trip?  Oh, we have one -- two, 
you took -- most of us don't get

02:50:05.802 --> 02:50:11.343
 to go to field trips in math 
class, right?  about math in the

02:50:12.893 --> 02:50:17.672
 context of the actual real 
world is really powerful.  what 

02:50:17.673 --> 02:50:21.047
we saw with a middle school 
class in New York who used 

02:50:21.048 --> 02:50:25.041
Expeditions AR and the teacher, 
we worked with the teacher to 

02:50:25.042 --> 02:50:31.734
create this mini golf lesson to 
calculate ow golf -- how golf 

02:50:31.735 --> 02:50:36.321
balls form different angles as 
they hit the obstacle.  the room

02:50:36.664 --> 02:50:40.330
 was this amazing mini golf 
course throughout the classroom.

02:50:40.331 --> 02:50:44.273
  The students could see the 
different holes and angles how 

02:50:44.274 --> 02:50:49.055
it changed when the bill hit 
different obstacles.  Like we 

02:50:49.056 --> 02:50:53.192
did with Expeditions VR, we will
 bring Expeditions AR to the 

02:50:53.193 --> 02:50:55.952
schools this fall through the 
pioneer program.  We want 

02:50:55.953 --> 02:50:59.150
teachers to have the ability to 
see how the technology can be 

02:50:59.510 --> 02:51:02.706
interactive, engaging, fun with 
their students.  So if any 

02:51:02.707 --> 02:51:06.649
teachers are interested, they 
can sign up on our forum, and 

02:51:06.650 --> 02:51:09.832
we'll be in touch with more 
information soon.  And you can 

02:51:09.833 --> 02:51:14.110
also checkout the demos in our 
Sandbox as well.  if you are a 

02:51:14.111 --> 02:51:17.429
developer who is really excited 
about AR and wants to work with 

02:51:17.430 --> 02:51:22.004
us to build AR lessons, please 
express interest on our partner 

02:51:22.131 --> 02:51:25.554
page.  have worked with so many 
different partners to build 

02:51:25.555 --> 02:51:29.069
Expeditions VR and we want to do
 the same with Expeditions AR.  

02:51:29.070 --> 02:51:33.890
So definitely sign up.  I would 
like to turn things over to 

02:51:33.891 --> 02:51:39.389
Brandon who will talk to you 
about building your own VR and 

02:51:39.390 --> 02:51:45.532
AR experiences.   BRANDON WUEST:
 Thanks, Jen.  Ben and Jen 

02:51:45.533 --> 02:51:48.220
highlighted we have seen huge 
success with Expeditions as an 

02:51:48.221 --> 02:51:52.716
educational product through the 
use of VR to enable immersive 

02:51:52.911 --> 02:51:56.705
learning.  the early efforts to 
bring AR to the classroom have 

02:51:56.706 --> 02:52:02.884
shown a lot of pro  promise.  It
 is not enough to build these 

02:52:02.885 --> 02:52:06.664
alone at Google.  need 
developers to focus on education

02:52:07.167 --> 02:52:12.734
 as well to grow the ecosystem. 
 Why do I want the ecosystem to 

02:52:13.034 --> 02:52:16.583
grow?  It is the right thing to 
do for kids.  As a father of 

02:52:16.784 --> 02:52:20.405
three young children, I want to 
see education transform, become 

02:52:20.585 --> 02:52:25.194
richer, more engaging for future
 generations.  I notice with my 

02:52:25.195 --> 02:52:28.440
own children, I notice they can 
learn better if they interact 

02:52:28.441 --> 02:52:31.110
with something, whether it is my
 son building a lap

02:52:36.733 --> 02:52:44.534
 leprechaun trap or my youngest 
playing with a sock.  Maybe not 

02:52:44.535 --> 02:52:48.645
so much with the sock.  But it 
is a note.  The AR and VR 

02:52:48.646 --> 02:52:53.141
experience aren't just relevant 
inside the classroom. is an 

02:52:53.142 --> 02:52:57.956
enormous potential per the use 
in professional education as 

02:52:58.065 --> 02:53:00.065
well.  This

02:53:03.226 --> 02:53:06.759
 story is a good example.  A 
utility company is using an 

02:53:06.760 --> 02:53:11.154
immerseve group experience for 
exposure of what it might be 

02:53:11.155 --> 02:53:15.898
like to work in a local sewer 
system.  this, I am glad that we

02:53:16.121 --> 02:53:21.667
 have not cracked virtual 
smells,  So what I want to do 

02:53:21.668 --> 02:53:25.762
now is give you a quick overview
 of the tools available to allow

02:53:26.249 --> 02:53:32.095
 you to build your own AR and VR
 experiences.  First off, I want

02:53:32.286 --> 02:53:38.298
 to talk about Expeditions and 
the two fundamental features.  

02:53:38.299 --> 02:53:40.299
First Expeditions is immersive. 
 We use

02:53:43.895 --> 02:53:47.553
 360 imagery to surround the 
students.  It provides a 

02:53:47.554 --> 02:53:50.281
co-located guided experience 
that allows teachers to control 

02:53:50.282 --> 02:53:55.212
and augment the experiences they
 deem appropriate.  So first, 

02:53:55.213 --> 02:53:59.317
let's talk about the easiest way
 to get 360 imagery into your 

02:53:59.318 --> 02:54:02.610
own application that is 
available in cardboard, Daydream

02:54:03.492 --> 02:54:08.483
 or outside of a VR viewer.  
First start with a Rico theta 

02:54:08.484 --> 02:54:12.780
camera or a cardboard camera to 
capture imagery.  Once you have 

02:54:12.781 --> 02:54:16.207
the 360 content available, one 
of the easiest ways to make this

02:54:16.633 --> 02:54:20.648
 viewable in the application is 
to use something called VR view.

02:54:20.649 --> 02:54:29.367
  VR view is a drop-in component
 for video.  This is available 

02:54:29.368 --> 02:54:34.117
on Android and also available on
 iOS and the web as well. 

02:54:37.453 --> 02:54:41.963
 Step one is build the 
dependency to the Gradle file. 

02:54:41.964 --> 02:54:51.033
you are using Gradle.  Next 
step, add the Panorama view to 

02:54:51.034 --> 02:54:55.624
the layout.  Finally, you take 
the Panorama view and use that 

02:54:55.625 --> 02:55:01.538
to load and display your image. 
 Almost like magic, it is now 

02:55:01.539 --> 02:55:04.536
viewable in your application.  
Is not only viewable in the 

02:55:04.537 --> 02:55:09.526
application in VR, but you can 
view is in magic window move.  

02:55:09.527 --> 02:55:12.804
You can view it outside of the 
viewer and move your phone 

02:55:13.024 --> 02:55:18.148
around.  going through this 
quickly, but I want to give 

02:55:18.149 --> 02:55:22.624
everyone a quick overview of the
  Next step.  Now how can you 

02:55:22.625 --> 02:55:25.786
enable a colocated guided 
experience?  This is 

02:55:25.787 --> 02:55:29.214
straightforward with the nearby 
API.  Let me walk you through 

02:55:29.215 --> 02:55:34.004
how to do it on Android.  It is 
available on iOS as well.  First

02:55:34.114 --> 02:55:40.114
 up, for adding the nearby API 
as with VR view is you add the 

02:55:40.115 --> 02:55:44.938
dependency to your Gradle build 
file.  Then what you want to do 

02:55:44.939 --> 02:55:47.276
is create a message listener.  
The

02:55:50.366 --> 02:55:52.366
 message

02:55:54.675 --> 02:55:58.917
 listener you use to receive and
 create the process.  You have 

02:55:58.918 --> 02:56:03.279
the listener, once you have the 
listener and you subscribe that 

02:56:03.280 --> 02:56:06.880
against the nearby API.  Pretty 
simple.  you have the 

02:56:06.881 --> 02:56:11.132
application that can listen to, 
receive, process messages, then 

02:56:11.133 --> 02:56:15.663
you can have your application 
publish these messages out to 

02:56:15.847 --> 02:56:20.386
clients. again, I went over this
 pretty quickly.  If you want to

02:56:20.772 --> 02:56:27.268
 learn more about VR view or 
nearby API, here are a couple 

02:56:27.269 --> 02:56:32.062
resources to checkout.  360 
photos are great. simple, easy 

02:56:32.063 --> 02:56:36.734
to add to your app but limiting 
because they restrict you to a 

02:56:36.735 --> 02:56:40.577
certain kind of content.  As you
 start to prepare experiences, 

02:56:40.578 --> 02:56:47.407
say for upcoming stand alone 
headset we announced yesterday, 

02:56:47.408 --> 02:56:51.495
you want something near flexible
 and powerful.  is the options 

02:56:51.496 --> 02:56:54.573
for more advanced experiences 
without getting your hands dirty

02:56:54.759 --> 02:57:00.554
 with open GL or similar?  Enter
 web VR.  Google has been a 

02:57:00.555 --> 02:57:04.578
strong force behind the web VR 
standard and today it is 

02:57:04.579 --> 02:57:11.252
supported in Chrome for Android,
 Firefox, oculus, Samsung 

02:57:11.393 --> 02:57:15.038
browsers.  That is great, what 
about building your own 

02:57:15.039 --> 02:57:18.099
experiences that use web 
technologies?   want to talk 

02:57:18.100 --> 02:57:23.263
about A frame.  This is a 
framework -- isn't a Google 

02:57:23.441 --> 02:57:26.633
product.  I want to talk about 
it because it is one of the 

02:57:26.634 --> 02:57:30.997
easiest ways I have found to 
build VR experiences that target

02:57:31.332 --> 02:57:35.927
 the web.  For instance, look at
 the 360 photo I showed you 

02:57:35.928 --> 02:57:42.259
earlier in the VR view example. 
 Say we wanted to add a 2D image

02:57:42.260 --> 02:57:46.852
 over the top.  This is 
nontrivial with VR view.  can 

02:57:46.853 --> 02:57:50.903
see here in the sample.  This is
 a complete sample on how to do 

02:57:51.159 --> 02:57:58.188
this, it is easy to add our 360 
photo, and our 2D image overlay 

02:57:58.189 --> 02:58:00.282
and a very concise amount of

02:58:04.096 --> 02:58:09.743
 HTML.  should look very 
syntactically familiar for those

02:58:09.871 --> 02:58:13.348
 of you with web development 
experience.  This is the example

02:58:13.918 --> 02:58:17.833
 running in Chrome for Android. 
  Now I will try to talk about a

02:58:18.553 --> 02:58:21.748
 slightly more complex example. 
 Now, when I was in school, I 

02:58:21.749 --> 02:58:26.316
struggled a lot with the concept
 of imaginary numbers.  I mean, 

02:58:26.317 --> 02:58:30.460
for one, the name is ridiculous.
  They're imaginary numbers, not

02:58:30.878 --> 02:58:35.271
 even real.  But besides the 
fact of I think the name choice 

02:58:35.272 --> 02:58:41.909
of imaginary numbers being poor,
 I remember the concept to be 

02:58:41.910 --> 02:58:45.945
intimidating because it wasn't 
grounded in anything tangible. 

02:58:45.946 --> 02:58:55.494
illustrate what I mean.  look at
 the parrab  --  The

02:58:57.448 --> 02:58:59.448
 theorem

02:59:00.619 --> 02:59:04.004
 says there should be a value 
for X that causes the parabola 

02:59:04.005 --> 02:59:08.770
to cross the X axis, but it 
requires us to use imagery 

02:59:09.816 --> 02:59:17.226
numbers.  -- imaginary numbers. 
 One reason this seems so 

02:59:17.388 --> 02:59:21.173
inaccessible, because educators 
have been largely limited to 

02:59:21.174 --> 02:59:23.863
conveying this on something like
 a piece of paper.  As we 

02:59:23.864 --> 02:59:26.622
represent positive numbers on 
the number line in one direction

02:59:27.011 --> 02:59:31.185
 and negative numbers in the 
other direction, we can actually

02:59:31.589 --> 02:59:36.216
 think of imaginary numbers as 
just another dimension.  When we

02:59:36.217 --> 02:59:41.711
 represent our parabola in 3D 
space, the applied use of 

02:59:41.712 --> 02:59:46.297
imaginary numbers is more 
obvious.  You can see it 

02:59:46.499 --> 02:59:48.614
intersect.  It is obvious.  It 
is probably not obvious to you. 

02:59:48.810 --> 02:59:52.251
 If you are feeling completely 
lost.  Great, that's my point.  

02:59:52.252 --> 02:59:57.017
I'm trying to explain this using
 traditional 2D presentation 

02:59:57.349 --> 03:00:02.878
tools.  Now, imagine if you 
could enable students to explore

03:00:02.879 --> 03:00:06.599
 concepts like imaginary numbers
 in VR.  What is amazing here is

03:00:06.953 --> 03:00:10.552
 someone has already built a 
graphing calculator application 

03:00:10.553 --> 03:00:14.318
called math world VR using A 
frame.  only is this tool 

03:00:14.319 --> 03:00:17.401
available today, but it is 
completely open source.  If you 

03:00:17.402 --> 03:00:21.677
want to look at a more advanced 
example of using A frame or 

03:00:21.678 --> 03:00:25.581
targets web VR, this is a great 
place to start.  If you want to 

03:00:25.582 --> 03:00:32.321
learn more about A frame or math
 world VR, checkout these links.

03:00:32.322 --> 03:00:37.106
  Okay.  Everything I have shown
 you up to this point has only 

03:00:37.107 --> 03:00:43.410
enabled VR.  I haven't talked 
about AR at all.  is pushing AR 

03:00:43.649 --> 03:00:47.951
standard. of the best tools for 
the experiences, such as 

03:00:47.952 --> 03:00:56.251
Expeditions AR app you can see 
in the Sandbox next-door is this

03:00:56.252 --> 03:00:58.252
 system called

03:00:59.793 --> 03:01:04.270
 Unity.  could be a chance you 
haven't heard of it at all.  

03:01:04.468 --> 03:01:10.389
okay.  Unity is popular for 
building 3D mobile games.  The 

03:01:10.390 --> 03:01:16.392
same features that enabled 
developers to create amazing 

03:01:16.393 --> 03:01:21.260
games applies well to AR and VR.
  We use this because it 

03:01:21.261 --> 03:01:25.366
provides really robust support 
for importing and manipulating 

03:01:25.367 --> 03:01:30.805
through the objects.  A multi
player API through peer-to-peer 

03:01:31.083 --> 03:01:34.434
connections, with the co-located
 student teacher class room.  

03:01:34.435 --> 03:01:40.315
Where an Internet connection may
 be unavailable. provides simple

03:01:40.987 --> 03:01:44.985
 integration with Tango.  Tango 
is at the core of the tracking 

03:01:45.290 --> 03:01:48.981
capabilities.  To provide more 
depth, and if you pay attention,

03:01:49.357 --> 03:01:52.818
 that is a pun, though a bad 
one, let's talk about the three 

03:01:52.819 --> 03:01:57.828
key features of Tango.  First, 
Tango provides the 3D space.  We

03:01:58.190 --> 03:02:01.570
 know where our device is 
looking and located.  This 

03:02:01.571 --> 03:02:05.664
allows students to walk around 
the room and see objects from 

03:02:05.665 --> 03:02:10.095
different perspectives and 
distances.  also provides 

03:02:10.096 --> 03:02:12.096
surface detection

03:02:15.656 --> 03:02:19.279
detection.  So we know a floor 
is a floor and a desk is a desk.

03:02:19.280 --> 03:02:22.519
  This allows us to place 
objects relative to our physical

03:02:23.083 --> 03:02:26.996
 space.  Our physical space and 
allow teachers to place objects 

03:02:26.997 --> 03:02:31.211
on tables as they would 
traditional classroom materials.

03:02:31.212 --> 03:02:35.074
  Finally, Tango does all of 
this while giving us a global 

03:02:35.075 --> 03:02:38.144
understanding of our position in
 space.  So when we leave the 

03:02:38.145 --> 03:02:45.157
classroom and come back, the 
objects remain.  If you want to 

03:02:45.158 --> 03:02:51.321
learn more about Unity for 
Daydream or cardboard or more.  

03:02:51.322 --> 03:02:56.002
Checkout this presentation.  I 
realize I went over this fast.  

03:02:56.003 --> 03:03:00.438
it give a broad understanding of
 some of the tools available to 

03:03:00.439 --> 03:03:08.104
experience the VR and AR 
applications.  me hand it back 

03:03:08.105 --> 03:03:17.281
to  Thank you, Brandon.  Why do 
we feel like this is an urgent 

03:03:17.462 --> 03:03:21.853
thing?  It is perfectly 
incorporated from a hero. 

03:03:25.017 --> 03:03:29.803
 Seymour pappert.  We should try
 to learn more like children.  

03:03:29.804 --> 03:03:33.330
That is the point here.  Pappert
 was an influence.  He was the 

03:03:33.331 --> 03:03:38.074
first to see computers not as 
things that have generally 

03:03:38.075 --> 03:03:40.603
characterized people's 
understanding, but good 

03:03:40.604 --> 03:03:44.781
information storers for the 
repetitive task.  Like the 

03:03:44.782 --> 03:03:48.662
logical extension of 
encyclopedia, he saw them as 

03:03:48.663 --> 03:03:51.692
this thing to be harnessed by 
people that create things, 

03:03:51.971 --> 03:03:56.661
learning, doing, making new 
things, actively try fail, and 

03:03:57.046 --> 03:04:05.524
try again.  The great irony.  
pappert compelled us to support 

03:04:05.525 --> 03:04:08.947
human learning with technology. 
 We have made more progress 

03:04:08.948 --> 03:04:12.520
teaching computers how to learn 
than people.  I will give an 

03:04:12.676 --> 03:04:20.248
example.  remember Deep Blue?  
remember Joel Benjamin? was the 

03:04:20.249 --> 03:04:25.075
chest grand master that the deep
 blue team worked with at IBM to

03:04:26.086 --> 03:04:32.131
 get his game strategies.  They 
extracted as many if-then 

03:04:32.132 --> 03:04:37.558
statements to create what Joel 
Benjamin would do, but faster.  

03:04:37.559 --> 03:04:42.511
It was an amazing achievement.  
Just 22 years later, there was 

03:04:42.760 --> 03:04:47.586
Alpha Go, the computer that 
defeated one of the world's 

03:04:47.587 --> 03:04:53.242
great Go players.  This wasn't 
about integrating the computer 

03:04:53.243 --> 03:04:59.535
with the strategies.  It was 
programming a program how to 

03:04:59.536 --> 03:05:04.439
learn what a good strategy would
 be.  You have an ignorant crowd

03:05:04.556 --> 03:05:08.862
 of really good learners who 
play go all the time.  To put 

03:05:08.863 --> 03:05:12.365
that in context. difference 
between the number of moves in 

03:05:12.366 --> 03:05:15.880
chess and go is the difference 
between the number of atoms in 

03:05:15.881 --> 03:05:19.600
your body and the number of 
atoms in the universe.  That is 

03:05:19.601 --> 03:05:25.963
in like 20 years.  So what 
happened?  For such dramatic 

03:05:25.964 --> 03:05:30.316
progress in such short time.  
How is that milestone of 

03:05:30.317 --> 03:05:33.889
artificial intelligence achieved
 just 20 years ago cute in 

03:05:33.890 --> 03:05:38.320
comparison to what we can do 
today?  It turns out programming

03:05:38.518 --> 03:05:42.055
 a computer to be smart is 
actually programming it to learn

03:05:42.452 --> 03:05:48.816
 to be smart.  Put another way. 
 Artificial intelligence grew 

03:05:48.817 --> 03:05:52.578
into machine learning.  Instead 
of jamming computers full of 

03:05:53.289 --> 03:05:59.436
if-then statements, we give it 
progress, and try and fail.  

03:05:59.437 --> 03:06:03.902
gave them the same gift of 
learning that we are born with 

03:06:03.903 --> 03:06:10.572
as children.  Like the same gift
 that leads Brandon's kid to eat

03:06:10.904 --> 03:06:16.434
 his sock.  So much of that old 
notion artificial intelligence. 

03:06:16.582 --> 03:06:19.649
 Think about the facts you were 
asked to memorize.  The 

03:06:19.650 --> 03:06:22.250
standardized bubble tests you 
took.  All the times the 

03:06:22.359 --> 03:06:25.865
solution was presented to you as
 choosing the right if-then 

03:06:26.193 --> 03:06:31.590
statement.  if it took giving 
computers the technology to 

03:06:31.591 --> 03:06:37.346
experiencely learn at scale and 
make them capable of tackling 

03:06:37.347 --> 03:06:42.840
problems like Go, it should make
 us realize the technology to 

03:06:42.841 --> 03:06:47.072
give humans to learn is to help 
them learn by experiencing, 

03:06:47.073 --> 03:06:51.883
giving them agency, not just by 
giving a bunch of  That is 

03:06:51.884 --> 03:06:57.481
exactly why the emergence of 
widely able, immersive 

03:06:57.482 --> 03:07:02.769
computering like AR and VR is an
 exciting opportunity.  It can 

03:07:02.770 --> 03:07:05.514
enable the right learning 
moments at scale.  Provide 

03:07:05.515 --> 03:07:08.853
people trying to learn something
 with experiences, with 

03:07:09.040 --> 03:07:12.132
curiosity, with wonder, trial 
and error that can be arrived at

03:07:12.692 --> 03:07:18.343
 quickly and safely.  They can 
inspire kids.  That's a much 

03:07:18.344 --> 03:07:22.603
more powerful force than any 
educational technology we could 

03:07:22.604 --> 03:07:26.102
actually create.  So if we -- 
that includes all of you -- if 

03:07:26.103 --> 03:07:29.503
we get this right, we have the 
chance to give the same gift we 

03:07:29.504 --> 03:07:33.456
spent the last 20 years giving 
to rack-mounted servers to our 

03:07:33.457 --> 03:07:38.286
own  that's why we're really 
excited to see what we all  

03:07:38.287 --> 03:07:40.614
thanks very much!  

03:07:44.153 --> 03:07:47.562
   Thank you for joining this 
session.  Brand ambassadors will

03:07:47.856 --> 03:07:51.530
 assist with directing you 
through the designated exits.  

03:07:51.531 --> 03:07:53.914
be making room for those who 
registered for the next session.

03:07:53.915 --> 03:07:57.192
  If you have registered for the
 next session in this room, we 

03:07:57.193 --> 03:08:00.654
ask that you please clear the 
room and return via the 

03:08:00.908 --> 03:08:05.171
registration line outside. you. 
  of 

03:25:05.095 --> 03:25:07.095
session)

03:25:09.894 --> 03:25:13.496
   Welcome.  Thank you for 

03:26:37.667 --> 03:26:39.667
joining.  Our session will begin
 soon.  

03:26:42.864 --> 03:26:45.047
 Welcome.  Thank you for 
joining.  Our session will

03:29:35.937 --> 03:29:37.937
 begin soon.  

03:29:41.839 --> 03:29:46.733
 Good morning, everyone.  How 
are -- Good morning, everyone.  

03:29:46.734 --> 03:29:52.831
How are you feeling?  This 
sweatshirt is made out of 20 

03:29:52.832 --> 03:29:58.519
Daydream views.  No, it is not, 
let's get started.  Mohs is 

03:29:58.520 --> 03:30:04.314
breeze breeze.  I'm a project 
major to the Daydream  -- my 

03:30:04.315 --> 03:30:06.315
name is

03:30:11.193 --> 03:30:13.965
 BRAHIM.  We think it is 
important that as the market is 

03:30:13.966 --> 03:30:18.003
starting we share as much as we 
can with the broader community. 

03:30:18.004 --> 03:30:21.569
 The second call is to walk you 
through how we're talking the 

03:30:21.570 --> 03:30:27.280
insights and applying it to the 
data platform itself to make it 

03:30:27.281 --> 03:30:32.143
better for developers and users.
  Let's get started.  are 

03:30:32.277 --> 03:30:39.043
updates, recaps you have 
probably heard  First, we have 

03:30:39.044 --> 03:30:41.941
eight Daydream-ready phones.  If
 you recall, last year, November

03:30:42.333 --> 03:30:50.533
 we launched with support pixel 
and pixel XL.  The goal has to 

03:30:50.534 --> 03:30:55.010
bring high quality mobile to 
everyone.  We have been hard at 

03:30:55.011 --> 03:31:00.800
work to bring in more devices 
that support Daydream. Samsung 

03:31:01.137 --> 03:31:07.636
S8 will be Daydream in the 
coming week.   flagship device 

03:31:07.637 --> 03:31:10.678
available later this summer will
 also be Daydream ready.  And 

03:31:11.308 --> 03:31:16.065
finally, our existing partners 
Asus and Motorola will bring 

03:31:16.066 --> 03:31:21.201
more Daydream-ready devices to m
arket.  Putting it together, as 

03:31:21.202 --> 03:31:25.737
Mike summarized in the morning, 
we'll have tens of millions of 

03:31:26.798 --> 03:31:30.150
Daydream-ready devices on the 
market.  Those paired with the 

03:31:30.151 --> 03:31:32.897
headset will allow you to 
experience Daydream.  That is a 

03:31:32.898 --> 03:31:36.968
great user base for you to 
target with content.  The other 

03:31:36.969 --> 03:31:39.253
big news, the

03:31:42.821 --> 03:31:47.512
 I/O headset.  Darren will tell 
you more about the headset s and

03:31:47.853 --> 03:31:50.042
 how they work.  highlight

03:31:53.086 --> 03:31:58.071
, the satellite headphones are 
the same as the smartphone.  

03:31:58.072 --> 03:32:02.242
high quality mobile VR to 
everyone.  If you don't own an 

03:32:02.243 --> 03:32:05.951
Android device, this may be an 
option.  Another option is a 

03:32:05.952 --> 03:32:10.071
different user journey, you have
 a shared device at home, that 

03:32:10.072 --> 03:32:15.475
is connected to power and Wi-Fi 
and you can jump into VR at any 

03:32:15.476 --> 03:32:20.699
time.  Darren will get into more
 details, but we're excited 

03:32:20.700 --> 03:32:24.020
about this development, 
obviously. Finally, user 

03:32:24.021 --> 03:32:27.657
purchase the headsets to develop
 content that users create.  

03:32:27.658 --> 03:32:31.540
excited since January we're more
 than triple the number of apps 

03:32:31.541 --> 03:32:35.030
available on Daydream to 150.  
It is exciting.  We expect to 

03:32:35.031 --> 03:32:38.554
see an increase in momentum over
 the coming months as we roll 

03:32:38.555 --> 03:32:42.066
out more of the experiences 
being developed at the moment.  

03:32:42.067 --> 03:32:47.183
So that is great news.  All 
right.  So we'll share

03:32:50.480 --> 03:32:53.875
 five insights.  These are data 
driven insights we hope you will

03:32:54.043 --> 03:32:58.691
 find useful as you create our 
content.  First, Daydream home 

03:32:58.692 --> 03:33:05.396
in its current form.  will get 
you on stage and tell you about 

03:33:05.397 --> 03:33:08.775
how it will change in the 
future.  The three panels on the

03:33:08.998 --> 03:33:14.197
 top.  We call them discovery 
windows.  are deep links to 

03:33:14.508 --> 03:33:18.106
videos, to apps, specific 
experiences in an app.  We use 

03:33:18.107 --> 03:33:22.239
them to feature content for 
users.  So keep that in mind as 

03:33:22.240 --> 03:33:24.240
I share the data 

03:33:27.323 --> 03:33:30.778
 First, 25% of sessions on 
Daydream begin with no specific 

03:33:30.989 --> 03:33:34.473
intent.  If you think about 
that, if you think about your 

03:33:35.673 --> 03:33:38.877
smartphone, how often do you 
turn on your smartphone with 

03:33:38.878 --> 03:33:43.155
absolutely no intent?  to check 
time, not to check e-mail, not 

03:33:43.156 --> 03:33:48.484
to play a game, not to do other 
things.  smartphones it is 

03:33:49.498 --> 03:33:51.498
task-centric, a specific thing 
you are doing with the phone and

03:33:51.586 --> 03:33:55.570
 you will go there to do that.  
This is quite different.  Lots 

03:33:55.571 --> 03:34:00.294
of users are coming with no 
intent.  next data point is 40% 

03:34:00.295 --> 03:34:04.519
of all sessions include at least
 one click on a discovery 

03:34:04.520 --> 03:34:08.692
window.  Which benchmarking 
against traditional 

03:34:08.693 --> 03:34:13.068
merchandising experience is 
quite good.  Finally, 35% of all

03:34:13.542 --> 03:34:19.165
 sessions include a visit to 
play store VR.  So if you put 

03:34:19.166 --> 03:34:22.283
these three data points 
together, our take away is that 

03:34:22.284 --> 03:34:26.364
on VR, in VR, users are in 
discovery mode.  They're 

03:34:27.467 --> 03:34:32.239
open-minded.  They're coming and
 saying what's awesome in VR?  

03:34:32.240 --> 03:34:36.399
What can I do today?  can I 
experience today in Daydream?  

03:34:36.400 --> 03:34:40.215
And that's great news because it
 creates an opportunity for 

03:34:40.216 --> 03:34:47.131
developers to fill that need.  
To create great content people 

03:34:47.278 --> 03:34:50.249
love, use and purchase, which is
 obviously essential.  You know,

03:34:50.549 --> 03:34:56.259
 I was on Android market in 
2011, and at the time, high 

03:34:56.260 --> 03:35:05.843
qualitiance -- quality apps got 
a lot of use and attention.  We 

03:35:05.844 --> 03:35:09.794
see the similar point in VR.  
The insight we are trying to 

03:35:09.795 --> 03:35:12.882
share today as a developer, this
 may be the time to get 

03:35:13.036 --> 03:35:18.074
involved, start experimenting, 
start iterating so they can 

03:35:18.075 --> 03:35:22.582
build the Angry Birds of VR.  
Angry Birds is standing in for 

03:35:22.583 --> 03:35:28.198
the breakout hit.  You remember 
when Angry Birds in 2009 came 

03:35:28.342 --> 03:35:32.087
out.  It was one of the titles 
where everything came together 

03:35:32.228 --> 03:35:36.233
perfectly.  The game mechanic 
used the screen in a unique way.

03:35:36.234 --> 03:35:41.501
  The characters were great, the
 branding.  The monetization 

03:35:41.685 --> 03:35:47.148
worked.  worked well.  It wasn't
 an overnight  took a lot of 

03:35:47.149 --> 03:35:50.630
iteration and work to get there.
  So we firmly believe that 

03:35:50.631 --> 03:35:55.155
developers on Daydream today are
 converging on the breakout hit.

03:35:55.156 --> 03:36:00.271
  Learning, iterating, and 
getting closer to creating this 

03:36:00.272 --> 03:36:03.531
breakout hit.  So if you have 
been as a developer, think about

03:36:03.733 --> 03:36:07.649
 VR, considering whether to get 
involved or not, I urge you to 

03:36:07.650 --> 03:36:11.855
look closer and consider 
actually doing that.  So next I 

03:36:11.856 --> 03:36:17.244
will show you a video from a 
title that just became available

03:36:17.395 --> 03:36:25.133
 on Daydream called Lola and the
 giant, built by climax studios.

03:36:25.134 --> 03:36:28.673
  The environment is immersive, 
it is great.  There are two 

03:36:28.786 --> 03:36:31.671
characters.  It is the giant, 
you can take the perspective of 

03:36:31.672 --> 03:36:35.778
the giant in the game.  You can 
have different skill sets, 

03:36:35.779 --> 03:36:40.525
literally like a giant.  Or be a
 third-person follower along 

03:36:41.097 --> 03:36:45.112
with Lola as she conquers 
challenges and does all sorts of

03:36:45.409 --> 03:36:51.542
 fun stuff.  Interesting, also, 
a companion experience where 

03:36:51.543 --> 03:36:53.086
outside of VR -- there you go, 
the video is playing.  outside 

03:36:53.087 --> 03:37:00.179
of VR, a user can also interact 
in the game. can have an 

03:37:00.180 --> 03:37:06.180
asymmetric game experience.  One
 person is in 2D and another in 

03:37:06.181 --> 03:37:09.345
VR and they can collaborate 
together. think that is fun.  We

03:37:09.553 --> 03:37:12.860
 think the title that is getting
 at the breakout hit.   this 

03:37:12.861 --> 03:37:16.061
title is getting at trying 
different things, innovating in 

03:37:16.062 --> 03:37:19.246
the space, and getting at 
something awesome.  haven't 

03:37:19.247 --> 03:37:25.266
tried it, it just came out.  
Super awesome, please  Now, 

03:37:25.267 --> 03:37:30.131
let's talk about monetization.  
That is a big part of this.  A 

03:37:30.132 --> 03:37:33.256
big part of making you -- 
helping you earn a living on 

03:37:33.589 --> 03:37:37.388
Daydream.  So a couple of data 
points to share with you is that

03:37:37.654 --> 03:37:41.831
 on Daydream, we have seen three
 times as many buyers as you 

03:37:41.832 --> 03:37:47.220
would on traditional mobile on 
Google Play.  And those buyers 

03:37:47.221 --> 03:37:53.541
are spending 32% more than they 
would on traditional mobile.  is

03:37:53.835 --> 03:38:00.536
 good news, right?  creating VR 
content is expensive, it is 

03:38:00.712 --> 03:38:03.655
hard, it takes a lot of time.  
The fact that users are 

03:38:03.656 --> 03:38:06.985
responding well, they're willing
 to purchase the content and 

03:38:06.986 --> 03:38:09.640
actually spending more on it, 
that is really good news for our

03:38:10.060 --> 03:38:16.338
 developer community and for our
 platform.  However, we talk to 

03:38:16.339 --> 03:38:19.905
our users a lot.  We do a lot of
 user studies.  We talk with 

03:38:19.906 --> 03:38:23.198
them a lot.  Almost every single
 one we have heard feedback that

03:38:23.382 --> 03:38:28.537
 if we had a way -- if users had
 a way to try an experience 

03:38:28.538 --> 03:38:31.054
before buying it, they would 
help them make that purchase 

03:38:31.055 --> 03:38:36.583
decision more frequently.  And 
so the insight here is actually 

03:38:36.584 --> 03:38:39.827
more of an ask, more of a 
request.  If you have an 

03:38:39.956 --> 03:38:44.605
experience on Daydream today, if
 it is premium, IE, like you 

03:38:44.606 --> 03:38:48.276
have to pay up-front, look at 
ways, consider ways to introduce

03:38:48.448 --> 03:38:53.261
 a trial to it.  It is not easy.
  There is no single way to do 

03:38:53.533 --> 03:38:59.861
this.  Right? depends by title, 
it depends by user.  It depends 

03:39:00.234 --> 03:39:04.870
on the development and goals for
 your title.  This is easy. 

03:39:04.871 --> 03:39:09.299
believe this isn't something 
that will go away.   for trying 

03:39:09.300 --> 03:39:13.802
an experience is fundamental to 
VR.  Because it is an immersive 

03:39:13.931 --> 03:39:17.644
technology.  I have to be in it 
to know what it is about.  There

03:39:17.780 --> 03:39:21.862
 are physiological differences 
that one title that is 

03:39:21.863 --> 03:39:25.895
comfortable for one user may not
 be as comfortable for someone 

03:39:26.008 --> 03:39:29.430
else.  need makes sense.  We're 
doing our best to figure this 

03:39:29.567 --> 03:39:34.001
out.  As soon as we do, we will 
communicate our finders.  

03:39:34.002 --> 03:39:37.307
developers iterate and 
experiment in this direction.  

03:39:37.308 --> 03:39:41.615
do you get users to experiment 
and try your content first is 

03:39:41.616 --> 03:39:46.030
key to getting into the 
successful monetization and 

03:39:46.031 --> 03:39:51.568
successful breakout  Now, let's 
talk about usage patterns.  What

03:39:51.919 --> 03:39:56.561
 we have seen on Daydream is 
users are spending average 40 

03:39:56.562 --> 03:40:01.053
minutes a week in VR.  What is 
unique is that this is spent in 

03:40:01.054 --> 03:40:06.105
a couple of sessions only.  In 
the evenings, at home, or on the

03:40:06.868 --> 03:40:12.285
 weekends.  If today you are a 
developer of a 2D game or app, 

03:40:12.286 --> 03:40:17.309
it is quite different from what 
you are seeing.  What you are 

03:40:17.310 --> 03:40:21.780
seeing today is a lot of 
interactions, microsessions, 30 

03:40:21.781 --> 03:40:25.433
seconds a minute, couple 
minutes.  People are coming 

03:40:25.593 --> 03:40:30.838
back, collecting energy, points 
and going back out.   than VR.  

03:40:30.839 --> 03:40:33.784
So the way we have been 
summarizing this now for a while

03:40:34.187 --> 03:40:38.103
 is that as you build content 
for VR, think of a sit-down meal

03:40:38.426 --> 03:40:43.466
 experience.  Not a snack.  It 
is not something people are 

03:40:43.467 --> 03:40:47.863
doing throughout the day.  It is
 fewer, longer sessions.  Next I

03:40:47.971 --> 03:40:53.849
 want to show you a view from 
the gorillas latest album.  This

03:40:54.089 --> 03:40:57.768
 was created in collaboration 
with Google spotlight stories.  

03:40:57.769 --> 03:41:01.765
is awesome about this, you are 
on a train track.  super fast.  

03:41:01.766 --> 03:41:05.175
You feel like you are there.  
You can look around, different 

03:41:05.176 --> 03:41:08.239
characters.  The gorilla is 
behind you.  You are listening 

03:41:08.240 --> 03:41:12.175
to the music.  There is a tablet
 showing you what would look 

03:41:12.176 --> 03:41:16.676
like a traditional music video. 
 What is awesome about this 

03:41:16.677 --> 03:41:20.292
medium of VR video is that not 
only are you listening to the 

03:41:20.452 --> 03:41:23.736
artist's creation as a song, you
 are also experiencing the 

03:41:23.737 --> 03:41:28.099
environment they wanted you to 
be in when you listened to it. 

03:41:28.100 --> 03:41:32.061
just works really well.  If you 
haven't tried this, this 

03:41:32.062 --> 03:41:35.379
actually got three million views
 in 48 hours, making it the b

03:41:36.239 --> 03:41:40.854
iggest debut of a VR video on 
YouTube ever.  It was 

03:41:40.855 --> 03:41:43.955
super-awesome.  Give it a try, 
if you haven't  So the take away

03:41:44.320 --> 03:41:49.816
 here and the fact, actually is 
that nearly 50% of all time in 

03:41:49.817 --> 03:41:55.378
Daydream is spent in video 
experiences.  This is split 

03:41:55.379 --> 03:42:00.289
across flat content.  This is 
traditional 2D content as 

03:42:00.467 --> 03:42:04.275
projected in a personal cinema, 
we like to call it, from 

03:42:04.405 --> 03:42:12.039
Netflix, hulu, play HBO.  the 
immersy

03:42:14.631 --> 03:42:19.488
 -- immersive VR and others that
 create truly awesome videos.  A

03:42:19.628 --> 03:42:23.852
 lot of documentaries that 
allows you to be immersed in the

03:42:23.853 --> 03:42:28.722
 story and feel, probably to be 
honest, as much about how that 

03:42:28.723 --> 03:42:32.248
person in the documentary is 
feeling more than ever before in

03:42:32.354 --> 03:42:38.196
  The insight here is video is a
 core use case of mobile VR.  It

03:42:38.197 --> 03:42:43.147
 is a core use case.  And so as 
a developer, as a creator, think

03:42:43.544 --> 03:42:47.786
 about ways to use it to augment
 your experience.  To create an 

03:42:48.229 --> 03:42:50.889
experience that is great.  For 
example, as we talk about 

03:42:51.114 --> 03:42:56.371
trials, maybe VR video is a way 
to offer that trial.  And 

03:42:56.729 --> 03:43:00.839
finally, I want to share another
 data point with you about 

03:43:01.405 --> 03:43:04.782
quality.  This chart shows a 
correlation between time in an 

03:43:04.783 --> 03:43:09.902
app and the app's rating.  Of 
course, it is a positive 

03:43:10.281 --> 03:43:14.027
correlation.  The significance 
is actually quite high.  But 

03:43:14.028 --> 03:43:18.128
what's important here is that we
 purposely chose time in app, 

03:43:18.129 --> 03:43:22.410
not installs, which is how you 
traditionally look at app 

03:43:22.791 --> 03:43:26.532
ratings.  You say if I have a 
high rating, I get more 

03:43:26.763 --> 03:43:30.473
installs.  Here, we wanted to 
show engagement, and use and 

03:43:30.474 --> 03:43:34.566
impact of having a great quality
 app.  Keep in mind, Daydream 

03:43:34.567 --> 03:43:39.588
has a fairly stringent quality 
review process.  So the apps 

03:43:39.589 --> 03:43:43.928
aren't like crashing or have low
 frames per second or other 

03:43:44.100 --> 03:43:49.037
things.  The difference here is 
almost from good to great, not 

03:43:49.038 --> 03:43:58.163
so much very por por -- poor.  
you build content for VR, think 

03:43:58.164 --> 03:44:02.285
about quality, but not only in 
terms of technical quality.  

03:44:02.286 --> 03:44:07.041
Also in the depth of the 
experience.  Just how awesome it

03:44:07.042 --> 03:44:13.563
 is.  So to summarize, now is 
the time for you as a developer 

03:44:13.564 --> 03:44:18.757
to jump in and potentially 
create VR's Angry Birds.  It 

03:44:18.758 --> 03:44:22.689
will take time and those 
developers creating today are 

03:44:22.690 --> 03:44:28.700
iterating an and approaching 
that milestone.   fundamental 

03:44:28.701 --> 03:44:32.603
parts of VR content creation.  
And they will help unlock the 

03:44:32.604 --> 03:44:36.766
full potential of monetization, 
you need to think about those 

03:44:36.767 --> 03:44:40.278
from day one.  In terms of 
content duration and length, 

03:44:40.279 --> 03:44:44.317
think about a sit-down 
experience.   how you can use 

03:44:44.318 --> 03:44:47.242
video to augment your 
experience, and finally, quality

03:44:47.925 --> 03:44:53.767
 in VR goes beyond the technical
 aspects, and into depth of the 

03:44:53.919 --> 03:44:58.657
content, and how immersive the 
experience is.  all.  I will 

03:44:58.658 --> 03:45:02.793
turn it over to Darren now who 
will show you how we're taking 

03:45:02.794 --> 03:45:06.920
these insights and more and 
improving the datum experience 

03:45:06.921 --> 03:45:16.826
for you and our users.  Thanks, 
Brahim. 

03:45:18.241 --> 03:45:23.128
 I am Darren Delaye and I lead 
the experience team for the 

03:45:23.129 --> 03:45:28.758
Daydream plat  form.  platform. 
 I will tell you about what we 

03:45:28.759 --> 03:45:33.768
have seen, in the experience and
 improvements we're making for 

03:45:33.769 --> 03:45:36.056
Daydream platform 2.0

03:45:41.384 --> 03:45:45.080
 Euphrates, releasing later this
 year.  We have world sense 

03:45:45.081 --> 03:45:49.345
contracting a new factor for VR.
  I will break this down into 

03:45:49.566 --> 03:45:52.918
pieces.  First, let's talk about
 what it means to have a stand 

03:45:52.919 --> 03:46:00.151
alone headset. stand alone 
headset purpose built for VR 

03:46:00.152 --> 03:46:02.939
brings a new level of 
convenience to how you access 

03:46:03.116 --> 03:46:06.719
VR.  When it is on your counter 
or coffee table and you can pick

03:46:06.893 --> 03:46:11.184
 it up and in just a few seconds
 be in VR, I think you will find

03:46:11.340 --> 03:46:15.787
 that you and the other members 
of your household will end up 

03:46:15.788 --> 03:46:21.056
going into VR a lot more often. 
  the friction to go into VR 

03:46:21.057 --> 03:46:23.057
makes a big 

03:46:25.573 --> 03:46:29.234
difference.  From a developer 
perspective, you use the same 

03:46:29.235 --> 03:46:38.616
exact developer tools and SDKs 
as in smartphone VR.  You will 

03:46:38.617 --> 03:46:43.360
use the same as smartphone VR 
and headsets.  This is 

03:46:43.361 --> 03:46:47.818
compatible with the headsets.  
interacting, you will use the 

03:46:47.819 --> 03:46:49.819
Daydream motion controller to

03:46:53.296 --> 03:46:56.988
 point, swing, play.  Now, since
 there isn't a phone mode, set 

03:46:56.989 --> 03:47:01.292
up and settings are all done 
from inside the headset.  These 

03:47:01.293 --> 03:47:05.722
will be some of the very first 
VR systems where there isn't a 

03:47:05.723 --> 03:47:12.409
phone or a PC as the primary 
setup device.  What I want to 

03:47:12.709 --> 03:47:15.844
mention here is the same goes 
for app developers.  There are 

03:47:15.845 --> 03:47:20.645
great examples of what we call 
hybrid 2D and 3D apps for 

03:47:21.177 --> 03:47:26.202
Daydream.  For example, the app 
named "within" has a great phone

03:47:26.714 --> 03:47:30.604
 mode to look at a preview of 
the videos released.  If you 

03:47:30.605 --> 03:47:38.025
want to check one out, click on 
it, and hop into VR.  Since the 

03:47:38.026 --> 03:47:42.653
stand alone headset users only 
have VR, you need important 

03:47:42.654 --> 03:47:46.002
features like account sign in or
 settings are accessible from 

03:47:46.003 --> 03:47:53.440
the game engine VR All right.  
Let's talk about world sense 

03:47:53.441 --> 03:47:58.819
positional tracking.  We have 
full six degrees of senses 

03:47:59.083 --> 03:48:03.179
tracking, fixed off tracking.  
Works with no external wires, 

03:48:03.180 --> 03:48:07.040
sensors or setup.  It just 
works.  It is based on 

03:48:07.041 --> 03:48:09.735
technology from the Tango team 
that tracks objects in real-time

03:48:09.928 --> 03:48:14.364
 as they move about in 3D space.
  In stead of being able to know

03:48:14.365 --> 03:48:18.162
 the orientation of the headset,
 where you are looking.  Now we 

03:48:18.163 --> 03:48:26.053
can track the movement of your 
head as well in any direction. 

03:48:26.054 --> 03:48:29.620
the world sense headsets are 
optimized for seated and 

03:48:29.621 --> 03:48:33.269
standing virtual reality.  It 
allows you to naturally move, 

03:48:33.599 --> 03:48:38.955
lean, shift your weight and body
 position however you want.  

03:48:38.956 --> 03:48:45.672
Positional tracking creates a 
much more immersive VR 

03:48:45.906 --> 03:48:48.682
experience.  Everything feels 
more real.  In turn, that makes 

03:48:48.683 --> 03:48:51.622
the experience more comfortable.
  The realism comes in large 

03:48:51.952 --> 03:48:56.536
part, from your natural 
perception of all the tiny 

03:48:56.537 --> 03:49:00.035
movements your head is making 
all the time, that create 

03:49:00.036 --> 03:49:02.788
parallel acts between foreground
 and background elements.  The 

03:49:02.789 --> 03:49:06.217
same thing happens in the real 
world when you perceive the 

03:49:06.218 --> 03:49:08.218
world all day every 

03:49:12.268 --> 03:49:17.809
day.  Here's a quick example of 
the dodgeball demo.  I can duck 

03:49:17.810 --> 03:49:22.100
and dodge.  I lean out of the 
way every time I watch this 

03:49:24.040 --> 03:49:32.963
video.  Ha-ha, sorry.  you want 
to create a world that has 

03:49:32.964 --> 03:49:37.669
ducking and dodging you can use 
the world sense headsets.  want 

03:49:37.670 --> 03:49:40.487
people to be safe in their 
space.  Most people don't have a

03:49:40.627 --> 03:49:46.182
 lot of space.  If you clear an 
area in the room, we want people

03:49:46.299 --> 03:49:50.615
 to avoid bumping into furniture
 and walls.  We have a system 

03:49:50.616 --> 03:49:54.398
that encourages people to say in
 roughly one spot and not walk 

03:49:54.399 --> 03:49:58.383
around or wander too far from 
where they set as the center of 

03:49:58.384 --> 03:50:01.450
their experience.  This is 
mobile VR.  You can start your 

03:50:01.451 --> 03:50:06.478
experience anywhere in the room.
  Really, anywhere.  And we have

03:50:06.479 --> 03:50:10.389
 a sensor that actually detects 
when you put the headset on, 

03:50:10.390 --> 03:50:17.652
where you are, which lets us set
 that as the default VR starting

03:50:18.113 --> 03:50:23.817
 position with the VR world 
centered around you.   I will 

03:50:23.818 --> 03:50:26.184
give you a couple of quick 
things to think about if you are

03:50:26.185 --> 03:50:31.010
 creating apps and games for the
 Daydream world sense headsets. 

03:50:31.958 --> 03:50:35.554
 Here's one thing that works 
really well.  The scenes with 

03:50:35.555 --> 03:50:39.379
relatively small items that are 
pretty close-up.  When you move 

03:50:39.380 --> 03:50:43.831
back and forth, from side to 
side.  you don't want anything 

03:50:43.832 --> 03:50:48.091
closer than about half a meter 
from your face for too long.  If

03:50:48.293 --> 03:50:51.860
 you think about something like 
a board game on the table or a 

03:50:51.861 --> 03:50:55.183
game where you feel really big 
because all the characters are 

03:50:55.184 --> 03:50:58.993
really small.  Those will feel 
good when you shift your weight 

03:50:58.994 --> 03:51:03.562
and get a large amount of 
parallax from small movements.  

03:51:03.563 --> 03:51:08.566
You need about one character to 
see the character behind.  From 

03:51:08.567 --> 03:51:13.347
this game, the user is peeking 
from side to side to plan out 

03:51:13.348 --> 03:51:19.899
how to solve the puzzle.  But 
here's an example where you may 

03:51:19.900 --> 03:51:24.658
have to design around the 
parallax.  In this pointer-based

03:51:25.684 --> 03:51:29.100
 interface, something we use 
frequently in Daydream.  When a 

03:51:29.101 --> 03:51:32.949
user hovers the cursor over the 
item, we bring it towards them a

03:51:33.204 --> 03:51:37.539
 bit.  this, you highlight the 
item in the upper left.  what it

03:51:37.734 --> 03:51:41.899
 might look like if this UI is 
close-up to the user and moved 

03:51:41.900 --> 03:51:46.649
or leaned over to the right.  It
 is not pointing at them any 

03:51:46.840 --> 03:51:56.583
more.   at aicide angle.  -- a 
side angle.  You might want to 

03:51:56.584 --> 03:52:01.405
turn it.  One thing to mention, 
is you can make everything look 

03:52:01.406 --> 03:52:05.133
roughly the same and move the UI
 farther back from the user.  

03:52:05.134 --> 03:52:09.287
scale up the cards and text to 
compensate to make it still 

03:52:09.492 --> 03:52:13.096
legible.  If you move the UI 
farther away, when the user 

03:52:13.097 --> 03:52:15.821
makes the same amount of 
movement to the right, they will

03:52:15.971 --> 03:52:20.463
 see a smaller amount of 
parallax and it will look 

03:52:20.464 --> 03:52:25.601
similar to how it does from 
straight on.  So if you want to 

03:52:25.602 --> 03:52:30.094
learn more about how my team 
specifies designs like this, how

03:52:30.095 --> 03:52:35.273
 we create legible and useable 
UIs we have a great talk 

03:52:35.274 --> 03:52:42.958
tomorrow about screen developing
 VR that you should  If you want

03:52:43.096 --> 03:52:47.206
 your users to move over greater
 distances in VR, our favorite 

03:52:47.207 --> 03:52:51.328
method is to have people 
teleport from spot to spot.  

03:52:51.329 --> 03:52:54.781
This is a pattern a lot of apps 
have adopted already.  We found 

03:52:54.782 --> 03:52:59.905
this most effective in all types
 of VR, from smartphone to 

03:52:59.906 --> 03:53:03.095
positionally tracked systems.  
We notice once you give people 

03:53:03.096 --> 03:53:06.999
the ability to teleport, they 
stop their urge to walk around 

03:53:07.000 --> 03:53:11.590
and just teleport all around.  
They start intuitively using it 

03:53:11.591 --> 03:53:17.426
and end up staying safer and not
 need as big of a physical 

03:53:17.563 --> 03:53:20.982
space.  We're big fans of 
teleporting around in VR.  

03:53:20.983 --> 03:53:24.481
releasing a new set of sample 
code as something we called 

03:53:24.482 --> 03:53:28.314
Daydream elements which has the 
implementation of teleporting 

03:53:28.315 --> 03:53:31.999
you can use to get you started. 
 This recording is from the 

03:53:32.000 --> 03:53:38.382
Daydream element sample app.  
Okay.  Now we're going to switch

03:53:38.507 --> 03:53:40.507
 over and talk about features in
 the Daydream

03:53:44.601 --> 03:53:50.219
 2.0 Euphrates release coming 
out later this year.  This is 

03:53:50.220 --> 03:53:54.375
coming to smartphone and stand 
alone VR.  Here's a preview of 

03:53:54.376 --> 03:53:58.633
the updated Daydream home.  We 
had user tell us the Daydream 

03:53:58.808 --> 03:54:05.587
home is simple, approachable and
 we plan to keep it that way.  

03:54:05.588 --> 03:54:08.823
We'll swipe through these.  
Okay.  The changes we made are 

03:54:08.824 --> 03:54:11.673
mostly related to the discovery 
windows that you see in the 

03:54:11.944 --> 03:54:18.255
middle.  Now, there are more of 
them and they're organized into 

03:54:18.512 --> 03:54:23.297
collections.  are for new users 
with the all-time best content, 

03:54:23.507 --> 03:54:26.423
nobody should miss.  Other 
collections are for people 

03:54:26.424 --> 03:54:30.719
watching the space frequently, 
newly released content and new 

03:54:30.720 --> 03:54:33.891
releases.  And other collections
 are on a trend or theme that 

03:54:33.892 --> 03:54:38.131
people are gravitating to when 
they come to Daydream.  All of 

03:54:38.132 --> 03:54:42.046
these discovery windows feature 
all kinds of content, apps, 

03:54:42.181 --> 03:54:46.159
games, individual experiences, 
videos.  They're actually under 

03:54:46.160 --> 03:54:50.935
the hood of Android intense that
 we deep link to.  you are 

03:54:50.936 --> 03:54:54.681
creating an app with individual 
experiences, be sure to plan for

03:54:54.818 --> 03:54:57.600
 the incoming links.  Our goal 
with Daydream home is that 

03:54:57.601 --> 03:55:01.055
people will come to VR 
frequently and never run out of 

03:55:01.056 --> 03:55:03.056
things to 

03:55:05.437 --> 03:55:09.148
experience.   next feature is 
what we call the system 

03:55:09.499 --> 03:55:11.694
dashboard.  motivation for this 
is that sometimes you are in the

03:55:12.222 --> 03:55:15.022
 middle of a VR experience and 
you wonder if there is something

03:55:15.212 --> 03:55:18.532
 that needs your attention or 
you just need to check the time.

03:55:18.533 --> 03:55:22.672
  We want to enable things 
without a jarring interruption 

03:55:22.673 --> 03:55:29.542
to your experience.  When the 
user presses the system button, 

03:55:29.543 --> 03:55:33.628
the system dashboard will pop 
up.  they press the system 

03:55:33.629 --> 03:55:36.945
button again, it will disappear 
and return them back to what 

03:55:36.946 --> 03:55:40.721
they are doing.  Users can check
 on status like time, battery 

03:55:40.935 --> 03:55:45.684
life, activate system features 
like do not disturb mode or 

03:55:45.891 --> 03:55:48.575
casting, which I will talk about
 more in a moment or quickly 

03:55:48.576 --> 03:55:52.946
launch the next app they want to
 open.  They can check 

03:55:52.947 --> 03:55:56.100
notifications which can give 
them peace of mind about whether

03:55:56.352 --> 03:56:03.071
 they have more time to stay in 
VR.  Okay.  In Daydream 1.0, 

03:56:03.357 --> 03:56:06.565
there were a couple of scenarios
 when you may have had to take 

03:56:06.566 --> 03:56:10.623
your phone out of the headset 
and complete a task in phone 

03:56:10.624 --> 03:56:15.714
mode before you could continue. 
 That would be like if you two 

03:56:15.715 --> 03:56:21.136
in this example needed to have 
access to the microphone and 

03:56:21.137 --> 03:56:26.180
needed to ask permission, so you
 could do a voice search or 

03:56:26.181 --> 03:56:32.056
update the credit card 
expiration date to make a 

03:56:32.057 --> 03:56:35.684
purchase of the game.  We're 
incorporating these into VR to 

03:56:35.685 --> 03:56:41.444
do the required tasks and get 
back to what we had to do.  We 

03:56:41.445 --> 03:56:49.054
had to do it for the stand alone
 headsets and a nice improvement

03:56:49.055 --> 03:56:54.321
 for mobile VR as well.  
Stepping back, one of the most 

03:56:54.322 --> 03:56:58.515
important things is making sure 
VR fits into your life, not just

03:56:58.640 --> 03:57:02.904
 something you do by yourself.  
My favorite feature we're giving

03:57:03.250 --> 03:57:06.850
 today is casting.  I'm sure 
many of you have given demos to 

03:57:06.851 --> 03:57:11.651
your friends and great to see 
reacts to new VR experiences.  

03:57:11.652 --> 03:57:14.704
great if they get stuck or ask 
you to click on but you can't 

03:57:14.705 --> 03:57:18.025
see what's happening or 
sometimes there is one person in

03:57:18.026 --> 03:57:22.139
 VR and other people just 
waiting their turn.  So with 

03:57:22.299 --> 03:57:25.372
casting, we can bridge the gap. 
 You can share the experience 

03:57:25.373 --> 03:57:30.370
with the whole group.  Here's 
our animation of how it works.  

03:57:30.371 --> 03:57:34.694
the system dashboard, choose the
 cast receiver, it starts 

03:57:34.695 --> 03:57:39.459
playing on your TV right away.  
And they work --  work across 

03:57:39.658 --> 03:57:47.410
apps.   a session and pass the 
headset to multiple people, 

03:57:47.411 --> 03:57:51.662
checkout multiple apps with the 
cast running the whole time.  We

03:57:52.233 --> 03:57:55.950
 think this will make mobile VR 
that much more fun in the living

03:57:55.951 --> 03:58:00.715
  Okay.  For developers, if you 
want to get a little fancy, 

03:58:00.716 --> 03:58:03.857
there are interesting game plan 
mechanics you can consider 

03:58:03.858 --> 03:58:08.638
implementing using casting.  In 
this example, prototypers from 

03:58:08.639 --> 03:58:13.556
our Daydream labs team have 
created essentially acting out a

03:58:14.965 --> 03:58:18.355
 puppet show where the person in
 the headset is giving a tour of

03:58:18.356 --> 03:58:23.167
 the spaceship.  The people 
watching on the TV have a fixed 

03:58:23.168 --> 03:58:28.374
camera position.  You have to 
have enough performance overhead

03:58:28.671 --> 03:58:32.762
 available for the app to render
 the extra camera.  It is 

03:58:32.985 --> 03:58:35.529
challenging.  There are 
interesting things.  You can 

03:58:35.530 --> 03:58:39.280
play a guessing game, a party 
game, there is something the 

03:58:39.281 --> 03:58:42.615
person in the headset is 
supposed to know, but not the 

03:58:42.835 --> 03:58:45.788
room.  Or opposite, the people 
in the room should see it, but 

03:58:45.789 --> 03:58:49.568
the people in the headset 
shouldn't. Okay.  For times 

03:58:49.569 --> 03:58:53.608
where you are not in the same 
room with your friends, we are 

03:58:53.609 --> 03:58:59.954
announcing support for VR 
captures, screen shots and video

03:59:00.804 --> 03:59:04.348
 recordings, that will sync to 
your device and you can share 

03:59:04.349 --> 03:59:08.375
however you want.   our 
smartphone cameras every day, 

03:59:08.376 --> 03:59:12.851
this is the way to record the 
best things you encounter in VR 

03:59:12.852 --> 03:59:18.674
as  So find at more at 
developers.Google.com/VR which 

03:59:18.675 --> 03:59:23.098
we added a favorite new tool 
which is instant preview, which 

03:59:23.099 --> 03:59:27.149
mates iterating -- makes 
iterating in

03:59:31.912 --> 03:59:37.472
 Unity unreal.  are the upcoming
 Daydream talks I encourage you 

03:59:37.473 --> 03:59:42.917
to attend.  Three more today and
 one more from our design team. 

03:59:43.192 --> 03:59:50.026
 So thank you very much.   Thank
 you for joining this session.  

03:59:50.027 --> 03:59:53.827
Brand ambassadors will assist 
with directing you through the 

03:59:53.828 --> 03:59:55.828
designated

03:59:58.632 --> 04:00:00.632
 of session)

05:26:04.806 --> 05:26:08.590
  Welcome.  Please fill in the 
seats near the front of the 

05:26:13.186 --> 05:26:17.950
 enterprise IoT using Android 
Things and Google Cloud 

05:26:17.951 --> 05:26:19.951
Platform.  

05:29:19.919 --> 05:29:23.848
 Hello, everyone.  Good 
afternoon.  Hope you are all 

05:29:23.849 --> 05:29:32.177
enjoying the second day of I/O. 
 I'm Hanwook Kim. 

05:29:35.303 --> 05:29:41.970
 I'm I am here on the Google 
Cloud Platform and we have 

05:29:41.971 --> 05:29:49.596
Hanwook Kim here also.  One of 
the key products that Google 

05:29:50.002 --> 05:29:51.828
offers, particularly with 
enterprise, we will talk about 

05:29:51.829 --> 05:29:57.421
the key challenges in building 
our I/O solution and how Google 

05:29:57.422 --> 05:30:00.590
things about addressing those 
and finally, we'll have demos 

05:30:00.591 --> 05:30:05.882
for you.  get started.  Now, I 
think parking is a problem that 

05:30:05.883 --> 05:30:09.859
is near and dear to everyone's 
heart.  All of us.  estimated 

05:30:09.860 --> 05:30:11.860
that there are around

05:30:14.595 --> 05:30:16.908
 800 million parking Spaces in 
the United States.  San 

05:30:16.909 --> 05:30:21.180
Francisco city alone has half a 
million parking Spaces, but it 

05:30:21.181 --> 05:30:23.423
is still really hard to find 
parking. 

05:30:27.367 --> 05:30:31.919
 SF city has taken an initiative
 to put a sensor in a parking 

05:30:31.920 --> 05:30:37.906
spot to check if it is open or 
not in a spot.  You can check on

05:30:38.030 --> 05:30:41.873
 the Cloud to see which parking 
lots are open.  You don't have 

05:30:41.874 --> 05:30:46.443
to look around for parking, you 
can find it automatically on the

05:30:47.068 --> 05:30:52.086
 mobile phone and park  Imagine 
if all the parking Spaces in the

05:30:52.584 --> 05:30:58.784
 U.S. are connected by a sensor.
  Each sensor is sending data on

05:30:59.106 --> 05:31:03.050
 a periodic basis, but 
cumulative, that is a massive 

05:31:03.264 --> 05:31:07.032
influx of data.  How do you 
build applications which really 

05:31:07.033 --> 05:31:10.580
scales with all that data?  We 
also have interesting partners 

05:31:10.581 --> 05:31:16.246
who build interesting 
application for utilities.  We 

05:31:16.247 --> 05:31:21.053
have a number of smart meters in
 the U.S. Europe.  And the 

05:31:21.054 --> 05:31:28.081
number of customers have 
connected the smart data from 

05:31:28.082 --> 05:31:32.320
consumer homes and with Google 
Cloud Platform and other 

05:31:32.765 --> 05:31:35.696
applications, they can provide a
 real-time view of the energy 

05:31:35.697 --> 05:31:39.480
usage in different regions for 
consumers.  I imagine, if all 

05:31:39.865 --> 05:31:44.907
the houses -- smart meters in 
all the houses are connected, 

05:31:44.908 --> 05:31:51.441
imagine the influx of data.  of 
smart meters, millions of smart 

05:31:51.584 --> 05:31:55.548
meters, sending data every hour 
or 15 minutes, that is a massive

05:31:55.726 --> 05:31:59.311
 amount of data.  What about 
security and how do you get 

05:31:59.312 --> 05:32:04.959
real-time insights.  That is 
real questions that every 

05:32:04.960 --> 05:32:09.702
building has in operations.  
There are views, we connected 

05:32:09.703 --> 05:32:17.160
from edge vac, chillers, data 
centers and used that to improve

05:32:17.616 --> 05:32:25.053
 our power utilization by over 
15%.  if every building, 

05:32:25.054 --> 05:32:27.626
commercial and residential 
building use the same concept to

05:32:28.353 --> 05:32:35.042
 actively optimize energy 
consumption.  Key use cases a 

05:32:35.043 --> 05:32:38.273
laid out in front of you.  I 
think you know phones are bigger

05:32:38.274 --> 05:32:43.934
 in terms of growth, bigger than
 PC, I significant growth is 

05:32:43.935 --> 05:32:47.851
expected for IoT in the coming 
years.  Depending on the analyst

05:32:48.270 --> 05:32:51.991
 report you read, it is 
estimated 20 to 50 billion 

05:32:51.992 --> 05:32:54.774
devices will be connected by 
2020.  While each of the devices

05:32:54.930 --> 05:32:59.588
 might be sending a small amount
 of bytes -- small amount of 

05:32:59.589 --> 05:33:03.825
data every couple of seconds or 
minutes, cumulative, it is a 

05:33:03.826 --> 05:33:07.777
massive influx of data.  That 
creates 3 challenges as we think

05:33:08.033 --> 05:33:13.271
 of and what we hear from 
partners and developers.  One is

05:33:13.272 --> 05:33:15.913
 security.  How do you ensure 
that all the devices are secure?

05:33:15.914 --> 05:33:19.488
  How do you ensure that all the
 devices have the latest 

05:33:19.489 --> 05:33:22.823
operating system and the right 
security patches?  do you ensure

05:33:23.092 --> 05:33:28.919
 that the data which you are 
importing into Cloud is 

05:33:28.920 --> 05:33:34.208
protected and secured as well?  
Second is scale, when you have 

05:33:34.209 --> 05:33:39.842
billions  -- millions or 
billions of devices connected 

05:33:39.843 --> 05:33:44.100
how do you handle all that data 
in a cost effective way and make

05:33:44.224 --> 05:33:47.593
 sure you can manage the massive
 amount of devices which are 

05:33:48.319 --> 05:33:51.901
globally dispersed in a way that
 you know all the devices have 

05:33:51.902 --> 05:33:55.286
the right security patches as 
well.  Finally, what do you do 

05:33:55.287 --> 05:33:57.287
with all this 

05:33:59.462 --> 05:34:01.697
data?  Each of the devices may 
have the -- sending massive 

05:34:01.698 --> 05:34:04.278
amount of data.  How do you 
cost-effectively store the data,

05:34:04.631 --> 05:34:08.909
 analyze the data to get action 
inside.  And do it not just on 

05:34:08.910 --> 05:34:14.031
the Cloud but also on the  I 
will start with how we think 

05:34:14.032 --> 05:34:17.851
about these challenges on the 
Cloud side.  As you know, Google

05:34:17.972 --> 05:34:20.777
 has seven products which are 
serving more

05:34:24.478 --> 05:34:26.844
 than a billion users currently.
  And all these users are highly

05:34:27.396 --> 05:34:31.550
 engaged.   a massive amount of 
data back and forth between 

05:34:31.551 --> 05:34:34.785
these products and as well as 
the Cloud infrastructure.  So as

05:34:35.184 --> 05:34:41.697
 part of our mission at Google 
to organize information and make

05:34:41.698 --> 05:34:47.491
 it accessible.  We're working 
with data ingestion, storage 

05:34:47.492 --> 05:34:51.050
getting inside as massive scale 
over a decade.  fact, we believe

05:34:51.294 --> 05:34:56.073
 in the process of serving this 
billion users, billion-plus 

05:34:56.074 --> 05:35:01.307
users for the consumer products,
 we have built the world's best 

05:35:01.308 --> 05:35:04.797
computer infrastructure, across 
hardware, software, networking 

05:35:04.798 --> 05:35:07.481
operations as well.  We build 
our infrastructure for 

05:35:07.735 --> 05:35:12.050
developers in a way where 
developers think of these as not

05:35:12.148 --> 05:35:15.963
 as data centers but as one 
computers.  All of the data 

05:35:15.964 --> 05:35:20.326
centers are connected via our 
global network.  In fact, only 

05:35:20.327 --> 05:35:26.524
our non-ISP company who has 
under-ocean fiber connection 

05:35:26.525 --> 05:35:32.065
between data centers.  As a 
developer, as you access the 

05:35:32.066 --> 05:35:36.581
data -- it is not a collection, 
it is just one computer, you 

05:35:36.582 --> 05:35:40.019
just write an application and 
Cloud takes care of running them

05:35:40.416 --> 05:35:46.505
 at scale. In addition to our 
data center infrastructure, we 

05:35:46.506 --> 05:35:50.941
have also been working hard in 
building up our data management 

05:35:50.942 --> 05:35:55.721
and analytics stack as well.  
You know, we build an open 

05:35:55.722 --> 05:35:58.312
source map reduce, developel,

05:36:05.688 --> 05:36:08.781
  -- DREMel, and big table.  We 
have started to externalize this

05:36:08.968 --> 05:36:10.968
 as serves on the

05:36:13.317 --> 05:36:17.940
 Google Cloud Platform for 
customers, developers and 

05:36:18.394 --> 05:36:24.263
partners.  For example, think 
about BigQuery, that is the 

05:36:24.264 --> 05:36:30.120
analyzing Cloud service.  If you
 run on BigQuery Cloud platform,

05:36:30.314 --> 05:36:35.561
 your query is running on DREMel
 that we use for all 

05:36:35.562 --> 05:36:42.050
applications.  When you put data
 on that table, you are using 

05:36:42.051 --> 05:36:47.342
that which is powering surge, 
ads, Gmail and

05:36:53.206 --> 05:37:00.697
 Google Maps.  There are many, 
and some you are aware  When it 

05:37:00.698 --> 05:37:06.306
comes to IoT, we believe we have
 the industry leading dat and 

05:37:06.307 --> 05:37:12.010
analytics on Cloud developing 
platform.   are using to build 

05:37:12.107 --> 05:37:15.775
applications.  And one thing 
they've asked us many times, 

05:37:15.776 --> 05:37:22.824
this is great that you have all 
the services like Pub/Sub, 

05:37:23.147 --> 05:37:27.256
BigQuery, data table, but how do
 I connect and manage my devices

05:37:27.614 --> 05:37:31.916
 so I can start leveraging the 
Cloud services that you have.  

05:37:31.917 --> 05:37:38.751
this week, we announced Cloud 
IoT Core, with a goal to make it

05:37:38.921 --> 05:37:45.233
 easy for developers to build 
enterprise IoT applications.  

05:37:45.234 --> 05:37:49.718
What is Cloud IoT Core?  is a 
fully managed service.  100% 

05:37:50.161 --> 05:37:54.030
managed, running on Google Cloud
 Platform.  Let's talk about 

05:37:54.869 --> 05:37:58.989
security.  As part of Cloud IoT 
Core we're built from ground up 

05:37:58.990 --> 05:38:00.990
N

05:38:04.396 --> 05:38:08.106
TTPP so you can bring an 
existing or new device to 

05:38:08.107 --> 05:38:14.553
establish a secure connection 
with Cloud IoT Core over TLS and

05:38:14.936 --> 05:38:22.520
 send and receive telemetry over
 NTTP protocol.  of our 

05:38:22.521 --> 05:38:26.679
customers have devices that 
support standard NTTP protocol. 

05:38:26.856 --> 05:38:31.605
 We have built a bridge so you 
can connect your existing device

05:38:31.735 --> 05:38:35.139
 to Cloud and start leveraging

05:38:39.352 --> 05:38:44.818
 data analytics services.  As 
part of Cloud IoT Core, if you 

05:38:44.819 --> 05:38:49.469
are connecting one device or 
millions of devices, it scales 

05:38:49.740 --> 05:38:52.920
internally. don't have to worry 
about provisions in node.  You 

05:38:52.921 --> 05:38:57.200
don't have to worry about 
redundancy or shorting.  We 

05:38:57.201 --> 05:39:01.772
scale internally.  That makes 
it, for a developer, to build an

05:39:02.362 --> 05:39:06.188
 application about worries about
 how do you scale from 10 

05:39:06.189 --> 05:39:10.721
devices to millions of devices 
as you graduate from prototype 

05:39:10.722 --> 05:39:18.448
to full-scale deployment.  And 
also the Cloud -- the foundation

05:39:18.667 --> 05:39:24.965
 of data routing.  to Cloud 
Pub/Sub, you can access the data

05:39:25.314 --> 05:39:30.140
 from the diverse connection of 
devices, from a single center 

05:39:30.141 --> 05:39:34.619
point so you can view -- you can
 have a global view of all your 

05:39:34.620 --> 05:39:38.890
data points across the different
 devices.  We have also added 

05:39:38.891 --> 05:39:46.082
some key functionality for 
device management.  With Cloud 

05:39:46.083 --> 05:39:48.686
IoT Core you can individually 
configure and manage devices.  

05:39:48.687 --> 05:39:53.548
will go more into the details.  
You can also now update your -- 

05:39:53.549 --> 05:39:57.802
update and control the remote 
devices using Cloud IoT Core.  

05:39:57.803 --> 05:40:02.493
We have built a set of API which
 you can use on your 

05:40:02.494 --> 05:40:06.126
applications and we also have a 
console so you can try to use 

05:40:06.127 --> 05:40:09.363
that to run and manage your 
device as well.  In addition 

05:40:09.364 --> 05:40:15.931
with Cloud IoT Core, you can 
provide granule level access to 

05:40:15.932 --> 05:40:22.999
a group of devices and using 
Cloud IM.  We're exciting with 

05:40:23.359 --> 05:40:28.478
this.  We think it will help 
developers, you guys, to start 

05:40:28.479 --> 05:40:31.857
building using your existing 
device or new devices running 

05:40:31.858 --> 05:40:40.165
things to connect to Cloud and 
start using data analytics.   we

05:40:40.354 --> 05:40:43.477
 understand developers and 
partners, as you think about 

05:40:43.478 --> 05:40:49.927
building enterprise IoT 
applications you want to build 

05:40:49.928 --> 05:40:55.073
prototypes to get your feet wet 
to see if there is a UI before 

05:40:55.074 --> 05:40:58.852
you start developing.  part of 
the Cloud IoT Core offering, we 

05:40:58.853 --> 05:41:04.309
have a UI, which will be 
available on Cloud console.  

05:41:04.310 --> 05:41:08.241
Before I get into the UI, let me
 tell you about some of the key 

05:41:08.242 --> 05:41:14.807
concepts for Cloud IoT Core.  
Especially as it pertains to 

05:41:14.808 --> 05:41:16.758
device management and 
monitoring.  We have a notion of

05:41:16.759 --> 05:41:22.120
 device registry.  So if you are
 a device manufacturer and have 

05:41:22.121 --> 05:41:25.730
10 categories of products, you 
can create 10 registry and you 

05:41:25.731 --> 05:41:30.379
can register all the devices for
 each of the categories under 

05:41:30.380 --> 05:41:36.921
the registry.  You can also 
assign IM policies and rules to 

05:41:36.922 --> 05:41:41.400
control access to users on those
 specific registries.  So if I 

05:41:41.401 --> 05:41:44.682
am a device manufacturer and I 
want to make sure my customer --

05:41:45.039 --> 05:41:49.088
 my user and customer A can only
 have view access, you can do 

05:41:49.089 --> 05:41:54.094
that with our registry.  And you
 can register one device or 

05:41:54.095 --> 05:41:58.854
millions of devices in that 
registry.  So as you can see on 

05:41:58.855 --> 05:42:04.214
the screen, when you go to Cloud
 console, there is a section on 

05:42:04.215 --> 05:42:08.159
the menu, there is a section 
called Cloud IoT Core.  You 

05:42:08.160 --> 05:42:11.759
click on that, you will see a 
list of different device 

05:42:11.760 --> 05:42:15.394
registres which you already 
created.  You can create a new 

05:42:15.579 --> 05:42:23.124
registry.  Give it a name, 
assign a region and a Pub/Sub 

05:42:23.125 --> 05:42:26.558
topic to give the data to.  Once
 you select a registry, there is

05:42:26.716 --> 05:42:30.456
 a list of devices which is 
preregistered.  And you can see 

05:42:30.457 --> 05:42:34.365
whether it is enabled or 
disabled.  With Cloud IoT Core 

05:42:34.366 --> 05:42:38.207
we allow you to disable a 
device, if you think it has 

05:42:38.208 --> 05:42:41.546
become a rogue device or for 
testing purposes you want to 

05:42:41.547 --> 05:42:45.382
turn off the devices and have 
one device on to start testing 

05:42:45.383 --> 05:42:49.827
the connectivity to the device. 
 For the purpose of

05:42:57.137 --> 05:42:58.488
 sure as a developer, you can 
individually authenticate a 

05:42:58.489 --> 05:43:04.984
device or group of devices.  has
 support for public key based 

05:43:05.343 --> 05:43:09.285
authentication.  Public keys for
 authentication.  The work it 

05:43:09.286 --> 05:43:16.607
works you can register your 
device with the Cloud IoT Core. 

05:43:17.367 --> 05:43:26.881
 It will create an adjacent web 
token.  That is the I.D. given 

05:43:26.882 --> 05:43:32.067
to the device.  will make sure 
that the device is a real, 

05:43:32.068 --> 05:43:34.068
registered 

05:43:35.265 --> 05:43:39.637
device.  As part of our launch, 
we have also been working very 

05:43:39.638 --> 05:43:43.344
hard with a number of device p
artners.  So we are very excited

05:43:43.564 --> 05:43:47.296
 that with the launch of Cloud 
IoT Core we have announced 

05:43:47.297 --> 05:43:51.157
partnership with a couple of key
 leading device manufacturers, 

05:43:51.158 --> 05:43:57.143
such as Intel, microchip, NXP, 
Sierra wireless, marvel and 

05:43:57.514 --> 05:44:00.911
others.  are working closely 
with partners to make it easy 

05:44:00.912 --> 05:44:06.380
for developers to connect to 
Cloud IoT Core right out of the 

05:44:06.630 --> 05:44:10.935
gate.  For example, you can -- 
is a really tiny 

05:44:11.065 --> 05:44:13.065
microcontroller,

05:44:14.283 --> 05:44:19.749
 ESP8226.  to our partner, you 
can connect a tiny MCU like this

05:44:20.953 --> 05:44:26.335
 to Cloud IoT Core and start 
using services on the Cloud.  

05:44:26.336 --> 05:44:29.270
excited about what we're 
building and how we're working 

05:44:29.271 --> 05:44:35.066
with the partner ecosystem to 
help developers building 

05:44:35.407 --> 05:44:37.932
application.  In addition to 
hardware partners we're working 

05:44:37.933 --> 05:44:42.291
with application partners as 
well.  We have announced 

05:44:42.292 --> 05:44:46.770
agreements with NUBO, helium, a 
bunch of others which are coming

05:44:47.079 --> 05:44:50.677
 along. very excited with the 
announcement of Cloud IoT Core 

05:44:50.678 --> 05:44:55.507
and how we're building partner 
ecosystem so developers can 

05:44:55.508 --> 05:45:00.131
start building application using
 Google Cloud Platform.  I want 

05:45:00.132 --> 05:45:03.454
to spend a couple of minutes on 
some of the other services which

05:45:03.830 --> 05:45:08.460
 really adds value.  As we think
 about the overall IoT platform,

05:45:08.587 --> 05:45:12.661
 some of the services which are 
already existing today in Cloud 

05:45:12.662 --> 05:45:15.026
really helps you to build 
company application. 

05:45:21.858 --> 05:45:28.727
 Google Cloud Pub/Sub.  For the 
Cloud IoT Core it sends the 

05:45:28.728 --> 05:45:34.041
devices registry is published to
 the Cloud Pub/Sub topic.  What 

05:45:34.042 --> 05:45:40.026
you can do is collect data to 
one topic and analyze it using 

05:45:40.027 --> 05:45:43.862
downstream services.  Pub/Sub 
has durable message persistence.

05:45:43.863 --> 05:45:48.557
  What this means is you can 
wait for seven days to send a 

05:45:48.558 --> 05:45:52.162
response back or you can even 
send it within a minute.  It 

05:45:52.163 --> 05:45:56.383
also allows you to access data 
globally as I mentioned.  What 

05:45:56.384 --> 05:46:01.211
is great with Pub/Sub is the 
Cloud IoT Core integrates with 

05:46:01.569 --> 05:46:03.731
Pub/Sub, it separates the 
application development from 

05:46:03.732 --> 05:46:08.393
your upstream device former 
changes.  You can constantly 

05:46:08.394 --> 05:46:11.847
update your application, build 
your applications without 

05:46:11.848 --> 05:46:17.172
needing to change your format.  
also allows you to build and use

05:46:17.557 --> 05:46:21.280
 powerful services for building 
applications such as Cloud 

05:46:21.411 --> 05:46:27.123
functions, data flow, or even 
you can use your existing ETL 

05:46:27.124 --> 05:46:30.564
pipeline or third-party services
 to consume the data from the 

05:46:30.565 --> 05:46:33.459
disclosed data devices and start
 building interesting 

05:46:35.891 --> 05:46:41.783
applications.   you've ingested 
the data in a secure way, using 

05:46:41.784 --> 05:46:48.426
Cloud IoT Core and once you 
routed the data using Google 

05:46:48.427 --> 05:46:54.183
Cloud Pub/Sub, it gives a view 
that you can use the Google 

05:46:54.184 --> 05:46:58.993
Cloud services for analysis, 
storage and insights.  This is 

05:46:58.994 --> 05:47:03.325
where we want to have humans and
 machines learn from the data.  

05:47:03.326 --> 05:47:09.744
You can use BigQuery, the data 
warehousing analytics platform 

05:47:09.745 --> 05:47:14.492
to analyze hundreds of billions 
of rows of data in a couple of 

05:47:14.493 --> 05:47:20.341
seconds and use that data to 
train a machine-learning model. 

05:47:20.516 --> 05:47:26.833
 You can use data lab to analyze
 the data from BigQuery, connect

05:47:27.007 --> 05:47:32.483
 it to Cloud ML, train machine 
learning models and use the 

05:47:32.484 --> 05:47:37.171
models to predict power failure,
 demand usage or maintenance and

05:47:37.436 --> 05:47:43.953
 then send it to Cloud IoT Core 
and then from there send it as 

05:47:43.954 --> 05:47:48.307
an alert or downstream, or 
upstream to devices as well.  So

05:47:48.664 --> 05:47:53.102
 this is how we think about our 
overall platform and how we 

05:47:53.103 --> 05:47:57.546
think about the Cloud portion as
 well as its connection to 

05:47:57.748 --> 05:48:02.371
devices.  Here, you will see, we
 have -- you can use an Android 

05:48:02.372 --> 05:48:05.372
Things device, which

05:48:09.913 --> 05:48:14.579
 Hanwook will go into more 
detail.  You can connect to 

05:48:14.580 --> 05:48:19.689
Cloud IoT Core to send telemetry
 data.  All of that data is 

05:48:19.690 --> 05:48:25.071
loaded on to Pub/Sub from there,
 you can route it to a Cloud 

05:48:25.072 --> 05:48:31.996
function to build a simple rule 
and act on  complex event 

05:48:31.997 --> 05:48:37.493
processing using data flow.  can
 use BigQuery or big data to 

05:48:37.494 --> 05:48:42.902
store cost-effectively, using it
 for time analysis, feed it to 

05:48:42.903 --> 05:48:48.529
Cloud machine learning, Cloud 
ML, the managed service for 

05:48:48.902 --> 05:48:52.237
TensorFlow for continuing 
machine models or use the same 

05:48:52.238 --> 05:48:57.313
Cloud ML for prediction and send
 the data back to Cloud IoT Core

05:48:57.661 --> 05:49:01.088
 for any actions you want to 
take on the devices.  Then we're

05:49:01.246 --> 05:49:04.767
 very excited with the upcoming 
launch announcement with Cloud 

05:49:04.768 --> 05:49:09.825
IoT Core, more will come.  We'll
 get more details.  I want to 

05:49:09.826 --> 05:49:17.629
hand it to Hanwook who will 
cover Android Things for 

05:49:18.445 --> 05:49:23.533
enterprise.     HANWOOK KIM: 
Hello, everyone.  I will talk 

05:49:23.534 --> 05:49:27.827
about the other side of the IoT 
solutions, devices.  Devices in 

05:49:27.828 --> 05:49:34.724
the field, also known as edge 
Android devices.  you know what 

05:49:34.725 --> 05:49:38.074
you are looking for.  Maybe you 
are looking for something with 

05:49:38.075 --> 05:49:42.444
high fidelity, more actress, 
sampling rates maybe a new 

05:49:42.445 --> 05:49:46.600
sensor that came out that you 
want to apply to your enterprise

05:49:47.141 --> 05:49:50.649
 solution.  Maybe a cheaper 
option or maybe you have a 

05:49:50.650 --> 05:49:54.069
hypothesis to try and test 
before you deploy and identify 

05:49:54.070 --> 05:49:57.885
new signals to try better 
outcomes for the operations.  

05:49:57.886 --> 05:50:02.139
You need the devices to control 
the operations.  Some of the 

05:50:02.351 --> 05:50:06.202
devices are the same as the 
collecting devices, some are 

05:50:06.561 --> 05:50:10.687
not.  They could be simple 
things like relays, hundreds of 

05:50:10.688 --> 05:50:14.171
relays or maybe a single device 
as purposeful in terms of the 

05:50:14.343 --> 05:50:20.866
controller.  These devices are 
typically powered by MCU class 

05:50:21.061 --> 05:50:25.581
devices, simple things like 
measuring temperature.  To SOC 

05:50:25.856 --> 05:50:30.569
devices, which is typically more
 powerful than an MCU and much 

05:50:30.927 --> 05:50:33.334
more flexible.  Those are the 
devices in which you want to 

05:50:33.335 --> 05:50:38.447
have some device intelligence or
 complex operations and types of

05:50:39.577 --> 05:50:44.653
 devices could be cameras, 
gateways, point of sales 

05:50:45.073 --> 05:50:47.073
machines,

05:50:50.281 --> 05:50:55.391
 hubs.  We want to help our 
developers build the devices to 

05:50:55.392 --> 05:50:58.262
help control your operations 
much more easily and faster.  

05:50:58.263 --> 05:51:04.393
There is already a bunch of 
sessions on Android Things.  I 

05:51:04.394 --> 05:51:09.286
encourage you to look at 
sessions.  I will provide you 

05:51:09.287 --> 05:51:14.043
the basic understanding of 
Android Things.   is essentially

05:51:15.670 --> 05:51:20.906
essentiallyessentially Android 
that we optimized for IoT.  For 

05:51:20.907 --> 05:51:26.658
example, user application or 
system UI or notification.  We 

05:51:26.659 --> 05:51:29.474
added things needed for the IoT 
device.  Like

05:51:34.247 --> 05:51:36.857
 peripheral I/O to add what you

05:51:40.795 --> 05:51:45.449
 need to.  enterprise, I think 
the importance of Android Things

05:51:45.450 --> 05:51:49.483
 comes down to three points.
scale.  If you are a developer

05:51:52.644 --> 05:51:54.644
 for Android

05:51:55.938 --> 05:51:59.962
 enterprise, it uses the same 
development kits and Android 

05:52:00.197 --> 05:52:04.200
Studio.  If you are not 
familiar, there is a vibrant 

05:52:04.318 --> 05:52:08.713
ecosystem to start developing 
devices relatively quickly.  

05:52:13.729 --> 05:52:19.254
 OS is scaling to tablets, TVs, 
watches, cars and many are in 

05:52:19.255 --> 05:52:23.904
enterprise situations as well 
and now adding IoT to the mix.  

05:52:23.905 --> 05:52:27.635
The second is security.  A 
session earlier today in the 

05:52:27.636 --> 05:52:31.458
morning that did dive on 
security.  If you are interested

05:52:31.573 --> 05:52:35.037
 in security, I encourage you to
 watch that video.  I will give 

05:52:35.038 --> 05:52:40.379
you a high-level view of how we 
think about it with Android 

05:52:40.380 --> 05:52:46.031
Things.  Security in the OS and 
app update.  We want to make 

05:52:46.032 --> 05:52:49.082
sure the device running Android 
Things has the latest version 

05:52:49.083 --> 05:52:52.547
and you have the ability to 
update your application that is 

05:52:52.548 --> 05:52:58.110
running the specific software.  
We support signed

05:53:01.244 --> 05:53:06.277
 images, asset decisions.  We 
know end-to-end security from 

05:53:06.278 --> 05:53:10.779
device to Cloud is very  The 
last piece is I kind of 

05:53:10.780 --> 05:53:15.012
mentioned it before which is 
peripheral IO and user drivers. 

05:53:15.195 --> 05:53:19.859
 This allows you to connect 
components, sensors, varying 

05:53:19.860 --> 05:53:23.975
input devices, displays into 
Android Things and allow you to 

05:53:23.976 --> 05:53:27.602
use those and build applications
 across those things.  Android 

05:53:27.603 --> 05:53:31.318
Things is currently in 
development preview.  We're in 

05:53:31.319 --> 05:53:36.173
development preview four.  We 
want to do releases every four 

05:53:36.174 --> 05:53:38.877
to six weeks.  We encourage you 
to come and check it out.  We 

05:53:38.878 --> 05:53:43.181
will do updates in six to eight 
weeks.  Long-term support 

05:53:43.182 --> 05:53:47.231
targeted for end of this year 
and based on O.  is the software

05:53:47.808 --> 05:53:53.829
 layer of Android  The next 
layer I will talk about is the 

05:53:53.960 --> 05:54:00.504
hardware.  we know hardware, new
 hardware is hard and complex.  

05:54:00.505 --> 05:54:05.767
approach we're taking with 
siliconsilicon partners is the 

05:54:05.768 --> 05:54:07.768
system

05:54:09.930 --> 05:54:11.930
 module.  That comes with 
components, CPU, memory storage,

05:54:12.302 --> 05:54:17.262
 connectivity, essentially the 
pieces you need to run it on.  

05:54:17.263 --> 05:54:21.577
From there, you go ahead, build 
out the base board, which has 

05:54:21.578 --> 05:54:23.578
the 

05:54:27.267 --> 05:54:30.266
 -- components.  Because it is 
certified, Android Things works.

05:54:30.267 --> 05:54:32.832
  There is no additional 
certification to do.  It helps 

05:54:32.833 --> 05:54:35.999
you speed up the development 
cycle rapidly.  Obviously, we 

05:54:36.547 --> 05:54:40.449
work with a lot of silicon 
partners and they're trusted in 

05:54:40.450 --> 05:54:45.466
the enterprise space.  For 
enterprise this means fastest 

05:54:45.467 --> 05:54:53.074
speed to  have certified the 
things and proven to work on 

05:54:53.075 --> 05:54:56.273
Android Things and you can 
iterate on the designs.  Most of

05:54:56.404 --> 05:55:01.796
 the silicon partners have 
developer kits as well that are 

05:55:01.940 --> 05:55:06.096
available.  In the demo booth, 
that is one of the first booths 

05:55:06.097 --> 05:55:12.409
as you come in.  have a dev kit 
from Raspberry pie, and a bread 

05:55:12.410 --> 05:55:17.313
board and wired it up.  It is a 
device connecting, working, 

05:55:17.314 --> 05:55:26.474
sending information back to 
Cloud  -- Cloud IoT Core.  We 

05:55:26.475 --> 05:55:31.837
soldered components on this one.
  You can go from wires to 

05:55:31.838 --> 05:55:37.606
solder and in production, 
because it is the same SOM, you 

05:55:37.607 --> 05:55:42.442
can scale these throughout the 
enterprise.  We realize the 

05:55:42.443 --> 05:55:47.061
benefit of the IoT  The last 
layer I'll talk about on Android

05:55:47.062 --> 05:55:51.173
 Things is services.  We want to
 make it easy to use Google 

05:55:51.344 --> 05:55:55.827
services.   Google services can 
help you with the things we 

05:55:55.828 --> 05:56:00.265
talked about.  If you use 
TensorFlow to have Android 

05:56:01.324 --> 05:56:06.969
Things running locally on the 
device.  We use local based 

05:56:07.124 --> 05:56:12.618
services, and I left some in 
there.  We're working on 

05:56:13.012 --> 05:56:15.520
supporting Cassie's example.  
the case of the enterprise 

05:56:15.898 --> 05:56:17.898
developer, you may be developing
 for

05:56:22.030 --> 05:56:26.369
 both sides.  For enterprise the
 most obvious service that makes

05:56:27.381 --> 05:56:32.065
 sense is Cloud IoT Core. have 
dat on to Android Things to 

05:56:32.066 --> 05:56:36.220
Cloud IoT Core to provide data 
analytics machine learning, 

05:56:36.221 --> 05:56:39.938
remote manage and control the 
devices.  You might have a 

05:56:39.939 --> 05:56:43.867
sensor hub in the manufacturing 
line or commercial building HVAC

05:56:44.019 --> 05:56:47.974
 system, you want to send that 
information to the Cloud, 

05:56:47.975 --> 05:56:52.122
analyze real-time usage and to 
take the insight and control the

05:56:52.823 --> 05:56:58.133
 devices back to able to 
optimize the yield or reduce  

05:56:58.134 --> 05:57:02.387
How do you connect Android 
Things to Cloud?  I have a 

05:57:02.388 --> 05:57:06.832
sample that we created. code 
sample is an end-to-end code 

05:57:06.833 --> 05:57:11.030
sample with a couple of sensors 
connected to Android Things, 

05:57:11.031 --> 05:57:15.472
defined the payload in terms of 
what data we want to connect.  

05:57:15.473 --> 05:57:18.672
Send that information to Cloud 
IoT Core. show the full thing.  

05:57:18.673 --> 05:57:23.510
At the end of the day, it is 
down to a couple of core steps. 

05:57:24.723 --> 05:57:29.028
 a project I.D., industry and 
region I.D. you go to Android 

05:57:29.029 --> 05:57:32.563
Things and pull that off.  It 
creates a public-private key, to

05:57:33.136 --> 05:57:37.238
 pull out the public key.  The 
private key is stored in key 

05:57:37.587 --> 05:57:41.181
store.  It is secure.  The 
second step is register the 

05:57:41.182 --> 05:57:44.631
device to Cloud IoT Core.  I 
have shown you a command line 

05:57:44.944 --> 05:57:49.239
method, obviously, this doesn't 
work.  It works really well for 

05:57:49.395 --> 05:57:52.637
prototyping, but for when you 
want to go into production, 

05:57:52.638 --> 05:57:56.744
there are rest API that we can 
use.  We will showcase a demo 

05:57:56.745 --> 05:58:00.225
about registration and how 
important it is to onboard the 

05:58:00.394 --> 05:58:07.662
devices.  last step is it to 
configure the Cloud things, and 

05:58:07.663 --> 05:58:10.409
use Android Things and connect 
to the Cloud IoT Core to use the

05:58:10.835 --> 05:58:15.593
 power of Cloud.  sample GitHub 
Android Things sends a hub Cloud

05:58:17.588 --> 05:58:22.379
  Let's take a real example or 
an example.  Let's say you're 

05:58:22.380 --> 05:58:26.868
building a camera.  this camera 
is a quality control camera.  

05:58:26.869 --> 05:58:30.919
You have the specifications of 
what you want to achieve, you 

05:58:30.920 --> 05:58:34.914
evaluate the different SOMs you 
want to provide.  You build your

05:58:35.041 --> 05:58:39.206
 product around those things.  
comes with Android Things, so 

05:58:39.207 --> 05:58:44.841
you build it to do the camera 
roles, the video, dapt data 

05:58:45.174 --> 05:58:49.142
capture, streaming.  And then 
what becomes more interesting is

05:58:49.285 --> 05:58:54.823
 the on-device intelligence, the
 TensorFlow piece.  In the cases

05:58:54.997 --> 05:58:58.378
 of quality control where 
they're abstracts and maybe 

05:58:58.379 --> 05:59:03.213
pattern based where you can't 
define rules.  I can imagine a 

05:59:03.214 --> 05:59:08.060
person at the end of the line 
looking at widgets, they are 

05:59:08.061 --> 05:59:12.818
smarting in detecting what is a 
defect and not a defect.  That 

05:59:12.819 --> 05:59:17.106
is for machine learning.  Maybe 
you are trying to define a 

05:59:17.107 --> 05:59:22.287
quality of wood grain.  When you
 see a particular grain you know

05:59:22.288 --> 05:59:28.801
 what that looks like.  Maybe 
marbling on a piece of beat 

05:59:28.950 --> 05:59:34.128
beef.  That is subjective.   a 
pizza lean, hands toed.  You 

05:59:34.129 --> 05:59:38.220
expect variation on a pizza, you
 don't expect everything in the 

05:59:38.221 --> 05:59:41.994
same place, you see it and know 
what good versus bad looks like.

05:59:41.995 --> 05:59:44.936
  Those are the examples of 
machine learning.  You don't 

05:59:44.937 --> 05:59:49.056
want to stream it back to the 
Cloud.  lot of information.  

05:59:49.057 --> 05:59:53.359
TensorFlow on device with the 
models to do it locally.  only 

05:59:53.360 --> 05:59:56.205
stream the information back to 
the Cloud to enhance models in 

05:59:56.206 --> 05:59:59.868
the Cloud.  As you make 
umprovements to the Cloud, send 

05:59:59.869 --> 06:00:03.690
the models back to the device to
 update the model.  have the 

06:00:03.691 --> 06:00:07.013
constant iteration of increasing
 and making models better over 

06:00:07.235 --> 06:00:10.842
time.  Then you can use Android 
Things to make sure the iOS is 

06:00:10.843 --> 06:00:14.283
updated to the latest patch.  
Using the latest application.  

06:00:14.284 --> 06:00:18.044
You can also use Cloud to do 
remote management to identify 

06:00:18.045 --> 06:00:21.655
and alert yourself if a camera 
is down.  Maybe you are 

06:00:21.656 --> 06:00:24.657
collecting quality information 
and you want to compare across 

06:00:24.658 --> 06:00:27.972
five lines to see which I should
 do better.  The scale is if you

06:00:28.259 --> 06:00:32.139
 have one camera or hundreds or 
maybe you want to take one 

06:00:32.140 --> 06:00:35.725
camera and retrofit a line with 
a bunch of sensors.  get a sense

06:00:35.894 --> 06:00:39.495
 of what the line is doing.  You
 think of correlations of what 

06:00:39.496 --> 06:00:44.289
is the difference in the line 
and finding defects.  Maybe 

06:00:44.420 --> 06:00:47.878
analyses of forecasting issues 
before they come along.  That is

06:00:48.023 --> 06:00:52.517
 the beauty of Cloud IoT Core 
and Android Things.  As you add 

06:00:52.518 --> 06:00:57.171
more use cases you add on more 
sensors and devices you stream 

06:00:57.172 --> 06:01:01.845
that to the  To wrap it up, 
we're trying to make it easier 

06:01:01.846 --> 06:01:05.505
for partners and developers to 
build solutions from edge to 

06:01:05.983 --> 06:01:09.351
Cloud.  Android Things is 
beating out local controls, 

06:01:09.352 --> 06:01:13.818
local or notification, data 
preprocessing.  Applied 

06:01:13.819 --> 06:01:16.244
analytics and machine learning. 
 This will allow you to design a

06:01:16.559 --> 06:01:19.886
 system that will improve 
performance.  Here's where you 

06:01:19.887 --> 06:01:22.882
don't want to send data to the 
Cloud and back, you can make 

06:01:22.883 --> 06:01:28.474
those decisions locally on the 
device.  Build for bandwidth 

06:01:28.705 --> 06:01:31.841
requirements.  want to use 
processing on the device and 

06:01:31.842 --> 06:01:36.239
send information you need to the
 Cloud.  Be tolerant to off-line

06:01:36.463 --> 06:01:40.861
 use cases if intended or 
nonintended.  You need 

06:01:40.862 --> 06:01:45.385
redundancy on the device and 
same decisions on the Cloud as 

06:01:45.386 --> 06:01:49.302
well.  Working on solving the 
key challenges through better 

06:01:49.303 --> 06:01:53.286
managed scaleability insights. 
are excites about what you 

06:01:53.427 --> 06:01:57.771
think, I encourage you to invite
 you to test it out and give us 

06:01:57.917 --> 06:01:59.917
feedback.  So thank you.  

06:02:11.396 --> 06:02:15.738
   HANWOOK KIM: We will now go 
through some demos.  On the demo

06:02:16.065 --> 06:02:19.534
 board we will have three demos 
I will run you through.  demos I

06:02:19.871 --> 06:02:23.937
 will run through is around 
registration.  in an enterprise 

06:02:23.938 --> 06:02:28.991
is challenging.  Registration is
 difficult.  It is about tens 

06:02:28.992 --> 06:02:35.660
and hundreds of thousands of 
devices, how do you register 

06:02:35.661 --> 06:02:41.823
these to Cloud IoT CoreCore?  We
 will show two possibilities.  

06:02:41.824 --> 06:02:46.473
We will focus on the right set 
of the devices, you can see the 

06:02:46.474 --> 06:02:51.399
QR code.  We have built a mobile
 app for the demo.  What the app

06:02:51.790 --> 06:02:56.560
 will do is number one, I'll 
send in by myself, as myself.  

06:02:56.561 --> 06:03:02.421
It will collect whether I am 
authorized by Cloud IoT to see 

06:03:02.422 --> 06:03:09.372
if I am an authorized user.  
This app is simple.  Basically 

06:03:09.373 --> 06:03:14.382
just two buttons.  Capture the 
QR code and that gave me the 

06:03:14.383 --> 06:03:21.692
information I need to register 
my device to Cloud IoT.  On the 

06:03:21.834 --> 06:03:25.014
device, you register, and 
basically it will show the 

06:03:25.015 --> 06:03:29.021
device manager.  That device 
will now show up on the device 

06:03:29.022 --> 06:03:32.350
manager.  And if you noticed, 
you will see the device actually

06:03:32.813 --> 06:03:37.052
 turned on.  The device did, as 
soon as it talked to the Cloud, 

06:03:37.053 --> 06:03:40.545
it lit up, and then we showed 
the temperature of that device. 

06:03:41.055 --> 06:03:44.469
 that information is actually 
streaming every second to Cloud 

06:03:44.470 --> 06:03:49.647
IoT Core.  will go now and say I
 put that on machine location 

06:03:49.648 --> 06:03:53.192
number one.  Now the second 
device, I will do the same 

06:03:53.578 --> 06:03:57.722
thing.  Capture the QR code.  
add device.  The same thing you 

06:03:57.723 --> 06:04:01.327
will see it show up on device 
manager and soon the device will

06:04:01.488 --> 06:04:04.520
 light up as soon as it 
connections, sending data.  

06:04:04.521 --> 06:04:08.164
Sending every second, so forth. 
 Now I will continue to go down 

06:04:08.165 --> 06:04:14.199
the line.  Capture the QR code, 
add device.  Go to the next one.

06:04:15.727 --> 06:04:20.761
  Capture the QR code, add 
device.  I will go and capture 

06:04:20.762 --> 06:04:28.368
the QR code.  device.  The last 
one, again, maybe a different 

06:04:28.743 --> 06:04:33.418
location, I will capture the QR 
code and add device.  Every time

06:04:33.565 --> 06:04:37.872
 I did that, you can see how 
quickly I was able to get six 

06:04:37.873 --> 06:04:40.894
devices, see the visibility on 
device manager and sending data 

06:04:40.895 --> 06:04:45.031
that are actually connected to 
Cloud IoT Core every second I 

06:04:45.032 --> 06:04:48.309
send information back to that.  
one example of how to register a

06:04:48.673 --> 06:04:52.027
 bunch of devices.  second 
method is pre

06:04:55.551 --> 06:04:59.753
 keys are created in the 
factory.  provided to enterprise

06:05:00.160 --> 06:05:05.985
 and enterprise sets it up in 
the back office.  We'll show you

06:05:06.309 --> 06:05:10.459
 devices that are registered, 
but disabled because they're en 

06:05:10.651 --> 06:05:19.882
route.  So I have on my app, I 
will query the device register 

06:05:19.883 --> 06:05:24.467
where I said these are pre
registered.  install them where 

06:05:24.468 --> 06:05:28.338
I want.  Maybe I'm ready, maybe 
I'm doing a test or in 

06:05:28.650 --> 06:05:32.258
production.  I will enable the 
devices.  I have an app, one to 

06:05:32.259 --> 06:05:37.086
disable and one to enable.  will
 hit the enable button.  will 

06:05:37.087 --> 06:05:40.543
see the devices enable.  As 
they're connected, they will 

06:05:40.544 --> 06:05:45.823
light up.  Bulk, enable devices 
right now.  So you can see some 

06:05:45.824 --> 06:05:50.082
of the devices are starting to 
light up.  And they're all lit 

06:05:50.083 --> 06:05:58.352
up right now.  So now those are 
12 Raspberry pies running.  we 

06:05:58.353 --> 06:06:03.555
have Mongo iOS, and we have the 
same thing, the same process.  

06:06:03.556 --> 06:06:09.528
The registry process is the same
 across OSs, we want to make it 

06:06:09.529 --> 06:06:13.583
simple to register them on Cloud
 IoT Core and manage in one 

06:06:13.889 --> 06:06:22.288
place.  we will transfer it back
 to Indranil now.  

06:06:26.063 --> 06:06:33.700
   INDRANIL CHAKRABORTY: Thank 
you, Hanwook.  He showed you to 

06:06:33.701 --> 06:06:39.521
do batch registration.  And we 
can do enable and disable.  will

06:06:39.688 --> 06:06:42.964
 show you how to access data 
from the global deployment of 

06:06:42.965 --> 06:06:46.734
the devices and how to create 
simple rules as well to take 

06:06:46.735 --> 06:06:50.485
some action.  So we have a 
dashboard here.  we have done is

06:06:51.000 --> 06:06:53.000
 we have

06:06:59.280 --> 06:07:05.248
 taken these devices, deployed 
them in mountain view and other 

06:07:05.249 --> 06:07:09.897
areas as well.  In Raspberry 
devices, connected to Cloud IoT 

06:07:09.898 --> 06:07:13.174
Core and sending data about 
temperature, humidity, pressure 

06:07:13.175 --> 06:07:17.657
other factors as well.  And what
 I can show you is these are all

06:07:17.772 --> 06:07:22.459
 the location of the devices, 
you can monitor, you can do 

06:07:22.460 --> 06:07:25.499
real-time monitoring of all the 
devices in terms of the 

06:07:26.036 --> 06:07:28.730
temperature.  So the last chart 
shows you the local temperature 

06:07:28.731 --> 06:07:32.466
for all the bunch of devices, 
humidity and pressure.  What we 

06:07:32.467 --> 06:07:36.806
also have is a more detailed 
view.  So I can click on a 

06:07:37.196 --> 06:07:40.937
device, and I can see real-time 
what is the temperature of that 

06:07:41.118 --> 06:07:44.374
device, whether it is outside or
 inside, humidity, light, 

06:07:44.494 --> 06:07:52.153
pressure.  And also you can see 
that chart, it is moving, every 

06:07:52.154 --> 06:07:54.880
second as it collected data from
 every source.  In interest of 

06:07:55.042 --> 06:07:59.124
time, I will move to another 
demo where we're going to show 

06:07:59.125 --> 06:08:01.638
how we can switch to the switch 

06:08:07.491 --> 06:08:12.975
 So we have here, Raspberry pie 
running Android Things on this 

06:08:12.976 --> 06:08:16.548
device measuring temperature and
 light.  We have this running 

06:08:16.549 --> 06:08:20.753
Android Things in a relay.  I 
will do is I will put my finger 

06:08:20.887 --> 06:08:24.526
here, which increases the 
temperature and also blocks the 

06:08:24.697 --> 06:08:31.192
light.  It would see that the 
fan turns on on.  What is 

06:08:31.193 --> 06:08:35.674
happening here.  We have build 
the Raspberry pie is sending 

06:08:35.675 --> 06:08:40.566
data to Cloud IoT Core.  Cloud 
IoT Core publishes it to Pub/Sub

06:08:41.675 --> 06:08:47.520
 and from there a Cloud function
 with a simple rule that if a 

06:08:47.521 --> 06:08:52.632
temperature is above 90 
Fahrenheit, it will turn on the 

06:08:52.633 --> 06:09:00.418
fan through that session.  I can
 do is turn it off through my UI

06:09:00.560 --> 06:09:05.198
 as well.  All I have to do is 
-- okay.  Just say fan -- it 

06:09:05.199 --> 06:09:11.113
will create adjacent on.  Fan on
 equals to false.  I will send a

06:09:11.556 --> 06:09:17.129
 command. the fan is turned off.
  So you can use the system to 

06:09:17.130 --> 06:09:22.396
create rules either using Cloud 
function or data flow to act on 

06:09:22.397 --> 06:09:26.700
the device and command or do it 
from UI as well.  As a quick 

06:09:26.701 --> 06:09:31.263
demo of batch registration and 
how to use connected devices, 

06:09:31.264 --> 06:09:35.954
send to Cloud to act on it and 
send messages back to devices as

06:09:36.067 --> 06:09:40.964
  Let's switch to the main deck 
so we can wrap it up. 

06:09:44.494 --> 06:09:46.494
 So we went through 

06:09:52.997 --> 06:09:56.378
this.  In the summary, you saw 
we have Android Things which 

06:09:56.379 --> 06:09:59.785
takes security of the edge, 
managing devices at scale at the

06:10:00.133 --> 06:10:04.202
 edge and also running 
actionable insights at the edge 

06:10:04.203 --> 06:10:09.638
using TensorFlow.  We have Cloud
 IoT Core to connect your 

06:10:09.639 --> 06:10:15.311
existing and new devices, 
securing it to Cloud, and 

06:10:15.312 --> 06:10:24.436
leverage other things, such as 
Pub/Sub and other items.  It is 

06:10:24.437 --> 06:10:28.448
building scaleable information 
and get actionable insight.  

06:10:28.449 --> 06:10:33.413
Next step, helpful links, if you
 are interested in more Android 

06:10:33.414 --> 06:10:37.830
Things, go to this website.  is 
currently on private beta.  Go 

06:10:37.831 --> 06:10:44.173
to this link and request access.
  And we're reviewing access and

06:10:44.254 --> 06:10:48.507
 provide access over the next 
couple of weeks.  In summary, 

06:10:48.508 --> 06:10:53.140
we're very excited with what you
 can do.  love to hear your 

06:10:53.141 --> 06:11:01.058
feedback on Android Things and 
Cloud IoT Core.  Thank  Thank 

06:11:01.059 --> 06:11:05.641
you for joining this session, 
brand ambassadors will assist 

06:11:05.642 --> 06:11:10.978
you in getting to the exits.  We
 will ask that you please clear 

06:11:10.979 --> 06:11:14.709
the room and return via the 
registration line outside.  

06:11:14.710 --> 06:11:16.710
Thank you.  

06:11:19.790 --> 06:11:21.790
 of

06:13:25.976 --> 06:13:27.976
 session)

06:13:30.850 --> 06:13:34.629
   Thank you for joining this 
session, brand ambassadors will 

06:13:34.630 --> 06:13:38.788
assist in getting you to the 
designated exits.  We will make 

06:13:38.789 --> 06:13:41.854
room for the next session.  If 
you are registered for the next 

06:13:41.855 --> 06:13:45.310
session in this room, we ask 
that you clear the room and 

06:13:45.311 --> 06:13:47.689
please return via the 
registration

06:21:17.551 --> 06:21:20.498
 Welcome.  Please fill in the 
seats near the front of the 

06:23:20.490 --> 06:23:22.490
room.  Thank you.  

06:23:25.628 --> 06:23:27.628
 Welcome.  Our session will 

06:24:20.847 --> 06:24:22.847
begin soon.  

06:24:25.855 --> 06:24:29.004
 Welcome, please fill in the 
seats near the front of the 

06:29:09.290 --> 06:29:11.290
room.  Thank you.  

06:29:15.192 --> 06:29:24.365
 Wilkinson, I work in develop 
relations with games and 

06:29:24.966 --> 06:29:28.911
Daydream.  One thing I remember 
as a child is going to Aaron 

06:29:28.912 --> 06:29:34.402
space museum and they just 
opened up a movie theater and 

06:29:34.403 --> 06:29:41.645
they eached up mood to fly.  It 
was a small theater, deep.  When

06:29:42.851 --> 06:29:44.851
 they opened 

06:29:47.267 --> 06:29:48.390
up, they started with this clip 
and the whole screen opened up 

06:29:48.391 --> 06:29:55.284
into imax.  I was blown away.  I
 can take these experiences in 

06:29:55.285 --> 06:29:59.464
Daydream and bring them to other
 people.  I want to help you 

06:29:59.465 --> 06:30:07.484
make your own Daydream 
applications for video.  A few 

06:30:07.485 --> 06:30:11.803
things, design considerations 
for Daydream.  It will be 

06:30:11.804 --> 06:30:15.898
different than a mobile app.  
second is video quality.  makes 

06:30:15.899 --> 06:30:22.138
video good and bad. finally, 
Unity which is a great deal for 

06:30:22.139 --> 06:30:26.632
Daydream apps and also 
components we've made to 

06:30:26.633 --> 06:30:28.633
jump-start your application

06:30:31.159 --> 06:30:34.974
 development.  So VR is a little
 different.  You probably heard 

06:30:34.975 --> 06:30:38.619
some of these things before.   
to bring a new reality to people

06:30:38.940 --> 06:30:44.249
 to give them a new experience. 
 These sessions are a little bit

06:30:47.188 --> 06:30:48.353
 longer, you have 40 minutes, 
maybe longer of sitting in a 

06:30:48.354 --> 06:30:51.810
relaxed spot, not walking 
around, you're not sitting in a 

06:30:52.179 --> 06:30:55.687
conference.  You're really 
focused on the application so 

06:30:55.688 --> 06:30:57.688
you have to take that into 

06:31:00.452 --> 06:31:04.111
account.  And if you think about
 the range of motion, you have 

06:31:04.112 --> 06:31:09.551
about 70° to work with.   30° 
from either side, comfortable.  

06:31:09.552 --> 06:31:13.934
If you want the user, they can 
stretch, maybe rotate their 

06:31:14.110 --> 06:31:18.080
shoulders, they can see 80° 
either side, pretty comfortably,

06:31:18.251 --> 06:31:22.287
 but it is still a stretch.  We 
want to keep the main focus on 

06:31:22.288 --> 06:31:24.702
the application really there in 
the front, in that

06:31:28.463 --> 06:31:32.933
 70°.  In terms of distance, you
 really want to be somewhere 

06:31:32.934 --> 06:31:37.872
between half a meter and 20 
meters away.  That is kind of 

06:31:37.873 --> 06:31:41.595
the virtual distance you want to
 work with.  that is up close, 

06:31:41.596 --> 06:31:45.514
you really end up straining your
 eyes, maybe crossing your eyes 

06:31:45.515 --> 06:31:48.951
trying to focus on that.  Far 
away, it turns into something 

06:31:48.952 --> 06:31:55.433
flat and there is not a lot of 
depth perception.  Speaking of 

06:31:55.434 --> 06:31:59.618
depth perception, you really 
want to have some texture and 

06:31:59.619 --> 06:32:03.019
shadow in your environment.  you
 can see here, before the 

06:32:03.020 --> 06:32:08.633
texture was added to the 
squares, they just looked like 

06:32:08.634 --> 06:32:13.992
BLOPs.  Now that we added 
texture and shadows, you can see

06:32:13.993 --> 06:32:18.544
 there are three boxes and 
circles moving around them.  So 

06:32:18.545 --> 06:32:21.533
all the mechanics are good, but 
you really need to think about 

06:32:21.534 --> 06:32:26.210
the environment that you're in. 
 So you want to convey some 

06:32:26.486 --> 06:32:29.633
presence.  You want to take them
 somewhere.   look at this 

06:32:29.770 --> 06:32:35.575
screen, it would be a great 
screen for a weapon  -- web page

06:32:35.786 --> 06:32:39.587
 or something.  It is a little 
plain, but it doesn't convey 

06:32:39.776 --> 06:32:43.009
anything.  Something I see a lot
 of and I do a lot in my 

06:32:43.511 --> 06:32:47.280
prototypes, we're all guilty of 
it, kind of the void Spaces.  

06:32:47.281 --> 06:32:51.623
You make the space, infinite 
plane, and you put your content 

06:32:51.624 --> 06:32:55.856
in it, throw it there.  It is 
fast, it renders quickly.  It 

06:32:55.857 --> 06:32:59.989
gives you the sense of VR-ness, 
but it really doesn't take you 

06:33:00.678 --> 06:33:03.922
anywhere.  It is not very 
memorable.  You really miss this

06:33:04.508 --> 06:33:08.942
 opportunity to make something 
memorable in your application.  

06:33:08.943 --> 06:33:14.043
So if you look at the Daydream 
home screen, it does a good job 

06:33:14.044 --> 06:33:16.790
of this.  It has some 
environment to look at, things 

06:33:16.791 --> 06:33:20.409
to focus on.  You kind of follow
 the water into the center of 

06:33:20.410 --> 06:33:25.227
the screen and then you add your
 content.  This is really to 

06:33:25.228 --> 06:33:29.740
focus your attention on the 
content.  And you can do 

06:33:29.741 --> 06:33:34.909
something even crazy, like this 
example here, where we've taken 

06:33:34.910 --> 06:33:39.047
the same content, but kind of 
integrated it into the 

06:33:39.048 --> 06:33:42.380
environment.  So you've got the 
rock there, that is framing the 

06:33:42.381 --> 06:33:45.985
menu at the bottom.  And you've 
got the sunlight coming through 

06:33:45.986 --> 06:33:49.429
the trees, that's kind of a 
spotlight on your content, to 

06:33:49.430 --> 06:33:55.933
really focus the eyes there.   
here, though, is this really is 

06:33:55.934 --> 06:33:59.152
hard to do if you will move the 
content at all.  You don't want 

06:33:59.153 --> 06:34:03.399
to move the menu back, for 
example, into the rock.  Or you 

06:34:03.400 --> 06:34:07.459
have to move the rock.  It gets 
complex.  This is kind of the 

06:34:07.460 --> 06:34:12.693
very extreme case, if you can do
 this, fantastic.  But you 

06:34:12.694 --> 06:34:15.097
normally end up with 
compromises. 

06:34:19.128 --> 06:34:22.893
 So you can make a great 
environment, great presence of 

06:34:22.894 --> 06:34:26.908
your app, but you really need to
 have great video to have a 

06:34:26.909 --> 06:34:33.520
great video app.  The first 
thing when we talk about quality

06:34:33.521 --> 06:34:37.487
 of video is resolution.  This 
is the number of Pixels or the 

06:34:37.488 --> 06:34:42.380
number of samples in the frame 
that we're looking at.  And as 

06:34:42.381 --> 06:34:46.930
you can see, there is a wide 
range from the very low 

06:34:47.096 --> 06:34:49.751
definition, so maybe these are 
things that show up on 

06:34:49.752 --> 06:34:53.957
television or on little game 
devices.  All the way up to 4K, 

06:34:53.958 --> 06:34:56.449
which is kind much the 
cutting-edge of what you can 

06:34:56.843 --> 06:35:01.805
find, both on mobile devices and
 televisions today. are the kind

06:35:02.128 --> 06:35:06.524
 of proportional relationship 
that is not to scale, but 

06:35:06.525 --> 06:35:10.566
relative to each other, they're 
scale.  is a lot more bits to 

06:35:10.567 --> 06:35:13.349
move as you get into the higher 
resolutions.  You have to think 

06:35:13.350 --> 06:35:20.375
about that.  It will take more 
CPU, more time, more bandwidth 

06:35:20.376 --> 06:35:24.531
if you're streaming. want to be 
aware of that.  want to balance 

06:35:24.532 --> 06:35:27.676
your resolution to the quality 
of the content that you're 

06:35:28.850 --> 06:35:32.064
sending.  Now, when we talk 
about resolution you usually 

06:35:32.065 --> 06:35:37.968
hear numbers like 1080P or 720I.
  And this is what those Ps and 

06:35:37.969 --> 06:35:43.201
Is mean.  So you have 
progressive.  means that every 

06:35:43.202 --> 06:35:48.546
single line is shown.  you get a
 complete picture.  Where 

06:35:48.547 --> 06:35:53.326
interlaced is every other line. 
 This allowed a trick that, in a

06:35:53.596 --> 06:35:59.972
 movie where half the lines are 
sent the first frame and 

06:35:59.973 --> 06:36:04.978
subsequent the other half is 
cent.  You can have a large 

06:36:04.979 --> 06:36:10.459
resolution and only send half 
the bits per frame.  This is the

06:36:10.588 --> 06:36:16.272
 bitrate, the price of it is the
 quality of the video.  can be a

06:36:16.663 --> 06:36:20.602
 little softer.  motion is 
blurry.  You want to be aware if

06:36:20.759 --> 06:36:24.836
 you use an interlace video, you
 have a slow motion and soft 

06:36:24.837 --> 06:36:26.837
picture. 

06:36:31.472 --> 06:36:36.185
 Also with the capturing of the 
video, you have aspect ratio.  

06:36:36.186 --> 06:36:43.587
It is that, the ratio of the 
width to the height of the 

06:36:43.588 --> 06:36:47.574
screen.  When you present it 
back to the user, you are aware 

06:36:47.575 --> 06:36:54.514
of what it is captured with.  We
 have 4:3, standard definition 

06:36:54.515 --> 06:36:59.544
ratio shown on HD screen so it 
stretches it out and it looks 

06:36:59.545 --> 06:37:07.229
kind of weird.  Also in VR, we 
have the opportunity to do 360°.

06:37:07.230 --> 06:37:10.562
  So this is fantastic.  You can
 take a picture, I have seen 

06:37:10.563 --> 06:37:14.131
some of the people holding them 
up in the cameras, walking 

06:37:14.132 --> 06:37:18.246
around outside also.  get the 
spherical views of the world.  

06:37:18.247 --> 06:37:21.519
Here's one I took on top of our 
San Francisco office one day.  

06:37:21.520 --> 06:37:24.795
And you can kind of see the 
middle part of it looks pretty 

06:37:25.025 --> 06:37:28.922
normal.  But as you get to the 
top and bottom of the image, it 

06:37:28.923 --> 06:37:32.687
gets really stretched out.  So 
you have to be aware of what 

06:37:32.857 --> 06:37:36.937
projection was used by the 
camera so that you can show the 

06:37:36.938 --> 06:37:42.926
same projection when you render 
it.  The most common one is 

06:37:42.927 --> 06:37:48.975
called the ekquiekquirectangular
 projection.  is where it 

06:37:48.976 --> 06:37:52.905
unfolds the sphere into a 
rectangle and stretching the top

06:37:53.075 --> 06:37:59.122
 of the sphere along the top of 
the rectangle and bottom.  The 

06:37:59.375 --> 06:38:03.988
poles get distorted and the 
middle part is clear.  You can 

06:38:03.989 --> 06:38:08.228
see once a put it back on the 
sphere, the distortion goes away

06:38:08.374 --> 06:38:14.513
 and you can see the bay bridge 
clearly.  You can also do stereo

06:38:15.235 --> 06:38:20.514
 vision.  So we have all been to
 3D movies where they do 

06:38:20.515 --> 06:38:24.174
polarized views.  You can also 
do stereo projections in VR 

06:38:24.175 --> 06:38:27.838
where you have got two separate 
images for each eye.  the left 

06:38:27.839 --> 06:38:32.060
eye is on top of the right eye, 
like in this example.  Here, 

06:38:32.061 --> 06:38:35.461
each of them are slightly 
different.  offset.  So when you

06:38:36.149 --> 06:38:40.091
 show them side-by-side your 
eyes see the difference in depth

06:38:40.092 --> 06:38:48.019
 perception.  It looks 
stereoscopic.  So all of this 

06:38:48.020 --> 06:38:52.980
was about the dimensions and the
 resolution, aspect ratios of a 

06:38:52.981 --> 06:38:56.469
single frame.  But when you look
 at a movie, it is made up of 

06:38:56.470 --> 06:39:00.384
lots of frames.  And that's 
called the frame rate of course.

06:39:00.385 --> 06:39:03.778
  So here are all the frame 
rates that you will probably 

06:39:03.779 --> 06:39:07.906
ever encounter.  And as you can 
see, it is a long list.  And 

06:39:07.907 --> 06:39:12.028
there is no right or wrong frame
 rate.  It mostly has to do with

06:39:12.209 --> 06:39:20.241
 the capturing.  So at the 
bottom, it is typically like a 

06:39:20.242 --> 06:39:26.211
standard movie would be, 24 
frames per second.  And camera 

06:39:26.212 --> 06:39:36.168
is 29.7 or 30 in Europe.  And 
specialized cameras are higher 

06:39:36.169 --> 06:39:40.186
frame rates.  This is important 
to play it back.  If you 

06:39:40.187 --> 06:39:43.827
captured a fast frame rate, and 
you are playing it slowly, it 

06:39:43.828 --> 06:39:46.867
might look jerky because you are
 skipping frames.  

06:39:47.020 --> 06:39:50.752
Alternatively, if you have a low
 capture, you will never speed 

06:39:50.753 --> 06:39:57.344
it up faster than the capture 
rate and have any appreciable 

06:39:57.345 --> 06:40:00.939
improvement in quality.  that we
 have multiple frames coming at 

06:40:01.083 --> 06:40:06.212
us, different resolutions, we 
want to be able to do things 

06:40:06.213 --> 06:40:11.240
with that.  We need to read it, 
process it, decode it, put it on

06:40:11.602 --> 06:40:15.030
 a screen, maybe we're 
downloading it from a server. 

06:40:16.580 --> 06:40:21.203
bitrate.  This is where they 
call the encoders, the codex 

06:40:21.204 --> 06:40:27.009
come into play.  A common one is
 the H.264 encoder.  And that is

06:40:27.188 --> 06:40:32.206
 found on almost every device 
now.  And they're usually 

06:40:32.845 --> 06:40:37.484
implemented in hardware.  The 
H.265 encoder is coming and will

06:40:37.857 --> 06:40:41.516
 be on more modern devices.  It 
is much more efficient at this 

06:40:42.238 --> 06:40:46.881
compression. can see these are 
the recommended data rates for 

06:40:47.001 --> 06:40:50.120
H.264.  For the different 
resolutions.  And so you can 

06:40:51.030 --> 06:40:54.680
imagine trying to push 40 
megabits a second over a crowded

06:40:55.220 --> 06:40:59.532
 Wi-Fi connection might be a 
little challenging.  You may 

06:40:59.533 --> 06:41:02.408
have to scale it down, if that 
is your environment.  Or you may

06:41:02.587 --> 06:41:05.439
 need to be aware of that and 
not do a lot of processing 

06:41:05.440 --> 06:41:08.468
around the video, if you have 
special effects and things like 

06:41:11.582 --> 06:41:18.490
that.  So let's talk about 
Daydream.  If you look at the 

06:41:18.615 --> 06:41:23.470
Android standard specification, 
we say to vendors, if you want 

06:41:23.471 --> 06:41:26.726
to be Daydream ready, these are 
what you need to support in your

06:41:26.852 --> 06:41:28.852
 device.  So

06:41:30.802 --> 06:41:35.664
 264, H.264 of course is at 4K, 
the maximum resolution we really

06:41:35.977 --> 06:41:42.557
 can get is 4K.  At 30 frames 
per second, with 40 megabits per

06:41:42.558 --> 06:41:46.117
 second transfer.  So this 
allows them to measure how much 

06:41:46.118 --> 06:41:49.241
CPU is needed to actually get 
the

06:41:53.003 --> 06:41:55.549
 video decoded and on the 
screen.  And then we also ask 

06:41:55.550 --> 06:41:59.011
for 265.  So it is so much more 
efficient that you should be 

06:41:59.012 --> 06:42:04.306
able to get the 1080P at the 
same frame rate, but a quarter 

06:42:04.307 --> 06:42:10.734
of the data rate, because 265 is
 that much more efficient.  So 

06:42:10.735 --> 06:42:12.832
equivalently we're saying, here,
 you can run

06:42:18.939 --> 06:42:23.205
 four 1080P video streams on the
 same device, if you are using 

06:42:23.206 --> 06:42:26.597
H265 encoding.  You can see the 
minimum resolution we want is 

06:42:26.598 --> 06:42:31.373
the 1080P.  But ideally, you 
have got a higher resolution so 

06:42:31.374 --> 06:42:33.665
you can get a much nicer and 
richer

06:42:38.106 --> 06:42:43.472
  So when we talk about VR, it 
is a little different than just 

06:42:43.473 --> 06:42:48.093
watching a movie or a YouTube 
stream on your device in your 

06:42:48.417 --> 06:42:51.876
hand.  Since you are holding it 
up, and in the viewer, and you 

06:42:51.877 --> 06:42:56.318
are looking at it with 
essentially magnifying glasses, 

06:42:56.319 --> 06:43:01.498
you want to have a really high 
quality image, so you're not 

06:43:01.499 --> 06:43:06.439
distracted by little 
imperfections in the video, 

06:43:06.440 --> 06:43:10.201
things like that.  The minimum 
we recommend for a monoscopic 

06:43:10.295 --> 06:43:17.234
video, where both eyes see the 
same image, it is there, 1080P, 

06:43:17.235 --> 06:43:21.228
30 frames per second and 16 
megabits per second.  

06:43:21.938 --> 06:43:27.885
comfortable, and gives a nice 
image.  If you are doing 360 or 

06:43:28.046 --> 06:43:30.931
stereoscopic, there is really 
double the amount of information

06:43:31.336 --> 06:43:33.980
 you need.  360° with the

06:43:38.063 --> 06:43:43.698
 aqua rectangular projection.  
It is seen or off to the side.  

06:43:43.699 --> 06:43:48.933
We want to double the resolution
 and really get up there to the 

06:43:48.934 --> 06:43:52.585
four K size so that way half of 
it is shown in the eyes and it 

06:43:52.586 --> 06:43:58.425
looks very good.  You can see 
the difference, really, of 

06:43:58.548 --> 06:44:04.108
bitrate, so it only went to 24. 
 Not to 32.  If there is any 

06:44:04.109 --> 06:44:07.472
math whizzes out there.  that's 
because of this compression.  So

06:44:07.852 --> 06:44:12.870
 the encoder, as it is 
compressing will find repeating 

06:44:12.871 --> 06:44:18.341
sections of the frame as you get
 larger so it can compress more 

06:44:18.881 --> 06:44:23.290
effectively. now, we've got a 
bitrate, we have a file, like

06:44:26.568 --> 06:44:29.838
 an MPEG4 file or something.  We
 need to do something with it to

06:44:30.218 --> 06:44:34.445
 get it on the device so we can 
actually show it.  There is a 

06:44:34.623 --> 06:44:39.300
couple of different ways to do 
that.  The first way is to 

06:44:39.301 --> 06:44:46.125
download it, package it up in an
 auxiliary file, OBB file, off 

06:44:46.126 --> 06:44:50.300
the play store or in your own 
server or download it there.  

06:44:50.301 --> 06:44:53.010
Maybe you have sports highlights
 every week or current events in

06:44:53.380 --> 06:44:57.991
 the news.  it gets downloaded. 
 Then they can play it offline. 

06:44:58.348 --> 06:45:01.552
 is great, because if you don't 
have connectivity all the time, 

06:45:01.553 --> 06:45:05.049
your user doesn't, they can 
download it, play it back 

06:45:05.050 --> 06:45:08.088
whenever they want to.  don't 
need to be connected to the 

06:45:08.254 --> 06:45:12.904
Internet.  are also easy to 
encode these, because you don't 

06:45:12.905 --> 06:45:17.794
have to worry about multiple 
resolutions and multiple data 

06:45:17.918 --> 06:45:21.056
arrays, like if you were 
streaming.  You can have really 

06:45:21.057 --> 06:45:25.478
easy delivery, like I said.  The
 downside is you've got to 

06:45:25.479 --> 06:45:32.389
figure out what to send.  So you
 need to do catalog management 

06:45:32.390 --> 06:45:35.395
and curate your list more 
closely.  And you need a way to 

06:45:35.396 --> 06:45:38.983
delete files that you are not 
using any more.  After a year, 

06:45:38.984 --> 06:45:43.098
you don't want to fill up the 
user's device.  On the streaming

06:45:43.271 --> 06:45:47.477
 side, we're all pretty familiar
 with this.  You know, YouTube 

06:45:47.923 --> 06:45:51.172
streams, there is a couple of 
other companies out there that 

06:45:51.173 --> 06:45:55.991
stream.  And the great thing 
about it is there is tons of 

06:45:56.360 --> 06:45:59.775
content.  You can have an 
Internet full of content, select

06:45:59.972 --> 06:46:04.680
 it, and play it back.   is not 
expected to download anything 

06:46:04.681 --> 06:46:13.561
they're not using.  They like 
it.  It is an eat the bandwidth 

06:46:13.562 --> 06:46:18.818
as you use it model, which is 
great.  knows how to use it. 

06:46:18.819 --> 06:46:22.576
know how to get on, log on, 
start streaming video easily.  

06:46:22.577 --> 06:46:26.608
The downside is this encoding 
problem.  As you saw, especially

06:46:26.774 --> 06:46:31.945
 with larger, high quality 
videos upon the speed creates a 

06:46:31.946 --> 06:46:36.512
bitrate problem.  To be 
guaranteed a high bandwidth 

06:46:36.513 --> 06:46:39.062
connection on Wi-Fi sometimes 
can be challenging.  So what you

06:46:39.224 --> 06:46:44.370
 want to do is encode at 
multiple bitrates.  So usually 

06:46:44.371 --> 06:46:47.788
do that by different resolution.
  You start with a 4K stream for

06:46:48.050 --> 06:46:50.505
 the best quality.  You go down 
to

06:46:55.523 --> 06:47:01.194
 2K and maybe 1080P and you use 
something like the dash or HLS 

06:47:01.195 --> 06:47:05.974
protocol to switch between the 
streamsstreams effortlessly.  

06:47:05.975 --> 06:47:09.205
There may be degrading of the 
quality, it is fuzzy for a 

06:47:09.407 --> 06:47:12.348
second and will jump back up as 
network conditions improve.

06:47:17.323 --> 06:47:20.623
 So now we have all this video, 
figured out how to get it there 

06:47:20.624 --> 06:47:26.719
and all that.  We'll go ahead 
and look a little bit at Unity. 

06:47:27.123 --> 06:47:30.760
 Not everyone has seen Unity.  
The first thing I wanted to do 

06:47:30.761 --> 06:47:34.318
was give a quick tour of the 
Unity editor.  As we talk about 

06:47:34.476 --> 06:47:39.110
things, you will kind of 
understand.  You layout a 3D 

06:47:39.111 --> 06:47:48.043
scene here with the hierarchy on
 the left, for example, here's a

06:47:48.512 --> 06:47:52.972
 camera, you can see what the 
camera sees.  is a property 

06:47:52.973 --> 06:47:55.899
inspector over here on the 
right.  In order to make it 

06:47:55.900 --> 06:47:59.877
Daydream capable, you have to 
turn on the VR support.  So you 

06:47:59.878 --> 06:48:05.639
do that here on the Android side
 by just checking this box.  

06:48:05.640 --> 06:48:11.722
selecting Daydream out of this. 
 One of the important things to 

06:48:11.723 --> 06:48:14.152
remember is when you are 
watching videos, it will be a 

06:48:14.153 --> 06:48:19.455
long time.  It will not be just 
30 or 40 minutes, it might be an

06:48:19.731 --> 06:48:23.565
 hour or two hours. want to make
 sure the sustained performance 

06:48:23.566 --> 06:48:25.566
mode is 

06:48:30.527 --> 06:48:35.380
checked.  Now you have a scene. 
 You can add simple models, 

06:48:35.381 --> 06:48:41.112
built into Unity, you can 
adplanes, trains -- add planes, 

06:48:41.229 --> 06:48:45.794
trains, cylinders.  them around.
  More complex things you build 

06:48:45.795 --> 06:48:54.047
in a modeling tool and you can 
import them.  And we can also 

06:48:54.048 --> 06:48:59.266
change behaviors of the cube.  
we can add physical things to 

06:48:59.446 --> 06:49:05.147
it.  We can call a component a 
rigid body which adds mass and 

06:49:05.148 --> 06:49:08.173
interplaces with the physics 
system.  We can turn off the 

06:49:08.174 --> 06:49:12.876
gravity in VR mode, of course.  
And we can add custom scripts, 

06:49:12.877 --> 06:49:16.649
this is where the application 
building comes in that will add 

06:49:16.650 --> 06:49:21.232
custom behaviors that you script
 in C sharp.  Here is one called

06:49:21.413 --> 06:49:26.140
 spin that will spin the cube.  
just -- here when the 

06:49:26.141 --> 06:49:35.383
application starts, you would 
just grab that rigid body and 

06:49:35.384 --> 06:49:40.267
call adds work to this.  And it 
will start spinning the object 

06:49:57.010 --> 06:50:01.545
here.  That is pretty exciting. 
 Tow make it more exciting, we 

06:50:01.546 --> 06:50:06.037
take a 3D model we have built.  
An environment for example, and 

06:50:06.038 --> 06:50:08.038
here is --

06:50:09.738 --> 06:50:11.738
 many clicks.  

06:50:24.181 --> 06:50:28.163
 add prefabricated components.  
This particular one was a room 

06:50:28.164 --> 06:50:31.404
we made and modeled shapes on it
 to give it a different feel.  

06:50:31.405 --> 06:50:34.815
It gives it a completely 
different feel and the exact 

06:50:34.816 --> 06:50:37.751
same program we just ran.  You 
can see the real power of 

06:50:37.752 --> 06:50:39.752
getting that environment 

06:50:44.136 --> 06:50:48.147
set.  So here's kind of a block 
diagram of everything that is 

06:50:48.148 --> 06:50:54.069
involved in that Unity app.  You
 have Unity itself there, which 

06:50:54.565 --> 06:50:58.406
contains the scene, the 3D 
models, C sharp script that you 

06:50:58.407 --> 06:51:06.769
would write.  You add to it 
also, the Google GVRSGK which 

06:51:06.770 --> 06:51:14.123
you can download from Google 
Developers.com or Github.  Part 

06:51:14.124 --> 06:51:19.801
of this is a video plug-in that 
connects the XO player plug-in, 

06:51:19.802 --> 06:51:24.175
which there was a talk yesterday
 about it, which you can see on 

06:51:24.176 --> 06:51:28.712
YouTube if you are interested. 
CodeLabs about it.  This wraps 

06:51:28.713 --> 06:51:33.027
the media service in Android 
into something that is 

06:51:33.028 --> 06:51:36.609
customizable, and simple to work
 with.  It also handles 

06:51:36.726 --> 06:51:39.323
communicating with the VR 
services that are part of 

06:51:39.324 --> 06:51:41.324
Android operating 

06:51:45.606 --> 06:51:49.038
system.  The systems that are 
part of Android handle these 

06:51:49.039 --> 06:51:53.092
things for you so you don't have
 to handle them in your 

06:51:53.093 --> 06:52:00.257
application code or as you draw 
in Unity, the async projection 

06:52:00.258 --> 06:52:07.149
is the concept of turning your 
head fast, instead of draw a 

06:52:07.150 --> 06:52:11.760
stream as you turn your head.  
Async can detect your motion and

06:52:12.065 --> 06:52:15.441
 draw the existing image in the 
right place.  As you turn your 

06:52:15.442 --> 06:52:18.990
head to the right, it moves to 
the left.  You don't get the 

06:52:19.974 --> 06:52:23.750
nauseous feeling like nothing is
 moving.  It handles lens 

06:52:24.058 --> 06:52:28.057
distortion.  Again, the lenses 
in Daydream are essentially 

06:52:28.058 --> 06:52:32.512
spherical magnifying glasses.  
want to present to that a 

06:52:32.513 --> 06:52:35.432
distorted image.  So when it 
goes through the lens, it will 

06:52:35.433 --> 06:52:43.901
be corrected.  And this handles
handleshandles adding that 

06:52:43.902 --> 06:52:47.196
distortion automatically, so you
 don't have to do it every time.

06:52:47.197 --> 06:52:51.663
  is also support for spatial 
audio.  This will allow the 

06:52:55.841 --> 06:53:01.200
soundses,t will emanate from 
behind you.  You will want to 

06:53:01.201 --> 06:53:04.714
turn around.  ears and eyes will
 be in sync and build the 

06:53:04.715 --> 06:53:08.287
allusion of being in a different
 place.   course the mechanics 

06:53:08.288 --> 06:53:10.288
of head tracking and the 
controller.  

06:53:14.563 --> 06:53:19.276
 XO player, this is a 
super-simple model.  If you need

06:53:19.401 --> 06:53:22.970
 to know more about it, I would 
definitely point you back to 

06:53:22.971 --> 06:53:27.368
YouTube for yesterday's talk.  
And the code lab that you can do

06:53:27.635 --> 06:53:29.635
 in the code lab area for today 
and tomorrow.  

06:53:32.664 --> 06:53:39.730
 this does is it gives you the 
capability to customize each 

06:53:39.731 --> 06:53:42.961
step in the process of playing 
the video.  If you think about 

06:53:42.962 --> 06:53:47.355
the video as an MPEG4 or stream 
on the server, there is a data 

06:53:47.605 --> 06:53:51.069
source.  That data source can be
 in a variety of different

06:53:54.934 --> 06:53:55.592
 formats and that needs to be 
extracted into the decoder.  The

06:53:55.593 --> 06:53:58.810
 decoder will take the bits that
 you got off the file or off the

06:53:58.998 --> 06:54:03.017
 Internet and it is going to 
decompress them into a video 

06:54:03.160 --> 06:54:07.642
stream, audio stream, maybe 
closed captioning.  And then 

06:54:07.643 --> 06:54:12.087
feed that into the XO player 
class itself.  In the class 

06:54:12.328 --> 06:54:17.085
itself, it is going to handle 
buffering, because it is not 

06:54:17.086 --> 06:54:20.630
going to be able to decode as 
fast as it is playing back.  

06:54:20.631 --> 06:54:24.467
usually do a little bit ahead of
 time and that way there is 

06:54:24.468 --> 06:54:28.561
plenty of data to consume as 
we're  And then under 

06:54:28.562 --> 06:54:31.682
application control, there is 
the track selector.  The track 

06:54:31.683 --> 06:54:34.897
selector says you want to show 
this video and this audio, maybe

06:54:34.898 --> 06:54:39.221
 you have multiple audio streams
 for different languages or 

06:54:39.222 --> 06:54:44.008
maybe you have a stereo in mono 
and you want to have different 

06:54:44.009 --> 06:54:46.904
selections for those or 
different resolutions.  And you 

06:54:46.905 --> 06:54:51.941
can select the tracks and show 
those through the renderers.  

06:54:51.942 --> 06:54:57.434
renderers are the things that 
actually draw or renders sound. 

06:54:58.230 --> 06:55:03.211
 So there is a lot of moving 
parts to this.  And it can be 

06:55:03.212 --> 06:55:06.473
kind of overwhelming, as we 
found, as we started building 

06:55:06.474 --> 06:55:10.763
some of these samples for 
Daydream.  So we decided to 

06:55:10.764 --> 06:55:15.738
funnel them together into a 
media app template.  This 

06:55:16.119 --> 06:55:20.573
template will be available to 
Github shortly.  I don't think 

06:55:20.574 --> 06:55:24.594
it is there today, but it should
 be soon.  This gives the Unity 

06:55:24.595 --> 06:55:30.478
building blocks, the prefabbed 
models and scripts to allow you 

06:55:30.479 --> 06:55:34.140
to jump-start your application. 
 You can focus on delivering a 

06:55:34.141 --> 06:55:37.035
great experience to the user, 
rather than having to decode 

06:55:38.438 --> 06:55:43.040
video.  So the first thing we 
added to it is the selection 

06:55:43.382 --> 06:55:48.787
system.  And with bread crumb 
navigation.  A series of 

06:55:49.038 --> 06:55:51.957
folders.  You can make your own 
categories.  And put videos in 

06:55:52.133 --> 06:55:55.334
them.  And then you can navigate
 up and down the 

06:56:00.220 --> 06:56:05.339
hierarchy.  Another thing we did
 was add this capability of not 

06:56:05.340 --> 06:56:09.109
only showing the video, but 
sampling it and creating a light

06:56:09.469 --> 06:56:12.406
 source in Unity that is 
representative of the video 

06:56:12.407 --> 06:56:17.213
frame being shown at that time. 
 So you get this nice emissive 

06:56:17.214 --> 06:56:19.962
effect from the video, like a 
glow from the screen or 

06:56:19.963 --> 06:56:24.162
television or whatever it is.  
And it adds really a sense of 

06:56:24.163 --> 06:56:29.128
warmth and being to the screen. 
 It feels like it is really 

06:56:33.156 --> 06:56:37.615
there.  We also found that not 
everyone likes to sit in the 

06:56:37.616 --> 06:56:44.290
front row at a movie theater or 
in the back row.  So we allow 

06:56:44.291 --> 06:56:49.259
zooming of it.  You can see this
 also in the YouTube Daydream 

06:56:49.260 --> 06:56:52.482
app where it allows you to move 
the screen in and out to where 

06:56:52.483 --> 06:56:56.237
it is at a comfortable position 
for you to view.  It makes a big

06:56:56.437 --> 06:56:59.003
 difference when you are trying 
to sit there and watch a movie 

06:56:59.004 --> 06:57:07.435
for an hour.  You want to be 
comfortable and relaxed.  Being 

06:57:07.436 --> 06:57:11.495
comfortable and relax doesn't 
mean being level.  Daydream 

06:57:11.496 --> 06:57:14.604
wants the horizon to be level 
and straight ahead.  This allows

06:57:14.811 --> 06:57:18.720
 you to tilt the screen.  So if 
you are leaning back in your 

06:57:18.942 --> 06:57:22.752
chair, lying on your bed, you 
can move the screen up and don't

06:57:23.041 --> 06:57:29.026
 have to crane your neck to look
 down at the screen.  is another

06:57:29.027 --> 06:57:31.116
 comfort thing.

06:57:36.719 --> 06:57:39.553
 360 repositions, I don't know 
how many of you tried to look at

06:57:39.680 --> 06:57:44.351
 the 360 image or video in 
Daydream, it seems like for me, 

06:57:44.534 --> 06:57:47.601
always, I pick it up and the 
main thing I'm supposed to be 

06:57:47.602 --> 06:57:52.938
looking at is over there.  end 
up looking around oh, there it 

06:57:53.071 --> 06:57:56.869
is, now I can look at it.  This 
allows you to pick it up, move 

06:57:56.870 --> 06:58:00.419
it back into your center to be 
comfortably seated again and the

06:58:00.597 --> 06:58:02.597
 subject is right in front of 

06:58:06.030 --> 06:58:10.408
you.  Of course playback 
controls.  You can spend a lot 

06:58:10.409 --> 06:58:13.403
of time making playback 
controls.  We decided just to 

06:58:13.404 --> 06:58:16.335
make some for you and save you 
the headache. 

06:58:25.069 --> 06:58:28.663
 We do a good job of looking at 
the stream when we're playing it

06:58:28.800 --> 06:58:32.366
 back and trying to determine 
what format it is in.  We get 

06:58:32.367 --> 06:58:34.367
the

06:58:35.506 --> 06:58:39.954
 projection right, is it 
stereoscopic, side-by-side eyes,

06:58:40.089 --> 06:58:44.622
 top and bottom eyes.  we don't 
choose right, maybe you want to 

06:58:44.623 --> 06:58:48.199
explore and try different 
things.  You can do that by 

06:58:48.200 --> 06:58:50.934
changing the projection manually

06:58:56.498 --> 06:58:58.498
 as well.  

06:59:01.748 --> 06:59:06.414
 in the media app template is 
all the prefabs that you can 

06:59:06.415 --> 06:59:11.010
pull into your project, 
customize and integrate into 

06:59:11.011 --> 06:59:15.133
your application.  We have the 
bread crumb, title, tilt, zoom 

06:59:15.134 --> 06:59:18.550
the screen, which is great, the 
playback controls and of course 

06:59:18.551 --> 06:59:22.170
the emissive lighting which is 
tricky to get 

06:59:26.138 --> 06:59:29.676
sometimes.  To kind of wrap 
everything up, I know we covered

06:59:30.023 --> 06:59:33.353
 everything!  And just want to 
have one checklist to cover 

06:59:33.354 --> 06:59:39.100
these things.  And you really 
want to keep the user comfort 

06:59:39.101 --> 06:59:42.092
first at hand.  Having them sit 
in a comfortable place and not 

06:59:42.093 --> 06:59:45.550
having to move their shoulders 
around or look up and down will 

06:59:45.551 --> 06:59:48.924
make your app that much more 
enjoyable, and they will go back

06:59:49.224 --> 06:59:52.397
 and play it again and again.  
You want to take the opportunity

06:59:52.593 --> 06:59:57.816
 to make a destination a place 
they can go.  So when they think

06:59:58.219 --> 07:00:01.820
 about it, they'll go oh, yeah, 
I want to watch this video in 

07:00:01.821 --> 07:00:06.047
this sports arena or whatever 
environment you decide to make, 

07:00:06.048 --> 07:00:11.645
and it gives them something else
 to remember, rather than that 

07:00:11.646 --> 07:00:18.498
empty space.  want to respond 
time in your encoding as well.  

07:00:18.499 --> 07:00:21.556
Making sure you are delivering 
the best possible quality video 

07:00:21.557 --> 07:00:24.494
you can get, in the constraints 
of the application you are 

07:00:24.495 --> 07:00:28.411
really targeting.  If you are 
targeting offline people, you 

07:00:28.412 --> 07:00:35.010
want to target downloading those
 things and having good 

07:00:35.230 --> 07:00:38.531
encoding.  If you are targeting 
streaming people, you have to 

07:00:38.532 --> 07:00:42.512
encode in other bitrates to make
 sure everything can be 

07:00:42.687 --> 07:00:47.258
switched, depending on network 
quality.  And you really want to

07:00:47.641 --> 07:00:51.552
 match as best you can what 
information was used when they 

07:00:51.553 --> 07:00:58.544
capture the video.  So the 
aspect ratio, you don't want to 

07:00:58.545 --> 07:01:04.352
recalculate aspect ratio on the 
fly.  If it is in the 

07:01:04.353 --> 07:01:07.729
rectangular projection, you want
 your sphere to be close to the 

07:01:07.730 --> 07:01:11.315
sphere they used.  That way, 
your images look great, just as 

07:01:11.316 --> 07:01:15.580
great as they were when they 
were captured.  Finally, delight

07:01:15.773 --> 07:01:20.521
 your users.  That's why we're 
here. love to make great apps.  

07:01:20.522 --> 07:01:26.529
make whatever you do really 
enjoyable.  And think about how 

07:01:26.530 --> 07:01:31.918
they're going to use it.  you 
use it over and over again?  If 

07:01:31.919 --> 07:01:36.918
it is a one-time deal, that's 
great, that's fine, but you 

07:01:36.919 --> 07:01:40.139
really want to create something 
they will use over and over 

07:01:40.311 --> 07:01:44.221
again.  Here's some links to get
 things.  Definitely the 

07:01:45.055 --> 07:01:47.893
Daydream overview site is a good
 starting point where there are 

07:01:47.894 --> 07:01:52.453
many more links to different 
samples and these Github repos. 

07:01:53.318 --> 07:01:59.472
 And again XO player is very 
configureable, very powerful, I 

07:01:59.473 --> 07:02:04.112
suggest checking out their site 
and CodeLabs and maybe their 

07:02:05.905 --> 07:02:09.262
talk. thanks for your attention 
today.  

07:02:15.506 --> 07:02:19.258
   Thank you for joining this 
session.  Brand ambassadors will

07:02:19.259 --> 07:02:22.497
 assist with directing you 
through the designated exits.  

07:02:22.498 --> 07:02:24.498
be making room for those

07:02:27.360 --> 07:02:31.127
 who have registered for the 
next session.  If you have 

07:02:31.128 --> 07:02:35.765
registered for the next session 
in this room, we ask that you 

07:02:35.766 --> 07:02:41.001
exit the room and return via the
 registration line outside.  

07:02:41.002 --> 07:02:43.002
Thank you.  

07:02:45.509 --> 07:02:47.509
 of

07:03:49.835 --> 07:03:51.835
 session)

07:03:54.702 --> 07:03:56.702
 session.  Brand ambassadors 
(End of session)

07:07:41.422 --> 07:07:43.422
.     

07:18:10.990 --> 07:18:12.990
 Welcome.  Thank you for 
joining.  Our

07:20:14.717 --> 07:20:16.717
 session will begin soon.  

07:20:19.825 --> 07:20:22.609
 Welcome.  Please fill in the 
seats near the front of the 

07:29:04.902 --> 07:29:06.902
room.  Thank you.  

07:29:10.573 --> 07:29:17.201
 Hello everyone.  Let's see.  is
 my slides?  Welcome to the 

07:29:17.392 --> 07:29:22.177
afternoon, the second day of 
I/O.  I hope everyone is 

07:29:22.178 --> 07:29:26.777
enjoying their time here.   Lee.
  I'm here to give you more 

07:29:27.801 --> 07:29:30.997
information about where we are 
with Tango.  If you see the 

07:29:31.143 --> 07:29:33.982
keynote, which probably most of 
you did, you get to see a little

07:29:33.983 --> 07:29:37.241
 bit.  In this session, we will 
see a lot more and go into a lot

07:29:37.426 --> 07:29:41.998
 more depth, than we could 
otherwise.  So I wanted to start

07:29:42.228 --> 07:29:46.357
 with this quote from Beau 
Lotto.  A neuroscientist from 

07:29:46.358 --> 07:29:50.131
the university College London.  
He said the best technologies 

07:29:50.132 --> 07:29:55.407
are the ones that make the in
visible visible.   of that is a 

07:29:55.653 --> 07:29:59.055
microscope.  It is something -- 
it is a tool that allowed us to 

07:29:59.056 --> 07:30:01.675
see more things about our 
environment, things that may 

07:30:01.676 --> 07:30:03.676
have always been

07:30:04.975 --> 07:30:05.797
 there, but let us see things in
 a new way and gives us a better

07:30:05.798 --> 07:30:08.512
 understanding about how the 
world works and also changes the

07:30:08.847 --> 07:30:13.454
 way about how we view ourselves
 as well.  And most of our 

07:30:13.455 --> 07:30:22.677
devices today -- can play the 
video.  Yeah.   our devices 

07:30:22.678 --> 07:30:27.710
today view the world as a flat 
screen.  we're physical beings 

07:30:27.711 --> 07:30:31.651
in a physical world and we 
wanted to add the capabilities 

07:30:31.652 --> 07:30:39.036
of 3D with Tango, adding motion 
and sense of depth for objects 

07:30:39.037 --> 07:30:46.787
and services.  If I place this 
bottle here -- if it stays.  it 

07:30:46.788 --> 07:30:49.836
doesn't have a flat surface.  
Well, if I place the bottle 

07:30:50.383 --> 07:30:56.678
here.  It is a mere physical 
presence that is meaningful to 

07:30:56.679 --> 07:30:59.582
all of us.  I can refer to it 
and talk about it in a way that 

07:30:59.583 --> 07:31:02.301
we all understand because of the
 physical presence.  It is 

07:31:02.302 --> 07:31:05.472
because of the way our minds 
evolve.  If our tools understood

07:31:05.473 --> 07:31:08.650
 the fact this bottle was here 
before, we would have a shared 

07:31:08.651 --> 07:31:12.212
understooding with the people in
 this room and also with our 

07:31:12.213 --> 07:31:15.402
tools.  As a quick refresher, 
Tango has three new capabilities

07:31:15.572 --> 07:31:19.850
 for mobile devices.  Motion 
tracking, depth perception and 

07:31:19.851 --> 07:31:24.167
area learning.  You will learn 
more about the large-scale area 

07:31:24.168 --> 07:31:29.975
turning from Justin that we call
 the visual positioning  First, 

07:31:29.976 --> 07:31:35.445
let's take a quick recap of the 
hardware.   you may know, the 

07:31:35.446 --> 07:31:42.179
first device that came out with 
Tango enabled device, Lenovo 

07:31:42.501 --> 07:31:46.804
Phab 2 Pro.  It came out last 
fall with all the capabilities

07:31:47.994 --> 07:31:52.754
capabilities.  And the next was 
the Asus Zenfone.  It is Tango 

07:31:52.755 --> 07:31:58.293
enabled and Daydream ready with 
the quad HD display and sleek, 

07:31:58.294 --> 07:32:04.130
thin design.    We're pleased to
 mention that in later this 

07:32:04.282 --> 07:32:09.124
summer, Verizon stores across 
the country, customers can play 

07:32:09.125 --> 07:32:13.935
with the Zenfone across the 
United States, with other 

07:32:13.936 --> 07:32:15.936
international countries coming 
this summer as well.  In 

07:32:16.137 --> 07:32:21.117
addition to the phones, as you 
see in the keynote, we support 

07:32:21.118 --> 07:32:27.668
stand alone headsets for VR.  
working on a specialized version

07:32:27.669 --> 07:32:34.235
 of Tango that does tracking in 
3D.  We use two fish eye cameras

07:32:36.083 --> 07:32:40.162
 built into Tango to allow six 
position freedom and movement in

07:32:41.442 --> 07:32:43.617
 the VR headset.  Now, we all 
know that hardware is merely the

07:32:43.905 --> 07:32:48.073
 vehicle that carries new 
experience to users.  It is a 

07:32:48.074 --> 07:32:51.345
software that brings the 
experiences and value to the 

07:32:53.831 --> 07:32:54.622
users.  Let me show you a short 
video showing some of the great 

07:32:54.623 --> 07:33:01.375
work running on the platform 
today.  

07:33:10.296 --> 07:33:12.296
 (music)

07:33:55.552 --> 07:33:59.955
   JOHNNY LEE: So that's just a 
really short glimpse into some 

07:33:59.956 --> 07:34:03.443
of the hundred apps that are now
 available on the Play Store 

07:34:03.444 --> 07:34:06.621
since those phones came out a 
few months ago.  I would like to

07:34:06.837 --> 07:34:09.618
 highlight a few of these in 
three different categories.  

07:34:09.904 --> 07:34:16.425
Games, shopping and tools.  In 
games, electronic arts recently 

07:34:16.426 --> 07:34:21.249
released an update for their 
Sims free play which allowed you

07:34:21.378 --> 07:34:24.547
 to use Tango to walk through 
the environment of the houses 

07:34:24.548 --> 07:34:26.548
your Sims live in,

07:34:30.719 --> 07:34:33.876
 Brick Headz builder is a tool 
building game where you see your

07:34:34.450 --> 07:34:37.040
 characters come to life in 
front of you.  You can build 

07:34:37.041 --> 07:34:41.276
your custom models or work with 
the free models provided in the 

07:34:41.643 --> 07:34:43.643
game.

07:34:45.442 --> 07:34:51.388
 monster battle is a turn grid 
class game where you use 

07:34:51.389 --> 07:34:57.976
combinations of monsters to 
defeat your  One area we see a 

07:34:57.977 --> 07:35:05.770
lot of value for 3D visual
ization is shopping.  Pottery 

07:35:05.771 --> 07:35:12.097
barn placed products in your 
living room to see how it fits 

07:35:12.098 --> 07:35:15.805
with the existing furniture.  Or
 clear out the room and start 

07:35:15.806 --> 07:35:22.133
from scratch.  BMW lets you 
verify if you are interested in 

07:35:22.134 --> 07:35:29.999
the BMWI3.  And you can checkout
 the higher end I8 if you are 

07:35:30.225 --> 07:35:35.362
curious.  Look at the interior
interiors, configure it.  The 

07:35:35.541 --> 07:35:38.046
dashboard and chair details by 
moving around.  One of the areas

07:35:38.313 --> 07:35:41.451
 particularly hard is shopping 
for clothing online and having a

07:35:42.215 --> 07:35:46.761
 good fit.  Gap has been working
 with a company called Ava 

07:35:46.762 --> 07:35:52.465
metric which does physically 
accurate simulation.  You pick 

07:35:52.466 --> 07:35:56.095
the mannequin that best fits 
your body type, you will see how

07:35:56.420 --> 07:36:00.414
 different clothes will fit and 
stretch when you wear them.  to 

07:36:00.415 --> 07:36:03.359
these partners we have several 
other partners interested in 

07:36:03.360 --> 07:36:06.641
making applications to help you 
make better decisions when 

07:36:06.642 --> 07:36:10.511
shopping online with your phone 
or helping you shop in the  Now,

07:36:11.130 --> 07:36:15.227
 tools is also a really 
interesting category.  helps 

07:36:15.228 --> 07:36:18.213
create a new class that gives 
you the ability to make 

07:36:18.214 --> 07:36:20.269
measurements about your 
environment.  It is great for 

07:36:20.270 --> 07:36:23.556
people that are trying to get 
work done.  To give you a few 

07:36:23.557 --> 07:36:26.382
examples of these, we have a 
clip of what partners are doing 

07:36:26.383 --> 07:36:28.383
in this 

07:36:30.717 --> 07:36:39.514
area.     Our goal was to 
develop an app that allowed you 

07:36:39.515 --> 07:36:44.724
to do that.  Before Tango we 
were using the RGP camera and 

07:36:44.725 --> 07:36:50.383
noise URI to capture room.  We 
had to prevent the user from 

07:36:50.384 --> 07:36:55.017
moving during the capture 
process.  The Odom tree sensing 

07:36:55.018 --> 07:37:01.343
and RGP camera allows us to 
classify everything you see 

07:37:01.344 --> 07:37:07.946
through the device and all of 
that in the matter of  Trimble 

07:37:07.947 --> 07:37:15.292
has combined the mixed reality 
system, using paper plans 

07:37:15.293 --> 07:37:18.985
on-site to provide a real world 
understanding, future space 

07:37:18.986 --> 07:37:24.555
relative to today's space.  is a
 stage of the service of 

07:37:24.556 --> 07:37:27.481
investigation and installation 
stage in the pavement  Recently,

07:37:27.975 --> 07:37:31.934
 we were in the middle of 
mechanical coordination at the 

07:37:31.935 --> 07:37:35.154
General Motors technical center 
REEFRP and science building.  We

07:37:35.672 --> 07:37:39.267
 had modeling of the facility, 
but gaps that needed to be 

07:37:39.268 --> 07:37:43.752
filled to ensure the compressor 
would work.  We used the Tango 

07:37:43.753 --> 07:37:48.422
enabled device to capture 
information, verify clearances 

07:37:48.423 --> 07:37:54.745
and keep it  Cat live share 
gives us live audio, live video 

07:37:54.746 --> 07:38:01.737
and introduces augmented reality
 annotation.  It is mapping the 

07:38:01.738 --> 07:38:05.664
world real-time.  We can 
annotate this side of the 

07:38:05.932 --> 07:38:11.920
machine, spin around, annotate 
behind us, spin around and the 

07:38:11.921 --> 07:38:14.543
other annotations are still 
there.  It is the history of 

07:38:14.544 --> 07:38:19.597
where you have been around a  I 
am a supervisor in Toronto 

07:38:19.726 --> 07:38:26.320
Canada.  I use Google Tango for 
onsite data information.  You 

07:38:26.321 --> 07:38:30.824
get back texture information, 
and volume information and get 

07:38:30.825 --> 07:38:36.242
it at world scale.  Your actor 
is 5'4", you have that on 

07:38:36.615 --> 07:38:40.404
record. get the wrinkles in the 
costume, how they stand.  How 

07:38:40.405 --> 07:38:45.941
big is the doorway or prop.   
that data acquisition easy, 

07:38:46.554 --> 07:38:48.554
quick, and efficient. 

07:38:52.336 --> 07:38:59.266
 So there's --  Thanks.  That 
will give you a glimpse into the

07:38:59.425 --> 07:39:02.342
 kind of things that generally 
save people time or money to get

07:39:02.501 --> 07:39:06.313
 their jobs done.  We see the 
value of Tango providing more of

07:39:06.497 --> 07:39:10.541
 that to more people.  In terms 
of demos, one thing I wanted to 

07:39:10.542 --> 07:39:13.974
highlight is a Sandbox demo.  
How many of you have been to the

07:39:14.533 --> 07:39:18.078
 Tango Sandbox?  Oh, okay.  
About a third to half of you.  

07:39:18.079 --> 07:39:22.365
One of the demos there I like 
that is great is this one called

07:39:23.262 --> 07:39:27.762
 somewhere or welcome to oz.  
you walk into the space you see 

07:39:27.763 --> 07:39:31.996
the empty floor and two walls.  
With the work of a team up in 

07:39:31.997 --> 07:39:35.966
San Francisco trying to better 
estimate lighting, shadows, 

07:39:35.967 --> 07:39:41.084
reflections to make AR content 
blend better to the environment 

07:39:41.085 --> 07:39:48.189
when you look through the 
Zenfone AR -- is there a video? 

07:39:49.353 --> 07:39:51.353
 Back

07:39:52.591 --> 07:39:55.660
 one more.  That one.  Yes.  

07:40:08.636 --> 07:40:10.636
 (No 

07:40:25.769 --> 07:40:27.769
dialogue)

07:40:30.663 --> 07:40:35.035
   JOHNNY LEE: That's a really 
fun experience.  If you go to 

07:40:35.188 --> 07:40:38.218
Sandbox, you can get a selfie 
taken with one of the 

07:40:38.442 --> 07:40:41.203
characters, just like this.  
with the right work and focus on

07:40:41.450 --> 07:40:45.277
 lighting, shadows and 
reflections in the floor, the 

07:40:45.503 --> 07:40:50.645
compositing of the characters 
can look very realistic.  So let

07:40:50.646 --> 07:40:57.864
 me give you a demo of some of 
these live.  Switch to the 

07:40:58.164 --> 07:41:05.927
phone.  The first one I will 
show you is an app called HOLO. 

07:41:06.269 --> 07:41:09.773
 It is out of Los Angeles.  In 
addition to animated characters 

07:41:09.774 --> 07:41:14.108
we can actually do real world 
characters.  Or real life 

07:41:14.495 --> 07:41:17.326
people.  What they have is a 
capture system with a large 

07:41:17.327 --> 07:41:22.703
array of cameras that allow you 
to do live performances of 

07:41:22.704 --> 07:41:28.470
people and capture them in full 
3D.  Let's add someone you may 

07:41:28.471 --> 07:41:34.100
be familiar with.  Hey, it is 
great to be here.  Sorry I 

07:41:34.101 --> 07:41:36.761
couldn't be here in person.  But
 I did the next best thing, 

07:41:36.762 --> 07:41:40.884
which was sending my hologram, 
because you know, holograms are 

07:41:41.755 --> 07:41:50.321
cool.  hey -- I can walk around,
 look at him from a bunch of 

07:41:50.322 --> 07:41:54.790
different actors.   capture them
 in 3D, place them in a space 

07:41:54.791 --> 07:41:58.531
like this.  Because they're 
virtual in 3D, we can do 

07:41:58.532 --> 07:42:00.532
something a little more fun, 
like 

07:42:03.396 --> 07:42:08.028
this.  Hey, it is great to be --
 We'll do this

07:42:11.610 --> 07:42:13.798
 one.  And we'll shrink him.  

07:42:20.232 --> 07:42:29.145
this.  Whoa!  Okay.  Now, that, 
that is a big water bottle.   So

07:42:29.510 --> 07:42:32.598
 it is a lot of fun.  It shows 
you what's possible when there 

07:42:32.599 --> 07:42:36.610
is more and more content out 
there and people building these 

07:42:36.611 --> 07:42:38.611
type of 3D experiences.  

07:42:42.496 --> 07:42:47.498
 also have made a bunch of SDK 
improvements.  One of the ones I

07:42:47.831 --> 07:42:52.455
 want to show you is something 
we are calling cominternally, 

07:42:52.456 --> 07:42:58.666
but it is in-line on online 
drift building.  The 

07:42:58.667 --> 07:43:02.083
measurements are only useful if 
they stay attached to the world.

07:43:02.084 --> 07:43:05.824
  Drift correction is something 
that we have been wanting -- had

07:43:06.518 --> 07:43:10.259
 turned on as an experimental 
mode for a while.  We have been 

07:43:10.260 --> 07:43:13.935
making optimizations in the 
performance to run it real-time 

07:43:13.936 --> 07:43:18.731
all the time, without minimal 
impact with the application.  If

07:43:18.732 --> 07:43:22.738
 I shake the phone and lose 
tracking, it locks back on, 

07:43:22.739 --> 07:43:26.454
brings back the measurements to 
the same space.  If you update 

07:43:26.455 --> 07:43:31.994
the SDK -- (applause) Yeah, I 
think that's a cool one.  This 

07:43:31.995 --> 07:43:35.013
keeps content registered to the 
environment even if the user 

07:43:35.014 --> 07:43:39.472
walks away, puts it in their 
pocket, brings it back out, as 

07:43:39.473 --> 07:43:42.754
long as it is in the same 
session.  If you update the app 

07:43:42.755 --> 07:43:46.989
and work in one of the current 
SDK you will have the online 

07:43:46.990 --> 07:43:49.717
drift correction for you 
automatically.  So can we go 

07:43:49.718 --> 07:43:51.718
back to the slides? 

07:43:54.407 --> 07:43:58.974
 We also have a few other SDK 
improvements I would like to 

07:43:59.228 --> 07:44:04.345
share.  One big request --  this
 one is the constructor 

07:44:04.346 --> 07:44:06.820
developer tool, which is also 
being demoed in the Sandbox 

07:44:07.132 --> 07:44:11.953
area.  It is the first party 3D 
scanning app.  wanted to show 

07:44:11.954 --> 07:44:15.193
you a video showing should of 
the updated results.  This is 

07:44:15.194 --> 07:44:20.526
all data that has been captured 
with the Lenovo Phab 2 Pro and 

07:44:20.527 --> 07:44:24.286
professed on the Phab 2 Pro.  
quality of the reconstruction is

07:44:24.568 --> 07:44:28.543
 actually pretty good.  It is 
not fully photo realistic, but 

07:44:28.544 --> 07:44:31.626
you get a good sense of the 
environment and walking around 

07:44:31.627 --> 07:44:35.563
and details and a sense of the 
space.  One of the cool things 

07:44:35.564 --> 07:44:40.234
is with the Asus phone, it is 
Tango enabled and Daydream 

07:44:40.383 --> 07:44:44.815
ready.  can scan a room in full 
3D and get these kind of 

07:44:45.029 --> 07:44:50.201
captures, but we added a VR 
viewing mode so with the press 

07:44:50.202 --> 07:44:54.108
of a button, you can put it in 
the headset and move through the

07:44:54.848 --> 07:44:57.834
 apartment you scanned using the
 Daydream controller to teleport

07:44:58.067 --> 07:45:00.665
 through this apartment.  It is 
amazing that you can do all of 

07:45:00.666 --> 07:45:04.786
this with a phone that fits in 
your pocket. 

07:45:08.321 --> 07:45:12.150
 We've talked to some 
developers, not everyone knows 

07:45:12.151 --> 07:45:14.151
what to

07:45:16.903 --> 07:45:24.267
 want a floor plan.  We took 
algorithms and export a 2D floor

07:45:25.186 --> 07:45:29.123
 plan to walk around, get an 
estimate of the doors, walls 

07:45:29.124 --> 07:45:31.985
around furniture.  One 
interesting thing, the developer

07:45:32.545 --> 07:45:39.897
 that did this, realized his 
apartment is 50 square feet 

07:45:39.898 --> 07:45:43.306
smaller than it was supposed to 
be.  You could literally use 

07:45:43.307 --> 07:45:47.147
this to renegotiate your rent if
 you felt like you were charged 

07:45:47.282 --> 07:45:54.647
too. got feedback that better 
occulusion tools is desired.  

07:45:54.648 --> 07:45:58.247
have coming soon examples of 
real-time shaders that combine 

07:45:58.248 --> 07:46:04.017
the data from the RGP and depth 
camera to do effects like this 

07:46:04.018 --> 07:46:07.589
really easily, and without a lot
 of hassle, writing your code to

07:46:07.769 --> 07:46:12.430
 figure out how to do this well.
   some sample code on using 

07:46:12.431 --> 07:46:19.421
data from the RGB camera to 
improve environmental 

07:46:19.569 --> 07:46:24.555
illustration.  The shadows add a
 lot to whether it is really 

07:46:24.768 --> 07:46:29.352
there.  You can see the 
reflection of the notebook and 

07:46:29.353 --> 07:46:34.459
the mug in the pool  is ways to 
go before it is Hollywood 

07:46:34.460 --> 07:46:38.120
special effects, this isn't bad 
for real-time capability on 

07:46:38.244 --> 07:46:42.346
phones.  We're also happy to say
 that if you're one of the 

07:46:42.347 --> 07:46:47.574
developers that worked on one of
 the 40 thousand uforia apps 

07:46:47.575 --> 07:46:54.420
currently in the Play Store, 
Vuforia has Tango integration. 

07:46:54.421 --> 07:46:58.724
Vuforia apps will work on a 
broad range of phones, but on 

07:46:58.725 --> 07:47:01.408
Tango phones it will benefit 
from the smart terrain system 

07:47:01.409 --> 07:47:04.545
that processes the point Cloud 
and better tracking from the 

07:47:04.546 --> 07:47:10.069
fish eye camera.  We're really 
happy to welcome this augmented 

07:47:10.070 --> 07:47:14.392
reality community that's been 
around for a few years.  Another

07:47:15.180 --> 07:47:19.474
 exciting thing that we wanted 
to share, give a little detail 

07:47:19.475 --> 07:47:24.133
on is web AR and chromium.  
Today, if you want to take 

07:47:24.134 --> 07:47:28.935
advantage of the benefits of AR 
and place objects in a person's 

07:47:29.132 --> 07:47:33.149
room, you have to convince the 
user, to find your application, 

07:47:33.534 --> 07:47:38.516
download it and install the app.
  Like with web VR, wouldn't it 

07:47:38.517 --> 07:47:43.488
be great to go to a URL and 
suddenly, you can download and 

07:47:43.489 --> 07:47:47.561
pull the assets right away.  If 
we can view AR content as we can

07:47:49.495 --> 07:47:53.945
 view video on the web, that 
would be great.  So this is 

07:47:53.946 --> 07:47:59.638
actually an early prototype of 
chromium web browser at a 

07:47:59.639 --> 07:48:05.293
warfare website.  You can see 
the motion tracking, depth data 

07:48:05.294 --> 07:48:09.036
are piped into the web page.  
person has drawn out a box in 

07:48:09.037 --> 07:48:12.957
the living room and said what 
tables will fit in this space.  

07:48:12.958 --> 07:48:18.165
And wayfair responds with the 
tables that will fit the 

07:48:18.166 --> 07:48:21.471
constraints and render that 
obvious inside the web browser. 

07:48:21.753 --> 07:48:25.746
 As you think about content 
being able to discover content 

07:48:26.076 --> 07:48:29.126
easily, we view this as a really
 interesting way to make it much

07:48:29.654 --> 07:48:31.654
 easier for people who own

07:48:35.477 --> 07:48:39.695
 3D assets and want the assets 
to users much more quickly 

07:48:39.696 --> 07:48:45.146
without having to preinstall a 
specific app.  Now, to tell you 

07:48:45.147 --> 07:48:49.681
a little bit more about location
 and AR and our visual 

07:48:50.542 --> 07:48:53.442
positioning service, let me hand
 it off to Justin.  

07:48:59.798 --> 07:49:04.836
   JUSTIN QUIMBY: Thanks, 
Johnny, my name is Justin 

07:49:04.994 --> 07:49:08.425
Quimby, we made a lot of 
progress on the location-based 

07:49:08.426 --> 07:49:12.462
AR.  I'm thrilled at the chance 
to show off what the team has 

07:49:12.463 --> 07:49:17.365
been working on.  So clay 
mentioned the visual positioning

07:49:17.567 --> 07:49:21.183
 service at the keynote.  I'm 
proud to say the service has 

07:49:21.184 --> 07:49:25.796
apps running on it today.  The 
first app, which launched on VPS

07:49:26.117 --> 07:49:35.053
 was an app entitled lumen, 
built by good to go and running 

07:49:35.054 --> 07:49:43.675
at the Detroit museum of arts.  
It navigates you to the exhibits

07:49:43.964 --> 07:49:46.692
 and visual content when you 
arrive at the exhibits.  Here 

07:49:46.693 --> 07:49:49.502
you can see a visitor getting 
navigation to a specific 

07:49:49.794 --> 07:49:55.508
exhibit.  This is using no 
Bluetooth beacons.  No Wi-Fi 

07:49:55.509 --> 07:50:00.404
maps or GPS.  This is entirely 
visual navigation.  Then once it

07:50:00.405 --> 07:50:06.627
 is  -- once the user gets to 
the exhibit -- I'll skip to the 

07:50:06.628 --> 07:50:10.979
next slide.  Once you get to the
 exhibit, you can then see 

07:50:10.980 --> 07:50:16.592
digital content overlaid on top 
of the real world.  you see a 

07:50:16.593 --> 07:50:21.915
CAT scan of at mummy in the real
  allows visitors through the 

07:50:21.916 --> 07:50:24.938
Phab 2 Pro to see through the 
outer wrapping and revealing the

07:50:25.412 --> 07:50:28.588
 skeleton underneath.  As a 
result of the overlay of digital

07:50:28.980 --> 07:50:31.995
 information in the real world, 
visitors can see the really 

07:50:31.996 --> 07:50:35.764
large crack on the skull of the 
mummy.  This blending of the 

07:50:35.765 --> 07:50:39.417
real and digital means that 
visitors are actively engaging 

07:50:39.418 --> 07:50:43.699
with and learning from the 
mummy, rather than walking in 

07:50:43.700 --> 07:50:47.592
the room and saying hey it's a 
mummy and leaving.  In part, 

07:50:47.593 --> 07:50:53.075
because of this, lumen won the 
American alliance of museums 

07:50:53.076 --> 07:50:57.792
annual competition for the games
 in augmented reality app 

07:50:57.793 --> 07:51:02.414
category because the app 
delivers meaningful visitor 

07:51:02.545 --> 07:51:07.012
outcomes.  we've also launched 
an AR experience at the art 

07:51:07.013 --> 07:51:10.126
science museum in Singapore, 
which you saw at Johnny's 

07:51:10.127 --> 07:51:14.437
keynote this morning.  This app 
transforms a thousand square 

07:51:14.438 --> 07:51:21.064
meters of the museums into a 
virtual rain for est, which you 

07:51:21.065 --> 07:51:26.718
can explore.  It is made by 
several organizations in 

07:51:26.719 --> 07:51:33.285
associate with Panasonic, and 
others including an art rift in 

07:51:33.984 --> 07:51:40.098
Singapore, Brian Tan.   
Singapore National Museum 

07:51:40.099 --> 07:51:45.104
launched a VPS.  This lets 
visitors explore the museum and 

07:51:45.105 --> 07:51:49.591
see how it evolved over the last
 130 years.  This floating whale

07:51:50.119 --> 07:51:54.352
 skeleton used to be in the 
museum, but was transferred to 

07:51:54.353 --> 07:51:58.815
Malaysia in the 1970s.  You have
 parents taking their kids and 

07:51:58.816 --> 07:52:02.283
explaining to them what they 
used to see when they were kids 

07:52:02.284 --> 07:52:05.697
visiting the museum.  it a 
digital object placed in the 

07:52:05.896 --> 07:52:10.744
world, it can show not just the 
skeleton, but a full whale, not 

07:52:10.745 --> 07:52:18.359
just a static whale, but a whale
 and how it eats.  It is not 

07:52:18.360 --> 07:52:24.377
just museum that launched apps 
using VPS.  We launched the 

07:52:24.378 --> 07:52:29.010
treasure hunt experience in 
connection to the MGM Grand in 

07:52:29.011 --> 07:52:32.520
Las Vegas.  This app allows 
players to go on a digital 

07:52:32.521 --> 07:52:37.083
treasure hunt for coins within 
the casino.  They can use those 

07:52:37.084 --> 07:52:42.642
to win real world prizes.   
succeeds when our partners 

07:52:42.788 --> 07:52:45.538
succeed.  We're fortunate to 
have a partner here with us, 

07:52:45.539 --> 07:52:50.494
Kyle from Lowe's to talk about 
how they built on top of the 

07:52:50.495 --> 07:52:56.429
platform to solve real problems 
for users. Thanks, thanks 

07:52:56.692 --> 07:52:59.409
Justin.  So when you think of 
Lowe's you don't necessarily 

07:52:59.410 --> 07:53:03.543
think of emerging tech like 
Tango.  You know, every 

07:53:03.544 --> 07:53:06.954
organization on the planet said 
they want to create the new 

07:53:06.955 --> 07:53:09.513
disruptive tools, but that is 
harder than it seems.  There are

07:53:09.844 --> 07:53:13.001
 two things to figure out.  What
 you want to work on and what 

07:53:13.002 --> 07:53:16.556
you don't want to work on.  So 
to figure that out, we get 

07:53:16.557 --> 07:53:19.360
people together inside and 
outside of the company to work 

07:53:19.361 --> 07:53:23.485
on those things.  You need an 
intuitive way to help people 

07:53:23.486 --> 07:53:26.314
understand the future.  That's a
 hard thing.  We do that through

07:53:26.665 --> 07:53:29.958
 story.  We create actual 
narratives about the future we 

07:53:29.959 --> 07:53:33.272
want to build and we work 
backwards to bring it to life.  

07:53:33.273 --> 07:53:36.888
This is a scene from our first 
story that we turned into a 

07:53:36.889 --> 07:53:40.760
comic book.  It turned out to be
 the most disruptive tool we 

07:53:40.761 --> 07:53:45.058
ever built.  One of the hardest 
things about home improvement is

07:53:45.373 --> 07:53:47.844
 it is really hard to envision 
how the project is going to turn

07:53:48.052 --> 07:53:52.458
 out.  even harder to 
communicate that to the person 

07:53:52.459 --> 07:53:55.424
you have to convince to 
communicate that to somebody 

07:53:55.425 --> 07:53:59.725
else.  So it is estimated that 
$70 billion in projects every 

07:53:59.726 --> 07:54:04.444
year go ununfulfilled just 
because of the visualization 

07:54:04.575 --> 07:54:08.427
problem.  We knew we could use 
visualization tech to build new 

07:54:08.428 --> 07:54:11.490
tools to help solve this 
problem.  We use our comic book 

07:54:11.491 --> 07:54:14.923
to show the executive team what 
the future would look like and 

07:54:14.924 --> 07:54:18.990
all about bringing the intuitive
 solutions to life in order to 

07:54:18.991 --> 07:54:22.933
influence human behavior.  It is
 not about building tech for 

07:54:22.934 --> 07:54:29.010
tech's sake.  The executive's 
reaction after seeing the comic 

07:54:29.011 --> 07:54:33.515
book was to go build it. did it.
  Four years ago we brought the 

07:54:33.516 --> 07:54:37.425
first iteration of the augmented
 reality design solution that we

07:54:37.426 --> 07:54:41.282
 call the Holoroom into two of 
the Canadian stores.  Four years

07:54:41.657 --> 07:54:45.323
 ago, it was really early, the 
tech was rough, we used our 

07:54:45.324 --> 07:54:50.116
stores as living labs that would
 show us so we could get real 

07:54:50.117 --> 07:54:52.117
feedback from actual customers 
and

07:54:55.198 --> 07:54:59.372
 employees, to create solutions 
that work for our real people 

07:54:59.373 --> 07:55:02.207
and real customers.  We talked 
about what we were doing loudly.

07:55:02.208 --> 07:55:05.462
  attention of that is to 
attract more uncommon partners. 

07:55:05.760 --> 07:55:08.915
 You know, the kinds of people 
and organizations that you 

07:55:08.916 --> 07:55:12.592
wouldn't expect Lowe's to work 
with.  To help us achieve this 

07:55:12.778 --> 07:55:16.037
narrative.   one of the earliest
 partners to respond to the 

07:55:16.195 --> 07:55:20.312
call.  In the earliest days of 
AR and VR we worked with Google 

07:55:20.313 --> 07:55:23.569
to push the future further, 
faster.  In the second 

07:55:23.922 --> 07:55:27.993
generation, you can see in the 
Holoroom, the Google cardboard 

07:55:27.994 --> 07:55:32.683
vending machine, that I love, to
 give customers, the take away 

07:55:32.684 --> 07:55:35.479
VR experience.  It is not just 
about creating stuff, but 

07:55:35.480 --> 07:55:38.689
creating stuff that works.  
Really, it is not about VR and 

07:55:39.000 --> 07:55:42.115
AR.  This kitchen vignette is 
what you typically see when you 

07:55:42.116 --> 07:55:45.323
come into one of the stores.  
The benchmark is not what is the

07:55:45.714 --> 07:55:50.672
 best AR or VR experience.  It 
is the way customers visualize 

07:55:50.673 --> 07:55:54.189
today that is decidedly low 
tech.  When we build experiences

07:55:54.784 --> 07:55:59.309
 that are so far from today this
 kitchen vignette, how do we 

07:55:59.310 --> 07:56:04.059
know it is working?  We quickly 
found the right tools didn't 

07:56:04.060 --> 07:56:08.191
exist if people like something 
they didn't experience  truly 

07:56:08.192 --> 07:56:11.953
new like Tango.  My background 
is in behavioral science I 

07:56:11.954 --> 07:56:15.554
teamed up with partners from 
academia to take the research 

07:56:15.555 --> 07:56:20.723
and turn it into an applied 
neural science tool.  This 

07:56:20.724 --> 07:56:25.447
turned into neurons, Inc. can't 
trust peoples stated reaction to

07:56:25.716 --> 07:56:30.277
 tech that is so new.  They say 
I love it, take it off, never 

07:56:30.278 --> 07:56:36.641
put it on again. science allows 
us to tap into the unstated 

07:56:36.642 --> 07:56:40.669
reactions through different 
measures.  We use AR and VR 

07:56:40.670 --> 07:56:44.526
technologies and our studies 
show the busy kitchen vignettes 

07:56:44.527 --> 07:56:48.878
were causing cognitive overload.
  And as you can see here in 

07:56:48.879 --> 07:56:54.346
this bar.  low emotional 
engagement and motivation.  

07:56:54.520 --> 07:57:00.029
Next, we tested all other VR and
 AR tools.  They did better, but

07:57:00.333 --> 07:57:03.838
 still overwhelming.  When we 
tested Tango early on for 

07:57:03.962 --> 07:57:08.553
customers, we saw for the first 
time the optimal level of 

07:57:08.554 --> 07:57:12.381
cognitive interest, engaged, 
motivated in a positive way, all

07:57:12.550 --> 07:57:19.057
 of this meant we hit upon a 
truly intuitive  Last fall we 

07:57:19.058 --> 07:57:25.529
celebrated the first ever global
 launch with the Lowe's global 

07:57:25.530 --> 07:57:30.791
app, at the same time, we 
launched the Lenovo Phab 2 Pro 

07:57:30.792 --> 07:57:37.950
at low Lowe's.  Introducing 
digital power tools.  The phone 

07:57:37.951 --> 07:57:43.065
sold out a few days after 
launch.   selling phones.  Since

07:57:43.324 --> 07:57:46.519
 the vision we have had a 
positive response from customers

07:57:46.704 --> 07:57:51.320
 who said how comfortable it is 
to use this platform to design 

07:57:51.321 --> 07:57:54.653
their homes.  Now we're an early
 partner in the positioning of 

07:57:54.654 --> 07:58:00.953
the stores.  In-store mapping to
 help customers find products 

07:58:01.310 --> 07:58:04.318
faster.  Based on the positive 
response, we are excited to 

07:58:04.319 --> 07:58:09.612
announce Google will map 400 
more stores.  To give an example

07:58:09.847 --> 07:58:13.098
 of what it is like to use this 
app in our store, checkout this 

07:58:13.293 --> 07:58:15.293
video.  

07:58:17.527 --> 07:58:21.535
   Well, here we are inside.   
are anything like me, you get to

07:58:21.716 --> 07:58:25.692
 these places and you are like 
oh, my God, where do I even 

07:58:27.007 --> 07:58:30.746
start!? Fortunately have a Tango
 phone that will help me get 

07:58:30.747 --> 07:58:35.104
from product to product by what 
I need way faster than normal.  

07:58:35.105 --> 07:58:39.532
Let's have a look here.  Okay, I
 will open up the Lowe's app 

07:58:39.720 --> 07:58:43.646
here, pull up my shopping list. 
 Now, this stuff is all over the

07:58:43.848 --> 07:58:49.714
 store and normally you would be
 like where is and any of it?  

07:58:49.715 --> 07:58:55.118
With this, I can navigate and my
 phone will tell me, we're over 

07:58:55.119 --> 07:58:57.119
this 

07:58:59.450 --> 07:59:08.524
way.  outdoor extension cord.  
Okay, we got that.   Okay.  And

07:59:09.578 --> 07:59:15.219
 a number 9, pretty good.  
Number 9, got it.  Oh, hey 

07:59:15.627 --> 07:59:18.281
there.  What are you doing here?

07:59:27.574 --> 07:59:36.522
Shopping.  hex bolt.  Check! 
Kyle: Great. 

07:59:37.717 --> 07:59:39.717
  Thank you

07:59:44.122 --> 07:59:49.555
 thank you.  Thanks, man.  
Thanks, Kyle.  Partners are a 

07:59:49.556 --> 07:59:52.933
critical component of the Tango 
ecosystem and we're

07:59:56.111 --> 08:00:00.549
 thrilled to be working with 
Lowe's.  common thread is 

08:00:00.550 --> 08:00:04.986
they're built on top of the 
indoor environments and create 

08:00:05.637 --> 08:00:11.010
location-based AR experiences. 
get into the details of how it  

08:00:11.011 --> 08:00:15.852
The visual positioning service 
is comprised of mapping, Cloud 

08:00:16.036 --> 08:00:19.424
processing, client localization.
  Now the first step is that of 

08:00:19.425 --> 08:00:24.867
creating a map.  So in a venue 
which has given us permission, 

08:00:24.868 --> 08:00:28.008
such as this Lowe's store, 
collection involves walking 

08:00:28.009 --> 08:00:32.028
through the store, through the 
main pathways with the Tango 

08:00:33.107 --> 08:00:37.651
device.  With the wide angle 
camera, with the Tango stack, it

08:00:38.263 --> 08:00:42.575
 creates a data set of the 
environment you see on the 

08:00:42.827 --> 08:00:46.394
right.  The data is uploaded 
into the Cloud.  Which brings us

08:00:46.510 --> 08:00:51.231
 to the second step.  The Cloud 
processing pipeline.  So here's 

08:00:51.232 --> 08:00:56.991
a visualization of an 
aggregation of all the different

08:00:56.992 --> 08:01:03.376
 mapping runs of the Lowe's 
store.  We're computing the 

08:01:03.377 --> 08:01:08.677
points in the scene.  The data 
sets are processed aligned and 

08:01:08.678 --> 08:01:12.599
then out into the Cloud map.  
This is based on purely visual 

08:01:12.600 --> 08:01:18.952
feature tracking.  Doesn't need 
blew tooth or Wi-Fi or GPS to 

08:01:18.953 --> 08:01:22.383
create this map.  Every capture 
and recapture is incorporated 

08:01:22.384 --> 08:01:28.066
into the map and improves it.  A
 note on side.  of the larger 

08:01:28.067 --> 08:01:33.710
venues on VPS is a shopping 
mall.  square feet.  We use

08:01:37.364 --> 08:01:41.510
 1.3 million ski key frames, and
 provide localization from a 

08:01:41.511 --> 08:01:45.994
centimeter to five centimeters. 
 This is a scaleable system to 

08:01:45.995 --> 08:01:52.669
tackle your living room but 
massive indoor facilities.  Once

08:01:56.018 --> 08:02:04.125
 involve  -- VPS is completed, 
then we can use it on any 

08:02:04.126 --> 08:02:07.680
device.  Let's return to the 
SAMS Lowe's store.  This is a 

08:02:07.681 --> 08:02:11.595
video of a device localizing in 
the Lowe's store.  You can 

08:02:11.596 --> 08:02:20.116
control permissions for GPS and 
so too do you have control to 

08:02:20.117 --> 08:02:24.529
apps localized.  You need to 
give the app permission to use 

08:02:24.530 --> 08:02:28.180
the camera and gamer positions. 
 Once it granted the 

08:02:28.328 --> 08:02:30.648
permissions, it is moving 
through the environment to look 

08:02:30.649 --> 08:02:33.973
for visual features and map 
those against the stored Cloud 

08:02:34.339 --> 08:02:38.204
map.  This provides continuous 
adjustment and alignment between

08:02:38.428 --> 08:02:45.811
 the device's position and AR 
content placed in that  So ... 

08:02:46.340 --> 08:02:49.081
VPS -- yeah.  Go forward

08:02:55.087 --> 08:02:59.366
 one all right.  VPS provides 
you the developer, a coordinate 

08:02:59.367 --> 08:03:03.799
system to overlay digital 
content into the real world.  

08:03:03.800 --> 08:03:07.095
The CAT scan of the mummy.  All 
of the products in a Lowe's 

08:03:07.241 --> 08:03:12.210
store.  The treasure hunt in the
 MGM Grand all use the same back

08:03:12.384 --> 08:03:17.028
 end service.   we have 150 
buildings mand and running on 

08:03:18.615 --> 08:03:20.637
VPS.  So great.  You have

08:03:23.926 --> 08:03:28.817
 a little more information on 
how is works.   you build for 

08:03:29.566 --> 08:03:36.056
it?   VPS is in private are 
interested in developing, go to 

08:03:36.057 --> 08:03:40.860
the link and sign up for more 
information as we bring more and

08:03:41.209 --> 08:03:44.511
 more developers to the platform
 over the course of the coming 

08:03:44.680 --> 08:03:49.612
months.  But what you can do 
today is build an AR app based 

08:03:49.613 --> 08:03:54.073
on the core capabilities.  
tracking, depth sensing, area 

08:03:54.598 --> 08:03:59.417
learning, which are foundational
 for creating great aerial 

08:03:59.604 --> 08:04:01.620
experiences.  The final step is 
thinking about what would you 

08:04:01.621 --> 08:04:09.028
build if you had a persistent AR
 layer over the world?  As you 

08:04:09.029 --> 08:04:12.959
saw at the keynote with 
Expeditions when you create 

08:04:12.960 --> 08:04:15.798
experiences that allow multiple 
people to have a shared 

08:04:15.799 --> 08:04:19.272
experience across multiple 
devices, not only are you adding

08:04:19.273 --> 08:04:23.545
 it digital content to the real 
world, but you are also adding 

08:04:23.546 --> 08:04:26.385
shared meaning to the 
interactions among people. 

08:04:26.386 --> 08:04:32.742
believe that's one of the most 
powerful aspects of AR.  

08:04:37.005 --> 08:04:42.044
 for consistent and transient 
maps of space, on which people 

08:04:42.045 --> 08:04:47.341
can experience the same or 
content together.  is a tool 

08:04:47.342 --> 08:04:51.438
we're building to enable you to 
create amazing location-based AR

08:04:51.906 --> 08:04:54.362
 experiences.  We can't wait to 
see what you build on top of 

08:04:54.363 --> 08:04:57.564
this service.  Let's all aim to 
build experiences which bring 

08:04:57.565 --> 08:04:59.565
our users joy, like 

08:05:02.479 --> 08:05:06.550
this.  So with that, I would 
like to hand it back to Johnny 

08:05:06.551 --> 08:05:08.551
to talk about the future.  

08:05:13.203 --> 08:05:16.507
   JOHNNY LEE: Thanks, Justin.  
really great to see the past 

08:05:16.508 --> 08:05:19.668
year of progress we've made with
 content partners and location 

08:05:19.669 --> 08:05:23.871
service over the past year.  But
 I'd like to leave you with a 

08:05:23.872 --> 08:05:28.983
glimpse ahead.  this sample of 
what we've been working on as 

08:05:28.984 --> 08:05:33.103
research projects either 
internally or externally to 

08:05:33.104 --> 08:05:36.271
paint a little bit of the road 
ahead.  Some of these are done 

08:05:36.272 --> 08:05:41.042
with partners.  Important to say
 these aren't necessarily things

08:05:41.359 --> 08:05:46.975
 in the roadmap or know 
determinant ship date, but a 

08:05:46.976 --> 08:05:49.750
sense of where things are going 
over time.  So we can 

08:05:54.901 --> 08:05:56.901
 (No dialogue)

08:08:00.775 --> 08:08:03.480
 (Applause)   JOHNNY LEE:

08:08:08.049 --> 08:08:12.695
 I think that drone video is 
pretty sweet!  that's some of 

08:08:12.696 --> 08:08:16.669
the work we have been doing with
 partners experimental and 

08:08:16.670 --> 08:08:19.752
research work.  But overtime, we
 hope to start to bring more and

08:08:20.150 --> 08:08:23.526
 more into the platform so 
people like you can use them.  

08:08:23.527 --> 08:08:28.247
the next 12 months, the team is 
working hard to bring Tango 

08:08:28.248 --> 08:08:31.296
capabilities to more and more 
devices.  Be they phones or 

08:08:31.297 --> 08:08:35.532
stand alone headsets.  We do 
expect that number to grow 

08:08:35.533 --> 08:08:39.431
rapidly.  We do believe one day 
all our phones will have some 

08:08:39.432 --> 08:08:42.746
form of this capability built 
in.  As you see in the video, 

08:08:42.747 --> 08:08:48.508
the ability to have indoor 
precise capabilities like VPS 

08:08:48.509 --> 08:08:53.901
will allow new types of spatial 
computing, and in the wearable 

08:08:53.902 --> 08:08:58.959
space and in the future, robotic
 platforms.   a lot of exciting 

08:08:58.960 --> 08:09:02.107
work to come.  Working with more
 of you, the developers to 

08:09:02.108 --> 08:09:05.725
create new experiences to 
enhance the way we play, the way

08:09:05.726 --> 08:09:09.146
 we shop and find a way in 
stores or new ways of learning. 

08:09:09.870 --> 08:09:13.819
 Tango allows us to interact 
with digital content in a 

08:09:13.820 --> 08:09:20.233
physical way bringing new forms 
of interMERSive computing.  For 

08:09:20.234 --> 08:09:27.357
more information go to our 
website or consider joining our 

08:09:27.358 --> 08:09:35.986
goinggoing -- Google + 
community.  for joining us.  the

08:09:35.987 --> 08:09:39.865
 rest of  Thank you for joining 
this session.  Brand ambassadors

08:09:40.117 --> 08:09:46.057
 will assist in directing you 
through the designated exits . 

08:09:46.058 --> 08:09:48.450
be making room for those 
registered for the next session.

08:09:48.451 --> 08:09:52.717
  If you are registered for the 
next session in this room, we 

08:09:52.718 --> 08:09:56.512
ask that you clear the room and 
return via the registration line

08:09:56.687 --> 08:10:00.450
 outside.  Thank you.   of 

08:22:37.407 --> 08:22:38.816
.
»  .  

08:22:38.817 --> 08:22:39.817
.
.

08:22:38.817 --> 08:22:40.817
»

08:22:55.891 --> 08:22:56.431
.
».

08:22:56.432 --> 08:23:02.187
» Test test test test test test 
test test test  .  

08:23:02.188 --> 08:23:02.562
.  
.  

08:23:02.563 --> 08:23:03.238
.  
.  

08:23:03.239 --> 08:23:11.457
.
4:30 session, build great

08:23:13.424 --> 08:23:15.424
 monetization with all new AdMob

08:23:18.586 --> 08:23:20.586
  . 

08:25:33.913 --> 08:25:39.379
                                             Build
 Great Monetization With All new

08:25:33.913 --> 08:25:34.377
 AdMob.
.  

08:25:34.378 --> 08:25:36.378
.  
. 

08:25:53.327 --> 08:25:54.327
.
.  

08:25:53.327 --> 08:25:55.327
. 

08:26:34.670 --> 08:26:36.927
Sgll       

08:26:50.914 --> 08:26:52.914
    Zeptolab

08:27:13.968 --> 08:27:15.968
           Bb

08:27:18.516 --> 08:27:20.516
 ingo Blast

08:27:31.038 --> 08:27:33.038
 Crina

08:27:38.648 --> 08:27:40.648
   ash Arena

08:27:43.565 --> 08:27:46.398
                             .  
.  

08:27:46.399 --> 08:27:47.109
.  
.  

08:27:47.110 --> 08:27:49.110
. 

08:28:01.868 --> 08:28:05.734
4:30 session, Build Great 
Monetization with All-New AdMob.

08:28:01.868 --> 08:28:02.563
.  
.  

08:28:02.564 --> 08:28:03.087
.  
.  

08:28:03.088 --> 08:28:04.007
.  
.  

08:28:04.008 --> 08:28:04.314
.  
.  

08:28:04.315 --> 08:28:05.025
.  
.  

08:28:05.026 --> 08:28:05.805
.  
.  

08:28:05.806 --> 08:28:06.569
.  
.  

08:28:06.570 --> 08:28:08.570
.  
. 

08:28:31.630 --> 08:28:33.630
Read hot labs

08:28:42.700 --> 08:28:44.700
 .
Rbs rbs

08:28:53.493 --> 08:28:57.280
                 .  
.

08:28:57.281 --> 08:28:58.844
.
» Hello, everybody.  Thank you 

08:28:58.845 --> 08:29:01.666
for coming all the wait out here
.  We're in the furthest booth 

08:29:01.667 --> 08:29:05.659
here and it's a beautiful day.  
Excited to have you all here at 

08:29:05.660 --> 08:29:10.089
IO  .
It's just incredible to see how 

08:29:10.090 --> 08:29:15.202
much apps have really taken off 
and the functionality you guys 

08:29:15.203 --> 08:29:19.365
are delivering in the apps.  
There's no question apps have 

08:29:19.366 --> 08:29:25.227
become an essential part of 
everybody's daily lives now, and

08:29:25.228 --> 08:29:26.592
 that's great to see  .
Something my team is really 

08:29:26.593 --> 08:29:31.717
really happy about is we get to 
be here with you, helping you 

08:29:31.718 --> 08:29:35.366
succeed here.  And we know this 
because we're excited, we see 

08:29:35.367 --> 08:29:41.495
this number, we're at a million 
apps across Android and Ios S 

08:29:41.496 --> 08:29:44.738
and it's very exciting for us to
 see this kind of usage  .

08:29:44.739 --> 08:29:48.408
So here's another number, we're
        we're really proud of.  

08:29:48.409 --> 08:29:54.719
We paid out over $3 enough
        and a half billion to 

08:29:54.720 --> 08:29:59.001
developers in ad revenue.  Gear
      We're going to keep 

08:29:59.002 --> 08:30:01.487
investing in this platform and 
make this number grow and grow 

08:30:01.488 --> 08:30:05.255
and continue to grow  .
So at Google we want to help you

08:30:05.493 --> 08:30:10.087
 develop your apps, grow your 
users and earn.  And today we're

08:30:10.202 --> 08:30:15.138
 going to focus here on earn 
because that's where AdMob can 

08:30:15.139 --> 08:30:18.951
help make a difference in your 
business.  For some of you, NF 

08:30:18.952 --> 08:30:20.952
purchasing is something that 
works really well

08:30:24.912 --> 08:30:27.588
 for monetization but for most 
apps most users are not paying 

08:30:27.589 --> 08:30:30.693
and most are free downloads.  
That means advertising is an 

08:30:30.694 --> 08:30:34.732
essential part for a lot of you.
  So it's really our mission

08:30:38.470 --> 08:30:41.594
 here so really make the best 'd
    ad experiences help      ap

08:30:41.812 --> 08:30:45.036
    and help developers succeed 
as much as possible by 

08:30:45.037 --> 08:30:47.639
delivering those great 
experiences to your users  .

08:30:47.640 --> 08:30:50.406
These are questions we wake up 
with every day.  We're always 

08:30:50.407 --> 08:30:57.002
thinking about this.  Sometimes 
these questions keep us up very 

08:30:57.003 --> 08:31:00.488
late at night.  Things like is 
there a better way to match ads 

08:31:00.489 --> 08:31:06.211
to users.  Portrait we some 
#340er and more                 

08:31:06.212 --> 08:31:08.975
more and more, is that the new 
horz willing        ant   

08:31:09.244 --> 08:31:13.494
 izontal.  Or how do I manage 
regional networks that are 

08:31:13.495 --> 08:31:16.687
coming up, manage all of them 
when I'm a small development 

08:31:16.688 --> 08:31:21.081
shop or use less engineers this 
these large developers  .

08:31:21.082 --> 08:31:25.061
Like these questions, they are 
pretty important.  They really 

08:31:25.062 --> 08:31:29.544
do keep us up at night.  9   
Because the thing is, 

08:31:29.545 --> 08:31:33.412
advertising is really about more
 than just making money.  Like 

08:31:33.413 --> 08:31:37.447
advertise ing, we truly believe,
 is what powrs the free and open

08:31:37.448 --> 08:31:41.972
 internet.  So if we get that 
right, we'll enable more and 

08:31:41.973 --> 08:31:44.926
more apps to proliferate and 
help you be successful

08:31:49.901 --> 08:31:53.967
 the free and open internet.  So
 if we get that right, we'll 

08:31:49.901 --> 08:31:53.701
enable more and more apps to 
proliferate and help you be 

08:31:49.901 --> 08:31:52.282
successful  .
Now, we know in very, very small

08:31:53.393 --> 08:31:57.278
, small percentage of apps when 
they are downloaded are paid for

08:31:57.374 --> 08:32:00.497
.  That means most of the apps 
that you guys are building right

08:32:00.639 --> 08:32:08.722
 now are probably free or fremiu
M,  m, somewhere in that area.  

08:32:08.723 --> 08:32:11.994
As users you probably love that.
  I love that.  If you pulled 

08:32:11.995 --> 08:32:15.875
out your phone right now, I bet 
almost all your apps are 

08:32:15.876 --> 08:32:18.962
probably fee.        free.  
That's great for you and you and

08:32:19.122 --> 08:32:24.165
 you and me because we're 
getting a lot of value for free.

08:32:24.166 --> 08:32:27.138
  But here's the challenge.  If 
you switch to our developer hats

08:32:27.368 --> 08:32:30.760
, that's        that statistic 
doesn't look so good.  Right?  

08:32:30.761 --> 08:32:33.594
And that's really the challenge 
 .

08:32:33.595 --> 08:32:35.856
So the thing that we're thinking
 about here ask how         is 

08:32:35.857 --> 08:32:37.857
how can

08:32:39.155 --> 08:32:42.627
 we help you, A, get more paid 
downloads, if that is the part 

08:32:42.628 --> 08:32:46.789
you're in, and at the same time 
how can we work on that other 95

08:32:46.943 --> 08:32:50.626
 percent of users who don't pay 
for your apps in general, and 

08:32:50.627 --> 08:32:53.870
how can we make money after 
advertising for that group.  How

08:32:53.986 --> 08:32:56.648
 can we dough       do both at 
the same time.  That's something

08:32:56.949 --> 08:32:58.727
 front and center in our minds 
 .

08:32:58.728 --> 08:33:01.756
Here's one solution to this that
 we have been investing quite a 

08:33:01.757 --> 08:33:06.851
bit in lately.  This is a 
rewarded video ad and something 

08:33:06.852 --> 08:33:11.634
we launched on our platform 
about a year ago.  And we worked

08:33:11.946 --> 08:33:17.271
 with a number of other partners
.  And just in March, that GDC 

08:33:17.272 --> 08:33:20.247
we announced we're going to 
start serving ads as well from 

08:33:20.248 --> 08:33:25.493
the Google ad network  .
This is Zeptolab crash arena 

08:33:25.494 --> 08:33:30.144
turbo stars.  If you haven't 
played, it's fun.  You design 

08:33:30.145 --> 08:33:33.718
your car and go is to bat    
          go to battle and have 

08:33:33.719 --> 08:33:38.774
these constant battled    s tles
.  In the game you want to have 

08:33:38.775 --> 08:33:43.395
a great car and you need parts. 
 Parts come in creates     ates,

08:33:43.630 --> 08:33:48.582
 and you urn the crates am   .  
But when you sh the earn them

08:33:48.707 --> 08:33:51.981
                  earn them, you
 see the timer.  I have to 2008 

08:33:51.982 --> 08:33:55.262
two hours                two    
 wait two hours.  I can open now

08:33:55.467 --> 08:34:01.334
 by using gems, and gems cost 
money, so thaths the      's the

08:34:02.050 --> 08:34:06.439
 ape     IAP side  .
I can skip by watching a video. 

08:34:06.581 --> 08:34:10.050
 I think I watched 20 yesterday.
  It hadn't     elped me move 

08:34:10.051 --> 08:34:11.995
through the timer.  Then I can 
get my parts  .

08:34:11.996 --> 08:34:15.286
Let's go ahead and click the 
skip but the be.               

08:34:15.287 --> 08:34:19.169
button.  This is what happens.  
We see the video, the timer on 

08:34:19.170 --> 08:34:23.513
the upper right, usually 30-
second video, an end card we saw

08:34:23.679 --> 08:34:27.024
 at the end, a call take action 
on the bottom.  We're seeing 

08:34:27.025 --> 08:34:30.601
really good user engagement with
 these ads  .

08:34:30.602 --> 08:34:34.838
Maybe I click, maybe I don't 
click.  Either way I'm happy 

08:34:34.839 --> 08:34:38.300
because I took 30 minutes off 
the clock.  I feel like I got 

08:34:38.301 --> 08:34:42.693
value out of this ad, so that's 
good for me.  And I'm leaving 

08:34:42.694 --> 08:34:46.087
this feeling happy and more 
engaged, we move on from there, 

08:34:46.088 --> 08:34:48.614
I go e me         get my 30 
minutes and we go on  .

08:34:48.615 --> 08:34:53.335
Here's the thing.  This isn't 
just about ad revenue because 

08:34:53.336 --> 08:34:56.840
the developer is making money 
off of this.  But every time I 

08:34:56.841 --> 08:34:59.989
watch a video, I'm getting a 
little bit more invested in this

08:35:00.563 --> 08:35:06.827
 game.  And that might drive me 
ultimately to be more likely to 

08:35:06.828 --> 08:35:09.788
make in-app purchases  .
Here we have done something very

08:35:10.227 --> 08:35:13.647
 interesting.  We balanced, not 
even billing   ed,   ing        

08:35:13.648 --> 08:35:18.504
 balance but gotten the best of 
both worlds, ad revenue as well 

08:35:18.505 --> 08:35:21.617
as more engaged users  .
Zeptolab introduced this and 

08:35:21.618 --> 08:35:25.488
once they introduced Google dae 
manned, they              demand

08:35:25.729 --> 08:35:30.225
 they                 demand 
they saw revenue go up 3X, 

08:35:30.226 --> 08:35:34.066
that's awesome stat.  More and 
more droppers          

08:35:34.067 --> 08:35:37.503
developers who were strictly 
in-app purchasing are now using 

08:35:37.504 --> 08:35:40.255
these kinds of strategic form 
mats because it's helping both 

08:35:40.256 --> 08:35:46.422
the engagement as well as the 
in-app purchasing  .

08:35:46.423 --> 08:35:50.595
Now the but the         bulk of 
these downloads we know are free

08:35:50.739 --> 08:35:54.074
, and like I said, it's a very 
small number at the top.  Also a

08:35:54.299 --> 08:35:58.747
 group down below that are sort 
of business supported apps that 

08:35:58.748 --> 08:36:01.844
don't charge, but the bulk of 
doundz        down leads we're 

08:36:01.845 --> 08:36:07.272
seeing today are free or fremu i
um, and this is really about 

08:36:07.273 --> 08:36:10.415
what we're seeing, a high- , 
high focus on developer 

08:36:10.416 --> 08:36:12.484
experience  .
Advertising maybe historically 

08:36:12.485 --> 08:36:16.560
was a little less focus on the U
X, so we have to find a way to 

08:36:16.561 --> 08:36:19.134
bring those two things together.
  One of the ways we are doing 

08:36:19.135 --> 08:36:24.103
that is with native ads  .
Here we're seeing perfect 

08:36:24.104 --> 08:36:30.082
corporations 's u cam perfect 
app, an app with well over 15 

08:36:30.083 --> 08:36:33.201
million downloads.  Met     
Pretty impressive.  The button 

08:36:33.202 --> 08:36:36.371
on the left for the camera, the 
next button over, you can edit 

08:36:36.372 --> 08:36:40.109
your camera, as I make myself 
look a little more beautiful, 

08:36:40.110 --> 08:36:44.502
can't get enough of that.  And 
also a collage.  And the lower 

08:36:44.503 --> 08:36:47.832
lefd      left all right     
      larger button, they have 

08:36:47.833 --> 08:36:53.250
taken a relevant app ad and 
placed it right I   inside their

08:36:53.251 --> 08:36:55.928
 experience.  So it doesn't 
really destroy the experience.  

08:36:55.929 --> 08:36:58.706
A lot of these developers are 
lock      looking for something 

08:36:58.707 --> 08:37:04.846
that's seamless, it just fits in
 well, matches the font and the 

08:37:04.847 --> 08:37:08.948
colors, et cetera  .
So you can expect to see a lot 

08:37:08.949 --> 08:37:12.206
more of these native ads as we 
continue to drive into the 

08:37:12.207 --> 08:37:14.207
better UX experience going 
forward

08:37:17.740 --> 08:37:20.142
  .
We have also been working on 

08:37:20.143 --> 08:37:22.143
some very interesting interest 
novations in individual

08:37:22.246 --> 08:37:24.091
                       know     
 interest                   

08:37:24.092 --> 08:37:26.012
interest investigations in 
individual               

08:37:30.509 --> 08:37:35.455
 huge supply of the horizontal 
videos advertisers have provided

08:37:35.789 --> 08:37:39.428
 because a lot of these came 
from the desktop side and those 

08:37:39.429 --> 08:37:42.923
assets are all in place  .
We said gosh, a lot of apps now 

08:37:42.924 --> 08:37:46.385
are actually portrait.  We love 
to see that mode but we don't 

08:37:46.386 --> 08:37:51.093
want the small portrait, we want
 it big because we know if we 

08:37:51.094 --> 08:37:54.076
put big portrait, user 
engagement is higher  .

08:37:54.077 --> 08:37:56.745
We put our machines to work and 
through fancy machine learning 

08:37:56.746 --> 08:38:00.806
managed to take these horizontal
 videos that automatically 

08:38:00.807 --> 08:38:04.948
convert from horizontal right 
over into portrait.  And that 

08:38:04.949 --> 08:38:09.237
means better user engagement, 
better CPMs, better all the way 

08:38:09.238 --> 08:38:11.238
around  .
We've also found a way to reduce

08:38:11.243 --> 08:38:13.988
 a lot of niece videos   
   individual                  

08:38:13.989 --> 08:38:16.398
these videos from 30 
second        seconds 

08:38:16.399 --> 08:38:19.081
automatically again through 
machine learning down to 30-

08:38:19.385 --> 08:38:22.028
second shorts.  That means we 
can produce and show a lot of 

08:38:22.029 --> 08:38:25.957
these videos in smaller places 
and other places, for example, a

08:38:26.181 --> 08:38:28.508
 third area where we have been 
working has been on cellular 

08:38:28.509 --> 08:38:31.316
networks  .
A lot of your yourself

08:38:31.472 --> 08:38:35.982
        users when using your 
games are on sell rar

08:38:36.145 --> 08:38:39.524
        cellular networks.  You 
month it want to show video ads 

08:38:39.525 --> 08:38:43.113
because engagement is high.  
Over cellular networks that has 

08:38:43.114 --> 08:38:48.083
always been pretty hard.  We 
found tricky innovations are    

08:38:48.084 --> 08:38:50.084
 where we can deliver the

08:38:51.275 --> 08:38:51.958
 videos while the user is on a 
cellular network, and that 

08:38:51.959 --> 08:38:54.485
really improves the number of 
users that are seeing these 

08:38:54.486 --> 08:38:57.405
great ads  .
So as we see smart phones 

08:38:57.406 --> 08:39:00.687
continue to proliferate and as 
we see internet coverage 

08:39:00.688 --> 08:39:03.839
continue to just grow and grow 
and get cheaper and cheaper, you

08:39:04.011 --> 08:39:08.744
 expect to see a lot more videos
 and a lot more innovations in 

08:39:08.745 --> 08:39:12.911
this format  .
Let's not forget about staples, 

08:39:12.912 --> 08:39:18.470
banners and interissuels  
     stitials.  One thing we 

08:39:18.471 --> 08:39:21.800
have introduced here at 
innovation announced last March 

08:39:21.801 --> 08:39:27.040
is playables.  So these are like
 fun interactive ads that go 

08:39:27.041 --> 08:39:33.171
right into an innerer stitial 
space                 stitial 

08:39:33.172 --> 08:39:35.298
application             space so
 the developer doesn't have to 

08:39:35.299 --> 08:39:37.272
do anything          anything 
but the engagement is high.  

08:39:37.273 --> 08:39:41.794
That's good for a developer 
because it makes you more money 

08:39:42.412 --> 08:39:46.115
 .
So if you were a developer and 

08:39:46.116 --> 08:39:49.227
you're doing pretty well, and I 
have this conversation a lot.  

08:39:49.228 --> 08:39:53.994
We have done so well in these 
mature markets, but what do we 

08:39:53.995 --> 08:39:58.750
do now?  We're not seeing a lot 
of growth.  How do we go about 

08:39:58.751 --> 08:40:01.892
it  ?
If I told you, if you took a 

08:40:01.893 --> 08:40:07.099
look at the top 1,000 gross
       ad grossing apps that use

08:40:07.464 --> 08:40:12.100
 our platform, 95 percent of of 
them are live in more than 200 

08:40:12.101 --> 08:40:16.050
markets.  Okay?  That's a lot.  
That's a higher number than I 

08:40:16.051 --> 08:40:18.910
had expected.  But sort of 
speaks to it  .

08:40:18.911 --> 08:40:22.865
If you go further than that, out
 of all of the revenue, 85 

08:40:22.866 --> 08:40:26.137
percent a   is not from their 
home country.  But if you 

08:40:26.138 --> 08:40:30.042
remember apps, early days when 
we released, home country and 

08:40:30.043 --> 08:40:34.402
maybe some countries with same 
language.  But now it's really 

08:40:34.403 --> 08:40:38.189
just gone global, and so there's
 one simple answer I have to 

08:40:38.190 --> 08:40:42.514
these conversations, which is if
 you want to increase and mass

08:40:43.027 --> 08:40:48.394
      maximize revenue, a simple
 thing you can do is go gll and

08:40:48.514 --> 08:40:54.853
     ol         global and go 
clickly         quickly.  The 

08:40:54.854 --> 08:40:57.504
right partner with global reach 
can help you  .

08:40:57.505 --> 08:41:01.263
Further into the not too 
distance  t future, the next 

08:41:01.264 --> 08:41:03.540
billion users coming on line 
with smart phones, you know 

08:41:03.541 --> 08:41:06.658
where they are coming from?  
They are coming from unsaturated

08:41:07.631 --> 08:41:12.548
 emerging markets  .
So the good news in there, 

08:41:12.549 --> 08:41:16.757
neither the           knee      
the cost of acquisition in 

08:41:16.758 --> 08:41:19.864
mature versus emerging, very 
different.  Much lower cost of 

08:41:19.865 --> 08:41:27.038
acquisition if you partner with 
the right partner.  And also 

08:41:27.039 --> 08:41:29.674
that      in a loft      lot of 
these markets you probably would

08:41:30.088 --> 08:41:33.490
 expect advertising is going to 
play a more important part than 

08:41:33.491 --> 08:41:37.559
in purchasing.  Not for all of 
them.  We see a skew across 

08:41:37.560 --> 08:41:40.525
countries, but for most of the 
markets advertising will be 

08:41:40.526 --> 08:41:44.231
increasingly important  .
What does it all mean?  It means

08:41:44.618 --> 08:41:47.936
 that if you aren't releasing 
globally, you're leaving serious

08:41:48.146 --> 08:41:51.796
 money on the table.  It also 
means there's a whole new level 

08:41:51.797 --> 08:41:55.893
of complexity to your 
advertising strategy.  Can you 

08:41:55.894 --> 08:41:58.825
imagine having to go country by 
country and finding ad networks 

08:41:58.826 --> 08:42:02.418
that fit just that country and 
lining that up with not just one

08:42:02.775 --> 08:42:06.849
 p your apps             of 
yours apps but all of them and 

08:42:06.850 --> 08:42:11.109
manage ing across different form
 mats where some networks fit 

08:42:11.110 --> 08:42:14.409
some formats but not others.  
This can get come indicated 

08:42:14.410 --> 08:42:17.351
really quick              
               complicated 

08:42:17.352 --> 08:42:20.411
really quickly.  There has to be
 a way to handle all this 

08:42:20.412 --> 08:42:24.089
complexity.  This is what we are
 working on at AdMob, trying to 

08:42:24.090 --> 08:42:29.955
solve these global developer 
challenges.  Global, we really 

08:42:29.956 --> 08:42:31.956
mean global  .
Because we're a single platform,

08:42:32.012 --> 08:42:34.706
 we're live in more than 200 
countries, with a single click 

08:42:34.707 --> 08:42:38.777
we can push you out to all these
 countries simultaneously.  So 

08:42:38.778 --> 08:42:41.269
that's great  .
We also have some big 

08:42:41.270 --> 08:42:45.170
announcements today, or 
yesterday, around huh on        

08:42:45.171 --> 08:42:48.238
how to manage complexity in a 
simple way across both developer

08:42:49.123 --> 08:42:52.902
 experience as well as mediation
 groups  .

08:42:52.903 --> 08:42:56.402
So one of my favorite things 
about this job is I get to go 

08:42:56.403 --> 08:42:59.265
out and talk to developers and 
learn from developers all the 

08:42:59.266 --> 08:43:03.815
time.  I have probably talked to
00s and        hundreds and 

08:43:03.816 --> 08:43:07.281
hundreds over the last couple 
months and my team several 

08:43:07.282 --> 08:43:11.424
thousands, actual conversations.
  And this is great.  We get a 

08:43:11.425 --> 08:43:15.649
lot of feed back, all positive, 
I promise.  We're listening and 

08:43:15.650 --> 08:43:18.608
listening.  What      What with
      can we do better, what are

08:43:18.995 --> 08:43:23.742
 your biggest challenges, what 
can we do to hen   47 you       

08:43:23.743 --> 08:43:26.882
 help you earn more money  .
We bucket those things in three 

08:43:26.883 --> 08:43:31.474
main areas.  First is around 
just make it dead simple to get 

08:43:31.475 --> 08:43:36.015
started, get up and running, and
 to manage this across the globe

08:43:36.523 --> 08:43:39.321
.  When I'm talking about one 
button, it works globally.  Help

08:43:39.659 --> 08:43:43.800
 me on that  .
Second area is really around 

08:43:43.801 --> 08:43:48.063
scale.  So I had one app and now
 I need to get more specialized,

08:43:48.204 --> 08:43:50.728
 maybe a different             
in different areas.  Maybe I 

08:43:50.729 --> 08:43:54.632
have a hundred apps now or 50 or
 ten that's hard to manage.  So 

08:43:54.633 --> 08:43:56.691
help me on the scale problem 
that I've got  .

08:43:56.692 --> 08:44:02.154
The third area is, hey, I have a
 lot of data now and Google, you

08:44:02.264 --> 08:44:04.264
 have a lot of

08:44:06.466 --> 08:44:08.045
 data too.  So can we maybe put 
these things together and help 

08:44:08.046 --> 08:44:10.817
me optimize, maybe even more 
revenue because we have the data

08:44:10.997 --> 08:44:14.713
 to do it, but it's hard and 
there's a lot of logistics 

08:44:14.714 --> 08:44:18.271
around that data and so forth.  
So let's work on optimize ing  .

08:44:18.644 --> 08:44:22.107
So let's walk these       
through these three areas  .

08:44:22.108 --> 08:44:25.448
First wear      area is really 
monetization, and this is always

08:44:25.667 --> 08:44:28.951
 the first priority a developer 
has, let's get in there, get 

08:44:28.952 --> 08:44:32.557
started, get going.  The first 
priority of the lockdown  .

08:44:32.558 --> 08:44:34.558
Okay, so good

08:44:36.471 --> 08:44:39.458
 news here, and we think about 
monetize, what can we do in the 

08:44:39.459 --> 08:44:42.146
background, things you don't 
have to worry about?  We have a 

08:44:42.147 --> 08:44:44.881
lot of global advertisers, and 
that's good because if you want 

08:44:44.882 --> 08:44:47.621
to go to a lot of countries you 
need a network that reaches a 

08:44:47.622 --> 08:44:50.877
lot of countries.  So you need 
the global advertisers.  And I 

08:44:50.878 --> 08:44:53.267
already mentioned we have a 
million apps, but here is why 

08:44:53.268 --> 08:44:56.535
that matters.  It's because over
 on the right side you see 

08:44:56.536 --> 08:45:01.293
there's at least a billion three
 unique user devices that we 

08:45:01.294 --> 08:45:04.283
know about.  We know things 
about them.  So that means when 

08:45:04.284 --> 08:45:09.428
we're trying to figure out which
 ad to serve to that particular 

08:45:09.429 --> 08:45:11.855
moment, we're good at it and 
we're getting better and 

08:45:11.856 --> 08:45:14.993
constantly learning from that.  
And that means you can get 

08:45:14.994 --> 08:45:18.144
higher CPMs, means the 
advertisers are targeting 

08:45:18.145 --> 08:45:21.434
exactly the people they want to 
advertise.  So that connection 

08:45:21.435 --> 08:45:26.113
there is really a win-win for 
advertisers and developers, and 

08:45:26.114 --> 08:45:28.823
we're going to keep pressing 
that as hard as we can  .

08:45:28.824 --> 08:45:31.789
And that's a great baseline but 
there's a lot more we can 

08:45:31.790 --> 08:45:35.093
improve on, and this is where we
 really put on our listening 

08:45:35.094 --> 08:45:37.869
ears  .
These are things that we heard. 

08:45:38.556 --> 08:45:43.426
 Like can we make simpler on
boarding, make      maybe 

08:45:43.427 --> 08:45:46.637
progressive sign-up.  Can you 
show me where the documentation 

08:45:46.638 --> 08:45:51.301
is.  Earlier or easier in the 
process.  Things are still 

08:45:51.302 --> 08:45:54.139
reason able y con indicated.  
This is tech and         

08:45:54.288 --> 08:45:57.665
                         only
      complicated.  This is tech

08:45:58.081 --> 08:46:00.796
 and fast moving  .
Format coverage, we talked about

08:46:00.956 --> 08:46:04.521
 Nate of the           native, 
rewarded.  Video especially we 

08:46:04.522 --> 08:46:08.022
want to see more and more  .
Can you simplify ad integration 

08:46:08.023 --> 08:46:12.139
even more and make testing easy.
  I want to see exactly what I 

08:46:12.140 --> 08:46:15.192
have got  .
The thing we heard the most was 

08:46:15.193 --> 08:46:20.341
really about faster access and 
like can you quickly show me how

08:46:20.562 --> 08:46:24.116
 well I'm doing?  I want to see 
how much money I'm making and if

08:46:24.549 --> 08:46:28.129
 I'm missing, if I'm not 
missing, et cetera.  Really 

08:46:28.130 --> 08:46:30.617
quickly all in one place  .
These are the main things that 

08:46:30.618 --> 08:46:34.092
we heard.  So we went right to 
work on this stuff  .

08:46:34.093 --> 08:46:36.529
This is what we have been doing 
the last 12 months.  Introducing

08:46:37.193 --> 08:46:41.504
 AdMob beta.  Yesterday we went 
live with this in the afternoon,

08:46:41.765 --> 08:46:45.063
 we announced it.  This is an 
entirely new user experience for

08:46:45.997 --> 08:46:50.187
 you.  We took a hard, hard look
 at all the developer journey 

08:46:50.188 --> 08:46:53.246
and figured out through that 
what can we do to make this as 

08:46:53.247 --> 08:46:57.760
easy as possible  .
Yes, you can go to AdMob right 

08:46:57.761 --> 08:47:03.678
now and sign up and go through 
this experience because it is in

08:47:03.679 --> 08:47:06.337
 fact live  .
So why don't you come on up, aly

08:47:06.689 --> 08:47:10.868
, and we're going to go to a 
like demo.  That means I'm 

08:47:10.869 --> 08:47:12.869
slightly

08:47:14.310 --> 08:47:16.310
 nervous 

08:47:20.897 --> 08:47:25.163
 and we're going to go to a like
 demo.  That means I'm slightly 

08:47:20.897 --> 08:47:21.897
nervous.  
.

08:47:20.897 --> 08:47:23.940
Lrlt,       
All right, here we are on AdMob.

08:47:24.109 --> 08:47:26.109
com and looking

08:47:31.313 --> 08:47:34.280
 at read hot          red hot 
lacks.  They are look     

08:47:34.445 --> 08:47:37.911
              bs.  And they are 
looking at Bingo Blast.  It has 

08:47:37.912 --> 08:47:41.349
about a million downloads, 
30,000 five-star ratings, 

08:47:41.350 --> 08:47:48.979
available in the IOS store as 
well as Google Play.  It uses IP

08:47:49.194 --> 08:47:53.365
 and also an interest of stitial
              stitial.  First 

08:47:53.366 --> 08:47:57.022
thing you notice is the gray bar
 across the top.  Now this is 

08:47:57.023 --> 08:48:01.000
the all-in-one immediately 
#40u78        how am I doing, 

08:48:01.001 --> 08:48:05.330
give it to me straight.  We can 
see the last 28 days, on the 

08:48:05.331 --> 08:48:09.979
right you Sue they made     
          see they made $   $1.

08:48:10.536 --> 08:48:14.398
52 million, so that's          
          thousand         ,000,

08:48:14.553 --> 08:48:17.936
 so that's pretty good  .
How is our fill rate doing, 

08:48:17.937 --> 08:48:21.229
that's good.  I have inventory, 
are you serving ads into them?  

08:48:21.230 --> 08:48:25.515
We're seeing about 99.4 percent 
fill rate.  That's pretty darn 

08:48:25.516 --> 08:48:28.911
good  .   .  Definitely higher 
than most of the industry.  You 

08:48:28.912 --> 08:48:33.727
also see ECPM around $   $19.33,
 that's also looking pretty good

08:48:33.877 --> 08:48:38.858
.  So we have a pretty nice 
looking app here, it's going on 

08:48:39.043 --> 08:48:40.814
 .
Now this is a pretty simple 

08:48:40.815 --> 08:48:42.931
account.  If you were just 
getting started, this is the 

08:48:42.932 --> 08:48:45.521
kind of thing you would probably
 see when you get going.  So why

08:48:46.192 --> 08:48:48.848
 don't we switch over to 
something that as you're growing

08:48:51.025 --> 08:48:55.869
, maybe a slightly more 
sophisticated account  .

08:48:55.870 --> 08:49:02.067
Here we're looking at the lab 
pixies account.  They are based 

08:49:02.068 --> 08:49:07.648
in Israel, and as you can see 
from the currency.  They have 

08:49:07.649 --> 08:49:11.987
dozens of apps in the Google 
Play store and ap    app store. 

08:49:12.205 --> 08:49:15.183
 You see the dashboard.  For 
them this is a nice unified view

08:49:15.564 --> 08:49:18.971
 as well because they are able 
to collect a lot of apps all in

08:49:19.074 --> 08:49:23.529
    into one space.  You're 
going to see as you have more 

08:49:23.530 --> 08:49:29.029
and more apps, AdMob becomes 
more and more powerful for you, 

08:49:29.030 --> 08:49:32.684
and you're going to see these 
dashboard cards, these cards on 

08:49:32.685 --> 08:49:35.704
the right, as you use more 
features, more of these cards 

08:49:35.705 --> 08:49:38.885
start to appear, cards that are 
relevant to what you are doing 

08:49:39.099 --> 08:49:41.546
 .
Now lab pixies use some of their

08:49:41.945 --> 08:49:45.539
 older apps.  Across the bottom 
here you can see older apps to 

08:49:45.540 --> 08:49:50.637
test out some of these new ad 
for me mats             formats 

08:49:50.638 --> 08:49:54.474
and different experiences.  Some
 are tests, maybe not doing as 

08:49:54.475 --> 08:49:56.877
well as we saw on the Bingo 
Blast side  .

08:49:56.878 --> 08:50:03.685
We also if you look at this 
performance side, you see the 

08:50:03.686 --> 08:50:06.162
match rate, not exactly the same
.  I wonder what's going on.  

08:50:06.163 --> 08:50:09.627
That's a little bit different.  
CPMs are quite a bit different 

08:50:09.628 --> 08:50:14.674
than we saw on bg  Bingo Blast, 
then over on the right we're 

08:50:14.675 --> 08:50:18.800
using mediation, and here's one 
space where you can see all of 

08:50:18.801 --> 08:50:22.629
the different mediation we're 
using, all in single place, how 

08:50:22.630 --> 08:50:26.028
they are each performing, again 
all in one place  .

08:50:26.029 --> 08:50:31.501
Right now let's go back to this 
bottom left.  The top 

08:50:31.502 --> 08:50:36.670
performance, color grips and 
flood it and also the selector 

08:50:36.671 --> 08:50:41.382
here.  So you know what, let's 
take a look at our top and 

08:50:41.383 --> 08:50:44.530
bottom movers, see who has moved
 a lot  .

08:50:44.531 --> 08:50:47.655
This is one of the things I 
heard over a   and over in my 

08:50:47.656 --> 08:50:50.907
discussions.  Have I all these 
apps,                          I

08:50:51.224 --> 08:50:54.741
 have       .  I have all these 
apps, data across all these 

08:50:54.742 --> 08:50:57.962
twoeshgs        networks.  Can 
you tell me who is making more

08:50:58.209 --> 08:51:02.114
      a lot more and lot less so
 I can pay attention?  You 

08:51:02.115 --> 08:51:05.438
should be able to detect that  .
We built the functionality.  We 

08:51:05.439 --> 08:51:09.554
see color drips kap 12, 
something               kap

08:51:09.846 --> 08:51:13.846
                   Color Drips. 
 They have done a good job.  

08:51:13.847 --> 08:51:16.475
Something flooded.  Something 
not add     as good.  This 

08:51:16.476 --> 08:51:21.114
highlighting, really heard happy
 we have this in the brawn  .   

08:51:21.323 --> 08:51:23.859
       breakdown  .
We can invest sgat what is going

08:51:24.005 --> 08:51:28.489
                   igate what is
 going on there in a second.  

08:51:28.490 --> 08:51:30.273
Before we do that, let's go over
 to the app selector.  I'm 

08:51:30.274 --> 08:51:36.422
looking at this left nav bar.  
One thing we realized is that 

08:51:36.423 --> 08:51:39.196
wean      when you're working 
and manage you     ing your apps

08:51:39.694 --> 08:51:43.896
, sometimes you're very focused 
on one app.  Sometimes you're 

08:51:43.897 --> 08:51:46.996
focused on all of your apps at 
the same time, you want to do 

08:51:46.997 --> 08:51:51.215
something and just apply all the
 way across the board  .   .  So

08:51:51.359 --> 08:51:53.638
 we    we split out the two 
different works       work flows

08:51:53.961 --> 08:51:57.302
 to get them in here to match 
exactly how you work  .

08:51:57.303 --> 08:52:01.160
When we're thinking about the 
one app side you can see all the

08:52:01.462 --> 08:52:04.183
 different apps, switch for the 
apps you want.  Some of these 

08:52:04.184 --> 08:52:08.299
lists are thousands long.  You 
can really imagine the scale.  

08:52:08.300 --> 08:52:12.532
So click and select  .
You see below if I skip down, 

08:52:12.533 --> 08:52:15.254
some       some account level 
things like reports and 

08:52:15.255 --> 08:52:18.653
mediation.  We also heard things
 like ad controls and payments, 

08:52:18.654 --> 08:52:22.474
I need really quick access to 
that no matter where I am.  We 

08:52:22.475 --> 08:52:24.460
brought that right to the front 
 .

08:52:24.461 --> 08:52:28.548
Then since we clicked on an app,
 that section expanded right 

08:52:28.549 --> 08:52:32.640
below color drips       
    Color Drips and you see all 

08:52:32.641 --> 08:52:36.013
the relevant things you want to 
do with the app right there.  On

08:52:36.153 --> 08:52:40.230
 top of that we're now in an app
 pf specific             46 

08:52:40.231 --> 08:52:44.059
specific            -specific 
dashboard.  Before we had the 

08:52:44.060 --> 08:52:46.830
account specific, now we're in 
app specific thing showing 

08:52:46.831 --> 08:52:49.942
everything #457g       happening
 with this specific app and 

08:52:49.943 --> 08:52:53.024
seeing everything at an a    
glance  .

08:52:53.025 --> 08:52:55.741
Here werg      we're seeing our 
dashboard across the top, again 

08:52:55.742 --> 08:53:02.231
in gray.  What's nice about this
 is you see an I          see 

08:53:02.232 --> 08:53:06.852
across all of the networks all 
in one place what's happening.  

08:53:06.853 --> 08:53:10.300
You also see a total revenue 
card, and you can see that 

08:53:10.301 --> 08:53:14.532
revenue over the last seven days
 versus last week, .  We can 

08:53:14.533 --> 08:53:20.057
also expand out to 28 days, see 
what's going on, and we see, 

08:53:20.058 --> 08:53:24.557
okay, interesting.  So we had a 
really good week last week, not 

08:53:24.558 --> 08:53:27.110
sure what's happening in the two
 weeks before that.  Think we 

08:53:27.111 --> 08:53:30.874
might have taken our ad unit 
down.  We put it back up, maybe 

08:53:30.875 --> 08:53:32.875
re    we ran a promotion, et 
cetera 

08:53:36.546 --> 08:53:38.106
 .
We also see the network 

08:53:38.107 --> 08:53:41.571
performance down at the bottom 
and we see how we're doing here.

08:53:41.572 --> 08:53:46.484
  We have match rate of about 95
 percent, so not as good as the 

08:53:46.485 --> 08:53:52.346
last one at 99, but still pretty
 good.  CPM, 33.  Probably 

08:53:52.347 --> 08:53:56.094
because we're showing a lot more
 impressions  .

08:53:56.095 --> 08:54:01.139
I'm also looking now at the 
bottom right card.  This card 

08:54:01.140 --> 08:54:04.068
basically says, so there's a 
network we're using there, but 

08:54:04.069 --> 08:54:07.551
we're seeing a lot of queries go
 in but not a lot of impressions

08:54:07.942 --> 08:54:11.141
.  So that's something we should
 probably go investigate, and we

08:54:11.142 --> 08:54:14.553
 can take you right there  .
What's great about this, we 

08:54:14.554 --> 08:54:19.348
surfaced this insight to your ad
 ops.  This is not something 

08:54:19.349 --> 08:54:22.697
engineering had to go do.  This 
is something instantly available

08:54:22.861 --> 08:54:24.413
  .
Why don't we click on that 

08:54:24.414 --> 08:54:26.414
report and go right into

08:54:28.629 --> 08:54:35.169
 that.  So here we're looking, 
let's see, let's go ahead and 

08:54:35.170 --> 08:54:37.844
take a look at the last seven 
days and see what was going on 

08:54:37.845 --> 08:54:40.174
here  .
The last seven days, okay, this 

08:54:40.175 --> 08:54:43.642
is interesting.  We weren't 
getting any impressions through.

08:54:43.643 --> 08:54:47.707
  That's not so good.  So let's 
zoom back out to 28 or 30 days 

08:54:47.708 --> 08:54:50.962
and     and see what was going 
on.  Yeah, last 30 days.  We had

08:54:51.333 --> 08:54:53.840
 some impressions going through,
 still a little concerned here 

08:54:53.841 --> 08:54:57.134
it's not as high as I would have
 expected.  That's not a good 

08:54:57.135 --> 08:55:00.972
fill rate.  Something is off  .
What's nice is when we clicked 

08:55:00.973 --> 08:55:04.622
that go see this report, it puts
 some filters in place for us 

08:55:04.623 --> 08:55:08.098
automatically.  We didn't have 
to type all the filters in, just

08:55:08.692 --> 08:55:12.247
 went straight in to say this is
 color dripts  s           Color

08:55:12.248 --> 08:55:15.038
 Drips, this network, let's take
 a look  .

08:55:15.039 --> 08:55:17.064
I don't know if this is a color 
drips           Color Drips 

08:55:17.065 --> 08:55:19.984
problem or total network problem
, so why don't we get rid of the

08:55:20.423 --> 08:55:22.662
 color drips           Color 
Drips filter to see how this it

08:55:22.840 --> 08:55:26.548
    total network is doing  .
Okay, so here I'm seeing 

08:55:26.549 --> 08:55:29.478
thousands of impressions are 
going through.  So the network 

08:55:29.479 --> 08:55:34.187
looks like it's performing okay.
  What we have a problem then 

08:55:34.188 --> 08:55:37.416
that must be not in these other 
apps but in this ap specifically

08:55:37.952 --> 08:55:41.147
.  That's good Intel.  I can now
 go find an engineer and say 

08:55:41.148 --> 08:55:43.866
okay, I know where the problem 
is, something is wrong in this 

08:55:43.867 --> 08:55:47.286
app, with this           in the 
configuration, go solve this 

08:55:47.287 --> 08:55:50.475
problem.  So that's a lot of 
power that historically was 

08:55:50.476 --> 08:55:58.570
something hard to go surface  .
To summarize here, all across 

08:55:58.571 --> 08:56:00.571
this U

08:56:03.509 --> 08:56:12.382
I (feedback)  .
All right, can we switch

08:56:13.560 --> 08:56:19.921
 over to the station  ?
To summarize here, we have got a

08:56:20.356 --> 08:56:25.945
n app centered front-end actual 
dashboard, intuitive navigation.

08:56:25.946 --> 08:56:28.342
» Ladies and gentlemen, sorry, 
that was the emergency channel. 

08:56:28.509 --> 08:56:31.804
 Continue with the presentation.
  We will let you know with any 

08:56:31.805 --> 08:56:35.568
updates.
» Okay, intuitive navigation and

08:56:36.029 --> 08:56:40.836
 richer insights.  These are a 
lot of good features.  We are 

08:56:40.837 --> 08:56:44.796
very proud of this user 
experience improvements  .

08:56:44.797 --> 08:56:48.715
Now let's move to scale.  So you
 have had some success, you have

08:56:49.305 --> 08:56:53.922
 grown let's say from one app 
immensely successful.  You're 

08:56:53.923 --> 08:56:56.932
trying to specialize.  Or you 
have sgroen thousands          

08:56:57.100 --> 08:57:01.070
        grown thousands, and we 
have seen this, smaller apps all

08:57:01.227 --> 08:57:03.792
 together and got to the same 
place of success.  How do you 

08:57:03.793 --> 08:57:07.249
manage all that?  You need a 
partner not just an ad network, 

08:57:07.250 --> 08:57:10.258
you need a platform you can grow
      grow with.  And that's 

08:57:10.259 --> 08:57:12.020
what we are focused on right now
  .

08:57:12.021 --> 08:57:15.035
In the past some of on you
        our bigger partners, I 

08:57:15.036 --> 08:57:18.725
talked to partners who are     
had 30, 40 engineers working 

08:57:18.726 --> 08:57:23.218
just on things like extracting 
data from websites, from 

08:57:23.219 --> 08:57:26.296
different networks, putting 
them, transferring over county

08:57:26.528 --> 08:57:32.076
 ry by country, inputting, 
coming back and hobble ing 

08:57:32.077 --> 08:57:34.777
together all these things.  We 
looked and said gosh, do you 

08:57:34.778 --> 08:57:37.708
want that many engineers 
spending that much time on that?

08:57:37.709 --> 08:57:40.176
  Their answer was of course we 
don't, we'd really        rather

08:57:40.862 --> 08:57:43.626
 use those engineers to make 
apps and make our apps better 

08:57:43.627 --> 08:57:48.111
and make the apps fit better and
 improve and compete in the 

08:57:48.112 --> 08:57:50.112
market  .
We basically said, okay, we know

08:57:50.376 --> 08:57:53.688
 we can fix this.  This is a new
 problem.  It's a scale problem 

08:57:53.689 --> 08:57:56.616
because of your success.  So 
let's get right to work on that 

08:57:58.872 --> 08:58:01.354
 .
The first thing we did is we 

08:58:01.355 --> 08:58:04.260
made it interest          
enterprise scale.  So we knew we

08:58:04.475 --> 08:58:08.557
 had to handle thousand ngdz of
        s of apps and went right

08:58:08.771 --> 08:58:12.368
 to work to do that and we still
 maintain a reputation for 

08:58:12.369 --> 08:58:14.537
stability.  Something we hear 
about often  .

08:58:14.538 --> 08:58:17.644
Second thing, we said okay, 
you're at scale, you're global, 

08:58:17.645 --> 08:58:23.120
you want lots of networks.  So 
we provide support to over 40 

08:58:23.121 --> 08:58:26.132
mediated networks.  If that's 
not enough, we have custom 

08:58:26.133 --> 08:58:29.135
network support  .
Third thing is we said with a 

08:58:29.136 --> 08:58:32.636
lot of those networks, why don't
 we pull in the information so 

08:58:32.637 --> 08:58:36.418
you can get at    all of that 
information in one place.  So we

08:58:36.419 --> 08:58:39.567
 have been supporting over 20 
networks  .

08:58:39.568 --> 08:58:43.111
Fourth thing we did is we 
enabled campaigns.  What are 

08:58:43.112 --> 08:58:47.540
campaigns?  If you have got one 
app and you grow ten and you 

08:58:47.541 --> 08:58:50.827
want to cross promote your apps,
 the developers are saying yeah,

08:58:50.979 --> 08:58:54.164
 I want to use my own ads.  And 
one thing that's really nice 

08:58:54.165 --> 08:58:57.999
about this campaign's capability
 is you don't have to build out 

08:58:58.000 --> 08:59:01.681
your own ad serving 
infrastructure or build in 

08:59:01.682 --> 08:59:04.306
specific ads into a release and 
change into the next release.  

08:59:04.307 --> 08:59:06.763
Here you do an ad slot and you 
can manage those from the server

08:59:07.044 --> 08:59:11.022
 side very sem     simply  .
But we knew there was more that 

08:59:11.023 --> 08:59:13.668
we could do, so again we took to
 the spreadsheets

08:59:14.177 --> 08:59:18.080
           treets, asked the 
questions and said, we know we 

08:59:18.081 --> 08:59:22.787
can manage, we have problems the
 user said, we want to be able 

08:59:22.788 --> 08:59:27.034
to manage mediation more rapidly
, we want more reporting detail,

08:59:27.035 --> 08:59:30.570
 we want more of this inbound 
aggregation so we don't have to 

08:59:30.571 --> 08:59:34.734
go site to site, and we want
         we want some of us 

08:59:34.735 --> 08:59:38.213
launched on other platforms 
before you had rewarded ads, can

08:59:38.214 --> 08:59:41.347
 you give us more DAPPers    
     adapters  .

08:59:41.348 --> 08:59:44.121
Good news is we're solving each 
and every one of these things.  

08:59:44.122 --> 08:59:47.333
And I want to talk about 
mediation groups.  I'm going to 

08:59:47.334 --> 08:59:52.652
switch over to demo.  Mediation 
groups, I'm really proud to 

08:59:52.653 --> 08:59:55.552
announce this.  This was a tough
 one.  It's a powerful new 

08:59:55.553 --> 08:59:58.508
capability so you don't have to 
manage hundreds or thousands of 

08:59:58.509 --> 09:00:02.159
mediation chags  ins.  Instead 
the concept here is take one 

09:00:02.160 --> 09:00:08.976
unique combination of ad network
 lists and countries and apply 

09:00:08.977 --> 09:00:12.744
all of your ad units to that one
 thing.  You don't have to 

09:00:12.745 --> 09:00:15.542
create over and over and over.  
When you make changes it's just 

09:00:15.543 --> 09:00:17.755
to that one  .
As you will see, this medation 

09:00:17.756 --> 09:00:21.357
groups, it really takes this 
issue head on.  So first you'll 

09:00:21.358 --> 09:00:24.373
see we went ahead and clicked on
 mediation over the left, and 

09:00:24.374 --> 09:00:28.458
that's how we got     go the to 
this screen.  We're going to go 

09:00:28.459 --> 09:00:30.648
ahead and see this in action.  
Let's create mediation

09:00:34.546 --> 09:00:36.711
 group  .
As I mentioned, some of these 

09:00:36.712 --> 09:00:40.681
developers are using this for 
dozens or hundreds or thousands 

09:00:40.682 --> 09:00:46.925
of apps.  First you choose a 
format.    and platform.  The 

09:00:46.926 --> 09:00:49.458
reason those two you choose 
first, the mediation groups you 

09:00:49.459 --> 09:00:52.900
tend to make specific to the 
format on the platform  .

09:00:52.901 --> 09:00:57.122
Let's go ahead and create a 
title now.  We'll call this one 

09:00:57.123 --> 09:01:00.957
android banners and high CPM 
countries  .

09:01:00.958 --> 09:01:03.949
We're going to choose which 
countries, and we can include or

09:01:04.335 --> 09:01:07.368
 exclude, so we'll choose the 
U.S. and high      how about the

09:01:07.369 --> 09:01:12.286
 U.K. maybe, Japan, high CPM 
countries in general.  We're 

09:01:12.287 --> 09:01:17.469
going to go ahead, we have our 
countries, let's add ad units to

09:01:17.703 --> 09:01:20.651
 the immediate ation           
      mediation chain  .

09:01:20.652 --> 09:01:24.376
Here's what's great.  It can be 
across all your apps, they can 

09:01:24.377 --> 09:01:26.944
attach to the same one.  Do your
 home work on which ones you 

09:01:26.945 --> 09:01:31.736
want, attach these apps with 
different ad units into here.  

09:01:31.737 --> 09:01:34.572
Now we have that group set up.  
Now we need to say what's the 

09:01:34.573 --> 09:01:38.209
order of networks we want to 
serve.  We already see ad  AdMob

09:01:38.210 --> 09:01:42.346
 is in there, and now we're 
going to add another network.  

09:01:42.347 --> 09:01:47.144
So why don't we add, all right, 
just shoes       choose one.  

09:01:47.145 --> 09:01:51.427
One for unity, sound good     s 
good.  We can choose to optimize

09:01:51.573 --> 09:01:54.237
, which is this automated 
concept I was talking about 

09:01:54.238 --> 09:01:57.661
where we pump      pull the data
 automatically and ordering is 

09:01:57.662 --> 09:02:01.446
done for you, which is awesome, 
or we can go ahead and manually 

09:02:01.447 --> 09:02:04.541
specify this.  Sometimes we 
manually specify at the front in

09:02:05.156 --> 09:02:08.277
 case the credential is not 
working right  .

09:02:08.278 --> 09:02:13.346
We continue and then we insert 
our ad unit ID.  Unity is going 

09:02:13.347 --> 09:02:16.805
to see here's an ad unit for 
this one, here's one for that ad

09:02:16.988 --> 09:02:20.189
.  It's important these things 
are kept separate so we optimize

09:02:20.359 --> 09:02:23.291
 for each one.  They are going 
to give different performance.  

09:02:23.292 --> 09:02:25.957
We want to optimize for every 
unit.  We save that and now we 

09:02:25.958 --> 09:02:31.851
have a mediation chain.  All 
right, so that's it.  It's that 

09:02:31.852 --> 09:02:35.425
simple.  We did this across all 
our apps for that chain  .

09:02:35.426 --> 09:02:40.870
So we see we have four different
 mediation groups.  We can dive 

09:02:40.871 --> 09:02:43.819
right in and see what's there.  
We can also see how these guys 

09:02:43.820 --> 09:02:49.166
are doing across by just 
clicking and dropping that down.

09:02:49.167 --> 09:02:52.716
  And we know, so we just did 
that group to people that serve 

09:02:52.717 --> 09:02:56.881
U.K., U.S. fshths jap           
, Japan.  There's other groups 

09:02:56.882 --> 09:03:00.453
serve different formats in 
different countries.  If nobody 

09:03:00.454 --> 09:03:06.802
is caught we have AdMob to catch
 everything at the end  .

09:03:06.803 --> 09:03:10.364
We also have this, let's see, 
consolidated view of what's 

09:03:10.365 --> 09:03:13.926
going on.  You see that bar 
across the top, this gives you 

09:03:13.927 --> 09:03:17.373
queries, impressions and fill 
rates.  That's across everything

09:03:18.592 --> 09:03:22.185
.  We have done some really hard
 tricky math to make sure when 

09:03:22.186 --> 09:03:26.396
we say queries, we mean queries.
  We don't mean double and 

09:03:26.397 --> 09:03:29.087
triple counting.  That's really 
confusing when you have a bunch 

09:03:29.088 --> 09:03:32.573
of network calls all happening 
for the same impression, how to 

09:03:32.574 --> 09:03:36.747
add those up and not duplicate 
or triple count  .

09:03:36.748 --> 09:03:39.643
We have the network at the top, 
a feature you asked for  .

09:03:39.644 --> 09:03:45.241
Also the possibility that you 
have got, you know, let's say 

09:03:45.242 --> 09:03:48.942
someone has come in and said hey
, I have a deal for you, $   

09:03:48.943 --> 09:03:52.830
$20CPMs, put me in there.  We 
add that network.    pretty 

09:03:52.831 --> 09:03:56.882
easily to our mediation chain.  
Or if the network is already in 

09:03:56.883 --> 09:04:00.418
there, yeah, let's go right in 
there, let's modify the network,

09:04:00.604 --> 09:04:07.601
 let's put $   $20CPMs in, .  
And yeah, let's go down and 

09:04:07.602 --> 09:04:14.435
change this unit, we change it 
here and instantly that's done 

09:04:14.700 --> 09:04:16.655
 .
That's powerful.  Again across 

09:04:16.656 --> 09:04:20.586
all the apps  .
Another thing let's say we want 

09:04:20.587 --> 09:04:25.697
to add another app with a new ad
 unit and we have done the hard 

09:04:25.698 --> 09:04:28.356
work with the immediate ation
                 modation chain.

09:04:28.357 --> 09:04:33.046
  We take the ad unit and attach
 to the same mediation unit we 

09:04:33.047 --> 09:04:39.180
already had.  Let's go ahead and
 add an ad unit from tripero, 

09:04:39.181 --> 09:04:43.389
add that unit, add it, game I.D.
, again the placement I.D., and 

09:04:43.390 --> 09:04:46.165
we're done just like that.  So 
we took all of the networks 

09:04:46.166 --> 09:04:49.662
across the globe, packed it into
 that one change and we're done.

09:04:49.663 --> 09:04:53.595
  It's a really, really good way
 to save hours and hours that we

09:04:53.974 --> 09:04:58.761
 have seen in the market  .
You just have seen this in 

09:04:58.762 --> 09:05:03.987
action.  Let's go ahead and flip
 back to the deck.  We're 

09:05:03.988 --> 09:05:07.735
continuing to work on these 
features, simplify ied 

09:05:07.736 --> 09:05:11.270
management.  We're also loeg you
 to call these              

09:05:11.573 --> 09:05:14.118
   allowing you to       
             allowing you to all

09:05:14.353 --> 09:05:18.932
 these other networks multiple 
times.  We're up to 20    25 

09:05:18.933 --> 09:05:21.462
networks where we can pull in 
data automatically  .

09:05:21.463 --> 09:05:26.012
We have inbound adapters for 
three networks, we just added 

09:05:26.013 --> 09:05:29.711
fiber  .
Let's move right over to 

09:05:29.712 --> 09:05:33.011
optimize.  This is something 
where we have data, you have 

09:05:33.012 --> 09:05:36.803
data, let's put it together.  
First thing we know is if you're

09:05:37.116 --> 09:05:42.747
 using mediation, we have this 
real time ECPM capability, a 

09:05:42.748 --> 09:05:46.463
single click that lets 's us bid
 into every option.  If we think

09:05:46.767 --> 09:05:48.985
 key with make you more money, 
we'll give you more money.  

09:05:48.986 --> 09:05:51.359
That's been seen to really 
improve performance  .

09:05:51.360 --> 09:05:54.883
Second thing is we have these 
optimize refresh banners.  If 

09:05:54.884 --> 09:05:58.487
you have banners, you probably 
notice the speeds on the refrish

09:05:59.698 --> 09:06:03.783
 are changing.  Why should we 
ask you to run all these A-B 

09:06:03.784 --> 09:06:07.246
tests.  We have a lot of data on
 this.  We're automatically 

09:06:07.247 --> 09:06:11.894
changing this if you opt in.  We
 see if we pick the right bans

09:06:12.278 --> 09:06:14.806
ers and the right amount of 
time, you get better performance

09:06:14.966 --> 09:06:16.719
  .
Third thing is the dynamic 

09:06:16.720 --> 09:06:19.090
allocation for your campaigns.  
Maybe you want to show a million

09:06:19.413 --> 09:06:21.948
 impressions or ten percent.  
But you don't want to lose out 

09:06:21.949 --> 09:06:25.082
on these really high value 
options.  This dynamic 

09:06:25.083 --> 09:06:28.763
allocation let's you keep those 
high value options that make 

09:06:28.764 --> 09:06:33.229
money and still serve the goals 
you're trying to do  .

09:06:33.230 --> 09:06:37.774
Here I want to, we're basically 
again, we took to the streets, 

09:06:37.775 --> 09:06:40.938
these are some problems that we 
found.  It's really around 

09:06:40.939 --> 09:06:44.967
complexity of revenue streams 
across these different units.  

09:06:44.968 --> 09:06:48.795
So I want to introduce you to 
this new two-way integration 

09:06:48.796 --> 09:06:51.511
with AdMob and Firebase we 
announced yesterday.  We're 

09:06:51.512 --> 09:06:54.145
going to dive right in and see 
this thing in action  .

09:06:54.146 --> 09:06:58.290
First thing you see is this apps
 dashboard.  This is a revenue 

09:06:58.291 --> 09:07:02.755
card.  Here's what's awesome.  
You have AdMob revenue in blue, 

09:07:02.756 --> 09:07:06.152
you've got mediation revenue 
from other networks in red, and 

09:07:06.153 --> 09:07:10.096
in yellow you have in-app 
purchase revenue all    , all in

09:07:10.352 --> 09:07:14.156
 one place.  Okay, this is hard.
  And it's really because of the

09:07:14.397 --> 09:07:17.894
 marriage of Firebase, which is 
bringing in the in-app purchase,

09:07:18.100 --> 09:07:21.603
 and our network optimization 
products, which are bringing in 

09:07:21.604 --> 09:07:24.514
the external, and we put it all 
in one place  .

09:07:24.515 --> 09:07:28.857
Also we have this other card 
which is about user metrics.  So

09:07:29.118 --> 09:07:32.276
 we're pulling this data in from
 Firebase.  You have some really

09:07:32.735 --> 09:07:36.257
 interesting new metrics like ad
 exposure, how much are my users

09:07:36.476 --> 09:07:40.288
 actually seeing right now, ads 
versus the app.  You see 11 

09:07:40.289 --> 09:07:43.865
percent in this case.  With 
banks       banners sometimes 

09:07:43.866 --> 09:07:47.374
you see much higher.  You can 
see when it's high or low and 

09:07:47.375 --> 09:07:50.225
notice might not          
        things might not be 

09:07:50.226 --> 09:07:53.063
functioning correctly.  You can 
see experiments are they helping

09:07:53.434 --> 09:07:56.024
 or hurting, retention and 
average sessions, all here on 

09:07:56.025 --> 09:07:58.320
your dashboard  .
So we're going to run a very 

09:07:58.321 --> 09:08:00.321
fast

09:08:05.576 --> 09:08:09.133
 demo.  We  This is an account, 
a complicated account.  You have

09:08:10.503 --> 09:08:14.464
 got the flooded app, you have a
 lot of advertising data, not a 

09:08:14.465 --> 09:08:18.510
lot of IAP  .
You see 46 percent ad exspoe    

09:08:18.704 --> 09:08:22.692
posure, which is pretty common 
for banners.  And why don't we 

09:08:22.693 --> 09:08:25.832
flip right over to a different 
kind of account.  This is a 

09:08:25.833 --> 09:08:28.287
different one, this is Bingo 
Blast.  You see it's really 

09:08:28.288 --> 09:08:32.930
about IAP and interstitials only
.  A lot of IAP you see in red, 

09:08:32.931 --> 09:08:37.575
you see ad units exposure 0 pay 
58 percent, that's        

09:08:37.772 --> 09:08:40.994
               .58 percent.  
That's an interesting number I 

09:08:40.995 --> 09:08:44.711
didn't know.  Maybe we can grow 
higher because we also see if 

09:08:44.712 --> 09:08:48.488
you scroll down we're at 99 
percent fill rate.  I bet we 

09:08:48.489 --> 09:08:52.167
could increase exposure, drop 
fill rate, and clegsly watch

09:08:52.330 --> 09:08:56.456
               closely watch how
 long the sessions are per user 

09:08:56.457 --> 09:08:58.653
and retention and see if that's 
working or not  .

09:08:58.654 --> 09:09:03.915
That's a pretty powerful way to 
manage your business and this 

09:09:03.916 --> 09:09:06.135
automatically comes as soon as 
you integrate Firebase, very 

09:09:06.136 --> 09:09:10.756
simple, link the accounts.  This
 data automatically flows in.  

09:09:10.757 --> 09:09:12.478
You don't have to set anything 
up  .

09:09:12.479 --> 09:09:17.240
That's a powerful innovation 
we're very proud to show you.  

09:09:17.241 --> 09:09:20.502
We flip back over, and we'll go 
ahead and wrap up 

09:09:24.249 --> 09:09:25.930
 .
A lot of things to show on the 

09:09:25.931 --> 09:09:29.570
AdMob and Firebase integration. 
 We have some great partners and

09:09:29.875 --> 09:09:34.123
 some tremendous results so far.
  It's simplifying.  They had a 

09:09:34.124 --> 09:09:37.511
lot of engineers working on or 
just not doing.  We're giving 

09:09:37.512 --> 09:09:42.687
you that power  .
Again, Monday        moig with

09:09:42.827 --> 09:09:45.267
           monetization with 
this new beta re    we released,

09:09:45.680 --> 09:09:47.680
 mediation groups,

09:09:50.772 --> 09:09:54.857
 and Google Analytics for nier 
base           Firebase.  We're 

09:09:54.858 --> 09:09:58.286
looking for new ideas.  If you 
have things you want to tell us,

09:09:58.553 --> 09:10:01.262
 please reach out  .
This is what it's all about, 

09:10:01.263 --> 09:10:04.191
make developers like you as 
successful as possible, give you

09:10:04.417 --> 09:10:06.692
 the best ad experiences 
possible  .

09:10:06.693 --> 09:10:11.613
Tomorrow morning 8:30-9:30 is a 
session solely on Firebase and 

09:10:11.614 --> 09:10:15.437
AdMob integration.  Office hours
 right now, and code lab 

09:10:15.438 --> 09:10:19.667
happening tomorrow morning 9:30-
12:30 with people onsight to 

09:10:19.668 --> 09:10:24.560
walk you                 -site 
20 walk         to walk you 

09:10:24.561 --> 09:10:27.622
through native and rewarded.  
Those range half hour to an hour

09:10:27.911 --> 09:10:31.606
.  A Firebase analytics 
presentation an is well  .

09:10:31.607 --> 09:10:33.809
Thank you very much, really 
appreciate you being here.  If 

09:10:33.810 --> 09:10:36.154
you have questions, I'll go 
ahead and stay after.  Thank you

09:10:37.035 --> 09:10:38.241
.
» Thank you for joining this 

09:10:38.242 --> 09:10:41.857
session.  Brand ambassadors will
 assist with directing you 

09:10:41.858 --> 09:10:44.485
through the designated exits.  
We'll be making room for those 

09:10:44.486 --> 09:10:47.069
who have registered for the next
 session.  If you have 

09:10:47.070 --> 09:10:50.781
registered for the next session 
in this room, we ask that you 

09:10:50.782 --> 09:10:54.825
please clear the room and return
 via registration line outside. 

09:10:54.826 --> 09:10:59.853
 Thank you  .
(End of session) 

09:11:32.590 --> 09:11:33.144
 .  
.  

09:11:33.145 --> 09:11:33.710
.  
.  

09:11:33.711 --> 09:11:34.274
.  
.  

09:11:34.275 --> 09:11:34.784
.  
.  

09:11:34.785 --> 09:11:35.252
.  
.  

09:11:35.253 --> 09:11:35.650
.  
.  

09:11:35.651 --> 09:11:36.058
.  
.  

09:11:36.059 --> 09:11:36.492
.  
.  

09:11:36.493 --> 09:11:38.493
. 

09:11:42.452 --> 09:11:49.088
5:30 session, getting your 
assistants app     

09:11:51.230 --> 09:11:51.711
                      Getting 
Your Assistants App discovered

09:11:51.712 --> 09:11:53.712
          Discovered

09:11:56.884 --> 09:12:00.352
  .
Assistant App                 

09:12:00.353 --> 09:12:00.739
.  
.  

09:12:00.740 --> 09:12:01.199
.  
.  

09:12:01.200 --> 09:12:03.200
.  
. 

09:12:08.060 --> 09:12:10.060
.  
. 

09:16:15.770 --> 09:16:17.770
.  
.                

09:20:30.090 --> 09:20:32.090
.          

09:20:59.283 --> 09:20:59.718
.
».

09:20:59.719 --> 09:21:01.719
»                

09:23:33.983 --> 09:23:35.983
Is a

09:23:37.242 --> 09:23:37.595
.
».

09:23:37.596 --> 09:23:39.596
»                

09:23:59.615 --> 09:24:02.526
seats near the front of the room
.  Thank you 

09:25:44.824 --> 09:25:46.552
 .  
.

09:25:46.553 --> 09:25:49.609
Welcome, thank you for joining. 
 Our session will begin soon 

09:26:42.924 --> 09:26:43.446
.  
.  

09:26:43.447 --> 09:26:44.080
.  
.  

09:26:44.081 --> 09:26:45.116
.  
.  

09:26:45.117 --> 09:26:46.732
.  
.  

09:26:46.733 --> 09:26:48.733
. 

09:27:10.387 --> 09:27:12.653
STAGE 4
GETTING YOUR ASSISTANT APP 

09:27:10.387 --> 09:27:11.587
DISCOVERED
T428DD  

09:27:10.387 --> 09:27:10.779
.  
.  

09:27:10.780 --> 09:27:11.272
.  
.  

09:27:11.273 --> 09:27:12.524
.  
.  

09:27:12.525 --> 09:27:13.882
.  
.  

09:27:13.883 --> 09:27:15.883
.  
. 

09:29:20.510 --> 09:29:21.510
.
.

09:29:20.510 --> 09:29:23.654
» VALERIE NYGAARD:  Hello, 
welcome.  For those that are 

09:29:23.655 --> 09:29:27.611
here live, it has been a long 
day, and you are like the 

09:29:27.612 --> 09:29:31.431
endurance athletes of IO attende
es  .

09:29:31.432 --> 09:29:35.213
I'm very impressed that you are 
still here and still going, it's

09:29:35.571 --> 09:29:38.774
 like let's go, lets 's here it,
 it's awesome  .

09:29:38.775 --> 09:29:44.495
All right, so if you didn't 
attend the earlier session that 

09:29:44.496 --> 09:29:48.492
is basically about building a   
assistant apps or you vrn 

09:29:48.493 --> 09:29:51.859
experienced one, here is the 30-
second overview.  This is 

09:29:51.860 --> 09:29:54.400
something the developer 
communities builds to extend the

09:29:54.651 --> 09:29:56.877
 assistant and basically connect
 with users directly through the

09:29:57.133 --> 09:30:01.011
 assistant on the platforms 
where the assistant exists  .

09:30:01.012 --> 09:30:05.775
This is a representation of an 
eyes flee one you 

09:30:05.776 --> 09:30:07.707
might                    free 
when you might interact with on 

09:30:07.708 --> 09:30:10.900
Google home, and this is one you
 might interact with on the 

09:30:10.901 --> 09:30:13.996
phone  .
That's Assistant Apps in 20 

09:30:13.997 --> 09:30:17.239
seconds.  If you haven't build 
one or even if you have, have

09:30:17.350 --> 09:30:20.993
      if you haven't watch the 
build an Assistant App talk it's

09:30:21.517 --> 09:30:23.737
 fantastic.  You will be 
impressed to see building one 

09:30:23.738 --> 09:30:27.565
that's transactional even in 
like ten minutes.  So go do that

09:30:27.692 --> 09:30:31.610
.  If you are watching on a 
stream, go do that now.  If you 

09:30:31.611 --> 09:30:37.843
are here, #125i       stay here.
  We will keep going  .

09:30:37.844 --> 09:30:41.860
So we have had a ton of fun 
interacting with developer 

09:30:41.861 --> 09:30:45.250
community, building these first 
Assistant Apps                

09:30:45.251 --> 09:30:48.603
assistant apps in the ecosystem.
  It's been great to see how 

09:30:48.604 --> 09:30:50.542
creative people have been, how 
they are trying to push the 

09:30:50.543 --> 09:30:54.534
boundaries of this early system.
  We get some   ubmissions that 

09:30:54.535 --> 09:30:57.865
are funny and submissions that 
are useful and submissions that 

09:30:57.866 --> 09:31:06.753
are a little note,   na        
nauql #2shgs        hty, a 

09:31:06.754 --> 09:31:10.127
variety and it's great  .
This session is going to focus 

09:31:10.128 --> 09:31:12.982
on a particular aspect , and 
that is discovery.  Specifically

09:31:12.983 --> 09:31:16.860
 that's a user thing.  You want 
users to be able to discover the

09:31:17.129 --> 09:31:20.546
 hard work you have been doing. 
 So we're going to start today 

09:31:20.547 --> 09:31:27.338
from the user perspective  .
This is Jane.  She is our user. 

09:31:27.780 --> 09:31:31.388
 While I'm introducings people, 
I thought I would mention I'm 

09:31:31.389 --> 09:31:35.857
Valerie, one of your speakers.  
I'm on the product team and this

09:31:35.858 --> 09:31:41.040
 is Rob, one of the engineering 
leaders on the assistant  .

09:31:41.041 --> 09:31:48.271
Back to Jane.  Jane wants to 
know what she can do with the 

09:31:48.272 --> 09:31:51.214
Google assistant.  She wants to 
know all the things Google did 

09:31:51.215 --> 09:31:53.287
help her with and very much 
wants to know about all the 

09:31:53.288 --> 09:31:57.356
stuff that you can help her with
, right?  And we want that too. 

09:31:57.573 --> 09:32:05.032
 We all want easy discovery for 
Jane.  We are in this together 

09:32:05.033 --> 09:32:11.572
like you and us and Jane all 
like swimming in the same, I 

09:32:11.573 --> 09:32:15.152
don't have a good analogy, but 
all on the same page, going to 

09:32:15.153 --> 09:32:18.308
the same goal.  We're in it 
together, we all want the same 

09:32:18.309 --> 09:32:21.982
thing  .
So let's help Jane discover you.

09:32:21.983 --> 09:32:25.149
  We're going to frame this in 
three sections.  We're is going 

09:32:25.150 --> 09:32:28.873
to listen to what Jane is 
explicitly asking for.  We're 

09:32:28.874 --> 09:32:31.946
going to infer a little bit 
about what she wants when she 

09:32:31.947 --> 09:32:35.032
says what she wants to do, 
expressions an intent.  And 

09:32:35.033 --> 09:32:38.934
sometimes we're going to do 
something delightful for Jane.  

09:32:38.935 --> 09:32:41.922
And to talk about these first 
two is Rob.

09:32:41.923 --> 09:32:49.546
» All right.  Thanks a lot, 
Valerie  .

09:32:49.547 --> 09:32:53.248
What I'm going to begin with is 
the most basic form of discovery

09:32:53.444 --> 09:32:57.383
.  We call this expression
        plicit triggering.  It's

09:32:57.568 --> 09:33:01.522
 whenever a user invokes an app 
directly through its name  .

09:33:01.523 --> 09:33:05.658
So let me shift over to the 
phone view and show you a

09:33:09.534 --> 09:33:15.409
n example.  Talk to fit star
        Fit Star.

09:33:15.410 --> 09:33:20.128
» Here is fifth star 
kap                fifth 

09:33:20.129 --> 09:33:21.739
Starr             fit star    
    Fit Star.

09:33:21.740 --> 09:33:27.251
» This talk to app name pattern 
is special.  We apply this to 

09:33:27.252 --> 09:33:32.512
every single ape automatically. 
 By default when the user uses 

09:33:32.513 --> 09:33:34.946
this particular pattern we 
connect right to that particular

09:33:35.310 --> 09:33:39.924
 app.  So as a develop        er
   developer, this is the 

09:33:39.925 --> 09:33:41.988
phrases you want to use in 
advertisements when you are 

09:33:41.989 --> 09:33:45.645
instructing users how to start 
up your app.  It's, however, 

09:33:45.646 --> 09:33:48.750
pretty basic.  Mostly whenever 
users start up your app, they 

09:33:48.751 --> 09:33:51.558
want to jump right into an 
activity.  So let me show you 

09:33:51.559 --> 09:33:53.726
another example of an explicit 
trigger 

09:33:58.695 --> 09:34:00.936
 .
Ask fit start         Fit Start 

09:34:00.937 --> 09:34:06.808
to start a workout.
» Sure, here's fit start        

09:34:07.167 --> 09:34:11.176
 Fit Start, let's start with a 
seven-minute workout.  Up next.

09:34:11.177 --> 09:34:16.797
» Let's switch back to the 
slides  .

09:34:16.798 --> 09:34:20.290
What I should here was an action
 phrases         phrase, start a

09:34:20.564 --> 09:34:24.894
 work joup.  You can add an 
action                        

09:34:25.198 --> 09:34:29.306
      out.  You can add an 
action phrase and it stream 

09:34:29.307 --> 09:34:32.320
lines the users       user's 
actions.  They are able to start

09:34:32.471 --> 09:34:35.115
 up the app and jump right into 
an activity  .

09:34:35.116 --> 09:34:37.812
One thing to be careful about, 
there can be many different 

09:34:37.813 --> 09:34:42.620
versions of this action phrase, 
so you're not always guaranteed 

09:34:42.621 --> 09:34:45.637
the trigger on here.  When you 
set up action phrases, be sure 

09:34:45.638 --> 09:34:50.209
to test them out and make sure 
they do trigger all the way 

09:34:50.210 --> 09:34:53.045
through  .
I can show you how to set up an 

09:34:53.046 --> 09:34:55.586
action phrase now.  If our a 
developer that works directly in

09:34:55.812 --> 09:35:00.195
 the action packages, what you 
want to do is find the intent 

09:35:00.196 --> 09:35:03.723
that you want to connect the 
particular action phrase to, 

09:35:03.724 --> 09:35:07.777
then go to the trigger stanza  .
In    

09:35:07.778 --> 09:35:11.856
Inside the twigger stanza query 
patterns you can list out all 

09:35:11.857 --> 09:35:15.016
the different action phrases 
that you want.  For instance you

09:35:15.272 --> 09:35:18.281
 see start a work joup is there
              out is there.  If 

09:35:18.282 --> 09:35:23.781
you're a developer that works 
with API.AI it's a very simple 

09:35:23.782 --> 09:35:26.987
two-step process to set up an 
action phrase.  Similar to the 

09:35:26.988 --> 09:35:31.428
action package, you go to your 
intent, the target intents page,

09:35:31.535 --> 09:35:35.366
 then you list out the action 
phrase        phrases in the 

09:35:35.367 --> 09:35:40.093
user says examples  .
That is step one.  Then step two

09:35:40.205 --> 09:35:44.477
 you go to the actions on Google
 integration page, and you add 

09:35:44.478 --> 09:35:48.426
your target intent as an 
additional triggering intent.  

09:35:48.427 --> 09:35:54.984
This will set up the action 
phrase for API.AI  .

09:35:54.985 --> 09:35:59.264
Another thing to note about 
setting up explicit triggers, 

09:35:59.265 --> 09:36:04.656
whether you are using action 
packages or API.AI, your final 

09:36:04.657 --> 09:36:09.763
step will be to go to your 
console page.  Then list out of 

09:36:09.764 --> 09:36:15.381
the five examples invocations 
using your explicit triggering 

09:36:15.382 --> 09:36:20.295
patternsment be    be sure to 
check all the pat earns

09:36:20.483 --> 09:36:22.550
      terns do trigger your 
action.  This is really 

09:36:22.551 --> 09:36:27.016
important because we take these 
five sample invocations, and we 

09:36:27.017 --> 09:36:31.795
actually put them on your app's 
directory page.  So here I have 

09:36:31.796 --> 09:36:37.343
pictured the direct ty page for 
fit star        Fit Star.  You 

09:36:37.344 --> 09:36:40.949
see toward the bottom there's 
the ask your assistance  t 

09:36:40.950 --> 09:36:44.864
section.  This lists out all the
 different sample invocations 

09:36:44.865 --> 09:36:47.451
that are provided, and it's 
really important for discovery 

09:36:47.452 --> 09:36:51.454
for     because users are going 
to be browse ing for apps inside

09:36:51.813 --> 09:36:57.651
 the directory.  They could 
immediately try the app via the 

09:36:57.652 --> 09:37:02.643
try it button, but moreover we 
want them to see how to invoke 

09:37:02.644 --> 09:37:04.995
this sometime in the future when
 they are away from the 

09:37:04.996 --> 09:37:11.937
directory  .
That's all very nice whenever 

09:37:11.938 --> 09:37:16.549
the user remembers your app's 
name or knows about your app.  

09:37:16.550 --> 09:37:19.493
But let's go back to a case 
where Jane doesn't even know 

09:37:19.494 --> 09:37:21.494
about your

09:37:23.691 --> 09:37:25.839
 app or can't remember the name.
  This is the portion of 

09:37:25.840 --> 09:37:28.904
discovery that we really want to
 make well because we think this

09:37:29.161 --> 09:37:30.897
 can     will make all the 
difference in the world as far 

09:37:30.898 --> 09:37:36.282
as getting exposure for apps  .
What we're doing is we're 

09:37:36.283 --> 09:37:42.742
building new algorithms so users
 can use     just express their 

09:37:42.743 --> 09:37:45.293
intent.  They don't have to use 
an app name.  They can express 

09:37:45.294 --> 09:37:50.739
what they want to do.  Partner
ing with you, I'll talk in a few

09:37:50.740 --> 09:37:54.067
 slides about ways you can help 
this, partnering with you, we'll

09:37:54.253 --> 09:37:57.061
 be able to take their general 
intent and match it to the most 

09:37:57.062 --> 09:38:04.757
relevant app  .   .  We call 
this implicit triggering.  And 

09:38:04.758 --> 09:38:10.547
let's go ahead, actually let me 
show you one example first here 

09:38:10.548 --> 09:38:13.283
still  .
Here's an example, Jane wants to

09:38:13.438 --> 09:38:18.508
 do a workout session and says 
give me a workout.  We actually 

09:38:18.509 --> 09:38:21.563
do a little bit of implicit 
triggering today.  It looks like

09:38:21.741 --> 09:38:25.550
 what I have pictured on the 
screen here.  We'll look at that

09:38:26.012 --> 09:38:31.437
 intent and then we'll find a 
matching app, and just ask Jane 

09:38:31.438 --> 09:38:34.169
if she wants to connect to that 
app.  Here we said do you want 

09:38:34.170 --> 09:38:37.894
to talk to fit start         Fit
 Start, and Jane can say yes or 

09:38:37.895 --> 09:38:40.755
no  .
Let's now go to the phone view. 

09:38:40.909 --> 09:38:42.909
 I want to show you something 
we're working

09:38:45.317 --> 09:38:47.317
 on.  Give me a workout

09:38:49.347 --> 09:38:51.050
.
» Okay, I have a couple of 

09:38:51.051 --> 09:38:56.139
options for that.  Fit start kap
 12 and five-minute

09:38:56.432 --> 09:38:59.264
               And Five-minute, 
which would you like to try?

09:38:59.265 --> 09:39:02.246
» Okay, a subtle difference here
.  What we're doing, we're 

09:39:02.247 --> 09:39:06.578
working on algorithms to find 
the high quality matching apps 

09:39:06.579 --> 09:39:10.029
for a particular intent, then we
 want to display them in a nice 

09:39:10.030 --> 09:39:13.857
visual manner that gives the 
user some queues about what the 

09:39:13.858 --> 09:39:17.431
app does and allows the user to 
sleshg        select it very 

09:39:17.432 --> 09:39:20.089
easily  .
I think we can really use this 

09:39:20.090 --> 09:39:25.051
to increase the exposure of apps
 to the user and also satisfy 

09:39:25.052 --> 09:39:27.925
users' needs much better because
 they are just able to start off

09:39:28.034 --> 09:39:34.228
 with a general intent  .
Can you go back to the slides?  

09:39:34.229 --> 09:39:38.737
Okay  .
Seeing this, probably a natural 

09:39:38.738 --> 09:39:42.957
question you have is how does my
 app get into this list and how 

09:39:42.958 --> 09:39:48.936
is this list ordered  .
So what we have to do here is a 

09:39:48.937 --> 09:39:52.893
ranking problem, very system rar
 to what                 imilar 

09:39:52.894 --> 09:39:56.281
to what we have done in web 
search.  Many of the principles 

09:39:56.282 --> 09:39:59.120
apply, but this is a brand new 
ecosystem and we still need to 

09:39:59.121 --> 09:40:02.394
figure out new ways to play 
these principles, we need to 

09:40:02.395 --> 09:40:06.008
figure out what signals are 
important, the ecosystem.  So 

09:40:06.009 --> 09:40:10.638
this is still very much a work 
in progress  .

09:40:10.639 --> 09:40:13.375
If I can give you a hint how we 
think about this, we think about

09:40:13.791 --> 09:40:18.950
 our users, we think about what 
has Jane done in this context in

09:40:19.211 --> 09:40:22.248
 the past.  We also think about 
what do all of our assist tapt

09:40:23.510 --> 09:40:26.727
     ant users do in this type 
of context.  We also take 

09:40:26.728 --> 09:40:30.743
advantage of Google's reach and 
also look at what users in other

09:40:31.047 --> 09:40:34.954
 properties like Google search 
or Google maps do in this 

09:40:34.955 --> 09:40:38.605
particular could be          
context.  Together this gives us

09:40:38.907 --> 09:40:45.059
 a set of signals that we can 
then we've       we've   ave 

09:40:45.060 --> 09:40:50.122
together into ranking algorithms
 to find the most relevant apps 

09:40:50.123 --> 09:40:52.908
for the user's intent  .
How can you help us here?  

09:40:52.909 --> 09:40:55.646
Remember this action package 
with the action phrases I showed

09:40:56.033 --> 09:41:00.417
 a couple of minutes ago?  It's 
good to pay attention here.  

09:41:00.418 --> 09:41:04.351
Write out useful action phrases 
that describe what happens in 

09:41:04.352 --> 09:41:07.051
your app.  If you think about 
these, these are just natural 

09:41:07.052 --> 09:41:10.026
wlang expressions             
language                language

09:41:10.419 --> 09:41:13.514
 expressions of your app's xap
     capability.  We can use 

09:41:13.515 --> 09:41:16.934
these in our matching and 
ranking algorithms  .

09:41:16.935 --> 09:41:21.852
Another thing helpful to help 
with your discovery is go ahead,

09:41:21.979 --> 09:41:26.520
 if you have an associated 
website or soon an associated 

09:41:26.521 --> 09:41:32.631
Android app, go through the 
brand verification step in your 

09:41:32.632 --> 09:41:35.111
app console.  This let's us 
establish a link between your 

09:41:35.112 --> 09:41:42.239
assistant app and your web page,
 and in the near future also any

09:41:42.398 --> 09:41:46.032
     any of your Android apps  .
As I mentioned, part of our rank

09:41:46.333 --> 09:41:50.042
ing eight right         
  algorithms will look at some 

09:41:50.043 --> 09:41:52.566
of the other properties like 
Google search and maps and 

09:41:52.567 --> 09:41:56.227
search,         such, and this 
will allow you     us to 

09:41:56.228 --> 09:41:59.197
establish connection between the
 signals.  Together working on 

09:41:59.198 --> 09:42:01.314
action phrases, giving us some 
of this information about your 

09:42:01.315 --> 09:42:07.664
connected sites, this can all 
help with your discovery  .

09:42:07.665 --> 09:42:10.999
That's a quick overview of what 
we're trying to do to make it 

09:42:11.000 --> 09:42:15.749
much easier for Jane to express 
in a natural way that they want 

09:42:15.750 --> 09:42:20.025
to use a particular app or just 
a particular intent.  We want to

09:42:20.451 --> 09:42:24.196
 go way beyond this, and we 
actually are working on other 

09:42:24.197 --> 09:42:26.672
discovery means that will help 
Jane even figure out things they

09:42:26.871 --> 09:42:29.654
      she didn't know could be 
done on our platform           

09:42:29.877 --> 09:42:33.128
   her platform  .
I'm going to hand back to value 

09:42:33.129 --> 09:42:35.485
rye         Valerie right now so
 she can go over these.

09:42:35.486 --> 09:42:41.182
» VALERIE NYGAARD:  Thanks  .
Okay, so I'm a huge fan of the 

09:42:41.183 --> 09:42:45.609
implicit triggering that Rob was
 talking about.  But what we 

09:42:45.610 --> 09:42:50.538
want to talk about next is some 
kind of juice y like on the 

09:42:50.539 --> 09:42:53.415
front lines, ienlts        it's 
coming and in development kind 

09:42:53.416 --> 09:42:57.096
of stuff.  Most of you     what 
you will see next is 

09:42:57.097 --> 09:43:00.109
directional, but we really 
wanted to share it so you have a

09:43:00.583 --> 09:43:03.296
n idea how we are thinking about
 things and what we expect to 

09:43:03.297 --> 09:43:07.529
come next  .
Center dip to us          

09:43:12.208 --> 09:43:14.570
going to talk about it in 
dialogue when Jane is interact

09:43:14.858 --> 09:43:17.335
ing through the assistant, and 
talk about it over the 

09:43:17.336 --> 09:43:19.887
conversation stage      
                       off the 

09:43:19.888 --> 09:43:21.740
covering stage  .         
          conversation stage  .

09:43:21.741 --> 09:43:24.804
On the conversation stage first.
  Let's say Jane has a request 

09:43:24.805 --> 09:43:28.864
in mind.  Let's say it's a very 
typical request for someone to 

09:43:28.865 --> 09:43:32.162
ask Google about.  So for 
example, Jane wants to know 

09:43:32.163 --> 09:43:36.738
about the red cat       Red Cat,
 a restaurant in no,     New 

09:43:36.739 --> 09:43:41.062
York.  She says, tell me about 
the red cat       Red Cat  .

09:43:41.063 --> 09:43:43.649
We're going to give her the 
information she's going to ask 

09:43:43.650 --> 09:43:46.599
for, of course the first thing 
we want to do.  But she might 

09:43:46.600 --> 09:43:50.577
also be dwlieted          
delighted if we give her some 

09:43:50.578 --> 09:43:52.540
other ways to continue the 
conversation, especially some 

09:43:52.541 --> 09:43:56.299
ways to take action that's surp 
relevant.                  super

09:43:56.535 --> 09:43:59.401
 relevant.  You see some 
suggestions on the bottom about 

09:43:59.402 --> 09:44:01.958
booking a table, getting 
pictures.  In another scenario 

09:44:01.959 --> 09:44:05.833
you might see menus, directions,
 other similar restaurants, 

09:44:05.834 --> 09:44:08.626
things like that.  Actually you 
may have seen this in production

09:44:11.317 --> 09:44:13.847
 today  .
This happens to be Google going 

09:44:13.848 --> 09:44:17.915
to Google, but we want this to 
extend to developer created 

09:44:17.916 --> 09:44:21.964
features.  So if you are 
watching the keynote and you 

09:44:21.965 --> 09:44:26.095
were really paying attention to 
this really cool demo using 

09:44:26.096 --> 09:44:33.883
Google lens, so my colleague eb 
   Ebar pointed the camera via 

09:44:33.884 --> 09:44:38.378
assistant at an markuis and the 
assistant under studz this is a 

09:44:38.379 --> 09:44:42.238
band and offered some nice 
follow on actions about hearing 

09:44:42.239 --> 09:44:44.865
the mice      music or adding to
 the calendar  .

09:44:44.866 --> 09:44:48.463
Right in the middle there is 
getting tickets from ticket 

09:44:48.464 --> 09:44:50.390
master             Ticket 
Master, one of our partners on 

09:44:50.391 --> 09:44:54.530
actions on Google.  This is the 
kind of thing we want to do, 

09:44:54.531 --> 09:44:58.281
right?  So again, Jane has 
something in mind, right?  She's

09:44:58.640 --> 09:45:01.236
 trying to save this or hear the
 music, whatever she's trying to

09:45:01.332 --> 09:45:05.332
 do.  We're saying okay, did you
 want to buy tickets?  This is 

09:45:05.333 --> 09:45:09.170
not intrusive, this is not 
invasive, this is not insistent.

09:45:09.171 --> 09:45:13.146
  It's just assistive and there 
for Jane if she wants it.  Right

09:45:13.751 --> 09:45:17.456
?  So we really want to be able 
to understand what are the 

09:45:17.457 --> 09:45:21.066
actions that your assistant app 
can do so that we can offer it 

09:45:21.067 --> 09:45:24.250
up in situations like these and 
see how it goes 

09:45:27.737 --> 09:45:29.411
 .
We even of course want to 

09:45:29.412 --> 09:45:32.326
combine this with what Rob was 
talking about earlier, about 

09:45:32.327 --> 09:45:37.682
giving you a provider selection.
  Right?  Let's get to the 

09:45:37.683 --> 09:45:41.933
beginning of the video and walk 
through it  .

09:45:41.934 --> 09:45:45.901
Let's say Jane wants pizza 
delivery, again pretty common 

09:45:45.902 --> 09:45:50.411
query.  She chooses a restaurant
 and decides to place order.  

09:45:50.412 --> 09:45:52.883
That was the first suggestion.  
Then she has a couple of 

09:45:52.884 --> 09:45:57.340
providers.  So in Jane's mind 
she is basically like, oh, I is

09:45:57.465 --> 09:46:00.574
    can actually place the order
.  Oh, I have a choice of 

09:46:00.575 --> 09:46:03.216
providers.  This is what we want
.  It's not forced discovery, 

09:46:03.217 --> 09:46:06.953
it's just contextual  .
All right, how do you get into 

09:46:06.954 --> 09:46:11.279
that?  Before I go on, how do 
you get into that?  It's the 

09:46:11.280 --> 09:46:15.511
same basic stuff that Rob was 
talking about.  Give us some 

09:46:15.512 --> 09:46:20.593
clues about what your app can do
, and we'll try to help take it 

09:46:20.594 --> 09:46:23.105
you   from there  .
That's in the conversation 

09:46:23.106 --> 09:46:26.665
station         stage  .
When Jane is elsewhere, for 

09:46:26.666 --> 09:46:31.675
example you may have seen the 
new explore tab in the assistant

09:46:34.097 --> 09:46:34.635
 experience      
              Assistant 

09:46:34.636 --> 09:46:37.730
Experience  .
If we can go to the phone.  In 

09:46:37.731 --> 09:46:42.440
the upper right-hand corner on 
the top there               I'm 

09:46:42.441 --> 09:46:45.240
going to tap there and get into 
this experience.  This is a nice

09:46:45.625 --> 09:46:52.050
 browse experience that let's
       lets our user see some 

09:46:52.051 --> 09:46:57.349
things they she can do.  There's
 our fit star kap 12.   2      

09:46:57.794 --> 09:47:00.386
          Fit Star.  She can 
browse and see things that are 

09:47:00.387 --> 09:47:03.148
her fafrnts     vorites, things 
that are recent.  If she goes 

09:47:03.149 --> 09:47:06.144
into fit star        Fit Star 
again, one of the things you saw

09:47:06.434 --> 09:47:09.078
 Rob show, these guys in the 
center of the screen, these 

09:47:09.079 --> 09:47:11.515
sample invocations that will 
appear for her, of course this 

09:47:11.516 --> 09:47:16.431
is something our approvers do 
des     test, so you want

09:47:16.569 --> 09:47:18.852
          to make sure these 
work.  These are invoke ready

09:47:19.397 --> 09:47:23.034
 ily.  If I tap into this, this 
will take us into the fit star 

09:47:23.035 --> 09:47:25.604
experience  .
I'm not going to do that this 

09:47:25.605 --> 09:47:27.830
second because I want to talk 
about one more thing here.  

09:47:27.831 --> 09:47:32.855
Having an attractive and appeal
ing and concise picture and 

09:47:32.856 --> 09:47:37.494
especially the text explanation 
here is not just for the 

09:47:37.495 --> 09:47:40.947
purposes necessarily of a user 
browse ing on the surface.  This

09:47:40.948 --> 09:47:45.104
 is also a signal that is the 
kind of signal that Google likes

09:47:45.449 --> 09:47:49.271
 to understand what your app 
does.  Right?  So think about 

09:47:49.272 --> 09:47:51.605
what you're going to put here.  
Think about something that's 

09:47:51.606 --> 09:47:54.280
going to make sense to users 
right off the bat.  Think about 

09:47:54.281 --> 09:47:58.934
something that we might be able 
to understand is something that 

09:47:58.935 --> 09:48:04.678
your app can fulfill.  Just have
 a   it think about what goes in

09:48:04.866 --> 09:48:08.024
                             a 
think about what goes in here  .

09:48:08.270 --> 09:48:12.580
Think we can go back to the 
slides. 

09:48:17.302 --> 09:48:21.342
 Great  .
Marketing!  .

09:48:21.343 --> 09:48:25.225
Sometimes we show case you.  We 
are looking for people to show 

09:48:25.226 --> 09:48:28.389
case.  We are looking for 
experiences that we think our 

09:48:28.390 --> 09:48:31.336
yourself will be attracted to 
and want to do.  And we want to 

09:48:31.337 --> 09:48:35.087
shout about them.  Again, we 
want you discovered.  Right?  So

09:48:35.420 --> 09:48:39.602
 newsletters and blog posts and 
tweets and all of the above the 

09:48:39.603 --> 09:48:43.659
line marketing that we have, we 
want to be able to feature your 

09:48:43.660 --> 09:48:48.427
experiences.  So what I'm going 
to tell you next is one of the 

09:48:48.428 --> 09:48:54.371
ways that we figure out like how
 can we decide who to feature  .

09:48:54.809 --> 09:48:57.995
It is absolutely true that 
Google does all the things that 

09:48:57.996 --> 09:49:03.092
Google is known for, right?  We 
are looking at all the user 

09:49:03.093 --> 09:49:06.448
signals we see in the wild.  
Repeat usage, daily active 

09:49:06.449 --> 09:49:09.627
users, looking at if someone 
goes into your experience, did 

09:49:09.628 --> 09:49:12.416
they appear to have a good 
experience, did they appear to 

09:49:12.417 --> 09:49:16.296
leave early, all these things 
are of course things we are 

09:49:16.297 --> 09:49:19.387
observing, but I wanted to let 
you know that we are early in 

09:49:19.388 --> 09:49:23.278
this ecosystem and also making 
somewhat call      qualitative 

09:49:23.279 --> 09:49:25.648
judgments about deciding this as
 well  .

09:49:25.649 --> 09:49:28.651
You all know that we have 
approvers that are in our queue 

09:49:28.652 --> 09:49:31.815
and we have of course a lot of 
product people and engineers, 

09:49:31.816 --> 09:49:34.946
the whole team thinking about 
what are the fantastic 

09:49:34.947 --> 09:49:39.570
experiences here.  These are the
 questions that we ask ourselves

09:49:39.899 --> 09:49:42.961
.  When I go through an 
experience, I think, I see all 

09:49:42.962 --> 09:49:46.904
those cameras going up, good.  
So like these are the things 

09:49:46.905 --> 09:49:51.806
that I think about.  Did I smile
?  Did I laugh?  Did I learn 

09:49:51.807 --> 09:49:55.578
something?  Did I learn 
something interesting?  Would I 

09:49:55.579 --> 09:49:59.589
tell someone?  Would I tell 
someone right now, would I call 

09:49:59.590 --> 09:50:03.818
them, gosh, check this out.  
Would I use it again?  Would I 

09:50:03.819 --> 09:50:09.545
use it everyday?  Did it get 
better for me over time?  Can it

09:50:10.292 --> 09:50:14.772
 pick up why I left off?  Did it
 do what I expected?  Did it act

09:50:15.552 --> 09:50:19.941
 as advertised?  Right  ?
All of these kind of things are 

09:50:19.942 --> 09:50:22.895
things we're thinking about, so 
I'm not saying like we're 

09:50:22.896 --> 09:50:25.897
marking this down and feeding 
into rfrng       ranking 

09:50:25.898 --> 09:50:28.593
directly.  What I'm talking 
about is really about feature

09:50:28.756 --> 09:50:32.423
 ing.  But when you think about 
your experience, and before you 

09:50:32.424 --> 09:50:37.779
hit submit, okay, you should be 
asking yourself these questions.

09:50:37.780 --> 09:50:41.087
  If you have anyone that can 
dog food for you, whether you 

09:50:41.088 --> 09:50:44.330
work at a big organization where
 you have a big trial and 

09:50:44.331 --> 09:50:48.765
testing or dog food program or 
you got a buddy that can try out

09:50:49.013 --> 09:50:52.985
 your app for you, ask these 
questions to them and to 

09:50:52.986 --> 09:50:55.194
yourself.  If you went through 
your entire experience and it 

09:50:55.195 --> 09:50:59.199
did not make you smile or did 
not do something useful for you 

09:50:59.200 --> 09:51:02.299
or you did not learn anything, 
you may have a little ways to go

09:51:02.820 --> 09:51:08.158
 before this is going to be like
 taking the world by storm  .

09:51:08.276 --> 09:51:11.148
What you say     see in gray or 
black on the the bottom is also 

09:51:11.149 --> 09:51:14.341
some things we look at in terms 
of conversational hygiene, right

09:51:14.602 --> 09:51:19.201
?  So was I as a user just 
confused at any point.  

09:51:19.202 --> 09:51:22.465
Especially when talking about a 
voice driven product.  If you 

09:51:22.466 --> 09:51:27.132
don't know what to say, it's 
really difficult to recovery.  

09:51:27.133 --> 09:51:32.189
Right?  So when you are building
 for the phones, those 

09:51:32.190 --> 09:51:35.011
suggestion chips are really 
critical.  Like help the user 

09:51:35.012 --> 09:51:39.401
out.  When you are talking about
 the eyes free experience, get 

09:51:39.402 --> 09:51:42.627
them to a place where they kind 
of know how they should be 

09:51:42.628 --> 09:51:46.992
responding  .
Did I have to repeat hiefs?   

09:51:47.171 --> 09:51:50.595
       myself?  Did it feel slow
?  I'm not talking about system 

09:51:50.596 --> 09:51:53.772
slowness.  Of course everybody 
wants everything to be faster.  

09:51:53.773 --> 09:51:57.330
But really did it feel like your
 app responded slowly?  Really 

09:51:57.331 --> 09:51:59.740
think about that  .
Then final there are two pieces 

09:51:59.741 --> 09:52:05.176
of hygiene that if you went to 
any of the Louie design talks 

09:52:05.177 --> 09:52:08.277
I'm positive you heard.  We 
erred       refer to them as no 

09:52:08.278 --> 09:52:12.192
match and no input.  Okay, no 
match is when the user says 

09:52:12.193 --> 09:52:15.991
something that your app didn't 
expect.  What did you do?  Did 

09:52:15.992 --> 09:52:19.170
you like reframe the question so
 that they felt like they had 

09:52:19.171 --> 09:52:22.645
another chance to answer nicely?
  Or did you just repeat exactly

09:52:22.898 --> 09:52:28.560
 what you said before?  That has
 a really big impang in how    

09:52:28.663 --> 09:52:33.258
     ct in how your app feels 
conversationally  .

09:52:33.259 --> 09:52:37.027
When the user department respond
         didn't re          

09:52:37.244 --> 09:52:40.845
          sdvent respond fast 
enough so there's a time ount, 

09:52:41.015 --> 09:52:43.858
      out, or you didn't get an 
input and no response, did you 

09:52:43.859 --> 09:52:47.380
have a conversationally 
appropriate recovery from that. 

09:52:47.656 --> 09:52:49.985
 Please think about those things
 before you're thinking about 

09:52:49.986 --> 09:52:53.197
like how many action phrases can
 I load into my action package 

09:52:53.198 --> 09:52:57.423
that I trigger all the time.  
That's like not the right way to

09:52:57.666 --> 09:53:00.639
 think about it, right?  The 
right way to think about it is 

09:53:00.640 --> 09:53:03.490
give us some things that you 
think are really, really salient

09:53:04.523 --> 09:53:07.146
.  We will notice if you give us
 a bunch of things that are not 

09:53:07.147 --> 09:53:10.878
really salient.  Right?  And 
make your app something that 

09:53:10.879 --> 09:53:14.720
people really want to come back 
and use  .

09:53:14.721 --> 09:53:18.790
There are a ton of design 
resources.  Absolutely a ton.  

09:53:18.791 --> 09:53:21.905
Some great talks here that you 
can find.  And there are also a 

09:53:21.906 --> 09:53:26.134
ton of resources on generally 
building assistant apps.  So I 

09:53:26.135 --> 09:53:29.964
look forward to seeing what you 
all do.  I'm going to leave you 

09:53:29.965 --> 09:53:34.288
with a basic checklist.  Four 
items, four calls to action for 

09:53:34.289 --> 09:53:40.458
you to do  .
To be more discoverable.  Do 

09:53:40.459 --> 09:53:43.649
that branded verification.  I 
know that kind of sounds like 

09:53:43.650 --> 09:53:47.307
we're checking on who you are, 
but really we're talking about 

09:53:47.308 --> 09:53:49.610
connecting your other properties
 if you have them so that we can

09:53:49.816 --> 09:53:53.077
 get some more information from 
that.  Right?  Get some kig all 

09:53:53.078 --> 09:53:56.179
in from that  .             
                 signal from 

09:53:56.180 --> 09:53:59.575
that  .
Two, create a nice informative 

09:53:59.576 --> 09:54:03.001
direct #24ri      ory listing.  
Relevant, actionable    able 

09:54:03.002 --> 09:54:06.099
language.  These are actions  .
Number three, I know you're 

09:54:06.100 --> 09:54:10.942
going to add the action phrases.
  I'm a hundred percent sure.  

09:54:10.943 --> 09:54:13.653
Do ad vel     relevant United 
Nations with.  We observe things

09:54:14.001 --> 09:54:17.258
 like well, this triggered and 
it flopped.  Or this triggered 

09:54:17.259 --> 09:54:20.413
and it was really successful.  
Right?  And as the ecosystem 

09:54:20.414 --> 09:54:22.921
matures, we'll get better and 
better at that as well.  So 

09:54:22.922 --> 09:54:26.326
please be thoughtful of these.  
But really, really pay some 

09:54:26.327 --> 09:54:31.068
attention who are             
      attention here  .

09:54:31.069 --> 09:54:33.878
Finally, make something awesome.
  Make something people want to 

09:54:33.879 --> 09:54:38.273
use and that when you do that,  
like qualitative evaluation for 

09:54:38.274 --> 09:54:43.266
yourself, you're like this was 
hill      hilarious, or this was

09:54:43.775 --> 09:54:48.345
 essential, this is something I 
need do every day.  Right?  

09:54:48.346 --> 09:54:51.327
Create something that you love 
 .

09:54:51.328 --> 09:54:58.890
That's it, thank you  .
(Applause) 

09:55:06.864 --> 09:55:07.898
 .
Q&amp;A, Rob?

09:55:07.899 --> 09:55:12.057
» That sounds great.
» VALERIE NYGAARD:  Great.  I 

09:55:12.058 --> 09:55:16.287
think they have mics  .
Yeah, right there 

09:55:20.140 --> 09:55:22.310
 .
Guys, if you just want to go 

09:55:22.311 --> 09:55:25.149
have dinner, absolutely fine.  
I'm going to give you like five 

09:55:25.150 --> 09:55:27.206
seconds  .
Thank you so much for being here

09:55:27.404 --> 09:55:29.404
, really appreciate it. 

09:55:32.274 --> 09:55:33.616
 Bye.
» Rob:  Oh.

09:55:33.617 --> 09:55:36.638
» VALERIE NYGAARD:  Something I 
let you go too soon.  Yeah.

09:55:36.639 --> 09:55:39.865
» Your question.
» In the sort of delight section

09:55:40.037 --> 09:55:42.849
 of this where you were talking 
about potentially servicing 

09:55:42.850 --> 09:55:47.976
these little slivers of sort of 
like preview of what assistant 

09:55:47.977 --> 09:55:51.450
apps are available, right now 
looks like two servicing  .

09:55:51.451 --> 09:55:55.570
Do you have plans for how many 
could service for a particular 

09:55:55.571 --> 09:55:58.628
query?  How many          
» VALERIE NYGAARD:  How many do 

09:55:58.629 --> 09:56:01.932
you think should service?
» I don't know.  Depends on the 

09:56:01.933 --> 09:56:04.797
query.  I'm curious.  Because we
 only saw one example.

09:56:04.798 --> 09:56:08.655
» VALERIE NYGAARD:  You saw one 
example.  This is preproduction.

09:56:08.656 --> 09:56:10.672
  We'll be playing with that.  
Sort of some obvious limitations

09:56:11.061 --> 09:56:14.001
 in both the phone screen and 
also look human cognition.  So 

09:56:14.002 --> 09:56:18.304
you want to give them basically 
their best options, and we think

09:56:18.479 --> 09:56:20.834
 of it as giving them only 
things that are relevant.

09:56:20.835 --> 09:56:25.524
» Okay.  Can I have a follow-up 
question?  Is there going to be 

09:56:25.525 --> 09:56:29.057
some sort of search function 
within the app directory?  Or is

09:56:29.058 --> 09:56:32.517
 that just, okay.
»      .  

09:56:32.518 --> 09:56:34.613
» VALERIE NYGAARD:  That seems 
like a super good product idea.

09:56:34.614 --> 09:56:37.945
» Does that search function work
 differently than the discovery 

09:56:37.946 --> 09:56:41.618
methods that you described for 
within the assistant?

09:56:41.619 --> 09:56:45.250
» Rob:  I can handle that.  It 
will work differently because of

09:56:45.251 --> 09:56:49.252
 the context.  You're using 
things in a browse ing mode, 

09:56:49.253 --> 09:56:53.244
another one you may be out on 
the go or something.

09:56:53.245 --> 09:56:55.407
» When you were talking about 
discovery strategy, talking 

09:56:55.408 --> 09:56:59.359
about in the assistant app, not 
the directory search context, 

09:56:59.360 --> 09:57:01.812
right?
» We think about                

09:57:01.813 --> 09:57:04.444
VALERIE NYGAARD:  We think about
 both of them.  Rob was saying 

09:57:04.445 --> 09:57:07.349
they won't be necessarily the 
exact same eight       algorithm

09:57:07.496 --> 09:57:09.278
.
» But it would be a god practice

09:57:09.279 --> 09:57:12.356
 for target                    
     good practice for targeting

09:57:12.357 --> 09:57:14.483
 both.
» Yes.

09:57:14.484 --> 09:57:18.524
» Thank you so much.
» Great talk, curious about 

09:57:18.525 --> 09:57:25.418
handoffs on especially the phone
 surface to web-based UI  .

09:57:25.419 --> 09:57:29.026
In the presentation you used 
pizza.  You know, if you wanted 

09:57:29.027 --> 09:57:32.567
to customize Pisa    pris      
pizza, for example, that can get

09:57:32.769 --> 09:57:35.479
 teed I don't us with suggestion
                    use with

09:57:35.617 --> 09:57:39.328
                  tedious with 
suggestion chips.  Do you have 

09:57:39.329 --> 09:57:43.474
thoughts, like web based UIs 
embedded in the system 

09:57:43.475 --> 09:57:45.094
experience?
» VALERIE NYGAARD:  We have a 

09:57:45.095 --> 09:57:47.832
ton of thoughts and are not 
going to comment today, sorry.  

09:57:47.833 --> 09:57:50.411
But yes, we are very much 
thinking about this problem and 

09:57:50.412 --> 09:57:55.398
how to address it.
» My question was about in

09:57:56.072 --> 09:57:59.843
vocation name policy.  So do you
 have something that's available

09:58:00.151 --> 09:58:04.159
 for that now?  Like can you 
have single word invocations or 

09:58:04.160 --> 09:58:07.640
common name invocations?  How do
 you deal with that?

09:58:07.641 --> 09:58:10.606
» VALERIE NYGAARD:  We have a 
written policy that's published,

09:58:10.852 --> 09:58:15.917
 so I feel, which I know pretty 
well, I feel a little bit 

09:58:15.918 --> 09:58:20.199
nervous about quoting it.  But, 
oh, do you want to

09:58:25.724 --> 09:58:27.423
?
» (Off microphone).

09:58:27.424 --> 09:58:31.427
» VALERIE NYGAARD:  Yeah, here's
        , here's how we state it

09:58:35.026 --> 09:58:39.317
 .   .  If you can show us that 
you can lay claim to the brand, 

09:58:39.318 --> 09:58:43.260
then one-word policy is within 
the realm of possibility.  But 

09:58:43.261 --> 09:58:47.915
most of the time we're not 
interested in big land grabs of 

09:58:47.916 --> 09:58:49.916
single words and common

09:58:52.258 --> 09:58:54.258
 phrases  .
Totally understand people are le

09:58:54.320 --> 09:58:56.754
git cases and that's why we have
 an appeal process.

09:58:56.755 --> 09:59:02.157
» Seems like for some of this 
there's a chicken and egg 

09:59:02.158 --> 09:59:06.839
problem.  You will bring to 
light great apps that do great 

09:59:06.840 --> 09:59:09.745
things, but only if those things
 that they are doing are already

09:59:09.954 --> 09:59:15.656
 well understood.  So for 
example, to use, if this existed

09:59:16.120 --> 09:59:20.978
 five years ago, if I said I'd 
like take      a car, I'd like a

09:59:21.128 --> 09:59:27.389
 car to come pick me up, you 
wouldn't think to highlight Uber

09:59:27.755 --> 09:59:33.064
 or Lyft, but now you do.  So a 
hypothetical that I am develop

09:59:33.254 --> 09:59:36.101
ing the thing everyone will be 
talking about five years from 

09:59:36.102 --> 09:59:39.834
now, how do I become discovered?
  How do I make it so that you 

09:59:39.835 --> 09:59:42.337
guys will discover me?
» VALERIE NYGAARD:  Fantastic 

09:59:42.338 --> 09:59:46.573
question.  So we're not giving 
you a menu to choose from, right

09:59:46.868 --> 09:59:49.998
?  We're not restricting you to 
only things that we know about 

09:59:49.999 --> 09:59:54.867
and think are important.  One 
example that one of our leaders 

09:59:54.868 --> 10:00:04.233
likes to use is all right, guys,
 if I have a yax k shaving 

10:00:04.234 --> 10:00:08.217
business to shave yaks, what are
 you going to do for me  ?

10:00:08.218 --> 10:00:11.798
The way we think about it, right
, that's      let's call it a 

10:00:11.799 --> 10:00:17.674
tale, if you told us in your 
action phrases that I expect 

10:00:17.675 --> 10:00:23.700
users to say, I'm looking for ya
k shaving or I want to get my ya

10:00:24.342 --> 10:00:27.020
k shaved, whatever you feel like
 your users are is going to say,

10:00:27.147 --> 10:00:30.182
 you have a nice actionable 
description in your directory 

10:00:30.183 --> 10:00:33.089
and other clues we'll talk about
 another time, that's the kind 

10:00:33.090 --> 10:00:36.321
of thing we're looking for and 
asking for from you.  So when a 

10:00:36.322 --> 10:00:41.712
user comes and says, okay, can 
you shave Y yaks, we can help 

10:00:41.713 --> 10:00:43.739
that  .
It's a little bit harder, right,

10:00:44.102 --> 10:00:48.737
 in those tale cases to say they
 just asked about farms, let's 

10:00:48.738 --> 10:00:52.003
throw the yak shaving chip and 
see what happens.  But we do 

10:00:52.004 --> 10:00:55.812
know a lot about semantic 
meaning and we're going to be 

10:00:55.813 --> 10:00:58.186
trying some things  .
Rob, anything to add?

10:00:58.187 --> 10:01:01.195
» I think that sounds good.  
We'll be able to experiment with

10:01:01.361 --> 10:01:05.198
 things and gradually refine our
 understanding of different 

10:01:05.199 --> 10:01:08.355
intents.
» Okay, thank you.

10:01:08.356 --> 10:01:14.390
» Hi, I work for NBR and one of 
the things we think about a lot 

10:01:14.391 --> 10:01:16.606
is filter bubbles.
» VALERIE NYGAARD:  Is what?

10:01:16.607 --> 10:01:21.964
» Filter bubbles, .
» Filter bubbles.

10:01:21.965 --> 10:01:27.913
» Making sure people are listing
 stories from various avenues.  

10:01:27.914 --> 10:01:31.854
If you're suggesting apps or 
even context based on their 

10:01:31.855 --> 10:01:35.602
prior history, how do you get 
them to think outside of that or

10:01:35.907 --> 10:01:38.543
 present options outside of that
 rather than just staying within

10:01:38.876 --> 10:01:45.058
 their comfort zone?
» Arab:   .         Rob:  We can

10:01:45.059 --> 10:01:49.047
 go back to the selection list 
that we're showing.  We want 

10:01:49.048 --> 10:01:55.426
that to be able to introduce 
some diversity of the particular

10:01:55.427 --> 10:01:58.015
 apps someone can use.  Just as 
long as they are high quality 

10:01:58.016 --> 10:01:59.974
and we have some interest
          indication the users 

10:01:59.975 --> 10:02:02.708
will be interested in it, this 
will be a way we think we can 

10:02:02.709 --> 10:02:04.452
get people exposed to other 
things.

10:02:04.453 --> 10:02:09.435
» VALERIE NYGAARD:  Yeah.  One 
thing to add to that, users' 

10:02:09.436 --> 10:02:12.911
previous history is a signal but
 not the only signal.

10:02:12.912 --> 10:02:16.903
» Hello, is it upon to have an 
icon for these apps?  Or do I 

10:02:16.904 --> 10:02:18.904
have to

10:02:20.681 --> 10:02:22.997
 create for that?
» VALERIE NYGAARD:  Icon?

10:02:22.998 --> 10:02:27.631
» Short cut.
» VALERIE NYGAARD:  Oh, okay.  

10:02:27.632 --> 10:02:33.793
Oh oh, a short cut.
» Icon to open my application 

10:02:33.794 --> 10:02:36.264
directly.
» VALERIE NYGAARD:  Yeah, we 

10:02:36.265 --> 10:02:40.008
have a couple of solutions.  One
 solution halfway of what you 

10:02:40.009 --> 10:02:44.441
are are talking about, I think. 
 If you look in the directory, 

10:02:44.442 --> 10:02:48.696
we have something if you land on
 anybody's directory listing 

10:02:48.697 --> 10:02:52.414
page, like fit start       star
        Fit Star, these can add 

10:02:52.415 --> 10:02:56.159
a short cut.  We think of them 
as verbal short cuts, voice 

10:02:56.160 --> 10:03:03.455
short cuts.  So if it was like, 
oh, time to sweat, that's what 

10:03:03.456 --> 10:03:04.905
you want to say when you want 
fit star to invoke, absolutely 

10:03:04.906 --> 10:03:07.674
you can hook that up  .
The exact thing I think you're 

10:03:07.675 --> 10:03:11.015
talking about is not something 
we're offering right now, but 

10:03:11.016 --> 10:03:14.413
its interesting                 
it's interesting.

10:03:14.414 --> 10:03:18.786
» This is my last question.  
More of a road map question.  I 

10:03:18.787 --> 10:03:22.326
know you can, like to make 
really good apps it's helpful to

10:03:22.327 --> 10:03:24.494
 be able to request more 
information from Google about 

10:03:24.495 --> 10:03:26.495
the user. 

10:03:29.902 --> 10:03:30.978
 So I think maybe you have 
location on actions now.  And I 

10:03:30.979 --> 10:03:35.255
think payment, at least in bite
      beta.  Are there going to 

10:03:35.256 --> 10:03:38.136
be more things like context and 
can we get richer information 

10:03:38.137 --> 10:03:40.632
about the user so we don't have 
to ask them again?

10:03:40.633 --> 10:03:42.994
» VALERIE NYGAARD:  I think this
 is going to be essential.  So 

10:03:42.995 --> 10:03:46.222
you'll see us building this out 
over time.  The couple of 

10:03:46.223 --> 10:03:49.742
principles we have about this is
 number one, the user is in 

10:03:49.743 --> 10:03:55.953
control.  Like absolutely.  But 
we really want to offer you the 

10:03:55.954 --> 10:04:00.265
ability to ask things about the 
user in terms of getting, as 

10:04:00.266 --> 10:04:05.285
long as you get permission from 
them, we want to standardize as 

10:04:05.286 --> 10:04:08.929
men of these as we can that are 
reasonable and fit within the 

10:04:08.930 --> 10:04:11.213
down      boundaries of what 
makes sense within these kind of

10:04:11.368 --> 10:04:14.058
 interactions, because we don't 
want you to have to rebuild this

10:04:15.275 --> 10:04:18.240
 and rebuild this and rebuild 
this.  Of course if it's 

10:04:18.241 --> 10:04:21.711
something relatively common, we 
want to offer it to you.  Honey

10:04:22.012 --> 10:04:26.555
       Honestly this feels like 
a matter of time  .

10:04:26.556 --> 10:04:30.036
Yes, I think of it as a high 
priority, yes.  There's a lot of

10:04:30.354 --> 10:04:34.546
 high priorities, yes, I'll be 
honest.  I can't push the 

10:04:34.547 --> 10:04:37.557
calendar.  But yeah  .
Last question.

10:04:37.558 --> 10:04:41.454
» I was wondering if you would 
just talk about difference in 

10:04:41.455 --> 10:04:46.404
discovery between the     a lot 
of the examples focused on the 

10:04:46.405 --> 10:04:50.677
screen and just talk a bit about
 discovery on the Google home 

10:04:50.678 --> 10:04:53.133
norm      platform and headless 
devices.

10:04:53.134 --> 10:04:55.707
» VALERIE NYGAARD:  Do you want 
to take that?

10:04:55.708 --> 10:04:57.708
» Go ahead.
» VALERIE NYGAARD:  All right, a

10:04:57.842 --> 10:05:01.799
 device like Google home or that
 kind of interaction modality is

10:05:02.044 --> 10:05:07.526
 very linear in time.  An audio 
signal just goes like this.  The

10:05:07.683 --> 10:05:11.049
 user doesn't just get to scan 
it how they like  .

10:05:11.050 --> 10:05:14.792
One of my design colleagues 
likes to talk about it like 

10:05:14.793 --> 10:05:17.141
imagine you're viewing the world
 through a straw.  You don't 

10:05:17.142 --> 10:05:20.483
have a lot of options and it 
really takes your time to go 

10:05:20.484 --> 10:05:25.996
through any sort of center dip 
to us           ser            s

10:05:25.997 --> 10:05:31.197
 version        erendipitous 
discovery  .

10:05:31.198 --> 10:05:34.377
The way we think about it, why
     while these contexts are 

10:05:34.378 --> 10:05:37.632
not exactly the same, this is a 
great play ground for 

10:05:37.633 --> 10:05:40.627
understanding what is the right 
thing to offer to a user.  It's 

10:05:40.628 --> 10:05:44.695
pretty low cost to offer a set 
of suggestions  can chips.  It's

10:05:45.469 --> 10:05:48.789
 very                    hips.  
It's very high cost to say would

10:05:48.790 --> 10:05:51.563
 you also like to do this or 
this or this  .

10:05:51.564 --> 10:05:55.269
So we really minimize, we want 
to be really conservative when 

10:05:55.270 --> 10:05:59.766
we do it in an audio only or 
very nonscale     scannable 

10:05:59.767 --> 10:06:03.001
linear signal and be a little 
more generous when we try it 

10:06:03.002 --> 10:06:08.359
here and see how it transfers  .
However, I will say you'll see 

10:06:08.360 --> 10:06:12.819
just little peaks coming in the 
audio-only signal pretty soon, 

10:06:12.820 --> 10:06:15.212
which is something I'm really 
excited about.

10:06:15.213 --> 10:06:17.213
» Yeah,

10:06:19.690 --> 10:06:21.655
 great.
» I might have missed it, but 

10:06:21.656 --> 10:06:25.011
when is the new version of 
assist        assist can't

10:06:25.343 --> 10:06:27.683
     Can't kap         can't 
tant           ant

10:06:28.415 --> 10:06:31.111
         Assistant coming to 
sfens     phones?  I checked for

10:06:31.331 --> 10:06:34.212
 updates.  Is it out yet?
» VALERIE NYGAARD:  It's 

10:06:34.213 --> 10:06:37.083
possible you're a really lucky 
holdback user.  I'm happy to 

10:06:37.084 --> 10:06:39.722
chat with you after.  If you're 
not seeing it, perhaps you 

10:06:39.723 --> 10:06:44.579
should be.  Depends what we are 
talking about  .

10:06:44.580 --> 10:06:46.395
Yep.
» We're about out of time.

10:06:46.396 --> 10:06:49.561
» VALERIE NYGAARD:  You're the 
real endurance athletes.  You 

10:06:49.562 --> 10:06:52.089
stayed until the end of the
       .  Very nice.

10:06:52.090 --> 10:06:56.321
» Thank you for staying to   
             for attending the 

10:06:56.322 --> 10:07:00.538
session.  Brand ambassadors will
 assist you to the exits.  If 

10:07:00.539 --> 10:07:04.598
you are vej sterd for      
         registered for the next

10:07:04.599 --> 10:07:07.643
 session in this room, we ask 
you leave the room and return 

10:07:07.644 --> 10:07:12.088
via the registration line.  
Thank you  .

10:07:12.089 --> 10:07:14.089
(Session end)

10:07:15.934 --> 10:07:17.934
  . 

10:07:33.778 --> 10:07:34.253
.  
.  

10:07:34.254 --> 10:07:34.758
.  
.  

10:07:34.759 --> 10:07:35.215
.  
.  

10:07:35.216 --> 10:07:35.601
.  
.  

10:07:35.602 --> 10:07:37.602
. 

10:13:52.144 --> 10:13:52.531
.  
.  

10:13:52.532 --> 10:13:52.989
.  
.  

10:13:52.990 --> 10:13:53.463
.  
.  

10:13:53.464 --> 10:13:53.930
.  
.  

10:13:53.931 --> 10:13:54.307
.  
.  

10:13:54.308 --> 10:13:56.308
. 

10:15:05.720 --> 10:15:14.508
6:session        :30 session  .
In conversation there are       

10:15:15.900 --> 10:15:17.019
               Conversation 
There Are no errors         No 

10:15:17.020 --> 10:15:19.020
Errors 

10:15:31.328 --> 10:15:32.266
 .
Human-to-computer

10:15:34.775 --> 10:15:35.217
.  
.  

10:15:35.218 --> 10:15:35.705
.  
.  

10:15:35.706 --> 10:15:36.144
.  
.  

10:15:36.145 --> 10:15:38.145
. 

10:19:54.805 --> 10:19:56.805
.  
.                     

10:20:19.829 --> 10:20:21.829
.  Our session will begin

10:20:23.676 --> 10:20:25.972
 soon  . 

10:20:35.193 --> 10:20:39.394
(Next session, in conversation 
there are no errors          

10:20:43.934 --> 10:20:44.712
                   In 
Conversation There Are no errors

10:20:44.713 --> 10:20:50.502
         No Errors  .  
.        ) 

10:24:50.215 --> 10:24:52.215
 .
Uir

10:26:56.694 --> 10:26:59.696
          .  
.  

10:26:59.697 --> 10:27:00.043
.  
.  

10:27:00.044 --> 10:27:02.044
. 

10:29:12.260 --> 10:29:12.724
.  
.  

10:29:12.725 --> 10:29:14.725
. 

10:29:29.154 --> 10:29:29.713
.
» NANDINI STOCKER:  Hi, 

10:29:29.714 --> 10:29:33.971
everybody.  Hts talk about one
                  Let's talk 

10:29:33.972 --> 10:29:38.173
about one of the hardest parts 
of speaking between a human and 

10:29:38.174 --> 10:29:41.608
computer.
» Caused       .

10:29:41.609 --> 10:29:44.030
» LEON NICHOLS:  So-called 
errors.

10:29:44.031 --> 10:29:46.076
» NANDINI STOCKER:  Any good 
conversation starts by knowing 

10:29:46.077 --> 10:29:50.851
who is talking.
» Leon is a developer relation 

10:29:50.852 --> 10:29:53.255
engineer for Google assistant 
apps

10:29:56.750 --> 10:29:59.199
.
» LEON NICHOLS:  Nandini leads 

10:29:59.200 --> 10:30:01.309
design for actions on Google.
» NANDINI STOCKER:  Our two 

10:30:01.310 --> 10:30:04.518
teams are responsible for most 
of the resources you'll find on 

10:30:04.519 --> 10:30:08.078
the acts on Google public 
website.    where we somehow

10:30:08.224 --> 10:30:11.406
         show develops          
developers how they can design, 

10:30:11.407 --> 10:30:13.568
build and deploy apps with

10:30:17.256 --> 10:30:18.696
 the Google Assistant.
» LEON NICHOLS:  You can 

10:30:18.697 --> 10:30:23.184
implement techniques using tools
 like API AI with performance 

10:30:23.185 --> 10:30:28.850
logic in your code  .
(Chuckles)  .

10:30:28.851 --> 10:30:32.179
Let's try again  .
You can implement the techniques

10:30:32.180 --> 10:30:37.688
 we'll show you today using 
tools like API.AI through 

10:30:37.689 --> 10:30:40.878
performance logic in the code or
 combination of those, by the 

10:30:40.879 --> 10:30:45.196
way, API.AI is a tool for 
creating apps for the Google 

10:30:45.197 --> 10:30:49.642
Assistant  .
Now, we want to help developers 

10:30:49.643 --> 10:30:54.197
create great conversationsel 
experiences.  The best way to do

10:30:54.383 --> 10:31:01.127
 that is by conversation the 
design first.  And working in 

10:31:01.128 --> 10:31:02.655
high collaboration between 
designers and dwof      

10:31:02.656 --> 10:31:05.519
developers, on trade on that 
design within the capabilities 

10:31:05.520 --> 10:31:07.520
of the platform.
» NANDINI STOCKER:  In human

10:31:08.233 --> 10:31:11.231
       human to human 
conversations, hesitations and 

10:31:11.232 --> 10:31:13.720
corrections happen all the time.
  We    We just did a little bit

10:31:14.020 --> 10:31:17.437
 of that.  We might do it again,
 and we'll just blame it on the 

10:31:17.438 --> 10:31:18.829
talk.
» LEON NICHOLS:  In 

10:31:18.830 --> 10:31:22.073
human-to-computer interactions 
they do too, but in the form of 

10:31:22.074 --> 10:31:24.500
time-outs and recognition errors
.

10:31:24.501 --> 10:31:27.376
» NANDINI STOCKER:  The 
differences  is that humans can 

10:31:27.377 --> 10:31:31.172
take queues from each other to 
get back on track in real time.

10:31:31.173 --> 10:31:33.764
» LEON NICHOLS:  But with a 
system ar           simulated 

10:31:33.765 --> 10:31:36.129
conversation, the corrections 
need to be preplanned and that's

10:31:36.815 --> 10:31:38.974
 not an easy task.
» NANDINI STOCKER:  The only way

10:31:39.469 --> 10:31:43.653
 the     to course correct in 
advance and still maintain a 

10:31:43.654 --> 10:31:47.584
natural, comfortable dialogue is
 to plan for them as if they 

10:31:47.585 --> 10:31:51.107
were any other turn in the 
conversation.

10:31:51.108 --> 10:31:53.737
» LEON NICHOLS:  Now, here are 
some of the terms we use when 

10:31:53.738 --> 10:31:57.577
talking about errors in voice 
interfaces.

10:31:57.578 --> 10:31:59.583
» NANDINI STOCKER:  One of the 
first thing to remember is that 

10:31:59.584 --> 10:32:03.404
there's a difference between the
 technical conditions and events

10:32:04.506 --> 10:32:08.023
 that trigger and respond to 
she's errors              these 

10:32:08.024 --> 10:32:10.509
errors, and all the user 
scenarios happening at the same 

10:32:10.510 --> 10:32:16.067
time.  So any number of things 
can go wrong from the users' 

10:32:16.068 --> 10:32:19.499
perspective for any number of 
reasons.

10:32:19.500 --> 10:32:21.667
» LEON NICHOLS:  We'll show you 
how keeping both of these 

10:32:21.668 --> 10:32:25.873
perspectives in mind will be 
really key to your conversation 

10:32:25.874 --> 10:32:29.840
repair strategy.
» NANDINI STOCKER:  Otherwise 

10:32:29.841 --> 10:32:33.584
it's pretty easy to become 
either too simplistic or with a 

10:32:33.585 --> 10:32:36.302
basic strategy of just 
apologizing and asking the same 

10:32:36.303 --> 10:32:41.870
question over and over again, or
 being overly pre     pro     

10:32:41.871 --> 10:32:47.084
prescriptive and formulate      
lay ic in your approach.

10:32:47.085 --> 10:32:49.509
» LEON NICHOLS:  For example, 
here's a formula really common 

10:32:49.510 --> 10:32:54.158
and often brought into a lot of
                       built 

10:32:54.159 --> 10:32:56.230
into a lot of tools and defaults
.

10:32:56.231 --> 10:32:58.711
» NANDINI STOCKER:  This 
unfortunately translates into a 

10:32:58.712 --> 10:33:02.737
user being asked for tech live
           effectively for the 

10:33:02.738 --> 10:33:07.450
same piece of information with 
very little variation, three, 

10:33:07.451 --> 10:33:10.439
five, even six times.
» LEON NICHOLS:  That leads to a

10:33:10.671 --> 10:33:13.914
 very stiff experience and very 
frustrating for users.

10:33:13.915 --> 10:33:16.157
» NANDINI STOCKER:  It's 
important to note that user 

10:33:16.158 --> 10:33:19.559
impressions and how they are 
formed when going through an 

10:33:19.560 --> 10:33:22.382
error is not just about the 
interaction itself they are 

10:33:22.383 --> 10:33:25.709
going through.  It frames how 
people feel as a whole about the

10:33:26.082 --> 10:33:29.747
 technology.  It's something 
that we really care about 

10:33:29.748 --> 10:33:30.208
changing.
» LEON NICHOLS:              

10:33:30.209 --> 10:33:32.164
        .
So in fact we have asked people 

10:33:32.165 --> 10:33:38.163
how they feel when recognition 
doesn't work and they have 

10:33:38.164 --> 10:33:41.708
negative visceral reactions and 
can't always place why.  So one 

10:33:41.709 --> 10:33:44.850
of the reasons is because people
 are using their voice.  Voice 

10:33:44.851 --> 10:33:48.239
is one of the primary marriagers
 of our identity  fy         

10:33:48.397 --> 10:33:52.361
                   markers of 
identity and it feels ent     

10:33:52.362 --> 10:33:54.293
extra personal when something 
goes wrong  .

10:33:54.294 --> 10:33:58.555
So let's dive in and see how we 
can handle these with a new 

10:33:58.556 --> 10:34:00.009
paradigm.
» LEON NICHOLS:  We're going to 

10:34:00.010 --> 10:34:05.035
show you how to so-called
           show how errors      

10:34:05.346 --> 10:34:09.584
  error efforts can be handled 
and not treated as if cases.

10:34:09.585 --> 10:34:11.408
» NANDINI STOCKER:  We're going 
to show on you        

10:34:11.409 --> 10:34:14.041
expectations about how nalt     
 natural conversations are 

10:34:14.042 --> 10:34:16.048
supposed to work and create 
opportunities for more 

10:34:16.049 --> 10:34:18.835
meaningful interactions.
» LEON NICHOLS:  That means for 

10:34:18.836 --> 10:34:23.247
any given prompt, you're a user,
 you have to be thinking of all 

10:34:23.248 --> 10:34:26.653
the things that could go wrong 
in that moment.

10:34:26.654 --> 10:34:29.696
» NANDINI STOCKER:  But you can 
still break it down into two 

10:34:29.697 --> 10:34:34.060
paths to the problem.  Either 
you didn't get any input and 

10:34:34.061 --> 10:34:36.872
usually that's because the user 
didn't say anything or because 

10:34:36.873 --> 10:34:41.256
they were too quiet to be picked
 up by the mic, or it could be 

10:34:41.257 --> 10:34:47.491
that you got input but you just 
weren't prepared to handle it.

10:34:47.492 --> 10:34:49.739
» LEON NICHOLS:  In the 
underlying system, these two 

10:34:49.740 --> 10:34:54.404
categories can be addressed as 
either no inputs or no matches.

10:34:54.405 --> 10:34:57.210
» NANDINI STOCKER:  But as part 
of this new paradigm we're not 

10:34:57.211 --> 10:35:02.006
going to start there.  It pays 
to look at how you can eliminate

10:35:02.371 --> 10:35:05.446
 the bulk of your errors right 
off the top with some preventive

10:35:07.716 --> 10:35:09.680
 strategies  .
First of all you want to use the

10:35:09.681 --> 10:35:13.348
 power of spoken language to 
your advantage by using well 

10:35:13.349 --> 10:35:17.817
crafted intuitive language in 
your prompt structure and 

10:35:17.818 --> 10:35:20.894
prevent errors in the first 
place.  So there's a great talk 

10:35:20.895 --> 10:35:23.935
tomorrow about this by the god 
father of voice user interfaces,

10:35:24.769 --> 10:35:31.016
 James j   Jongola, must not 
miss.

10:35:31.017 --> 10:35:34.353
» LEON NICHOLS:  Otherwise look 
at how to prevent errors by 

10:35:34.354 --> 10:35:38.328
being prepared to answer 
specific type of requests but 

10:35:38.329 --> 10:35:40.138
more of strategies.
» NANDINI STOCKER:  So your 

10:35:40.139 --> 10:35:46.002
first preventive strategy, be 
ready to provide help in the 

10:35:46.003 --> 10:35:49.268
moment.  This usually means 
being ready to handle if someone

10:35:49.590 --> 10:35:52.766
 asks to hear something again or
 express their confusion maybe 

10:35:52.767 --> 10:35:56.210
more explicitly by saying 
something like I'm not sure, why

10:35:56.563 --> 10:36:01.218
 do you want to know  .
Let's look at how we implement 

10:36:01.219 --> 10:36:03.479
that.
» LEON NICHOLS:  We need to be 

10:36:03.480 --> 10:36:08.501
able to first categorize these 
responses and then add logic to 

10:36:08.502 --> 10:36:12.920
handle them  .
Some of the main concepts in ape

10:36:13.265 --> 10:36:20.021
.AI    ape     API         API.
AI include's, natural 

10:36:20.022 --> 10:36:23.619
understanding for apps.  Agents 
consist of intents which respond

10:36:23.742 --> 10:36:28.726
 to particular user inputs, and 
con Kent which are the        

10:36:28.896 --> 10:36:32.476
           tents which are the 
ways to prioritize during a 

10:36:32.477 --> 10:36:33.545
conversation.
» NANDINI STOCKER:  During the 

10:36:33.546 --> 10:36:36.228
many back and forth turns in a 
conversation, each of the user 

10:36:36.229 --> 10:36:39.996
responses will map to an intents
.  Like you see here, a few key 

10:36:39.997 --> 10:36:44.644
ones are repeat, help and quit.
» LEON NICHOLS:  Here's a help 

10:36:44.645 --> 10:36:48.771
intent we created in API with AI
.

10:36:48.772 --> 10:36:50.882
» NANDINI STOCKER:  Notice it's 
not just a global command help. 

10:36:50.883 --> 10:36:53.781
 That's not the only thing we're
 handling.  All the things the 

10:36:53.782 --> 10:36:57.215
user might say to ask for help. 
 How you respond to those of 

10:36:57.216 --> 10:36:59.792
course will depend on your 
strategy, and we'll show you a 

10:36:59.793 --> 10:37:02.612
little bit about that.  Perhaps 
you give them a hint or might 

10:37:02.613 --> 10:37:05.594
ask them a follow-up question to
 make sure they are ready to

10:37:08.919 --> 10:37:10.289
 continue.
» LEON NICHOLS:  To make that 

10:37:10.290 --> 10:37:15.151
work we have to add additional 
intent for the users additional 

10:37:15.152 --> 10:37:19.510
responses to that help prompt 
like you see here.

10:37:19.511 --> 10:37:21.464
» NANDINI STOCKER:  Next 
immediately I want to jump in 

10:37:21.465 --> 10:37:25.687
and find out how do I make it 
even more relevant in 245 moment

10:37:25.848 --> 10:37:28.636
            that moment, maybe 
by playing dynamic data, like if

10:37:28.755 --> 10:37:31.607
 I want to include a variable, 
for example.

10:37:31.608 --> 10:37:37.375
» LEON NICHOLS:  Sure, you can 
do that using informant.

10:37:37.376 --> 10:37:40.546
» NANDINI STOCKER:  You can see 
some dynamic info about the game

10:37:43.076 --> 10:37:46.328
 length and the question whether
 the user wants to continue.  

10:37:46.329 --> 10:37:49.934
They are listening for a yes-no 
answer to the help question 

10:37:49.935 --> 10:37:51.660
itself.
» LEON NICHOLS:  Yes, and we can

10:37:51.661 --> 10:37:56.338
 dynamically set a context to 
ensure the user's response is 

10:37:56.339 --> 10:37:59.358
handed  led by the yes-no help 
intent.

10:37:59.359 --> 10:38:02.014
» NANDINI STOCKER:  But if the 
user got the help they needed 

10:38:02.015 --> 10:38:05.302
when they heard that and didn't 
say yes or no but just answered 

10:38:05.303 --> 10:38:08.687
the original question before 
they asked for help.  So we 

10:38:08.688 --> 10:38:12.487
wouldn't want that to trigger an
 error, otherwise we sort of 

10:38:12.488 --> 10:38:14.556
defeated the purpose to begin 
with.

10:38:14.557 --> 10:38:16.538
» LEON NICHOLS:  Right, so we 
don't have is to worry about 

10:38:16.539 --> 10:38:20.727
that since the other game ing 
things are still available and 

10:38:20.728 --> 10:38:22.314
will handle that if that happens
.

10:38:22.315 --> 10:38:24.464
» NANDINI STOCKER:  So that's 
help.  Some of the questions 

10:38:24.465 --> 10:38:27.604
that come up in the moment like 
repeat.  It's a pretty big 

10:38:27.605 --> 10:38:30.939
prevention strategy out of the 
way  .

10:38:30.940 --> 10:38:36.464
Another very basic strategy is 
to prevent frustrating back and 

10:38:36.465 --> 10:38:40.486
forth, is to simply make it easy
 for users to leave.  They might

10:38:40.674 --> 10:38:44.240
 need to stop for a variety of 
reasons.  So be    being 

10:38:44.241 --> 10:38:47.423
prepared for that is not only 
key to preventing errors but 

10:38:47.424 --> 10:38:50.171
it's the right thing to do.
» LEON NICHOLS:  Also it can be 

10:38:50.172 --> 10:38:54.875
an opportunity for reengagement,
 for example, perhaps let them 

10:38:54.876 --> 10:38:58.569
know how to come back or pick up
 where they left off.  If that's

10:38:58.951 --> 10:39:02.311
 an option.  But without being 
annoying.

10:39:02.312 --> 10:39:06.122
» NANDINI STOCKER:  So we need 
for this to create another 

10:39:06.123 --> 10:39:09.409
intent for quit, right?
» LEON NICHOLS:  Yes.  So start 

10:39:09.410 --> 10:39:12.986
by anticipate ing all the ways 
the user might want to leave.  

10:39:12.987 --> 10:39:17.068
Just like help, which phrases 
you might choose depend on the 

10:39:17.069 --> 10:39:18.267
context.
» NANDINI STOCKER:  For this 

10:39:18.268 --> 10:39:23.012
game example here, you can is is
       see we add the cuss     

10:39:23.124 --> 10:39:25.401
    ed custom phrases 
appropriate for a game, like 

10:39:25.402 --> 10:39:28.785
stop the game or stop playing.  
Just like help, we want to make 

10:39:28.786 --> 10:39:32.100
the response to user more 
feng      meaningful.  Since it 

10:39:32.101 --> 10:39:34.678
is a game, I want to give them 
the satisfaction of knowing 

10:39:34.679 --> 10:39:37.470
their skoesh        score, where
 they left off.

10:39:37.471 --> 10:39:39.436
» LEON NICHOLS:  Like we showed 
you with help, if you want to 

10:39:39.437 --> 10:39:44.423
include a variable, that's where
 performer comes in.  You can 

10:39:44.424 --> 10:39:47.178
see our quit intent.  We're 
giving the yurgs the score 

10:39:47.179 --> 10:39:49.857
before                        
user the score before saying 

10:39:49.858 --> 10:39:51.904
good-bye.
» NANDINI STOCKER:  To give an 

10:39:51.905 --> 10:39:56.001
idea how these prevention 
strategies are so critical to 

10:39:56.002 --> 10:39:58.999
catching things in context and 
why that matters is to much     

10:39:59.142 --> 10:40:03.629
       so much, take a couple 
users responses that mean 

10:40:03.630 --> 10:40:05.765
something different depending on
 the situation.  Take frank

10:40:05.958 --> 10:40:08.462
       for example I don't know 
and I give up  .

10:40:08.463 --> 10:40:11.617
In most contexts, I don't know 
means it's just another way of 

10:40:11.618 --> 10:40:15.832
saying help, you know, but if 
you are playing a game, that my

10:40:16.045 --> 10:40:18.045
    may or may not hold true

10:40:21.211 --> 10:40:25.411
.  For example on the one hand 
you could have a game where the 

10:40:21.211 --> 10:40:22.911
user maybe wants to know a 
little more about the rules and 

10:40:22.912 --> 10:40:26.410
they are not familiar with it.  
So in that case, sure, I don't 

10:40:26.411 --> 10:40:29.355
know means help like any other 
context  .

10:40:29.356 --> 10:40:34.032
But if it's a familiar mental 
mold like guess                 

10:40:34.033 --> 10:40:36.540
model like guessing game or 
trivia where the user says I 

10:40:36.541 --> 10:40:39.729
don't know or I give up, they 
might just mean they want the 

10:40:39.730 --> 10:40:43.609
answer so they can move on, in 
which case it's literally the 

10:40:43.610 --> 10:40:49.295
opposite of quit.  It means 
let's keep playing.

10:40:49.296 --> 10:40:52.477
» LEON NICHOLS:  This might mean
 breaking up I don't remember 

10:40:52.478 --> 10:40:54.861
help                       your 
help for I don't know phrases 

10:40:54.862 --> 10:40:57.875
into different contexts.  Take 
two games in our number guessing

10:40:59.068 --> 10:41:02.309
 game nn    Number Genie on the 
left, I give up is part of the 

10:41:02.310 --> 10:41:05.626
quit inat the time       
    tent.  But with the trivia 

10:41:05.627 --> 10:41:08.583
game on the right, I give up is 
part of the I don't know intent.

10:41:08.584 --> 10:41:13.275
  This let's the user skip 
giving an answer to the question

10:41:13.498 --> 10:41:15.081
.
» NANDINI STOCKER:  On the way

10:41:15.082 --> 10:41:19.786
            Another way that
      to prevent errors is to 

10:41:19.787 --> 10:41:24.301
use the built pf in cape        
   -in capability ies of the 

10:41:24.302 --> 10:41:28.531
platform.  We just announced 
several of these at IO.

10:41:28.532 --> 10:41:32.001
» LEON NICHOLS:  Two is common 
support called conversation 

10:41:32.002 --> 10:41:34.772
helpers.  These have been 
crafted to follow business 

10:41:34.773 --> 10:41:37.581
design practices and also to   

10:41:37.752 --> 10:41:40.346
          best design practices 
and also to handle errors.  We 

10:41:40.347 --> 10:41:43.887
recommend you use these so you 
don't have to create for 

10:41:43.888 --> 10:41:45.553
yourself.
» NANDINI STOCKER:  That's a lot

10:41:45.554 --> 10:41:50.648
 of deceptively simple but often
 overlooked prevention 

10:41:50.649 --> 10:41:53.620
strategies.  Shows should help
                 Those should 

10:41:53.621 --> 10:41:57.873
help user feel more in control 
of the interaction.

10:41:57.874 --> 10:42:00.052
» LEON NICHOLS:  Even in 
conversations between humans, 

10:42:00.053 --> 10:42:03.982
hesitations and repair happen.  
And as we know, speech 

10:42:03.983 --> 10:42:07.283
recognition isn't perfect.  So 
when it doesn't work, let's call

10:42:07.284 --> 10:42:09.760
 those errors for now.
» NANDINI STOCKER:  We have a 

10:42:09.761 --> 10:42:13.424
couple of great strategies 
coming up where we make them 

10:42:13.425 --> 10:42:16.365
feel a little less like errors 
per se and more like new turns 

10:42:16.366 --> 10:42:19.403
in the dialogue like we have 
been promise ing.  Before     ut

10:42:19.404 --> 10:42:21.870
 before we show that, we think 
it is important to see what it 

10:42:21.871 --> 10:42:23.871
looks like when you do start 
from

10:42:26.191 --> 10:42:27.243
 scratch.
» LEON NICHOLS:  We'll look at 

10:42:27.244 --> 10:42:29.702
our basic errors, the no inputs 
and no matches

10:42:33.910 --> 10:42:36.925
.  If you create a new agent in 
API.AI you get two default 

10:42:36.926 --> 10:42:40.410
intents as a starting point.  
The agent will start by greeting

10:42:40.569 --> 10:42:43.990
 you with the default welcome 
intent, and if you don't say 

10:42:43.991 --> 10:42:48.983
anything, it will hit a couple 
ofny in      new inputs and give

10:42:49.153 --> 10:42:51.899
 up  .
If you do respond you hit a no 

10:42:51.900 --> 10:42:53.295
match.
» NANDINI STOCKER:  So you're 

10:42:53.296 --> 10:42:57.008
saying starting from scratch, we
 have a clean slate of only 

10:42:57.009 --> 10:43:00.316
errors.
» LEON NICHOLS:  Yeah.  So let's

10:43:01.220 --> 10:43:05.126
 take a look at how the default 
agent handles no inputs.  We're 

10:43:05.127 --> 10:43:09.380
going to play a video of me 
invoke ing the agent on Google 

10:43:09.381 --> 10:43:14.208
home,  and not saying anything.
» Default action.

10:43:14.209 --> 10:43:19.169
» LEON NICHOLS:  Hmm.
» I didn't hear what you just 

10:43:19.170 --> 10:43:24.198
said.  Hmm.  I couldn't hear 
what you just said.  Hmm

10:43:27.939 --> 10:43:31.206
  .
Sorry, I can't help.

10:43:31.207 --> 10:43:33.920
» NANDINI STOCKER:  And for no 
matches?

10:43:33.921 --> 10:43:37.470
» LEON NICHOLS:  For no matches,
 that will invoke the default 

10:43:37.471 --> 10:43:41.927
calc lback intent which has a 
set of static responses selected

10:43:42.527 --> 10:43:44.712
 randomly to respond to the user
.

10:43:44.713 --> 10:43:47.229
» NANDINI STOCKER:  Anything the
 user says will go to the de

10:43:47.592 --> 10:43:51.397
fault fallback intent.  So let's
 take a look at that.

10:43:51.398 --> 10:43:58.015
» LEON NICHOLS:  Let's do that. 
 We have another video, .

10:43:58.016 --> 10:44:03.574
» Default action.
» Here is the test version of 

10:44:03.575 --> 10:44:07.618
default action.  Hello.
» LEON NICHOLS:  Hi.

10:44:07.619 --> 10:44:10.510
» I missed what you said.  Say 
it again.

10:44:10.511 --> 10:44:14.627
» LEON NICHOLS:  I said hi.
» Sorry, can you say that again

10:44:18.641 --> 10:44:19.764
?
» LEON NICHOLS:  (Roar).

10:44:19.765 --> 10:44:22.485
» I didn't get that.
» LEON NICHOLS:  I tried to 

10:44:22.486 --> 10:44:28.262
greet you.
» Can you say that again  ?

10:44:28.263 --> 10:44:31.192
.
» (Dog barking)  .

10:44:31.193 --> 10:44:33.492
.
» What was that?

10:44:33.493 --> 10:44:38.761
» LEON NICHOLS:  Hmm, I said hi.
» I didn't get that.  Can you 

10:44:38.762 --> 10:44:45.102
say it again?
» (CAT meow).

10:44:45.103 --> 10:44:49.952
» What was that?
» LEON NICHOLS:  Why do I have 

10:44:49.953 --> 10:44:54.683
to repeat myself?
» Sorry, what was that?

10:44:54.684 --> 10:44:56.684
» LEON NICHOLS:  Okay, good-bye

10:44:59.364 --> 10:45:01.428
  .
Okay, you see the conversation 

10:45:01.429 --> 10:45:04.813
never ends.  And if you want to 
change that, you have to add a 

10:45:04.814 --> 10:45:09.714
custom intent to handle the 
first user response.

10:45:09.715 --> 10:45:10.661
» NANDINI STOCKER:  Obviously 
that's no wra     way to hold a 

10:45:10.662 --> 10:45:13.425
conversation, and we do have a 
lot of built-ins that you can 

10:45:13.426 --> 10:45:16.960
add.  But it's important to 
start from that just to see how 

10:45:16.961 --> 10:45:19.590
it works in you were to start 
from scratch so that all the 

10:45:19.591 --> 10:45:23.841
things that we show you next 
will start       make sense and 

10:45:23.842 --> 10:45:25.581
connect.
» LEON NICHOLS:  Otherwise API.

10:45:25.582 --> 10:45:29.471
AI does provide some sample data
 and agents for common use cases

10:45:29.658 --> 10:45:33.402
 that you could start with 
instead.  We're always looking 

10:45:33.403 --> 10:45:37.127
at ways to improve the tools 
better by default.

10:45:37.128 --> 10:45:39.128
» NANDINI STOCKER:  Meantime 
we'll use that as a baseline and

10:45:39.460 --> 10:45:41.460
 explore some more targeted 
solutions

10:45:43.754 --> 10:45:45.276
.
» LEON NICHOLS:  Okay.  Now, 

10:45:45.277 --> 10:45:48.460
let's take the case of when no 
input is triggered.

10:45:48.461 --> 10:45:50.725
» NANDINI STOCKER:  Here 
remember the user either 

10:45:50.726 --> 10:45:54.035
actually es    didn't say 
anything or perhaps they got 

10:45:54.036 --> 10:45:57.670
distracted or didn't hear the 
question.  Maybe they were 

10:45:57.671 --> 10:46:00.183
listening, didn't understand and
 were just waiting to whaer

10:46:00.533 --> 10:46:03.575
       hear what it would do 
next.  But it could also be they

10:46:03.970 --> 10:46:06.999
 started talking during the 
prompt and stopped right when 

10:46:07.000 --> 10:46:12.194
the mic started listening.
» LEON NICHOLS:  So how do we 

10:46:12.195 --> 10:46:14.348
design for that?
» NANDINI STOCKER:  For no 

10:46:14.349 --> 10:46:18.837
inputs you probably need to 
consider first if you even need 

10:46:18.838 --> 10:46:24.406
the answer to get to the next 
step.  So how you react should 

10:46:24.407 --> 10:46:27.910
really consider why the user 
didn't respond, all those 

10:46:27.911 --> 10:46:32.773
reasons I talked about.  So it's
 a new turn in the dialogue, 

10:46:32.774 --> 10:46:36.496
therefore an opportunity.
» LEON NICHOLS:  Now we have 

10:46:36.497 --> 10:46:39.904
something examples that show the
 difference it makes to your 

10:46:39.905 --> 10:46:41.905
wording

10:46:43.922 --> 10:46:44.591
 depending how hard you want to 
try and how much help you assume

10:46:44.592 --> 10:46:48.538
 the user needs.
» NANDINI STOCKER:  So when you 

10:46:48.539 --> 10:46:52.263
write reprompts for in input, 
you should keep them contextual,

10:46:52.443 --> 10:46:56.164
 but that doesn't necessarily 
mean repeating the exact same 

10:46:56.165 --> 10:46:59.773
question verbatim.  So maybe you
 just need to reframe it or 

10:46:59.774 --> 10:47:04.308
reword it just slightly.  Or 
maybe you could use it as an 

10:47:04.309 --> 10:47:09.692
opportunity to answer an unasked
 question  .

10:47:09.693 --> 10:47:11.693
As far as

10:47:13.579 --> 10:47:17.142
 how many times you want to try,
 maybe you don't want to belabor

10:47:17.489 --> 10:47:21.178
 it and maybe you want to 
gracefully exit.  Or  But for 

10:47:21.179 --> 10:47:25.377
most cases you could make use of
 some sort of default pattern.  

10:47:25.378 --> 10:47:31.323
Right now the default is three, 
but maybe it might change.  And 

10:47:31.324 --> 10:47:36.412
find out just     , just specify
 what you want it to say for 

10:47:36.413 --> 10:47:39.077
each of the three.  That's a 
design traj for new in       

10:47:39.292 --> 10:47:43.047
          strategy for new 
inputs.  Let's take a look how 

10:47:43.048 --> 10:47:44.363
to implement.
» LEON NICHOLS:  As I mentioned 

10:47:44.364 --> 10:47:48.851
earlier, the did fault          
 Dei fault,                de   

10:47:49.174 --> 10:47:53.997
 by get     default API.AI 
handles with a standard list of 

10:47:53.998 --> 10:47:57.329
prompts.  To change these to be 
domain specific, you need to 

10:47:57.330 --> 10:48:01.551
implement your own logic.  As 
part of the SPK for develop, ing

10:48:01.906 --> 10:48:06.573
 actions we provide a no judge 
client library that makes it 

10:48:06.574 --> 10:48:09.445
really easy to do that  .
The client library API let's you

10:48:09.771 --> 10:48:15.598
 specify the no           s     
           lets you specify the 

10:48:15.599 --> 10:48:17.601
prompts.
» NANDINI STOCKER:  The 

10:48:17.602 --> 10:48:20.877
conversation automatically ends 
a   after the third final prompt

10:48:21.386 --> 10:48:24.927
.  For example, we can stop here
, let's play again soon.  That's

10:48:25.455 --> 10:48:29.786
 how we're ending it  .
Now, let's look at the biggest 

10:48:29.787 --> 10:48:33.202
opportunity for creative error 
handling, no matches.

10:48:33.203 --> 10:48:36.489
» LEON NICHOLS:  Just like with 
no inputs, deciding whether to 

10:48:36.490 --> 10:48:39.763
use default fallback for I don't
 matches or something   

10:48:39.984 --> 10:48:45.287
                           your 
matches should being    targeted

10:48:45.657 --> 10:48:47.131
 or for what you are designing 
for.

10:48:47.132 --> 10:48:48.969
» NANDINI STOCKER:  You need to 
consider if the answer is even 

10:48:48.970 --> 10:48:52.348
needed.  If it is you have to 
consider the users' situation 

10:48:52.349 --> 10:48:55.423
and even the sequence of 
questions.  And if you don't 

10:48:55.424 --> 10:48:59.042
need it, that's where you also 
might decide to just move on, 

10:48:59.043 --> 10:49:01.545
pivot or gracefully end.
» LEON NICHOLS:  That seems like

10:49:01.721 --> 10:49:05.783
 a lot to consider, so where do 
we start?

10:49:05.784 --> 10:49:08.068
» NANDINI STOCKER:  During and 
conversation it's important to 

10:49:08.069 --> 10:49:11.337
stop and look at what's 
happening in each turn.  So 

10:49:11.338 --> 10:49:14.587
usually in one turn in the 
dialogue, one participant is 

10:49:14.588 --> 10:49:17.588
usually the owner of the 
information the other person is 

10:49:17.589 --> 10:49:19.967
seeing        seeking.  
Depending on the context of the 

10:49:19.968 --> 10:49:23.781
question and which side of the 
conversation has that 

10:49:23.782 --> 10:49:26.499
information, the strategy will 
vary.  So let me show you three 

10:49:26.500 --> 10:49:28.500
examples of why this matters

10:49:30.414 --> 10:49:31.587
  .
In this question the app knows 

10:49:31.588 --> 10:49:35.359
the answer and the your      
user is guessing.  But they do 

10:49:35.360 --> 10:49:39.427
have a good mend      mental 
mold of what's                

10:49:39.428 --> 10:49:44.054
model of what's expected so 
potentially errors are at a low 

10:49:44.055 --> 10:49:47.483
cost.  If if he     they don't 
know or need help, it may be 

10:49:47.484 --> 10:49:50.701
they don't know how the game is 
played or how many guest they

10:49:50.771 --> 10:49:53.559
            guesses they have, 
or like earlier, maybe they want

10:49:53.734 --> 10:49:55.344
 to give up and have you tell 
them  .

10:49:55.345 --> 10:49:59.401
But take this question for 
reservation exchange. 

10:50:03.049 --> 10:50:03.716
 Here only the user knows the 
actual answer.  But you can make

10:50:03.717 --> 10:50:07.436
 some logic assumptions like 
expecting a certain range, and 

10:50:07.437 --> 10:50:10.181
most of the time the answer will
 probably be something like 20 

10:50:10.182 --> 10:50:13.870
or fewer people.  So if the user
 needs help or says I don't know

10:50:14.216 --> 10:50:17.698
, the strategy you can use 
depends again on how critical 

10:50:17.699 --> 10:50:21.098
that answer is to continue to 
the next step  .

10:50:21.099 --> 10:50:25.078
Take a third example where both 
sides are trying to match on 

10:50:25.079 --> 10:50:28.916
shared knowledge.  Both sides 
are supposed to know the answer,

10:50:29.190 --> 10:50:32.164
 anyway.  But especially in this
 type of scenario where it's 

10:50:32.165 --> 10:50:36.439
likely some sort of gate keeping
 mechanism, the user may or may 

10:50:36.440 --> 10:50:39.762
not know what it is, or they 
want to know why do you need 

10:50:39.763 --> 10:50:42.411
this information, why are you 
even asking me this.  So for 

10:50:42.412 --> 10:50:47.167
those types of situations, they 
are much more likely to need in 

10:50:47.168 --> 10:50:52.027
context help to continue.
» LEON NICHOLS:  So good 

10:50:52.028 --> 10:50:56.624
strategy here is to consider 
context by context and offer up 

10:50:56.625 --> 10:50:59.450
what might be more useful in 
that moment?

10:50:59.451 --> 10:51:02.654
» NANDINI STOCKER:  Exactly.  
Whatever is most likely to keep 

10:51:02.655 --> 10:51:05.538
the conversation moving forward 
is what you would use to decide 

10:51:05.539 --> 10:51:08.545
on how to reprompt.
» LEON NICHOLS:  How do we 

10:51:08.546 --> 10:51:11.231
decide on the wording?
» NANDINI STOCKER:  I'm glad you

10:51:11.385 --> 10:51:14.600
 asked, Leon  .
First of all there's nothing 

10:51:14.601 --> 10:51:19.413
wrong with having a few generic 
fallback messages.  So we call 

10:51:19.414 --> 10:51:23.754
these rapid reprompts.  Users 
often just need some sort of 

10:51:23.755 --> 10:51:26.776
quick signal to indicate you 
didn't pick up examplely what

10:51:26.967 --> 10:51:28.990
                exactly what 
they said the first time.  

10:51:28.991 --> 10:51:31.820
However, this strategy only 
works if you are listening for 

10:51:31.821 --> 10:51:35.211
the right things to begin with. 
 So if you aren't catching what 

10:51:35.212 --> 10:51:39.184
they said the first time and you
 don't catch it when they repeat

10:51:39.461 --> 10:51:45.141
, you can imagine how that gets 
pretty tiresome pretty quickly.

10:51:45.142 --> 10:51:49.634
» LEON NICHOLS:  So you need to 
consider the user's situational 

10:51:49.635 --> 10:51:52.258
context for each and every 
question carefully 1234.

10:51:52.259 --> 10:51:54.054
» NANDINI STOCKER:           
                 ?

10:51:54.055 --> 10:51:56.527
» NANDINI STOCKER:  Of course.  
It often means maybe asking 

10:51:56.528 --> 10:51:59.202
another way.  Sometimes it even 
means breaking down the question

10:51:59.565 --> 10:52:04.921
 into parts.  Maybe even you're 
listening for both but you might

10:52:04.922 --> 10:52:07.964
 ask for one just to move the 
conversation forward  .

10:52:07.965 --> 10:52:10.929
Now depending how important, 
again, the information is that 

10:52:10.930 --> 10:52:15.513
you're asking for, you can also 
make use of escalating detail to

10:52:15.906 --> 10:52:18.790
 let users in on what is it you 
need from them and why are you 

10:52:18.791 --> 10:52:22.284
asking.  Again, to keep the 
conversation moving and answer 

10:52:22.285 --> 10:52:27.444
that unasked question  .
Finally, depending on your app's

10:52:27.714 --> 10:52:32.413
 persona and how assertive it 
is, you might also decide to be 

10:52:32.414 --> 10:52:35.775
progive and take control        
             active and take 

10:52:35.776 --> 10:52:37.365
control of the situation.
» LEON NICHOLS:  Let's look at 

10:52:37.366 --> 10:52:39.366
how you go about implementing 
some of

10:52:42.175 --> 10:52:43.236
 these more robust strategies.  
First of all it will require 

10:52:43.237 --> 10:52:46.934
implementing performance for the
 default fallback intent.  The 

10:52:46.935 --> 10:52:52.261
performance logic will create 
these responses dynamically in 

10:52:52.262 --> 10:52:53.220
code.
» NANDINI STOCKER:  The core 

10:52:53.221 --> 10:52:57.672
implementation strategy we 
recommend is to track user 

10:52:57.673 --> 10:53:02.028
progress, lay out your reprompts
, and like they say when you 

10:53:02.029 --> 10:53:06.551
love something, you have to know
 when to let it go  .

10:53:06.552 --> 10:53:10.061
For the apps we have built 
together, our code logic uses 

10:53:10.062 --> 10:53:13.897
counters and various session 
variables to keep track of the 

10:53:13.898 --> 10:53:16.841
users       user's progress.
» LEON NICHOLS:  For example 

10:53:16.842 --> 10:53:20.689
here is the performance logic 
for Number Genie where we use a

10:53:23.985 --> 10:53:24.155
 counter to check how many times
 the user provided a response 

10:53:24.156 --> 10:53:28.437
handled by the default fallback 
intent.  Now our client library 

10:53:28.438 --> 10:53:32.734
for the performance logic 
provides a way to store data 

10:53:32.735 --> 10:53:36.032
within a user session.
» NANDINI STOCKER:  You'll then 

10:53:36.033 --> 10:53:41.044
use those counters to build a 
dynamic reprompt strategy, using

10:53:41.045 --> 10:53:45.403
 both a combination of generic 
fallbacks sometimes and context 

10:53:45.404 --> 10:53:49.372
sensitive approaches like we 
talked about earlier.

10:53:49.373 --> 10:53:53.188
» LEON NICHOLS:  In API.AI the 
default fallback intent can be a

10:53:53.544 --> 10:53:56.741
 starting point with a minimum 
set of basic reprompts.  Here we

10:53:56.930 --> 10:54:01.778
 have a set of default rapid 
reprompts that provide a catch 

10:54:01.779 --> 10:54:06.027
all anywhere and will reprompt 
the user to say their response 

10:54:06.028 --> 10:54:06.773
again.
» NANDINI STOCKER:  From there 

10:54:06.774 --> 10:54:11.256
you can change those defaults to
 suit your app.  You might just 

10:54:11.257 --> 10:54:15.069
want to add more to that list, 
add a few different rapid 

10:54:15.070 --> 10:54:17.905
reprompts.
» LEON NICHOLS:  The agent will 

10:54:17.906 --> 10:54:21.688
then randomly select from your 
prompts whenever a no match is 

10:54:21.689 --> 10:54:24.081
triggered.
» NANDINI STOCKER:  So like we 

10:54:24.082 --> 10:54:27.642
said, sometimes you might want 
to pivot and ask the question a 

10:54:27.643 --> 10:54:31.772
little differently, though.  So 
a rapid reprompt might not be 

10:54:31.773 --> 10:54:34.174
enough.
» LEON NICHOLS:  In this 

10:54:34.175 --> 10:54:37.206
instance, for example, we 
created again and we wanted to 

10:54:37.207 --> 10:54:41.521
use the default handler to ask a
 yes-no question, whether the 

10:54:41.522 --> 10:54:43.522
user was done playing

10:54:45.962 --> 10:54:49.534
.  It saw     saw gen rein Rick 
and catch ol                  

10:54:50.003 --> 10:54:54.174
          generic and catch ol
    all but we customized for 

10:54:54.175 --> 10:54:56.089
the strategy of the game.
» NANDINI STOCKER:  To get the 

10:54:56.090 --> 10:55:00.060
users back on track you might 
want your reprompt to not be 

10:55:00.061 --> 10:55:03.151
generic, so you might want more 
context like some of the 

10:55:03.152 --> 10:55:06.169
examples we showed.
» LEON NICHOLS:  To plan for the

10:55:06.552 --> 10:55:09.496
 logic needed to implement 
context sensitive reprompt, it 

10:55:09.497 --> 10:55:14.640
really helps to see them mapped 
out ahead of time.  In some user

10:55:14.798 --> 10:55:18.500
 journeys and sample dialogs 
first.  For example when I walk 

10:55:18.501 --> 10:55:22.639
through the journeys Nandini 
wrote for Number Genie they 

10:55:22.640 --> 10:55:27.343
drove what variables and states 
needs       needed to be trapped

10:55:27.918 --> 10:55:30.540
    cked in the app's 
performance logic.

10:55:30.541 --> 10:55:33.621
» NANDINI STOCKER:  Each time 
you repromd pt look for 

10:55:33.622 --> 10:55:36.011
opportunities to add variability
 or re#23r5i78 the            

10:55:36.164 --> 10:55:39.255
frame the question.  This will 
lend more naturalness to the 

10:55:39.256 --> 10:55:41.791
dialogue and help users 
sometimes not even realize

10:55:44.920 --> 10:55:46.196
 they are experiencing an error 
per se.

10:55:46.197 --> 10:55:48.448
» LEON NICHOLS:  So to reframe 
the question you asked, we can 

10:55:48.449 --> 10:55:53.044
use a feature in API.AI that 
allows you to tag with labels 

10:55:53.045 --> 10:55:59.426
for context.  Here's one tagged 
with the get time context.

10:55:59.427 --> 10:56:01.907
» NANDINI STOCKER:  This is the 
fulfillment logic with a default

10:56:02.197 --> 10:56:07.665
 fallback intent for the get 
time context, what it looks like

10:56:08.544 --> 10:56:09.474
.
» LEON NICHOLS:  These can also 

10:56:09.475 --> 10:56:15.800
be statically assigned in API.AI
 web GUI for each intent, for 

10:56:15.801 --> 10:56:19.000
example, a list of intents we 
designed for a trivia game.  

10:56:19.001 --> 10:56:22.452
Notice all the expected user 
responses we handle using many 

10:56:22.453 --> 10:56:27.248
different intents, including 
help, quit and restart.

10:56:27.249 --> 10:56:30.337
» NANDINI STOCKER:  Now let's 
say you wanted to combine both 

10:56:30.338 --> 10:56:33.513
strategies.  We can show you how
 to implement both together in a

10:56:33.789 --> 10:56:37.597
 more escalating reprompt 
strategy.

10:56:37.598 --> 10:56:41.487
» LEON NICHOLS:  From experience
 we know that rapid reproms work

10:56:41.488 --> 10:56:45.611
 but we also know depending on 
the user scenario, we might want

10:56:45.612 --> 10:56:48.461
 to pivot after another error.
» NANDINI STOCKER:  To do that 

10:56:48.462 --> 10:56:52.762
you'll need to keep a counter 
and increase it every time that 

10:56:52.763 --> 10:56:58.675
the user response is handled by 
that fault       fallback intent

10:56:58.953 --> 10:56:59.957
.
» LEON NICHOLS:  Here is the 

10:56:59.958 --> 10:57:03.199
#30er78         performance 
logic for the default fallback 

10:57:03.200 --> 10:57:07.029
intent for our trivia game.  
Notice how we user a counter 

10:57:07.030 --> 10:57:10.580
that is stored?    in decision 
data.

10:57:10.581 --> 10:57:12.661
» NANDINI STOCKER:  For the 
first time the intent is invoked

10:57:13.078 --> 10:57:17.210
 we provide a rap it re      id 
reprompt by using the client 

10:57:17.211 --> 10:57:21.702
library ask function.  For the 
second time we respond with a 

10:57:21.703 --> 10:57:23.703
fullback

10:57:24.785 --> 10:57:26.674
 response.
» LEON NICHOLS:  Now obviously 

10:57:26.675 --> 10:57:29.441
that kes     es    escalation 
shouldn't go on never

10:57:29.749 --> 10:57:30.658
     forever.
» NANDINI STOCKER:  When it 

10:57:30.659 --> 10:57:33.916
comes to no matches, know when 
to give up.

10:57:33.917 --> 10:57:36.033
» LEON NICHOLS:  After you have 
tried a couple of times, once 

10:57:36.034 --> 10:57:40.681
the counter goes above a 
threshold, they are out of the 

10:57:40.682 --> 10:57:43.020
conversation                    
               bough out    

10:57:43.239 --> 10:57:45.457
       bow out of the 
conversation gracefully.

10:57:45.458 --> 10:57:48.880
» NANDINI STOCKER:  How you word
 that precisely depends on your 

10:57:48.881 --> 10:57:52.708
persona.
» LEON NICHOLS:  Back to the 

10:57:52.709 --> 10:57:55.768
default fallback handler, when 
the user response triggers 

10:57:55.769 --> 10:57:59.436
intent for the third time, we 
provide a fallback prompt and 

10:57:59.437 --> 10:58:02.887
then end the conversation by 
using the client library tell 

10:58:02.888 --> 10:58:04.916
function.
» NANDINI STOCKER:  However, of 

10:58:04.917 --> 10:58:08.949
course if the conversation with 
the user recovers and another en

10:58:09.116 --> 10:58:12.034
    intent is invoked like we 
talked about earlier, if they 

10:58:12.035 --> 10:58:14.337
actually angst the question
                    answer the 

10:58:14.338 --> 10:58:18.677
question, it's not a default 
fallback, then we reset that 

10:58:18.678 --> 10:58:21.713
counter value.
» LEON NICHOLS:  Those were just

10:58:21.998 --> 10:58:23.489
 the basics.
» NANDINI STOCKER:  Just the 

10:58:23.490 --> 10:58:25.502
basics.
» LEON NICHOLS:  Yep.  So from 

10:58:25.503 --> 10:58:29.457
here you can find lots of ways 
to step up your conversation 

10:58:29.458 --> 10:58:33.262
repair game even more.
» NANDINI STOCKER:  But wait 

10:58:33.263 --> 10:58:38.897
there's more  .
So one way is to inherently 

10:58:38.898 --> 10:58:43.325
disguise errors.  So by adding 
fat recallness and variability 

10:58:43.326 --> 10:58:47.958
to make                y     
                    naturalness 

10:58:47.959 --> 10:58:53.101
and variability to make the 
entire process more err gauging.

10:58:53.102 --> 10:58:56.607
      e           engaging 
venlth not just                .

10:58:56.608 --> 10:59:00.837
  Not just      just error proms
 but everywhere else.

10:59:00.838 --> 10:59:03.269
» LEON NICHOLS:  This is where 
design be   ing with a 

10:59:03.270 --> 10:59:08.010
particular persona apps      app
 koums in hand je.

10:59:08.011 --> 10:59:08.946
» NANDINI STOCKER:       
                   y.

10:59:08.947 --> 10:59:11.159
» NANDINI STOCKER:  We'll show 
you one example of what we mean.

10:59:11.160 --> 10:59:13.160
  For example the trivial

10:59:15.748 --> 10:59:17.267
  game, we use a team      
teacher persona.  His name is 

10:59:17.268 --> 10:59:21.570
Mr. Montgomery.  He is the type 
of character super encharge ing

10:59:21.752 --> 10:59:24.714
   e     ourage ing, you got 
this.  He's a teacher, 

10:59:24.715 --> 10:59:29.101
replication?
» LEON NICHOLS:  To give you an 

10:59:29.102 --> 10:59:31.870
idea, out teacher has over 50 
ways of saying you got the 

10:59:31.871 --> 10:59:34.569
answer right.
» NANDINI STOCKER:  Over 30 ways

10:59:35.945 --> 10:59:39.510
 to proper you up               
prop you up if you got it wrong 

10:59:39.904 --> 10:59:43.017
 .
Also, again, this is stepping up

10:59:43.294 --> 10:59:47.125
 your game.  Use threading 
techniques.  So in spoken 

10:59:47.126 --> 10:59:50.557
dialogue between humans, 
elements of a conversation are 

10:59:50.558 --> 10:59:56.074
woven together in a coherent 
thread.  And that includes both 

10:59:56.075 --> 11:00:00.284
context and the way the 
conversation evolves over time. 

11:00:00.439 --> 11:00:02.439
 So this type of thread

11:00:06.194 --> 11:00:06.639
ing helps us keep track of that 
conversational flow.

11:00:06.640 --> 11:00:10.969
» LEON NICHOLS:  You would have 
to write the prompts that thread

11:00:11.260 --> 11:00:15.193
 together well but programmatic
ally speaking you need to 

11:00:15.194 --> 11:00:17.291
support the flow in some 
underlying framework.  That will

11:00:17.567 --> 11:00:20.607
 use tracking, context and 
countsers just like we talked 

11:00:20.608 --> 11:00:24.173
about before.
» NANDINI STOCKER:  To support 

11:00:24.174 --> 11:00:27.973
variability and threading, you 
could build a robust list of 

11:00:27.974 --> 11:00:32.693
projects and         mpts and 
randomize them.

11:00:32.694 --> 11:00:36.129
» LEON NICHOLS:  You can scale 
without changing the code.

11:00:36.130 --> 11:00:39.784
» NANDINI STOCKER:  If you can 
randomize 3 , it    you can do 

11:00:39.785 --> 11:00:44.218
103.  They can be cat Nate ing 
for a large number of 

11:00:44.219 --> 11:00:46.717
permutations.
» LEON NICHOLS:  Can     You a  

11:00:46.902 --> 11:00:50.467
 can add dynamic variables to 
replace at run time.

11:00:50.468 --> 11:00:53.001
» NANDINI STOCKER:  20    To 
prevent the user from hearing 

11:00:53.002 --> 11:00:55.915
same prompts in sequence, you 
can remember which prompts you 

11:00:55.916 --> 11:00:59.477
played and avoid them when 
random lib    ly picking next 

11:00:59.478 --> 11:01:01.145
from the list.
» LEON NICHOLS:  You can also 

11:01:01.146 --> 11:01:04.318
track the number of errors and 
in what skens they occur     

11:01:04.490 --> 11:01:07.319
October                 equence 
42 October            they occur

11:01:07.320 --> 11:01:09.793
 1999     .
» NANDINI STOCKER:  Finally, 

11:01:09.794 --> 11:01:13.336
after you deploy the app, the 
error handling approach doesn't 

11:01:13.337 --> 11:01:17.252
stop.  You should check in with 
what users are doing and adjust 

11:01:17.253 --> 11:01:20.054
strategy if needed.
» LEON NICHOLS:  API.AI provides

11:01:20.788 --> 11:01:23.750
 a training feature which allows
 you to track which users 

11:01:23.751 --> 11:01:27.107
responses are not mapped        
being mapped by intent.  This 

11:01:27.108 --> 11:01:29.893
feedback could be used to expand
 support for user kroers

11:01:30.017 --> 11:01:33.474
      queries and can also give 
hints on what new intents might 

11:01:33.475 --> 11:01:37.733
need to be added to your app.
» NANDINI STOCKER:  One powerful

11:01:37.921 --> 11:01:43.185
 notion to remember is that 
users who are not encountring   

11:01:43.481 --> 11:01:45.481
       counter

11:01:46.706 --> 11:01:50.972
        countering errors should
 feel the benefit of progressing

11:01:46.706 --> 11:01:50.248
 through so that when an error 
is encountered they don't feel 

11:01:50.249 --> 11:01:54.612
derailed.  Also it's proven that
 reminding them how far they 

11:01:54.613 --> 11:01:59.336
have gotten or that they don't 
have far to go will help them 

11:01:59.337 --> 11:02:03.416
get back on track  .
That's enough strategy for    

11:02:03.614 --> 11:02:06.597
 ies for now.  Let's look at 
these in action.

11:02:06.598 --> 11:02:10.114
» LEON NICHOLS:  Okay.  So we 
are going to show you a demo of 

11:02:10.115 --> 11:02:14.076
Number Genie which we designed 
together.  It's available as a 

11:02:14.077 --> 11:02:19.498
sample on our site.
» NANDINI STOCKER:  We chose a 

11:02:19.499 --> 11:02:24.657
number guessing game because we 
felt like you guys as developers

11:02:25.175 --> 11:02:27.858
 can mentally map a number 
guessing game and sort of 

11:02:27.859 --> 11:02:32.733
picture some of the concepts we 
have been talking about.  We 

11:02:32.734 --> 11:02:36.106
have built there a hidden 
developer mode.  This game is 

11:02:36.107 --> 11:02:40.492
public.  You're welcome to try 
this out.  I'm going to pray to 

11:02:40.493 --> 11:02:44.900
the demo guys they don't smiet
       smite me here  .

11:02:44.901 --> 11:02:49.210
There's a lidden developer     
             hidden developer 

11:02:49.211 --> 11:02:52.648
mode we can set the number the 
gene is thinking of and guess 

11:02:52.649 --> 11:02:55.779
around it so you can hear the 
strategies we talked about  .

11:02:55.922 --> 11:03:00.609
All right?  Okay.  Hey Google, 
let's talk to Number Genie about

11:03:02.125 --> 11:03:04.125
 21 

11:03:06.139 --> 11:03:10.237
 .  
» Sure, here is Number Genie  .

11:03:10.545 --> 11:03:14.816
I'm thinking of a number from on
    zero to 100.  What's your 

11:03:14.817 --> 11:03:16.969
first guess?
» DUKE DUKELLIS:  50       

11:03:17.376 --> 11:03:18.500
                  .
» NANDINI STOCKER:  50.

11:03:18.501 --> 11:03:23.167
» Lower.  Have another guess?
» NANDINI STOCKER:  Zero.

11:03:23.168 --> 11:03:29.022
» I see what you did there.  But
 no, it's higher than zero.

11:03:29.023 --> 11:03:37.480
» NANDINI STOCKER:  30.
» I didn't hear a number.

11:03:37.481 --> 11:03:40.796
» NANDINI STOCKER:  30.
» You're getting warm.  It's 

11:03:40.797 --> 11:03:45.335
lower than 30.  Have another 
guess?

11:03:45.336 --> 11:03:49.882
» NANDINI STOCKER:  17.
» It's so close but not quite.

11:03:49.883 --> 11:03:53.506
» NANDINI STOCKER:  19.
» It's higher than 19.  What's 

11:03:53.507 --> 11:03:55.507
your next guess

11:03:59.085 --> 11:04:00.751
?
» NANDINI STOCKER:  20.

11:03:59.085 --> 11:04:02.076
» Are you done playing number  
      Number Genie?

11:04:02.077 --> 11:04:04.077
» DUKE DUKELLIS:  No   
               NANDINI STOCKER: 

11:04:04.209 --> 11:04:08.775
 No.
» Great, what's your next guess?

11:04:08.776 --> 11:04:10.776
» NANDINI STOCKER:  21.
»

11:04:12.698 --> 11:04:18.087
 (Blink     Bling)  .
Well done, it is indeed 121  . 

11:04:18.241 --> 11:04:22.130
       21.  Want to hey     play
 again?

11:04:22.131 --> 11:04:24.893
» NANDINI STOCKER:  No thanks.
» LEON NICHOLS:  It's really 

11:04:24.894 --> 11:04:28.416
interesting to see the 
interaction, but a number 

11:04:28.417 --> 11:04:32.595
guessing game is deceptively 
simple.  If you just think about

11:04:32.810 --> 11:04:35.973
 it as compare ing a number and 
a guess.  But it can be designed

11:04:36.163 --> 11:04:42.073
 to be delightful by adding 
layers of tracking in the game 

11:04:42.074 --> 11:04:43.252
logic.
» NANDINI STOCKER:  Let's look 

11:04:43.253 --> 11:04:48.808
real quick under the hood at the
 full fit     fillment logic of 

11:04:48.809 --> 11:04:52.394
Number Genie je we      .
» LEON NICHOLS:  We check a lot 

11:04:52.395 --> 11:04:57.114
of things in the conversation.  
Notice we use countel fallbacks.

11:04:57.115 --> 11:04:59.352
» NANDINI STOCKER:  We track the
 number of guesses, valt      

11:04:59.353 --> 11:05:02.071
value of previous guess, and how
 many times the user gives the 

11:05:02.072 --> 11:05:05.274
same answer.
» LEON NICHOLS:  We also 

11:05:05.275 --> 11:05:08.610
consider how far away the user 
guess is from the answer.

11:05:08.611 --> 11:05:11.810
» NANDINI STOCKER:  As the user 
gets closer to the answer, which

11:05:12.041 --> 11:05:17.207
 the demo didn't work, we 
provide rapid reprompts and 

11:05:17.208 --> 11:05:19.638
encouraging sounds.  So try it 
out yourself and you'll see 

11:05:19.639 --> 11:05:23.977
there's a few hidden gems in 
there in the way it reprompts 

11:05:23.978 --> 11:05:27.798
and it throws in a few sounds 
when you're closing   er or far 

11:05:27.799 --> 11:05:30.757
t further           further away
.

11:05:30.758 --> 11:05:34.070
» LEON NICHOLS:  We remember if 
we give a   the user a hint in 

11:05:34.071 --> 11:05:37.494
what direction the answer is.
» NANDINI STOCKER:  We change 

11:05:37.495 --> 11:05:39.456
the prompts and track when the 
user followed or ignore hints. 

11:05:39.457 --> 11:05:43.087
Ing sure and try                
 Be sure and try that out too.

11:05:43.088 --> 11:05:46.467
» LEON NICHOLS:  You can see 
some of the prompts we dynamic

11:05:46.738 --> 11:05:50.227
ally provide values for the 
characters in the prompts wade 

11:05:50.228 --> 11:05:52.958
on urs        based on user     
               based on user 

11:05:52.959 --> 11:05:55.639
input and game state.
» NANDINI STOCKER:  I hope we 

11:05:55.640 --> 11:05:58.218
showed you a foundation of 
building conversation repair 

11:05:58.219 --> 11:06:01.313
strategy.  We talked a bit about
 the types of errors        

11:06:01.314 --> 11:06:05.345
error events to plan for, how to
 use built-ins and other 

11:06:05.346 --> 11:06:08.027
existing tool features to 
implement in your design and 

11:06:08.028 --> 11:06:11.393
prevent the bulk of errors by 
anticipate ing and tracking user

11:06:11.704 --> 11:06:16.258
 progress and context.
» LEON NICHOLS:  But the key to 

11:06:16.259 --> 11:06:19.792
any strategy for creating a 
conversational experience, 

11:06:19.793 --> 11:06:24.124
especially for when things go 
wrong, is to step back and look 

11:06:24.125 --> 11:06:26.893
at the user situation.
» NANDINI STOCKER:  Don't create

11:06:27.944 --> 11:06:30.564
 dead ends when something didn't
 work.  Remember it doesn't have

11:06:30.797 --> 11:06:35.665
 to be treated as an error.
» LEON NICHOLS:  Now there are 

11:06:35.666 --> 11:06:39.069
more docs and resources 
available on our site, including

11:06:39.422 --> 11:06:41.824
 white papers and a design 
checklist.

11:06:41.825 --> 11:06:43.629
» NANDINI STOCKER:  Which 
includes an entire list of 

11:06:43.630 --> 11:06:47.569
conversation repair check items.
  Also take a look at the sample

11:06:47.570 --> 11:06:53.443
 apps that we have open sourced 
in github.

11:06:53.444 --> 11:06:55.654
» LEON NICHOLS:  There's also a 
lot more talks about 

11:06:55.655 --> 11:06:58.664
conversation design tomorrow as 
well as office hours, so you can

11:06:58.828 --> 11:07:07.068
 talk to some of our teams  .
Because we think some of the 

11:07:07.069 --> 11:07:10.730
best strategies will come from 
you, we want to hear all about 

11:07:10.731 --> 11:07:13.551
what you come up with.
» NANDINI STOCKER:  So as you 

11:07:13.552 --> 11:07:17.098
saw yesterday, we announced the 
actions on Google developer 

11:07:17.099 --> 11:07:20.839
challenge.  We had a little
          a little part in that 

11:07:21.057 --> 11:07:22.110
 .
Remember when you're creating 

11:07:22.111 --> 11:07:27.315
yours that any winning app 
probably will have a killer 

11:07:27.316 --> 11:07:30.997
conversational repair strategy 
at its core, right?

11:07:30.998 --> 11:07:34.693
» LEON NICHOLS:  And we can't 
wait to see what you create.

11:07:34.694 --> 11:07:36.810
» NANDINI STOCKER:  Thank you.
» VALERIE NYGAARD:  Thanks  .

11:07:37.092 --> 11:07:39.851
(Applause)          Applause   

11:07:41.920 --> 11:07:42.596
           .
» LEON NICHOLS:  Thanks.

11:07:42.597 --> 11:07:45.317
» Thank you for joining the 
session.  Brand aim     

11:07:45.318 --> 11:07:48.292
ambassador will assist with 
directing you through the 

11:07:48.293 --> 11:07:52.512
designated exits  .
(Session end)  . 

11:08:11.223 --> 11:08:11.779
.  
.  

11:08:11.780 --> 11:08:12.337
.  
.  

11:08:12.338 --> 11:08:13.094
.  
.  

11:08:13.095 --> 11:08:13.616
.  
.  

11:08:13.617 --> 11:08:14.038
.  
.  

11:08:14.039 --> 11:08:14.556
.  
.  

11:08:14.557 --> 11:08:14.971
.  
.  

11:08:14.972 --> 11:08:15.348
.  
.  

11:08:15.349 --> 11:08:15.994
.  
.  

11:08:15.995 --> 11:08:16.419
.  
.  

11:08:16.420 --> 11:08:16.914
.  
.  

