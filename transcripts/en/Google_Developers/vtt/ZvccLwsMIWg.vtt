WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.868
[MUSIC PLAYING]

00:00:05.740 --> 00:00:08.060
TIMOTHY JORDAN: We're
now in the IoT tent.

00:00:08.060 --> 00:00:10.540
And first, we're going to
learn all about OpenThread

00:00:10.540 --> 00:00:11.367
from Jonathan.

00:00:11.367 --> 00:00:12.200
JONATHAN: All right.

00:00:12.200 --> 00:00:16.540
So OpenThread is an open-source
implementation of the Thread

00:00:16.540 --> 00:00:18.190
networking protocol.

00:00:18.190 --> 00:00:21.780
What it is is a low-power
mesh networking technology

00:00:21.780 --> 00:00:24.490
that allows devices,
IoT devices,

00:00:24.490 --> 00:00:27.952
to talk to each other over
a low-power mesh network.

00:00:27.952 --> 00:00:29.410
So if you're building
products that

00:00:29.410 --> 00:00:32.460
run on battery that's supposed
to last for years, not months,

00:00:32.460 --> 00:00:34.400
Thread's a great
solution for that.

00:00:34.400 --> 00:00:37.180
So what we've done at
Nest is taken the protocol

00:00:37.180 --> 00:00:39.222
and made an open-source
implementation,

00:00:39.222 --> 00:00:41.680
put it in our products, and
made it available to developers

00:00:41.680 --> 00:00:43.020
to build into their own ones.

00:00:43.020 --> 00:00:44.020
TIMOTHY JORDAN: Awesome.

00:00:44.020 --> 00:00:44.709
JONATHAN: Yeah.

00:00:44.709 --> 00:00:46.750
So you want me to walk
you through the demo here?

00:00:46.750 --> 00:00:47.800
TIMOTHY JORDAN: Yeah, can
you show me what's going on?

00:00:47.800 --> 00:00:49.990
JONATHAN: So all these
devices you see on the wall

00:00:49.990 --> 00:00:51.359
are actually running OpenThread.

00:00:51.359 --> 00:00:52.900
They're running our
partner hardware.

00:00:52.900 --> 00:00:55.750
And they're connected to
a single-thread network,

00:00:55.750 --> 00:00:57.340
one giant mesh network.

00:00:57.340 --> 00:00:59.830
And one of the benefits of
Thread, it's actually using IP.

00:00:59.830 --> 00:01:01.540
So just Internet Protocol.

00:01:01.540 --> 00:01:03.800
And each device
has an IP address--

00:01:03.800 --> 00:01:06.547
an IPv6 address, to be specific.

00:01:06.547 --> 00:01:08.380
And that makes it really
easy for developers

00:01:08.380 --> 00:01:11.320
to build apps because it's
just IP that they're used to.

00:01:11.320 --> 00:01:14.360
So if you can ping a web server,
you can ping a Thread node.

00:01:14.360 --> 00:01:17.550
So in this demo, we're actually
showing pinging a device

00:01:17.550 --> 00:01:18.550
over the Thread network.

00:01:18.550 --> 00:01:20.800
So as you see that light
blink, it's actually

00:01:20.800 --> 00:01:23.325
going over Wi-Fi
from this tablet

00:01:23.325 --> 00:01:25.450
to this Raspberry Pi, which
happens to be on Wi-Fi,

00:01:25.450 --> 00:01:27.880
and then fanning out
to the Thread network.

00:01:27.880 --> 00:01:30.070
And you can imagine
sensors or actuators

00:01:30.070 --> 00:01:33.310
like door locks and windows
being replaced by an LED,

00:01:33.310 --> 00:01:37.235
but we're just simplifying
it with this demonstration.

00:01:37.235 --> 00:01:38.109
It's really cool.

00:01:38.109 --> 00:01:39.400
TIMOTHY JORDAN: That's awesome.

00:01:39.400 --> 00:01:40.240
Thank you so much.

00:01:40.240 --> 00:01:41.377
JONATHAN: Sure thing.

00:01:41.377 --> 00:01:43.210
TIMOTHY JORDAN: Hey,
before we go, actually,

00:01:43.210 --> 00:01:45.250
if developers want to get
started, where do they go?

00:01:45.250 --> 00:01:45.940
JONATHAN: Sure.

00:01:45.940 --> 00:01:47.898
It's been publicly
available for the last year.

00:01:47.898 --> 00:01:49.860
We launched it at
Google I/O last year.

00:01:49.860 --> 00:01:51.662
And you can go on
github.com/opent

00:01:51.662 --> 00:01:53.472
hread/openthread.

00:01:53.472 --> 00:01:55.805
There's codelabs available
if you're here at Google I/O,

00:01:55.805 --> 00:01:58.770
but it's also available on the
Google Codelab website for you

00:01:58.770 --> 00:02:00.252
to try it at home.

00:02:00.252 --> 00:02:03.210
[MUSIC PLAYING]

00:02:03.210 --> 00:02:04.964
SPEAKER: I see a
golden retriever.

00:02:04.964 --> 00:02:06.630
TIMOTHY JORDAN: It's
a golden retriever.

00:02:06.630 --> 00:02:07.620
That's pretty great.

00:02:07.620 --> 00:02:10.770
So we're in the
Android Things room.

00:02:10.770 --> 00:02:13.450
And I'm here with
Ryan and Wayne.

00:02:13.450 --> 00:02:16.830
Ryan, tell us about some
of the stuff that is built

00:02:16.830 --> 00:02:18.240
on Android Things in this room.

00:02:18.240 --> 00:02:18.740
RYAN: Cool.

00:02:18.740 --> 00:02:19.550
Do I get to hold it?

00:02:19.550 --> 00:02:20.424
TIMOTHY JORDAN: Sure.

00:02:20.424 --> 00:02:21.900
RYAN: All right.

00:02:21.900 --> 00:02:25.850
So over here, we
have a simple demo

00:02:25.850 --> 00:02:28.110
that we are using
to show how easy it

00:02:28.110 --> 00:02:31.850
is to go from prototype to
production with Android Things.

00:02:31.850 --> 00:02:34.440
So at the top, we have
a very simple light

00:02:34.440 --> 00:02:38.370
that's turned on using
an Intel Edison kit.

00:02:38.370 --> 00:02:40.740
Over here, we're
using the design,

00:02:40.740 --> 00:02:46.780
but we used a custom PCB to
make the footprint smaller.

00:02:46.780 --> 00:02:49.590
Therefore, you can
fit the overall thing

00:02:49.590 --> 00:02:51.090
into a smaller form factor.

00:02:51.090 --> 00:02:53.455
At the bottom, you
can see in the candle.

00:02:53.455 --> 00:02:55.830
WAYNE: And actually, the really
cool part about that demo

00:02:55.830 --> 00:02:58.290
is that any developer can make
a circuit board like that.

00:02:58.290 --> 00:03:00.000
So in our talk
tomorrow, we're going

00:03:00.000 --> 00:03:02.310
to show you how to actually
build that circuit board.

00:03:02.310 --> 00:03:03.390
And you can actually
solder this up

00:03:03.390 --> 00:03:04.890
in your own workshop or
home, so it's actually

00:03:04.890 --> 00:03:07.015
one of the really cool
things about the [INAUDIBLE]

00:03:07.015 --> 00:03:08.778
architecture is you can do that.

00:03:08.778 --> 00:03:10.110
RYAN: Yep.

00:03:10.110 --> 00:03:13.106
On the right, we have the
TensorFlow camera demo.

00:03:13.106 --> 00:03:14.730
This is also running
on Android Things.

00:03:14.730 --> 00:03:17.640
We have Raspberry Pi 3 camera.

00:03:17.640 --> 00:03:21.250
And it's actually fairly
easy to build as well.

00:03:21.250 --> 00:03:24.330
All these parts
are off the shelf.

00:03:24.330 --> 00:03:25.440
So you'll notice that--

00:03:25.440 --> 00:03:25.980
WAYNE: There's a
battery in it too.

00:03:25.980 --> 00:03:28.500
RYAN: It's running on
battery, completely portable.

00:03:28.500 --> 00:03:30.810
And the best part
is it's actually

00:03:30.810 --> 00:03:33.880
running offline, completely
locally on the device.

00:03:33.880 --> 00:03:36.060
So we're running the
TensorFlow model.

00:03:36.060 --> 00:03:39.150
TensorFlow Inception
model you can get online.

00:03:39.150 --> 00:03:43.320
And then, once we download
it, install it as an APK here,

00:03:43.320 --> 00:03:45.480
now you don't need
online at all.

00:03:45.480 --> 00:03:48.520
So you don't need data cost
associated with it at all.

00:03:48.520 --> 00:03:51.390
So when I press
this button, it will

00:03:51.390 --> 00:03:54.660
take a picture using the
camera module located here.

00:03:54.660 --> 00:03:56.640
And then it will be
processed on the device,

00:03:56.640 --> 00:03:58.500
and it'll say what
it thinks it is

00:03:58.500 --> 00:04:00.039
using Android text-to-speech.

00:04:00.039 --> 00:04:02.080
TIMOTHY JORDAN: Tell me
about the M&amp;Ms over here.

00:04:02.080 --> 00:04:04.380
RYAN: So on this one,
this was actually

00:04:04.380 --> 00:04:06.820
built by one of our
external developers

00:04:06.820 --> 00:04:08.700
in our community, Lewis.

00:04:08.700 --> 00:04:12.750
So the small candy
dispenser, it's

00:04:12.750 --> 00:04:15.300
powered by Android Things
using Raspberry Pi 3.

00:04:15.300 --> 00:04:18.930
And once you press
this button, the camera

00:04:18.930 --> 00:04:22.770
will take a picture of
you, send that image

00:04:22.770 --> 00:04:24.900
through Cloud Vision API.

00:04:24.900 --> 00:04:27.840
And if it detects a smile,
it will give you the candy.

00:04:27.840 --> 00:04:30.810
And we're using our relay
module, as you can see here,

00:04:30.810 --> 00:04:33.210
connected to the
motor of the dispenser

00:04:33.210 --> 00:04:34.655
to activate the dispensing.

00:04:34.655 --> 00:04:36.030
TIMOTHY JORDAN:
All right, y'all.

00:04:36.030 --> 00:04:37.680
Well, I think that's
all the Android Things

00:04:37.680 --> 00:04:39.540
that we're going to
check out in this booth.

00:04:39.540 --> 00:04:41.600
Wayne, before we get
going, what are some things

00:04:41.600 --> 00:04:44.190
that developers can do today
to play with Android Things?

00:04:44.190 --> 00:04:46.509
WAYNE: The really cool thing
is all these samples here,

00:04:46.509 --> 00:04:47.800
we've open-sourced all of them.

00:04:47.800 --> 00:04:50.700
So the TensorFlow image
recognition, the LED candle.

00:04:50.700 --> 00:04:52.790
We've released all the
source code on GitHub.

00:04:52.790 --> 00:04:54.600
The schematics for
the candle are also

00:04:54.600 --> 00:04:56.265
available as an
actual circuit design,

00:04:56.265 --> 00:04:58.370
so you can actually
make them yourself.

00:04:58.370 --> 00:05:00.000
So you can try all
these things out.

00:05:00.000 --> 00:05:01.840
And then it's really
easy to get started.

00:05:01.840 --> 00:05:04.380
You use Android Studio
to write your code.

00:05:04.380 --> 00:05:06.340
And it's really
easy to get going.

00:05:06.340 --> 00:05:09.060
So any Android programmer
who's written a phone app now

00:05:09.060 --> 00:05:10.960
has the ability to
make IoT apps as well.

00:05:10.960 --> 00:05:12.720
So that's one of the really cool
things about Android Things,

00:05:12.720 --> 00:05:15.810
is it takes advantage of all of
your existing Android knowledge

00:05:15.810 --> 00:05:18.687
and allows you to apply it here.

00:05:18.687 --> 00:05:19.770
TIMOTHY JORDAN: All right.

00:05:19.770 --> 00:05:22.171
We're now in the
Works With Nest room.

00:05:22.171 --> 00:05:23.670
And I'm here with
Jesse, who's going

00:05:23.670 --> 00:05:26.200
to tell us a little bit
about Works With Nest.

00:05:26.200 --> 00:05:27.700
JESSE: Yeah, thanks
for stopping by.

00:05:27.700 --> 00:05:30.440
So Works With Nest is a
developer program for Nest.

00:05:30.440 --> 00:05:32.340
And we have a bunch
of different APIs

00:05:32.340 --> 00:05:34.502
that let you connect
into the Nest ecosystem.

00:05:34.502 --> 00:05:36.460
And there's a lot of ways
that you can connect.

00:05:36.460 --> 00:05:38.520
You can connect to the
thermostat, the camera,

00:05:38.520 --> 00:05:42.270
the smoke alarm, and then, also,
our demand-response programs

00:05:42.270 --> 00:05:44.999
that we set up with utility
companies across the country.

00:05:44.999 --> 00:05:46.290
TIMOTHY JORDAN: That's awesome.

00:05:46.290 --> 00:05:48.930
So what are some of your
favorite integrations

00:05:48.930 --> 00:05:51.160
with the Works
With Nest program?

00:05:51.160 --> 00:05:54.180
JESSE: So some of the
really cool ones are--

00:05:54.180 --> 00:05:55.680
whoa-- over here.

00:05:55.680 --> 00:05:59.540
The Aware, it's an
air quality sensor.

00:05:59.540 --> 00:06:01.980
And it will measure the
different things in your air.

00:06:01.980 --> 00:06:03.480
And then how it
integrates with Nest

00:06:03.480 --> 00:06:05.976
is it connects to a
thermostat and uses the fan

00:06:05.976 --> 00:06:07.350
to clean up the
air in your house

00:06:07.350 --> 00:06:09.395
when it detects that
levels are high.

00:06:09.395 --> 00:06:10.740
TIMOTHY JORDAN: Oh, that's cool.

00:06:10.740 --> 00:06:11.926
What else?

00:06:11.926 --> 00:06:12.910
JESSE: Another one
that's really cool which

00:06:12.910 --> 00:06:13.826
is a little different.

00:06:13.826 --> 00:06:16.050
It's not directly
connecting with--

00:06:16.050 --> 00:06:19.579
they're all over-- products
is the Rachio sprinkler.

00:06:19.579 --> 00:06:20.370
TIMOTHY JORDAN: OK.

00:06:20.370 --> 00:06:21.390
JESSE: So I have it at my house.

00:06:21.390 --> 00:06:22.965
It manages the
water automatically,

00:06:22.965 --> 00:06:24.840
so I don't have to worry
about it in my yard.

00:06:24.840 --> 00:06:28.800
But with Nest, it shows
up in my home report

00:06:28.800 --> 00:06:31.464
every month, where Nest
tells me how much energy I'm

00:06:31.464 --> 00:06:32.880
using with my
thermostat, but then

00:06:32.880 --> 00:06:36.060
I also have a list of
how much water I've used

00:06:36.060 --> 00:06:37.740
and compares it to
the previous month.

00:06:37.740 --> 00:06:38.460
Pretty cool.

00:06:38.460 --> 00:06:38.700
TIMOTHY JORDAN: Cool.

00:06:38.700 --> 00:06:39.900
So that's some of
the stuff that's

00:06:39.900 --> 00:06:41.190
been around for a little bit.

00:06:41.190 --> 00:06:42.090
What's next?

00:06:42.090 --> 00:06:43.392
What's the newest integrations?

00:06:43.392 --> 00:06:45.600
JESSE: So some of our new
things are with the camera.

00:06:45.600 --> 00:06:46.140
TIMOTHY JORDAN: OK.

00:06:46.140 --> 00:06:48.514
JESSE: So the camera is now
connected to the thermostat--

00:06:48.514 --> 00:06:50.700
or to the APIs.

00:06:50.700 --> 00:06:53.350
And we're doing cool
new things there.

00:06:53.350 --> 00:06:57.390
So originally, you could use
the APIs and get motion events,

00:06:57.390 --> 00:06:59.970
and then have your products
respond to motion in the house.

00:06:59.970 --> 00:07:04.240
But lately, we've been
developing our ImageVision.

00:07:04.240 --> 00:07:06.280
And now we can recognize people.

00:07:06.280 --> 00:07:10.340
So now Works With Nest products
can get these people events

00:07:10.340 --> 00:07:13.000
and do things when they
know that there's a person.

00:07:13.000 --> 00:07:15.790
One example is, not
necessarily with people

00:07:15.790 --> 00:07:17.560
but cool integrations
with the camera,

00:07:17.560 --> 00:07:19.780
is Chamberlain and garage doors.

00:07:19.780 --> 00:07:21.820
So what they do is, when
the garage door opens,

00:07:21.820 --> 00:07:23.528
they grab a snapshot
from the thermostat,

00:07:23.528 --> 00:07:26.109
and they integrate, then,
their history UI in their app.

00:07:26.109 --> 00:07:27.400
TIMOTHY JORDAN: That's awesome.

00:07:27.400 --> 00:07:28.040
JESSE: Totally.

00:07:28.040 --> 00:07:29.748
TIMOTHY JORDAN: OK,
so one last question,

00:07:29.748 --> 00:07:31.634
because we also
checked out OpenThread.

00:07:31.634 --> 00:07:33.550
Is there anything in
here that's using Thread?

00:07:33.550 --> 00:07:34.300
JESSE: Absolutely.

00:07:34.300 --> 00:07:36.550
So super excited about Thread.

00:07:36.550 --> 00:07:39.470
It's really like the next phase
of our development program.

00:07:39.470 --> 00:07:41.680
The first one is giving
people an easy way

00:07:41.680 --> 00:07:42.905
to connect to Nest products.

00:07:42.905 --> 00:07:44.530
And then phase two,
we're going to take

00:07:44.530 --> 00:07:46.113
some of the core
technology that we've

00:07:46.113 --> 00:07:48.310
developed at Nest to
build our Nest products

00:07:48.310 --> 00:07:50.480
and make it available
for developers.

00:07:50.480 --> 00:07:53.040
So we're working with
Yale on this lock.

00:07:53.040 --> 00:07:56.050
Yale's been making locks
for 50 years, 100 years.

00:07:56.050 --> 00:07:59.030
And they're really good at
it, but not really a software

00:07:59.030 --> 00:07:59.530
company.

00:07:59.530 --> 00:08:01.150
So we've taken some
of the software

00:08:01.150 --> 00:08:04.030
that we use on our Nest
products like Thread

00:08:04.030 --> 00:08:05.281
and made it available to them.

00:08:05.281 --> 00:08:07.196
And it's going to be a
really cool lock that's

00:08:07.196 --> 00:08:08.710
integrated with the ecosystem.

00:08:08.710 --> 00:08:11.260
And we've actually
open-sourced Thread.

00:08:11.260 --> 00:08:13.450
And we have a booth
just a couple of booths

00:08:13.450 --> 00:08:14.950
down where you can
see all about it

00:08:14.950 --> 00:08:16.630
and figure out
where to get code.

00:08:16.630 --> 00:08:17.200
TIMOTHY JORDAN: Awesome.

00:08:17.200 --> 00:08:18.575
Is there anything
else you'd like

00:08:18.575 --> 00:08:20.410
to tell to all the
developers out there?

00:08:20.410 --> 00:08:21.700
JESSE: Check out the codelabs.

00:08:21.700 --> 00:08:22.950
We have an OpenThread codelab.

00:08:22.950 --> 00:08:26.200
We have one with the camera
that integrates with TensorFlow.

00:08:26.200 --> 00:08:28.771
It's fun stuff that you can
do for the next two days.

00:08:28.771 --> 00:08:29.770
TIMOTHY JORDAN: Awesome.

00:08:29.770 --> 00:08:30.410
Thanks, Jesse.

00:08:30.410 --> 00:08:31.118
JESSE: Thank you.

00:08:31.118 --> 00:08:34.360
[MUSIC PLAYING]

