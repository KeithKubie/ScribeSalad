WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.664
[MUSIC PLAYING]

00:00:05.040 --> 00:00:07.000
CLAYTON WILKINSON: Hello.

00:00:07.000 --> 00:00:08.440
My name's Clayton Wilkinson.

00:00:08.440 --> 00:00:12.430
I work in developer relations
with games and Daydream.

00:00:12.430 --> 00:00:14.440
And one of the
things I remember,

00:00:14.440 --> 00:00:17.790
growing up as a child, was going
to the Air and Space Museum.

00:00:17.790 --> 00:00:20.560
And they'd just opened
up a new movie theater,

00:00:20.560 --> 00:00:23.560
and they were playing this
movie called "The Fly."

00:00:23.560 --> 00:00:26.380
And it was a small
theater, really steep.

00:00:26.380 --> 00:00:31.210
But when the balloon took off
and they went over this cliff,

00:00:31.210 --> 00:00:34.300
then the whole screen
opened up into IMAX,

00:00:34.300 --> 00:00:36.440
and I was just blown away.

00:00:36.440 --> 00:00:38.230
And what really
excites me now is

00:00:38.230 --> 00:00:41.080
I can take these
types of experiences

00:00:41.080 --> 00:00:44.290
and make them a Daydream and
bring them to other people.

00:00:44.290 --> 00:00:47.620
So I want to go over
a few things here

00:00:47.620 --> 00:00:49.590
that will help you
make your own Daydream

00:00:49.590 --> 00:00:50.810
applications for video.

00:00:53.500 --> 00:00:55.550
So, we're going to walk
through three things.

00:00:55.550 --> 00:00:57.700
The first one will be
some design considerations

00:00:57.700 --> 00:00:58.680
with Daydream.

00:00:58.680 --> 00:01:01.580
It's a little different
than a normal mobile app.

00:01:01.580 --> 00:01:05.830
The second one, we'll go over
video quality and what makes

00:01:05.830 --> 00:01:07.960
video good what makes it bad.

00:01:07.960 --> 00:01:11.110
And finally, Unity, which
is a really great tool

00:01:11.110 --> 00:01:12.760
for making Daydream apps.

00:01:12.760 --> 00:01:17.980
And then also some components
we've made to really jumpstart

00:01:17.980 --> 00:01:19.727
your application development.

00:01:23.070 --> 00:01:24.590
So, VR is a little
bit different.

00:01:24.590 --> 00:01:27.770
You've probably heard some
of these things before.

00:01:27.770 --> 00:01:30.680
It's designed to bring a
new reality to people--

00:01:30.680 --> 00:01:33.870
to give them a new experience.

00:01:33.870 --> 00:01:35.840
The sessions are a
little bit longer.

00:01:35.840 --> 00:01:38.000
You've got 40 minutes--
maybe longer--

00:01:38.000 --> 00:01:39.860
of sitting in a relaxed spot.

00:01:39.860 --> 00:01:41.420
You're not walking around.

00:01:41.420 --> 00:01:44.000
You're not sitting
in a conference.

00:01:44.000 --> 00:01:46.910
You're really focused
on the application.

00:01:46.910 --> 00:01:48.710
So you've got to take
that into account.

00:01:52.410 --> 00:01:55.460
And if you think about
the range of motion,

00:01:55.460 --> 00:01:57.950
you have about 70
degrees to work with.

00:01:57.950 --> 00:02:00.620
It's about 30 degrees from
either side, comfortably.

00:02:00.620 --> 00:02:02.020
If you really want the user--

00:02:02.020 --> 00:02:04.720
they can stretch, maybe
rotate their shoulders--

00:02:04.720 --> 00:02:09.320
and they can see 80 degrees
either side pretty comfortably,

00:02:09.320 --> 00:02:10.880
but it's still a stretch.

00:02:10.880 --> 00:02:15.020
So we want to keep the main
focus of the application really

00:02:15.020 --> 00:02:16.895
there in the front,
in that 70 degrees.

00:02:21.030 --> 00:02:23.580
And in terms of
distance, you really

00:02:23.580 --> 00:02:26.430
want to be somewhere
between half a meter

00:02:26.430 --> 00:02:27.590
and 20 meters away.

00:02:27.590 --> 00:02:31.140
That's kind of the virtual
distance you want to work with.

00:02:31.140 --> 00:02:33.240
Anything that's up
close, you really

00:02:33.240 --> 00:02:36.360
end up straining your eyes--
maybe crossing your eyes--

00:02:36.360 --> 00:02:37.770
to try to focus on that.

00:02:37.770 --> 00:02:40.740
And far away, it really
turns into something flat.

00:02:40.740 --> 00:02:42.330
There's not a lot
of depth perception.

00:02:46.120 --> 00:02:47.950
And speaking of
depth perception,

00:02:47.950 --> 00:02:50.260
you really want to
have some texture

00:02:50.260 --> 00:02:53.030
and shadow in your environment.

00:02:53.030 --> 00:02:54.910
So you can see here,
before the texture was

00:02:54.910 --> 00:02:58.150
added to these squares, they
just kind of looked like blobs.

00:02:58.150 --> 00:03:00.160
But now that we've
added a little texture

00:03:00.160 --> 00:03:03.250
and a little shadow, you can see
that there's really three boxes

00:03:03.250 --> 00:03:04.670
and circles moving around them.

00:03:09.870 --> 00:03:11.957
So, all these
mechanics are good.

00:03:11.957 --> 00:03:14.040
But you really need to
think about the environment

00:03:14.040 --> 00:03:15.820
that you're in.

00:03:15.820 --> 00:03:17.642
So, you want to
convey some presence.

00:03:17.642 --> 00:03:18.975
You want to take them somewhere.

00:03:18.975 --> 00:03:21.000
And if you look
at this screen, it

00:03:21.000 --> 00:03:23.430
would be a great screen for
maybe a web page or something.

00:03:23.430 --> 00:03:24.990
It's a little plain.

00:03:24.990 --> 00:03:26.670
But it really doesn't
convey anything.

00:03:30.190 --> 00:03:32.830
And something I see a
lot of-- and I do a lot

00:03:32.830 --> 00:03:34.240
of in my prototypes--

00:03:34.240 --> 00:03:36.940
we're all guilty of it-- is
kind of these void spaces.

00:03:36.940 --> 00:03:41.320
So, you make the space and
then an infinite plane.

00:03:41.320 --> 00:03:44.270
And you put your content
in it and throw it there.

00:03:44.270 --> 00:03:45.010
And it's fast.

00:03:45.010 --> 00:03:46.680
It renders very quickly.

00:03:46.680 --> 00:03:49.480
It gives you that
sense of VR-ness.

00:03:49.480 --> 00:03:52.090
But it really doesn't
take you anywhere.

00:03:52.090 --> 00:03:53.230
It's not very memorable.

00:03:53.230 --> 00:03:55.570
So you really miss
this opportunity

00:03:55.570 --> 00:03:57.820
to make something memorable
in your application.

00:04:01.350 --> 00:04:03.500
So if you look at the
Daydream home screen,

00:04:03.500 --> 00:04:05.174
it does a really
good job of this.

00:04:05.174 --> 00:04:06.590
It's got some
environment that you

00:04:06.590 --> 00:04:09.110
can look at-- things to
focus on-- you kind of follow

00:04:09.110 --> 00:04:11.900
that water into the
center of the screen.

00:04:11.900 --> 00:04:13.970
And then you have your content.

00:04:13.970 --> 00:04:17.240
So, this is really to focus
your attention on the content.

00:04:20.690 --> 00:04:22.990
Then you can do
something even crazy,

00:04:22.990 --> 00:04:27.530
like this example here where
we've taken the same content

00:04:27.530 --> 00:04:30.460
but we've kind of integrated
it into the environment.

00:04:30.460 --> 00:04:33.190
So, you've got the
rock there that is

00:04:33.190 --> 00:04:35.190
framing the menu at the bottom.

00:04:35.190 --> 00:04:38.400
Then you've got this sunlight
coming through the trees that's

00:04:38.400 --> 00:04:40.510
kind of a spotlight
on your content

00:04:40.510 --> 00:04:43.760
to really focus the eyes there.

00:04:43.760 --> 00:04:46.300
The challenge here,
though, is this really

00:04:46.300 --> 00:04:49.180
is hard to do if you're going
to move the content at all.

00:04:49.180 --> 00:04:51.340
So, you don't want to
move the menu back,

00:04:51.340 --> 00:04:55.040
for example, into the rock or
you've got to move the rock.

00:04:55.040 --> 00:04:56.980
And it gets really complex.

00:04:56.980 --> 00:05:00.120
So this is kind of
the very extreme case.

00:05:00.120 --> 00:05:03.430
If you can do this,
fantastic, but you normally

00:05:03.430 --> 00:05:05.270
end up with some compromises.

00:05:10.710 --> 00:05:13.730
So, you can make a great
environment and great presence

00:05:13.730 --> 00:05:15.480
of your app.

00:05:15.480 --> 00:05:18.170
But you really need
to have great video

00:05:18.170 --> 00:05:19.626
to have a great video app.

00:05:22.890 --> 00:05:25.630
And the first thing when we
talk about quality of video

00:05:25.630 --> 00:05:27.130
is resolution.

00:05:27.130 --> 00:05:29.260
So this is the number
of pixels or the number

00:05:29.260 --> 00:05:33.740
of samples in the frame
that we're looking at.

00:05:33.740 --> 00:05:38.050
And as you can see, there's a
wide range from the very low

00:05:38.050 --> 00:05:40.390
definition-- so maybe these
are things that show up

00:05:40.390 --> 00:05:44.410
on television or on
little game devices--

00:05:44.410 --> 00:05:46.870
all the way up to 4K, which
is kind of the cutting

00:05:46.870 --> 00:05:50.500
edge of what you can find
both on mobile devices

00:05:50.500 --> 00:05:52.660
and televisions today.

00:05:52.660 --> 00:05:55.390
And these are the kind of
proportional relationships

00:05:55.390 --> 00:05:58.460
that's not to scale, but
relative to each other

00:05:58.460 --> 00:05:59.780
they're scaled.

00:05:59.780 --> 00:06:03.060
And there's a lot more bits to
move as you get into the higher

00:06:03.060 --> 00:06:03.562
resolutions.

00:06:03.562 --> 00:06:05.020
And you've got to
think about that,

00:06:05.020 --> 00:06:06.551
because it's going
to take more CPU.

00:06:06.551 --> 00:06:08.800
It's going to take more time,
more bandwidth if you're

00:06:08.800 --> 00:06:11.080
streaming, and you have
to be aware of that.

00:06:11.080 --> 00:06:13.750
So you want to balance
your resolution

00:06:13.750 --> 00:06:17.530
to the quality of the
content that you're sending.

00:06:21.314 --> 00:06:22.730
Now when we talk
about resolution,

00:06:22.730 --> 00:06:26.990
usually you hear numbers
like 1080p or 720i.

00:06:26.990 --> 00:06:31.130
And this is what those
p's and i's mean.

00:06:31.130 --> 00:06:32.960
So you've got progressive.

00:06:32.960 --> 00:06:36.110
Means that every
single line is shown.

00:06:36.110 --> 00:06:38.630
And you've get a
complete picture.

00:06:38.630 --> 00:06:42.020
Where interlaced is
every other line.

00:06:42.020 --> 00:06:45.050
And this allows a trick
that-- in a movie,

00:06:45.050 --> 00:06:47.930
where half the lines are
sent the first frame.

00:06:47.930 --> 00:06:50.780
In the subsequent frame,
the second half is sent.

00:06:50.780 --> 00:06:53.450
So you can have a
very large resolution

00:06:53.450 --> 00:06:56.130
and only use half
the bits every frame.

00:06:56.130 --> 00:06:59.360
So this gives you an
advantage of bit rate.

00:06:59.360 --> 00:07:04.490
The price of it is the
quality of the video.

00:07:04.490 --> 00:07:06.470
It can be a little bit softer.

00:07:06.470 --> 00:07:07.964
Maybe motion is blurry.

00:07:07.964 --> 00:07:09.380
So you want to be
aware, if you're

00:07:09.380 --> 00:07:12.140
going to use an
interlaced video,

00:07:12.140 --> 00:07:15.465
that you've got slow motion
and kind of a soft picture.

00:07:20.510 --> 00:07:25.290
Also, with the capturing of the
video, you've got aspect ratio.

00:07:25.290 --> 00:07:28.280
And aspect ratio is that--
the ratio of the width

00:07:28.280 --> 00:07:30.485
to the height of the screen.

00:07:30.485 --> 00:07:33.110
And you want to make sure that,
when you present the video back

00:07:33.110 --> 00:07:36.650
to the user, you're
aware of the aspect

00:07:36.650 --> 00:07:38.377
ratio it was captured with.

00:07:38.377 --> 00:07:39.710
If not, you'll see what happens.

00:07:39.710 --> 00:07:41.270
Like here, we've
got a four by three,

00:07:41.270 --> 00:07:42.920
which is kind of a
standard definition

00:07:42.920 --> 00:07:46.670
ratio shown on an HD screen.

00:07:46.670 --> 00:07:49.710
And so it stretches it out,
and it looks kind of weird.

00:07:55.700 --> 00:07:59.730
Also in VR, we have the
opportunity to do 360 degrees.

00:07:59.730 --> 00:08:00.720
So this is fantastic.

00:08:00.720 --> 00:08:03.136
You can take a picture-- and
I've seen some people holding

00:08:03.136 --> 00:08:06.130
them up in the cameras and
walking around outside also--

00:08:06.130 --> 00:08:09.120
and you get these spherical
views of the world.

00:08:09.120 --> 00:08:11.960
So here's one I took on top
of our San Francisco office

00:08:11.960 --> 00:08:13.370
one day.

00:08:13.370 --> 00:08:15.680
And you can kind of see,
the middle part of it

00:08:15.680 --> 00:08:17.090
looks pretty normal.

00:08:17.090 --> 00:08:19.790
But as you get to the top
and bottom of the image,

00:08:19.790 --> 00:08:21.910
it gets really stretched out.

00:08:21.910 --> 00:08:24.410
And so you have to be
aware of what projection

00:08:24.410 --> 00:08:27.110
was used by the
camera so that you

00:08:27.110 --> 00:08:31.820
can show the same projection
when you render it.

00:08:31.820 --> 00:08:37.220
So the most common one is called
the equirectangular projection.

00:08:37.220 --> 00:08:40.159
And this is where it kind
of unfolds the sphere

00:08:40.159 --> 00:08:43.130
into a rectangle, and
stretching the top

00:08:43.130 --> 00:08:46.860
of the sphere along the top of
the rectangle and the bottom.

00:08:46.860 --> 00:08:51.620
So the poles get very
distorted and the middle part

00:08:51.620 --> 00:08:53.260
is very clear.

00:08:53.260 --> 00:08:55.010
And so you can see,
once I put it back

00:08:55.010 --> 00:08:57.547
on the inside of the sphere,
the distortion goes away

00:08:57.547 --> 00:08:59.380
and you can see the Bay
Bridge very clearly.

00:09:04.820 --> 00:09:06.720
You can also do stereo vision.

00:09:06.720 --> 00:09:09.290
So, you've all
been to 3-D movies

00:09:09.290 --> 00:09:11.720
where they do polarized views.

00:09:11.720 --> 00:09:15.980
Well, you can also do
stereo projections in VR

00:09:15.980 --> 00:09:18.462
where you've got two
separate images for each eye.

00:09:18.462 --> 00:09:20.420
Maybe the left side is
on top of the right eye,

00:09:20.420 --> 00:09:21.870
like in this example.

00:09:21.870 --> 00:09:24.590
And here, each of
them are slightly

00:09:24.590 --> 00:09:26.150
different-- slightly
offset-- so when

00:09:26.150 --> 00:09:28.580
you show them side by
side, your eyes see

00:09:28.580 --> 00:09:30.830
the difference in
depth perception

00:09:30.830 --> 00:09:32.594
and it looks stereoscopic.

00:09:38.290 --> 00:09:42.790
So, all of this was about the
dimensions and the resolution

00:09:42.790 --> 00:09:45.240
aspect ratios of a single frame.

00:09:45.240 --> 00:09:49.387
But when you look at a movie,
it's made up of lots of frames.

00:09:49.387 --> 00:09:51.220
And that's called the
frame rate, of course.

00:09:51.220 --> 00:09:53.830
And so here are
all the frame rates

00:09:53.830 --> 00:09:56.350
that you'll probably
ever encounter.

00:09:56.350 --> 00:09:58.630
And as you can see,
it's a long list.

00:09:58.630 --> 00:10:02.170
And there's no right frame
rate or wrong frame rate.

00:10:02.170 --> 00:10:05.110
It mostly has to do
with the capturing.

00:10:05.110 --> 00:10:08.140
So at the bottom, it's
typically like a standard movie

00:10:08.140 --> 00:10:09.010
would be--

00:10:09.010 --> 00:10:12.620
24 frames per second,
something like that.

00:10:12.620 --> 00:10:15.700
In television, it tends
to be around 29.97,

00:10:15.700 --> 00:10:18.730
or 30 if you're in Europe.

00:10:18.730 --> 00:10:21.640
And then specialized HD
cameras, digital cameras,

00:10:21.640 --> 00:10:23.890
tend to get up into
the higher frame rates.

00:10:23.890 --> 00:10:25.900
And this is important
to understand

00:10:25.900 --> 00:10:27.145
when you're playing back.

00:10:27.145 --> 00:10:28.520
Because if you're
playing it back

00:10:28.520 --> 00:10:31.380
too slowly-- if you've
captured a very fast frame rate

00:10:31.380 --> 00:10:33.520
and you're playing it
slowly, it might look jerky

00:10:33.520 --> 00:10:35.610
because you're skipping frames.

00:10:35.610 --> 00:10:37.782
And alternatively, if
you've got a low capture,

00:10:37.782 --> 00:10:39.490
you're never going to
be able to speed it

00:10:39.490 --> 00:10:41.500
up faster than that
capture rate and have

00:10:41.500 --> 00:10:43.275
any appreciable
improvement in quality.

00:10:49.410 --> 00:10:51.600
So now that we've got
multiple frames coming

00:10:51.600 --> 00:10:54.660
at us, different
resolutions, we want

00:10:54.660 --> 00:10:57.270
to be able to do
things with that.

00:10:57.270 --> 00:11:00.030
We need to read it, process
it, decode it, put it

00:11:00.030 --> 00:11:01.470
on the screen.

00:11:01.470 --> 00:11:04.430
Maybe we're downloading
it from a server.

00:11:04.430 --> 00:11:06.470
And so we talk about bit rate.

00:11:06.470 --> 00:11:09.060
And this is where the--

00:11:09.060 --> 00:11:11.760
they call them
encoders or codecs--

00:11:11.760 --> 00:11:12.670
come into play.

00:11:12.670 --> 00:11:18.030
So a very common one
is the h.263 encoder.

00:11:18.030 --> 00:11:21.250
And that's found on
almost every device now.

00:11:21.250 --> 00:11:24.000
And they're usually
implemented in hardware.

00:11:24.000 --> 00:11:28.560
The h.265 encoder
is coming, and it

00:11:28.560 --> 00:11:31.620
will be on more modern devices
and it's much more efficient

00:11:31.620 --> 00:11:33.520
at this compression.

00:11:33.520 --> 00:11:34.650
So you can see--

00:11:34.650 --> 00:11:39.090
these are the recommended
data rates for h.264

00:11:39.090 --> 00:11:40.925
for the different resolutions.

00:11:40.925 --> 00:11:45.300
And so you can imagine trying
to push 40 megabits a second

00:11:45.300 --> 00:11:47.295
over a crowded
Wi-Fi connection--

00:11:47.295 --> 00:11:49.296
it might be a
little challenging.

00:11:49.296 --> 00:11:50.670
So you may have
to scale it down,

00:11:50.670 --> 00:11:52.320
if that's your
environment, or you

00:11:52.320 --> 00:11:55.950
may need to be aware of that
and not do a lot of processing

00:11:55.950 --> 00:11:58.705
around the video if you have
special effects and things

00:11:58.705 --> 00:11:59.205
like that.

00:12:04.190 --> 00:12:06.040
So, let's talk about Daydream.

00:12:06.040 --> 00:12:09.410
If you look at the Android
standard specification,

00:12:09.410 --> 00:12:12.100
this is what we say to vendors--

00:12:12.100 --> 00:12:14.860
that if you want to be Daydream
ready, these are the things

00:12:14.860 --> 00:12:18.955
you need to support
in your device.

00:12:18.955 --> 00:12:24.490
And so h.264, of
course, is there at 4K.

00:12:24.490 --> 00:12:27.820
So the maximum resolution
we really can get

00:12:27.820 --> 00:12:32.230
is 4K at 30 frames
per second with 40

00:12:32.230 --> 00:12:34.420
megabits per second transfer.

00:12:34.420 --> 00:12:37.400
So this allows them to
measure how much CPU

00:12:37.400 --> 00:12:42.580
is needed to actually
get the video decoded

00:12:42.580 --> 00:12:44.800
and on the screen.

00:12:44.800 --> 00:12:47.650
And then we also ask for 265.

00:12:47.650 --> 00:12:50.110
So, it's so much more
efficient that you

00:12:50.110 --> 00:12:55.140
should be able to get the
1080p at the same frame rate,

00:12:55.140 --> 00:12:59.590
but a quarter of the data rate
because 265 is that much more

00:12:59.590 --> 00:13:00.730
efficient.

00:13:00.730 --> 00:13:02.740
So equivalently
we're saying, here

00:13:02.740 --> 00:13:07.120
you can run four
1080p video streams

00:13:07.120 --> 00:13:10.600
at the same time
on the same device

00:13:10.600 --> 00:13:14.960
if you're using h.265 encoding.

00:13:14.960 --> 00:13:17.520
And you can see, the minimum
resolution that we want

00:13:17.520 --> 00:13:20.190
is that 1080p.

00:13:20.190 --> 00:13:22.990
But ideally, you've
got a higher resolution

00:13:22.990 --> 00:13:25.950
so you can get a much
nicer and richer view.

00:13:30.980 --> 00:13:33.080
So, when we talk about VR
It's a little different

00:13:33.080 --> 00:13:37.490
than just watching a
movie or a YouTube stream

00:13:37.490 --> 00:13:39.450
on your device in your hand.

00:13:39.450 --> 00:13:42.590
Since you're holding
it up in the viewer

00:13:42.590 --> 00:13:44.840
and you're looking at it
with, essentially, magnifying

00:13:44.840 --> 00:13:48.440
glasses, you want to be able
to have a really high quality

00:13:48.440 --> 00:13:51.290
image so you're not
really distracted

00:13:51.290 --> 00:13:56.430
by little imperfections in the
video and things like that.

00:13:56.430 --> 00:13:59.580
So, the minimum we recommend
for a monoscopic video--

00:13:59.580 --> 00:14:02.900
so where both eyes are
seeing the exact same image--

00:14:02.900 --> 00:14:03.570
is there.

00:14:03.570 --> 00:14:08.450
The 1080p, 30 frames per second
again, and about 16 megabits

00:14:08.450 --> 00:14:09.502
per second.

00:14:09.502 --> 00:14:10.710
So that's pretty comfortable.

00:14:10.710 --> 00:14:12.320
It's pretty easy to get that.

00:14:12.320 --> 00:14:15.470
But it gives you
a very nice image.

00:14:15.470 --> 00:14:19.386
And then if you're doing
360 or stereoscopic,

00:14:19.386 --> 00:14:21.760
there's really double the
amount of information you need.

00:14:21.760 --> 00:14:25.940
So, 360 degree with that
equirectangular projection--

00:14:25.940 --> 00:14:28.640
the majority of the
bits are not seen

00:14:28.640 --> 00:14:29.870
by the user at any one time.

00:14:29.870 --> 00:14:33.200
They're behind you
or off to the sides.

00:14:33.200 --> 00:14:35.420
So, we want to
double the resolution

00:14:35.420 --> 00:14:41.150
and really get up there to the
4K size, so that way half of it

00:14:41.150 --> 00:14:44.150
is shown in the eyes
and it looks very good.

00:14:47.450 --> 00:14:50.140
And you can see the difference,
really, of bit rate.

00:14:50.140 --> 00:14:54.680
So, it only went
to 24 not to 32,

00:14:54.680 --> 00:14:57.320
if there's any math
wizzes out there.

00:14:57.320 --> 00:14:58.990
And that's because
of this compression.

00:14:58.990 --> 00:15:01.310
So, the encoder-- as
it's compressing--

00:15:01.310 --> 00:15:04.060
will find repeating
sections of the frames.

00:15:04.060 --> 00:15:06.060
As you get larger, it's
all going to compress

00:15:06.060 --> 00:15:07.419
more effectively.

00:15:11.730 --> 00:15:13.430
So now, we've got a bit rate.

00:15:13.430 --> 00:15:17.690
We've got a file, like an
MPEG4 file or something.

00:15:17.690 --> 00:15:19.350
And we need to do
something with it.

00:15:19.350 --> 00:15:20.766
We need to get it
onto the device

00:15:20.766 --> 00:15:21.890
so we can actually show it.

00:15:25.249 --> 00:15:27.040
There's a couple
different ways to do that.

00:15:27.040 --> 00:15:29.250
The first way, of course,
is to download it.

00:15:29.250 --> 00:15:33.482
You could package it up into an
auxiliary file-- an OBB file--

00:15:33.482 --> 00:15:34.940
and download it
off the Play Store.

00:15:34.940 --> 00:15:40.080
Or you could put it on your own
server and download it there.

00:15:40.080 --> 00:15:42.780
So maybe you've got
sports highlights

00:15:42.780 --> 00:15:45.720
every week, or current
events in the news,

00:15:45.720 --> 00:15:49.200
and it just gets downloaded and
then they can play it offline.

00:15:49.200 --> 00:15:52.530
So this is great because if
you don't have connectivity all

00:15:52.530 --> 00:15:54.180
the time-- your user doesn't--

00:15:54.180 --> 00:15:56.250
they can download it
and then play it back

00:15:56.250 --> 00:15:57.600
whenever they want to.

00:15:57.600 --> 00:16:00.400
They don't need to be
connected to the internet.

00:16:00.400 --> 00:16:03.900
You're also easy to
encode these because you

00:16:03.900 --> 00:16:06.270
don't have to worry about
multiple resolutions

00:16:06.270 --> 00:16:10.700
and multiple data rates,
like if you were streaming.

00:16:10.700 --> 00:16:14.760
And you can have really
easy delivery, like I said.

00:16:14.760 --> 00:16:18.480
The downside is, you've got
to figure out what to send.

00:16:18.480 --> 00:16:21.030
So, you need to do
some catalog management

00:16:21.030 --> 00:16:23.640
and curate your list a
little bit more closely.

00:16:23.640 --> 00:16:26.130
You also need to have
a way to delete files

00:16:26.130 --> 00:16:27.494
that you're not using anymore.

00:16:27.494 --> 00:16:30.035
So after a year, you don't want
to fill up the user's device.

00:16:34.230 --> 00:16:37.830
On the streaming side-- we're
all pretty familiar with this--

00:16:37.830 --> 00:16:40.020
you know, YouTube streams.

00:16:40.020 --> 00:16:42.660
There's a couple other
companies out there that stream.

00:16:42.660 --> 00:16:46.140
And the great thing about it
is there's tons of content.

00:16:46.140 --> 00:16:49.020
You can have an internet
full of content,

00:16:49.020 --> 00:16:53.310
and just be able to select
it and then play it back.

00:16:53.310 --> 00:16:55.380
The user's not
expected to download

00:16:55.380 --> 00:16:56.820
anything they're not using.

00:16:56.820 --> 00:16:57.770
So they like it.

00:16:57.770 --> 00:17:01.710
It's really-- eat the
bandwidth as you use it

00:17:01.710 --> 00:17:03.980
type of model, which is great.

00:17:03.980 --> 00:17:06.869
And everyone seems to
understand how to use it.

00:17:06.869 --> 00:17:11.460
So they know how to get on, log
on, and start streaming video

00:17:11.460 --> 00:17:13.200
pretty easily.

00:17:13.200 --> 00:17:15.790
The downside is this
encoding problem.

00:17:15.790 --> 00:17:16.680
So as you saw--

00:17:16.680 --> 00:17:19.599
especially with larger,
high quality videos--

00:17:19.599 --> 00:17:23.099
the speed creates
a bit rate problem.

00:17:23.099 --> 00:17:27.990
And to be guaranteed a high
bandwidth connection on Wi-Fi

00:17:27.990 --> 00:17:30.360
sometimes can be challenging.

00:17:30.360 --> 00:17:34.790
So what you want to do is
encode at multiple bit rates.

00:17:34.790 --> 00:17:36.790
So you usually do that
by different resolutions.

00:17:36.790 --> 00:17:40.530
So you start with the 4K
stream for your best quality,

00:17:40.530 --> 00:17:44.000
and you go down to a
2K and maybe 1080p.

00:17:44.000 --> 00:17:46.470
And from there, you
use a server that's

00:17:46.470 --> 00:17:50.130
using something like the
dash or the HLS protocol

00:17:50.130 --> 00:17:52.960
to switch between these
different streams seamlessly.

00:17:52.960 --> 00:17:57.000
So the user may see a little
degrading of the quality.

00:17:57.000 --> 00:17:59.520
It gets a little fuzzy
for maybe a second.

00:17:59.520 --> 00:18:02.640
And then it will jump back up
as network conditions improve.

00:18:07.720 --> 00:18:09.970
So now, we've got all this
video and we've figured out

00:18:09.970 --> 00:18:12.420
how we're going to get
it there and all of that.

00:18:12.420 --> 00:18:14.760
We'll go ahead and look
a little bit at Unity.

00:18:14.760 --> 00:18:18.340
And not everyone's seen Unity.

00:18:18.340 --> 00:18:20.340
So the first thing
I wanted to do

00:18:20.340 --> 00:18:24.210
was just give a quick
tour of the Unity editor

00:18:24.210 --> 00:18:27.240
so as we talk about things,
you'll kind of understand.

00:18:27.240 --> 00:18:33.990
You lay out a 3DC here with
the hierarchy on the left.

00:18:33.990 --> 00:18:35.900
And like, for example,
here is the camera

00:18:35.900 --> 00:18:38.750
and you can see what
the camera sees.

00:18:38.750 --> 00:18:41.550
And you can set some properties
in this Property Inspector

00:18:41.550 --> 00:18:44.560
over here on the right.

00:18:44.560 --> 00:18:47.870
And in order to make
it Daydream capable,

00:18:47.870 --> 00:18:51.350
you have to turn
on the VR support.

00:18:51.350 --> 00:18:54.530
So you do that here on
the Android side by just

00:18:54.530 --> 00:18:56.600
checking this
little box and then

00:18:56.600 --> 00:18:58.100
selecting Daydream out of this.

00:19:00.915 --> 00:19:02.540
One of the important
things to remember

00:19:02.540 --> 00:19:05.630
is, when you're watching videos
it's going to be a long time.

00:19:05.630 --> 00:19:07.460
It's not just going to
be 30 or 40 minutes.

00:19:07.460 --> 00:19:09.620
It might be an
hour or two hours.

00:19:09.620 --> 00:19:12.500
So you really want to make sure
that that sustained performance

00:19:12.500 --> 00:19:13.360
mode is checked.

00:19:20.376 --> 00:19:21.500
So now, you've got a scene.

00:19:21.500 --> 00:19:23.460
You can add simple models to it.

00:19:23.460 --> 00:19:26.900
So here, built into Unity,
you can add cubes and planes

00:19:26.900 --> 00:19:29.170
and triangles and cylinders.

00:19:29.170 --> 00:19:30.410
And here's one.

00:19:30.410 --> 00:19:32.300
You can move them around.

00:19:32.300 --> 00:19:36.140
More complex things you would
build in a modeling tool,

00:19:36.140 --> 00:19:37.280
and you can import them.

00:19:41.120 --> 00:19:44.180
And we can also change
behaviors of the cubes.

00:19:44.180 --> 00:19:48.560
So here we can add
physical things to it.

00:19:48.560 --> 00:19:50.900
We can call a
component a rigid body,

00:19:50.900 --> 00:19:54.530
for example, which adds
mass and it interplays

00:19:54.530 --> 00:19:56.240
with the physics system.

00:19:56.240 --> 00:20:00.800
We can turn off the gravity
in VR mode, of course.

00:20:00.800 --> 00:20:02.390
And then we can
add custom scripts.

00:20:02.390 --> 00:20:04.139
And this is where the
application building

00:20:04.139 --> 00:20:07.970
comes in that will add
custom behaviors that you

00:20:07.970 --> 00:20:10.070
script in C Sharp.

00:20:10.070 --> 00:20:14.390
So here, we can make one called
Spin that will spin the cube.

00:20:14.390 --> 00:20:19.160
And you just-- here, when
the application starts,

00:20:19.160 --> 00:20:21.830
you would just grab
that rigid body

00:20:21.830 --> 00:20:26.210
and then call Add
Torque to this.

00:20:26.210 --> 00:20:30.260
And it will start
spinning the object here.

00:20:41.232 --> 00:20:42.190
That's pretty exciting.

00:20:47.530 --> 00:20:49.030
So here, to make
it more exciting we

00:20:49.030 --> 00:20:52.120
would take one of these 3D
models that we've built.

00:20:52.120 --> 00:20:54.100
So an environment, for example.

00:20:56.740 --> 00:21:00.010
And here is-- whoops.

00:21:00.010 --> 00:21:00.865
One too many clicks.

00:21:08.700 --> 00:21:11.510
So we can add these
prefabricated components.

00:21:11.510 --> 00:21:15.330
So these were made outside or in
a different instance of Unity.

00:21:15.330 --> 00:21:18.450
This particular one was a
room we made, and just kind of

00:21:18.450 --> 00:21:20.880
modeled some shapes on it
to give it a little bit

00:21:20.880 --> 00:21:21.771
different feel.

00:21:21.771 --> 00:21:23.770
And so, it gives it a
completely different feel.

00:21:23.770 --> 00:21:25.640
It's the exact same
program we just ran.

00:21:25.640 --> 00:21:27.510
And so you can
see the real power

00:21:27.510 --> 00:21:29.715
of getting that environment set.

00:21:36.860 --> 00:21:39.650
So here's kind of a block
diagram of everything

00:21:39.650 --> 00:21:41.650
that's involved
in that Unity app.

00:21:41.650 --> 00:21:44.540
So we've got Unity
itself there, which

00:21:44.540 --> 00:21:48.890
contains the scene, the 3D
models, the C Sharp script

00:21:48.890 --> 00:21:50.840
that you would write.

00:21:50.840 --> 00:21:55.800
We add to it also the
Google VR SDK, the GVR SDK,

00:21:55.800 --> 00:21:59.510
which you can download
from developers.google.com

00:21:59.510 --> 00:22:02.260
or from GitHub.

00:22:02.260 --> 00:22:06.250
And then part of this
is a video plugin

00:22:06.250 --> 00:22:10.240
that connects the exoplayer
plugin-- which, there

00:22:10.240 --> 00:22:11.660
was a talk yesterday about it.

00:22:11.660 --> 00:22:13.660
You could see it on YouTube
if you didn't see it

00:22:13.660 --> 00:22:14.890
and you're interested.

00:22:14.890 --> 00:22:16.840
There's also some
code labs about it.

00:22:16.840 --> 00:22:20.009
But this really wraps the
media services and Android

00:22:20.009 --> 00:22:21.550
into something that's
very digestible

00:22:21.550 --> 00:22:24.550
and customizable and
simple to work with.

00:22:26.150 --> 00:22:28.540
And then it also
handles communicating

00:22:28.540 --> 00:22:31.070
with the VR services that
are part of Android operating

00:22:31.070 --> 00:22:31.570
system.

00:22:34.840 --> 00:22:38.924
And these systems that
are part of Android

00:22:38.924 --> 00:22:40.340
handle these things
for you so you

00:22:40.340 --> 00:22:43.040
don't have to handle them
in your application code,

00:22:43.040 --> 00:22:45.360
or as you're drawing in Unity.

00:22:45.360 --> 00:22:48.260
Async reprojection
is this concept

00:22:48.260 --> 00:22:50.670
of being able to turn
your head very fast.

00:22:50.670 --> 00:22:54.770
And instead of trying to draw
a continuous stream as you're

00:22:54.770 --> 00:22:57.380
turning your head,
async reprojection

00:22:57.380 --> 00:23:00.680
can detect your head
motion and then draw

00:23:00.680 --> 00:23:03.580
the existing image
in the right place

00:23:03.580 --> 00:23:05.500
so, as you turn your
head to the right,

00:23:05.500 --> 00:23:07.220
it kind of moves
to the left and you

00:23:07.220 --> 00:23:10.920
don't get that nauseous
feeling like nothing's moving.

00:23:10.920 --> 00:23:14.290
It also handles lens distortion.

00:23:14.290 --> 00:23:17.030
So again, those
lenses in Daydream

00:23:17.030 --> 00:23:20.780
are essentially spherical
magnifying glasses.

00:23:20.780 --> 00:23:25.350
And we want to present
to that a distorted image

00:23:25.350 --> 00:23:29.060
so when it goes through the
lens it will be corrected.

00:23:29.060 --> 00:23:31.917
And this handles adding that
distortion automatically

00:23:31.917 --> 00:23:33.500
so you don't have
to do it every time.

00:23:35.370 --> 00:23:37.640
There's also support
for spatial audio.

00:23:37.640 --> 00:23:41.570
So this allows you to put
sounds in your 3-D model.

00:23:41.570 --> 00:23:43.880
And sounds will emanate
from behind you,

00:23:43.880 --> 00:23:47.110
and as you turn around you'll
be looking at the sound.

00:23:47.110 --> 00:23:51.860
And your ears and your eyes
will continue to be in sync

00:23:51.860 --> 00:23:55.130
and build that illusion of
being in a different place.

00:23:56.570 --> 00:23:58.430
And of course,
there's the mechanics

00:23:58.430 --> 00:24:01.370
of head tracking
and the controller.

00:24:05.240 --> 00:24:06.160
Exoplayer.

00:24:06.160 --> 00:24:08.720
This is a super simple model.

00:24:08.720 --> 00:24:11.040
And if you need to
know more about it,

00:24:11.040 --> 00:24:12.950
I would definitely
point you back

00:24:12.950 --> 00:24:17.630
to YouTube for yesterdays
talk, and the code lab

00:24:17.630 --> 00:24:22.730
that you can do in the code lab
area for today and tomorrow.

00:24:22.730 --> 00:24:26.390
And what this does is it
gives you a capability

00:24:26.390 --> 00:24:30.980
to customize each step in this
process of playing the video.

00:24:30.980 --> 00:24:33.080
So if you think about
a video itself--

00:24:33.080 --> 00:24:37.340
like maybe an MPEG4 or
a stream on a server,

00:24:37.340 --> 00:24:38.810
there's a data source.

00:24:38.810 --> 00:24:42.620
And that data source can be in
a variety of different formats.

00:24:42.620 --> 00:24:45.770
And then that needs to be
extracted into the decoder.

00:24:45.770 --> 00:24:48.230
And so the decoder is going
to take those bits that you

00:24:48.230 --> 00:24:51.280
got off the file or
off the internet,

00:24:51.280 --> 00:24:55.070
and it's going to decompress
them into a video stream,

00:24:55.070 --> 00:24:58.930
audio streams, maybe
closed captioning, and then

00:24:58.930 --> 00:25:02.860
feed that to the
exoplayer class itself.

00:25:02.860 --> 00:25:04.660
Now in the class
itself, it's going

00:25:04.660 --> 00:25:07.030
to handle buffering
because it's not

00:25:07.030 --> 00:25:10.690
going to be able to decode
as fast as it's playing back.

00:25:10.690 --> 00:25:13.520
So we usually do a
little bit ahead of time,

00:25:13.520 --> 00:25:15.910
and that way there's
plenty of data

00:25:15.910 --> 00:25:19.630
to consume as we're rendering.

00:25:19.630 --> 00:25:21.130
And then under
Application Control

00:25:21.130 --> 00:25:22.300
there's the track selector.

00:25:22.300 --> 00:25:24.310
And the track
selector says you want

00:25:24.310 --> 00:25:26.270
to show this video
and this audio.

00:25:26.270 --> 00:25:29.350
Maybe you have
multiple audio streams

00:25:29.350 --> 00:25:31.150
for different
languages, or maybe you

00:25:31.150 --> 00:25:34.090
have a stereo and
mono and you want

00:25:34.090 --> 00:25:36.320
to have different
selections for those,

00:25:36.320 --> 00:25:39.910
or different resolutions,
and you can select the tracks

00:25:39.910 --> 00:25:42.460
and show those
through the renderers.

00:25:42.460 --> 00:25:45.370
And the renderers are the thing
that actually draw or render

00:25:45.370 --> 00:25:45.870
sound.

00:25:50.300 --> 00:25:53.120
So there's a lot of
moving parts to this,

00:25:53.120 --> 00:25:56.000
and it can be kind
of overwhelming

00:25:56.000 --> 00:25:59.510
as we found as we started
building some of these samples

00:25:59.510 --> 00:26:01.100
for Daydream.

00:26:01.100 --> 00:26:03.110
So we decided to
bundle them together

00:26:03.110 --> 00:26:05.160
into a media app template.

00:26:05.160 --> 00:26:08.332
And this template will be
available on GitHub shortly.

00:26:08.332 --> 00:26:10.790
I don't think it's there today,
but it should be very soon.

00:26:12.330 --> 00:26:14.760
And this gives you the
Unity building blocks,

00:26:14.760 --> 00:26:17.450
these prefab models
and scripts that

00:26:17.450 --> 00:26:21.530
will allow you to really
jumpstart your application

00:26:21.530 --> 00:26:25.460
and you can focus on delivering
a great experience to the user

00:26:25.460 --> 00:26:26.960
rather than how to decode video.

00:26:31.260 --> 00:26:33.150
So the first thing
we've added to it

00:26:33.150 --> 00:26:37.380
is a selection system with
breadcrumb navigation.

00:26:37.380 --> 00:26:39.330
So you've got a
series of folders,

00:26:39.330 --> 00:26:41.960
and you can make
your own categories

00:26:41.960 --> 00:26:44.460
and put videos in them.

00:26:44.460 --> 00:26:47.050
And then you can navigate
up and down the hierarchy.

00:26:53.030 --> 00:26:56.030
Another thing we did
was add this capability

00:26:56.030 --> 00:26:59.930
of not only showing the video,
but sampling it and creating

00:26:59.930 --> 00:27:02.780
a light source in Unity
that's representative

00:27:02.780 --> 00:27:05.720
of the video frame that's
being shown at that time.

00:27:05.720 --> 00:27:08.090
So you get this nice
admissive effect

00:27:08.090 --> 00:27:10.970
from the video, like
I'm low from the screen

00:27:10.970 --> 00:27:12.890
or the television
or whatever it is.

00:27:12.890 --> 00:27:19.357
And it adds really a sense of
warmth and being to the screen.

00:27:19.357 --> 00:27:20.690
It feels like it's really there.

00:27:25.500 --> 00:27:27.180
We also found that
not everyone likes

00:27:27.180 --> 00:27:31.350
to sit in the front row
at a movie theater--

00:27:31.350 --> 00:27:33.010
or in the back row.

00:27:33.010 --> 00:27:36.400
So we allow zooming of it.

00:27:36.400 --> 00:27:39.690
And you can see this also in
the YouTube Daydream app, where

00:27:39.690 --> 00:27:42.900
it allows you to actually move
the screen in and out to where

00:27:42.900 --> 00:27:45.885
it's at a comfortable
position for you to view.

00:27:45.885 --> 00:27:47.730
And it makes a really
big difference.

00:27:47.730 --> 00:27:50.860
When you're trying to sit there
and watch a movie for an hour,

00:27:50.860 --> 00:27:52.485
you want to be
comfortable and relaxed.

00:27:56.615 --> 00:27:57.990
And being comfortable
and relaxed

00:27:57.990 --> 00:27:59.520
doesn't always mean being level.

00:27:59.520 --> 00:28:01.380
So Daydream always
wants the horizon

00:28:01.380 --> 00:28:03.960
to be level and straight ahead.

00:28:03.960 --> 00:28:07.720
And this allows you
to tilt the screen.

00:28:07.720 --> 00:28:09.900
So if you're leaning
back in your chair

00:28:09.900 --> 00:28:12.450
or you're lying on your bed,
you can move the screen up

00:28:12.450 --> 00:28:14.280
and you don't have
to crane your neck

00:28:14.280 --> 00:28:17.230
to look down at the screen.

00:28:17.230 --> 00:28:19.260
So again, this is
another comfort thing.

00:28:23.400 --> 00:28:25.254
And also, 360 repositioning.

00:28:25.254 --> 00:28:26.670
So I don't know
how many of you've

00:28:26.670 --> 00:28:32.490
tried to look at a 360 video
or even image in Daydream,

00:28:32.490 --> 00:28:33.720
but it seems like--

00:28:33.720 --> 00:28:35.430
at least for me, always--

00:28:35.430 --> 00:28:38.400
I pick it up and the main thing
I'm supposed to be looking at

00:28:38.400 --> 00:28:39.600
is over there.

00:28:39.600 --> 00:28:41.791
And so I end up looking around.

00:28:41.791 --> 00:28:42.540
And it's like, oh.

00:28:42.540 --> 00:28:43.290
There it is.

00:28:43.290 --> 00:28:44.670
Now I can look at it.

00:28:44.670 --> 00:28:47.910
So this allows you to pick
it up and move it back

00:28:47.910 --> 00:28:51.150
into your center, so you can
be comfortably seated again

00:28:51.150 --> 00:28:52.980
and the subject is
right in front of you.

00:28:58.300 --> 00:29:00.250
And of course,
playback controls.

00:29:00.250 --> 00:29:02.890
So you can spend a lot of
time making playback controls.

00:29:02.890 --> 00:29:06.770
We decided just to make some for
you and save you the headache.

00:29:13.410 --> 00:29:15.990
Now, we do a pretty good
job of looking at the stream

00:29:15.990 --> 00:29:18.870
when we're playing it back
and trying to determine

00:29:18.870 --> 00:29:19.950
what format it's in.

00:29:19.950 --> 00:29:22.590
So, make sure we get
the projection right.

00:29:22.590 --> 00:29:25.590
Aspect ratio can be adjusted.

00:29:25.590 --> 00:29:28.520
If it's stereoscopic,
is it side by side eyes?

00:29:28.520 --> 00:29:31.260
Is it top and bottom eyes?

00:29:31.260 --> 00:29:33.700
But sometimes we don't
choose right or maybe

00:29:33.700 --> 00:29:36.000
you just want to explore
and try different things.

00:29:36.000 --> 00:29:38.640
So you can do that here
by changing the projection

00:29:38.640 --> 00:29:39.740
manually as well.

00:29:48.650 --> 00:29:50.150
So, just to kind
of summarize what's

00:29:50.150 --> 00:29:52.190
in this media app template--

00:29:52.190 --> 00:29:54.440
it's really all
these prefabs here

00:29:54.440 --> 00:29:56.510
that you can pull into
your own projects,

00:29:56.510 --> 00:30:01.120
customize, and integrate
into your application.

00:30:01.120 --> 00:30:04.640
You've got the
breadcrumb in the title.

00:30:04.640 --> 00:30:07.360
You can tilt and zoom the
screen, which is great,

00:30:07.360 --> 00:30:08.727
and the playback controls.

00:30:08.727 --> 00:30:10.310
And of course, that
emissive lighting,

00:30:10.310 --> 00:30:12.670
which is really tricky
to get sometimes.

00:30:18.070 --> 00:30:20.100
To kind of wrap everything up--

00:30:20.100 --> 00:30:22.240
I know we've covered everything.

00:30:22.240 --> 00:30:24.760
And I just want to
have one checklist

00:30:24.760 --> 00:30:26.340
to cover these things.

00:30:26.340 --> 00:30:30.640
And you really want to keep
the user comfort first at hand.

00:30:30.640 --> 00:30:32.500
Having them sit in
a comfortable place

00:30:32.500 --> 00:30:34.360
and not have to move
their shoulders around

00:30:34.360 --> 00:30:37.750
or look up and down is going to
be make your app that much more

00:30:37.750 --> 00:30:38.850
enjoyable.

00:30:38.850 --> 00:30:40.870
And they'll go back and
play it again and again.

00:30:43.200 --> 00:30:46.440
You want to take the opportunity
to make a destination,

00:30:46.440 --> 00:30:48.480
a place that they can go.

00:30:48.480 --> 00:30:50.070
So when they think
about it, they'll

00:30:50.070 --> 00:30:54.150
go, oh, yeah, I want to watch
this video in the sports arena

00:30:54.150 --> 00:30:57.600
or whatever environment
you decide to make.

00:30:57.600 --> 00:30:59.460
And it gives them
something else to remember

00:30:59.460 --> 00:31:00.740
rather than that empty space.

00:31:03.750 --> 00:31:05.970
You want to spend some time
looking at your encoding

00:31:05.970 --> 00:31:08.880
as well, to make sure that
you're delivering the best

00:31:08.880 --> 00:31:11.220
quality video you
can possibly get

00:31:11.220 --> 00:31:14.760
in the constraints
of the application

00:31:14.760 --> 00:31:16.620
you're really targeting.

00:31:16.620 --> 00:31:18.780
If you're targeting
off line people,

00:31:18.780 --> 00:31:21.990
you want to target
downloading those things

00:31:21.990 --> 00:31:24.900
and having good encoding.

00:31:24.900 --> 00:31:26.550
If you're targeting
streaming people,

00:31:26.550 --> 00:31:30.690
then you have to encode
in these other bit rates

00:31:30.690 --> 00:31:32.992
to make sure that
everything can be switched

00:31:32.992 --> 00:31:34.200
depending on network quality.

00:31:37.610 --> 00:31:40.040
And you really want
to match as best

00:31:40.040 --> 00:31:42.980
you can what
information was used

00:31:42.980 --> 00:31:44.450
when they captured the video.

00:31:44.450 --> 00:31:45.740
So the aspect ratio--

00:31:45.740 --> 00:31:47.240
you don't want to
try to recalculate

00:31:47.240 --> 00:31:49.940
aspect ratio on the fly.

00:31:49.940 --> 00:31:54.230
Or if it's in the
equirectangular projection,

00:31:54.230 --> 00:31:56.300
you want to make sure
that your sphere is pretty

00:31:56.300 --> 00:31:58.160
close to the sphere they use.

00:31:58.160 --> 00:32:01.499
And that way, your
images look just as great

00:32:01.499 --> 00:32:03.040
as they were when
they were captured.

00:32:05.810 --> 00:32:07.770
And finally, delight your users.

00:32:07.770 --> 00:32:09.020
I mean, that's why we're here.

00:32:09.020 --> 00:32:11.210
We love to make great apps.

00:32:11.210 --> 00:32:15.140
And so make whatever
you do really enjoyable

00:32:15.140 --> 00:32:17.632
and think about how
they're going to use it--

00:32:17.632 --> 00:32:19.340
and would you use it
over and over again?

00:32:19.340 --> 00:32:21.590
Because if it's a
one time deal, great.

00:32:21.590 --> 00:32:22.284
That's fine.

00:32:22.284 --> 00:32:24.200
But you really want
something that they'll use

00:32:24.200 --> 00:32:25.408
over and over and over again.

00:32:29.678 --> 00:32:33.160
So here are some
links to get things.

00:32:33.160 --> 00:32:36.280
Definitely the
Daydream overview site

00:32:36.280 --> 00:32:39.010
is a good starting point,
where there's many more

00:32:39.010 --> 00:32:40.960
links to different samples.

00:32:40.960 --> 00:32:44.530
And these GitHub repos.

00:32:44.530 --> 00:32:48.260
And again, exoplayer is
very configurable and very,

00:32:48.260 --> 00:32:49.491
very powerful.

00:32:49.491 --> 00:32:51.490
I would suggest checking
out their site as well,

00:32:51.490 --> 00:32:55.600
as well as code labs,
and maybe they're talk.

00:32:55.600 --> 00:32:57.440
So, thanks for your
attention today.

00:32:57.440 --> 00:32:59.540
[APPLAUSE]

00:32:59.540 --> 00:33:04.390
[MUSIC PLAYING]

