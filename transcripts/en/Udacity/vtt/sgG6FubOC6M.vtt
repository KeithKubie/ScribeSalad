WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.700
Core data provides a set of classes that work together to manage your apps data layer.

00:00:05.700 --> 00:00:10.355
Together these classes are known as The Core Data Stack.

00:00:10.355 --> 00:00:16.850
The four parts of the stack are: one or more managed object context,

00:00:16.850 --> 00:00:19.170
the managed object model,

00:00:19.170 --> 00:00:22.125
the persistent store coordinator,

00:00:22.125 --> 00:00:24.720
and the persisting container.

00:00:24.720 --> 00:00:27.505
Let's look at each of these in turn.

00:00:27.505 --> 00:00:30.135
First, your app will have one or more managed

00:00:30.135 --> 00:00:36.780
object contexts which are instances of NS Managed Object Context.

00:00:36.780 --> 00:00:40.895
This is where we will work with notebooks and notes.

00:00:40.895 --> 00:00:42.390
These are managed objects,

00:00:42.390 --> 00:00:46.360
that is a subclass NS Managed Object.

00:00:46.360 --> 00:00:52.345
The context is a sort of scratch pad where we can create and manipulate them temporarily.

00:00:52.345 --> 00:00:59.045
When we're done we can either say the changes to the permanent store or roll them back.

00:00:59.045 --> 00:01:02.610
It's important to note that the changes that we make in the context aren't

00:01:02.610 --> 00:01:09.330
automatically saved to disk and don't automatically update the UI.

00:01:09.330 --> 00:01:11.565
Also note that working with managed objects

00:01:11.565 --> 00:01:14.565
is different from working with regular objects.

00:01:14.565 --> 00:01:18.510
You never instantiate a managed object directly.

00:01:18.510 --> 00:01:22.845
You always associate or register it with a context,

00:01:22.845 --> 00:01:29.250
so that the context can manage any changes and communicate them to the store on request.

00:01:29.250 --> 00:01:32.295
Contexts and their managed objects

00:01:32.295 --> 00:01:36.330
are the part of the stack that you'll interact with most.

00:01:36.330 --> 00:01:41.725
Next up is the managed object model or NS Managed Object Model.

00:01:41.725 --> 00:01:46.605
The managed object model describes your data structure and relationships.

00:01:46.605 --> 00:01:49.350
You'll usually define it using the data model editor,

00:01:49.350 --> 00:01:52.635
an Xcode, just as we did in the last lesson.

00:01:52.635 --> 00:01:57.576
That model gets saved as an xcdatamodeld file in your project

00:01:57.576 --> 00:02:04.260
and compile down to an momd file that loads into your app at runtime.

00:02:04.260 --> 00:02:09.920
Other parts of the stack will ask the model for information they need to do their work.

00:02:09.920 --> 00:02:13.120
Which brings us to the third part of the stack.

00:02:13.120 --> 00:02:18.615
The persistent store coordinator or NS Persistent Store Coordinator.

00:02:18.615 --> 00:02:23.840
The coordinator connects to one or more persistent stores and

00:02:23.840 --> 00:02:29.015
uses the model to mediate between those stores and the context.

00:02:29.015 --> 00:02:33.590
That is, it translates store records into managed objects,

00:02:33.590 --> 00:02:37.820
and managed objects into records.

00:02:37.820 --> 00:02:41.195
The coordinator speaks the language of the underlying store,

00:02:41.195 --> 00:02:44.930
such as SQL, so that we don't have to.

00:02:44.930 --> 00:02:46.505
Last but not least,

00:02:46.505 --> 00:02:51.890
we have the persistent container or NS Persisting Container.

00:02:51.890 --> 00:02:53.240
It does two things.

00:02:53.240 --> 00:02:56.600
It helps us set up the rest of the stack and

00:02:56.600 --> 00:03:00.940
provides useful variables and methods for working with contacts.

00:03:00.940 --> 00:03:06.795
It was added in IoS 10 to reduce the amount of boilerplate required to set up the stack.

00:03:06.795 --> 00:03:10.220
And that's the core data stack.

00:03:10.220 --> 00:03:14.870
These four classes worked together to manage and persist the data layer.

00:03:14.870 --> 00:03:18.000
Let's set them up in Muskan.

