WEBVTT
Kind: captions
Language: en

00:00:00.580 --> 00:00:03.620
You know by now that
serving one single file for

00:00:03.620 --> 00:00:06.110
every context is not a good idea.

00:00:06.110 --> 00:00:08.560
&gt;&gt; Yeah, I mean, the image file
you would want to serve for

00:00:08.560 --> 00:00:12.030
a large display size on
a big high definition TV

00:00:12.030 --> 00:00:14.930
is totally inappropriate for
a watch, for example.

00:00:14.930 --> 00:00:18.220
So how do you serve the right image for

00:00:18.220 --> 00:00:21.800
every combination of device
capability and display size?

00:00:21.800 --> 00:00:25.400
In the last lesson, you learned some
techniques that use CSS background

00:00:25.400 --> 00:00:28.680
images in media queries to
display different images for

00:00:28.680 --> 00:00:30.470
different viewport sizes.

00:00:30.470 --> 00:00:34.760
That kind of works, but it was
pretty messy and difficult to debug.

00:00:34.760 --> 00:00:36.010
To do it properly,

00:00:36.010 --> 00:00:40.730
you potentially needed to write CSS to
handle umpteen different use cases.

00:00:40.730 --> 00:00:42.180
And what about the future?

00:00:42.180 --> 00:00:46.790
What if all your fancy media queries
don't support some future platform?

00:00:46.790 --> 00:00:50.220
&gt;&gt; Yeah, I mean, using media
queries like this is an attempt to

00:00:50.220 --> 00:00:55.200
guess at build time what image
file will be best at run time.

00:00:55.200 --> 00:00:58.490
You're forcing image choice on the
browser rather than giving the browser

00:00:58.490 --> 00:01:01.720
information to make
the best choice possible.

00:01:01.720 --> 00:01:05.250
The other problem with media queries
is that they only refer to the viewport

00:01:05.250 --> 00:01:08.720
dimensions, not the actual
display size of the image.

00:01:08.720 --> 00:01:12.320
What if you give your image
a percentage width, say I don't know,

00:01:12.320 --> 00:01:13.690
50% of the viewport width.

00:01:13.690 --> 00:01:15.190
Media queries won't help.

