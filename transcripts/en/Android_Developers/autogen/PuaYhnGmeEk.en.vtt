WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.480
 
a nightmare for any Android developer

00:00:02.480 --> 00:00:02.490
a nightmare for any Android developer
 

00:00:02.490 --> 00:00:04.550
a nightmare for any Android developer
involves losing their app signing key or

00:00:04.550 --> 00:00:04.560
involves losing their app signing key or
 

00:00:04.560 --> 00:00:06.639
involves losing their app signing key or
having their app signing key compromised

00:00:06.639 --> 00:00:06.649
having their app signing key compromised
 

00:00:06.649 --> 00:00:08.660
having their app signing key compromised
losing this key prevents you from

00:00:08.660 --> 00:00:08.670
losing this key prevents you from
 

00:00:08.670 --> 00:00:10.640
losing this key prevents you from
updating your published app while a

00:00:10.640 --> 00:00:10.650
updating your published app while a
 

00:00:10.650 --> 00:00:12.259
updating your published app while a
compromised key allows others to

00:00:12.259 --> 00:00:12.269
compromised key allows others to
 

00:00:12.269 --> 00:00:14.270
compromised key allows others to
potentially leverage your identity for

00:00:14.270 --> 00:00:14.280
potentially leverage your identity for
 

00:00:14.280 --> 00:00:16.849
potentially leverage your identity for
malicious intent since the security

00:00:16.849 --> 00:00:16.859
malicious intent since the security
 

00:00:16.859 --> 00:00:19.130
malicious intent since the security
provided by this signature is integrated

00:00:19.130 --> 00:00:19.140
provided by this signature is integrated
 

00:00:19.140 --> 00:00:21.260
provided by this signature is integrated
into the Android platform once the key

00:00:21.260 --> 00:00:21.270
into the Android platform once the key
 

00:00:21.270 --> 00:00:24.320
into the Android platform once the key
is lost little can be done that means

00:00:24.320 --> 00:00:24.330
is lost little can be done that means
 

00:00:24.330 --> 00:00:25.820
is lost little can be done that means
that developers have traditionally been

00:00:25.820 --> 00:00:25.830
that developers have traditionally been
 

00:00:25.830 --> 00:00:27.560
that developers have traditionally been
responsible for keeping their private

00:00:27.560 --> 00:00:27.570
responsible for keeping their private
 

00:00:27.570 --> 00:00:30.890
responsible for keeping their private
signing key both safe and accessible but

00:00:30.890 --> 00:00:30.900
signing key both safe and accessible but
 

00:00:30.900 --> 00:00:32.749
signing key both safe and accessible but
now you can let Google Play sign apps

00:00:32.749 --> 00:00:32.759
now you can let Google Play sign apps
 

00:00:32.759 --> 00:00:34.760
now you can let Google Play sign apps
and manage your keys for you in the

00:00:34.760 --> 00:00:34.770
and manage your keys for you in the
 

00:00:34.770 --> 00:00:36.860
and manage your keys for you in the
Google Play console let's go through the

00:00:36.860 --> 00:00:36.870
Google Play console let's go through the
 

00:00:36.870 --> 00:00:39.170
Google Play console let's go through the
app signing process with an existing app

00:00:39.170 --> 00:00:39.180
app signing process with an existing app
 

00:00:39.180 --> 00:00:41.690
app signing process with an existing app
after selecting one of your apps in the

00:00:41.690 --> 00:00:41.700
after selecting one of your apps in the
 

00:00:41.700 --> 00:00:43.880
after selecting one of your apps in the
Play Console app signing is available

00:00:43.880 --> 00:00:43.890
Play Console app signing is available
 

00:00:43.890 --> 00:00:45.290
Play Console app signing is available
under the release management tools

00:00:45.290 --> 00:00:45.300
under the release management tools
 

00:00:45.300 --> 00:00:47.750
under the release management tools
section after accepting the Terms of

00:00:47.750 --> 00:00:47.760
section after accepting the Terms of
 

00:00:47.760 --> 00:00:49.369
section after accepting the Terms of
Service you will see the app signing

00:00:49.369 --> 00:00:49.379
Service you will see the app signing
 

00:00:49.379 --> 00:00:51.290
Service you will see the app signing
page with details about how it works and

00:00:51.290 --> 00:00:51.300
page with details about how it works and
 

00:00:51.300 --> 00:00:53.180
page with details about how it works and
instructions on how to start using it

00:00:53.180 --> 00:00:53.190
instructions on how to start using it
 

00:00:53.190 --> 00:00:55.639
instructions on how to start using it
with your app if you store your key in a

00:00:55.639 --> 00:00:55.649
with your app if you store your key in a
 

00:00:55.649 --> 00:00:57.650
with your app if you store your key in a
Java key store the first step is to

00:00:57.650 --> 00:00:57.660
Java key store the first step is to
 

00:00:57.660 --> 00:01:00.799
Java key store the first step is to
download the PE PK tool you use the PE

00:01:00.799 --> 00:01:00.809
download the PE PK tool you use the PE
 

00:01:00.809 --> 00:01:03.020
download the PE PK tool you use the PE
PK tool along with the command given in

00:01:03.020 --> 00:01:03.030
PK tool along with the command given in
 

00:01:03.030 --> 00:01:04.789
PK tool along with the command given in
the Play console to create an encrypted

00:01:04.789 --> 00:01:04.799
the Play console to create an encrypted
 

00:01:04.799 --> 00:01:06.980
the Play console to create an encrypted
version of your signing key if you

00:01:06.980 --> 00:01:06.990
version of your signing key if you
 

00:01:06.990 --> 00:01:09.050
version of your signing key if you
aren't using a Java key store we also

00:01:09.050 --> 00:01:09.060
aren't using a Java key store we also
 

00:01:09.060 --> 00:01:10.460
aren't using a Java key store we also
have instructions for how to encrypt

00:01:10.460 --> 00:01:10.470
have instructions for how to encrypt
 

00:01:10.470 --> 00:01:12.289
have instructions for how to encrypt
your signing key from a plaintext PEM

00:01:12.289 --> 00:01:12.299
your signing key from a plaintext PEM
 

00:01:12.299 --> 00:01:14.750
your signing key from a plaintext PEM
file then you upload the encrypted key

00:01:14.750 --> 00:01:14.760
file then you upload the encrypted key
 

00:01:14.760 --> 00:01:16.670
file then you upload the encrypted key
file to Google Play using the Play

00:01:16.670 --> 00:01:16.680
file to Google Play using the Play
 

00:01:16.680 --> 00:01:19.310
file to Google Play using the Play
console now that Google Play has your

00:01:19.310 --> 00:01:19.320
console now that Google Play has your
 

00:01:19.320 --> 00:01:20.899
console now that Google Play has your
signing key you have to generate a new

00:01:20.899 --> 00:01:20.909
signing key you have to generate a new
 

00:01:20.909 --> 00:01:23.060
signing key you have to generate a new
upload key and register the public key

00:01:23.060 --> 00:01:23.070
upload key and register the public key
 

00:01:23.070 --> 00:01:25.340
upload key and register the public key
certificate for this key with Google the

00:01:25.340 --> 00:01:25.350
certificate for this key with Google the
 

00:01:25.350 --> 00:01:27.260
certificate for this key with Google the
detailed key tool command to do this can

00:01:27.260 --> 00:01:27.270
detailed key tool command to do this can
 

00:01:27.270 --> 00:01:29.539
detailed key tool command to do this can
be found under the app signing page then

00:01:29.539 --> 00:01:29.549
be found under the app signing page then
 

00:01:29.549 --> 00:01:31.609
be found under the app signing page then
you upload both key files using the Play

00:01:31.609 --> 00:01:31.619
you upload both key files using the Play
 

00:01:31.619 --> 00:01:34.039
you upload both key files using the Play
console in a single secure transaction

00:01:34.039 --> 00:01:34.049
console in a single secure transaction
 

00:01:34.049 --> 00:01:36.590
console in a single secure transaction
after uploading the required keys and

00:01:36.590 --> 00:01:36.600
after uploading the required keys and
 

00:01:36.600 --> 00:01:39.260
after uploading the required keys and
certificate click enroll if everything

00:01:39.260 --> 00:01:39.270
certificate click enroll if everything
 

00:01:39.270 --> 00:01:41.149
certificate click enroll if everything
is OK you'll see a page with deployment

00:01:41.149 --> 00:01:41.159
is OK you'll see a page with deployment
 

00:01:41.159 --> 00:01:43.069
is OK you'll see a page with deployment
and upload certificates and when

00:01:43.069 --> 00:01:43.079
and upload certificates and when
 

00:01:43.079 --> 00:01:44.510
and upload certificates and when
managing your release you will see a

00:01:44.510 --> 00:01:44.520
managing your release you will see a
 

00:01:44.520 --> 00:01:46.789
managing your release you will see a
green check on app signing indicating

00:01:46.789 --> 00:01:46.799
green check on app signing indicating
 

00:01:46.799 --> 00:01:49.219
green check on app signing indicating
that it is enabled for a new app you can

00:01:49.219 --> 00:01:49.229
that it is enabled for a new app you can
 

00:01:49.229 --> 00:01:50.600
that it is enabled for a new app you can
choose to have Google generate the

00:01:50.600 --> 00:01:50.610
choose to have Google generate the
 

00:01:50.610 --> 00:01:52.340
choose to have Google generate the
signing key so the process is much

00:01:52.340 --> 00:01:52.350
signing key so the process is much
 

00:01:52.350 --> 00:01:55.130
signing key so the process is much
simpler we highly recommend you use app

00:01:55.130 --> 00:01:55.140
simpler we highly recommend you use app
 

00:01:55.140 --> 00:01:58.310
simpler we highly recommend you use app
signing to sign new apps after enrolling

00:01:58.310 --> 00:01:58.320
signing to sign new apps after enrolling
 

00:01:58.320 --> 00:02:00.050
signing to sign new apps after enrolling
in app signing you will use the upload

00:02:00.050 --> 00:02:00.060
in app signing you will use the upload
 

00:02:00.060 --> 00:02:02.060
in app signing you will use the upload
key to sign all future updates to your

00:02:02.060 --> 00:02:02.070
key to sign all future updates to your
 

00:02:02.070 --> 00:02:04.160
key to sign all future updates to your
app Google Play uses the upload key to

00:02:04.160 --> 00:02:04.170
app Google Play uses the upload key to
 

00:02:04.170 --> 00:02:06.289
app Google Play uses the upload key to
verify your identity and will then sign

00:02:06.289 --> 00:02:06.299
verify your identity and will then sign
 

00:02:06.299 --> 00:02:07.910
verify your identity and will then sign
your app with the original app signing

00:02:07.910 --> 00:02:07.920
your app with the original app signing
 

00:02:07.920 --> 00:02:09.979
your app with the original app signing
key that newly signed app will be

00:02:09.979 --> 00:02:09.989
key that newly signed app will be
 

00:02:09.989 --> 00:02:13.100
key that newly signed app will be
delivered to users you may ask but I'm

00:02:13.100 --> 00:02:13.110
delivered to users you may ask but I'm
 

00:02:13.110 --> 00:02:14.480
delivered to users you may ask but I'm
still having to sign with the

00:02:14.480 --> 00:02:14.490
still having to sign with the
 

00:02:14.490 --> 00:02:16.400
still having to sign with the
what happens if I lose this key or this

00:02:16.400 --> 00:02:16.410
what happens if I lose this key or this
 

00:02:16.410 --> 00:02:19.520
what happens if I lose this key or this
key gets compromised no problem we can

00:02:19.520 --> 00:02:19.530
key gets compromised no problem we can
 

00:02:19.530 --> 00:02:21.830
key gets compromised no problem we can
revoke the key immediately as it is used

00:02:21.830 --> 00:02:21.840
revoke the key immediately as it is used
 

00:02:21.840 --> 00:02:23.900
revoke the key immediately as it is used
to verify your identity with Google but

00:02:23.900 --> 00:02:23.910
to verify your identity with Google but
 

00:02:23.910 --> 00:02:25.130
to verify your identity with Google but
isn't part of the Android platform

00:02:25.130 --> 00:02:25.140
isn't part of the Android platform
 

00:02:25.140 --> 00:02:28.130
isn't part of the Android platform
security model to have your current

00:02:28.130 --> 00:02:28.140
security model to have your current
 

00:02:28.140 --> 00:02:29.960
security model to have your current
upload key revoked you can contact

00:02:29.960 --> 00:02:29.970
upload key revoked you can contact
 

00:02:29.970 --> 00:02:31.340
upload key revoked you can contact
Google Play support through a web

00:02:31.340 --> 00:02:31.350
Google Play support through a web
 

00:02:31.350 --> 00:02:33.440
Google Play support through a web
support forum so when you use app

00:02:33.440 --> 00:02:33.450
support forum so when you use app
 

00:02:33.450 --> 00:02:35.840
support forum so when you use app
signing losing your key doesn't mean

00:02:35.840 --> 00:02:35.850
signing losing your key doesn't mean
 

00:02:35.850 --> 00:02:37.520
signing losing your key doesn't mean
that you can't update your app anymore

00:02:37.520 --> 00:02:37.530
that you can't update your app anymore
 

00:02:37.530 --> 00:02:39.920
that you can't update your app anymore
with a simple process you can generate a

00:02:39.920 --> 00:02:39.930
with a simple process you can generate a
 

00:02:39.930 --> 00:02:41.810
with a simple process you can generate a
new upload key and provide us with its

00:02:41.810 --> 00:02:41.820
new upload key and provide us with its
 

00:02:41.820 --> 00:02:43.820
new upload key and provide us with its
certificate so you can continue updating

00:02:43.820 --> 00:02:43.830
certificate so you can continue updating
 

00:02:43.830 --> 00:02:46.490
certificate so you can continue updating
your app access the Play console to

00:02:46.490 --> 00:02:46.500
your app access the Play console to
 

00:02:46.500 --> 00:02:47.930
your app access the Play console to
enroll your application and take

00:02:47.930 --> 00:02:47.940
enroll your application and take
 

00:02:47.940 --> 00:02:50.390
enroll your application and take
advantage of app signing today for more

00:02:50.390 --> 00:02:50.400
advantage of app signing today for more
 

00:02:50.400 --> 00:02:52.270
advantage of app signing today for more
details check out the documentation

00:02:52.270 --> 00:02:52.280
details check out the documentation
 

00:02:52.280 --> 00:02:54.960
details check out the documentation
thanks for watching

00:02:54.960 --> 00:02:54.970
thanks for watching
 

00:02:54.970 --> 00:03:05.060
thanks for watching
[Music]

