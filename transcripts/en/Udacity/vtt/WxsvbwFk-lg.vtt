WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
So we've seen several different strategies

00:00:02.000 --> 00:00:04.000
and we've compared them and tried to find one that was better,

00:00:04.000 --> 00:00:07.000
and we could keep doing that, trying to improve and make

00:00:07.000 --> 00:00:11.000
a strategy better and better, but what if we could make a leap?

00:00:11.000 --> 00:00:15.000
Instead of incrementally coming up with a slightly better strategy,

00:00:15.000 --> 00:00:18.000
would it be possible to leap to the best strategy?

00:00:18.000 --> 00:00:23.000
To make it sound more mathematical, we can call it the optimal strategy.

00:00:23.000 --> 00:00:26.000
Can we do that and what would it even mean?

00:00:26.000 --> 00:00:29.000
On the surface it's not exactly clear.

00:00:29.000 --> 00:00:33.000
When we did search, we didn't know what our first action was.

00:00:33.000 --> 00:00:36.000
We started out in some state and we knew there were

00:00:36.000 --> 00:00:39.000
several different states we could go to, and from there,

00:00:39.000 --> 00:00:42.000
there were other states we could go to.

00:00:42.000 --> 00:00:47.000
All we knew is that we were trying to arrive at some goal location.

00:00:47.000 --> 00:00:50.000
But we knew if we just specified how the domain works,

00:00:50.000 --> 00:00:52.000
how you get from one state to the next,

00:00:52.000 --> 00:00:56.000
and if we specified an algorithm that found the best path,

00:00:56.000 --> 00:01:00.000
the shortest path, or the least cost path, that eventually,

00:01:00.000 --> 00:01:03.000
by applying that algorithm to that description of the world,

00:01:03.000 --> 00:01:06.000
we would arrive at the best possible solution.

00:01:06.000 --> 00:01:08.000
So maybe we can do the same thing here.

00:01:08.000 --> 00:01:10.000
Even though we're dealing with uncertainty,

00:01:10.000 --> 00:01:13.000
maybe we can still define what the world looks like

00:01:13.000 --> 00:01:16.000
and discover the optimal solution.

00:01:16.000 --> 00:01:19.000
So when we were doing search, it was always sort of

00:01:19.000 --> 00:01:22.000
one agent doing the searching, so let's call that "me,"

00:01:22.000 --> 00:01:24.000
and what am I looking for?

00:01:24.000 --> 00:01:29.000
Am I looking for the best path or the worst path?

00:01:29.000 --> 00:01:32.000
Well, obviously, we're looking for the best path and

00:01:32.000 --> 00:01:35.000
we can describe that and once we've got that description

00:01:35.000 --> 00:01:37.000
we've got to search it outward.

00:01:37.000 --> 00:01:40.000
Now we've gone beyond search in two ways.

00:01:40.000 --> 00:01:43.000
The most obvious is we're dealing with probability,

00:01:43.000 --> 00:01:47.000
so we've got dice or whatever other random element there is,

00:01:47.000 --> 00:01:50.000
and then in addition to that, for the big game,

00:01:50.000 --> 00:01:53.000
we introduced another complication, which is our opponent.

00:01:53.000 --> 00:01:56.000
And now this question of what each of these three are trying to do,

00:01:56.000 --> 00:02:02.000
and I want you to tell me, is our opponent trying to get the best,

00:02:02.000 --> 00:02:06.000
and that means best score for "me," or is the opponent trying

00:02:06.000 --> 00:02:10.000
to get the worst score for "me," assuming we're diametrically opposed.

00:02:10.000 --> 00:02:13.000
So the worst score for "me" would be the best score for the opponent,

00:02:13.000 --> 00:02:16.000
or is the opponent trying to come up with the outcome that is average?

00:02:16.000 --> 00:02:18.000
And tell me the same for the dice.

00:02:18.000 --> 00:02:22.000
Is the dice with "me" in trying to get the best result for "me?"

00:02:22.000 --> 00:02:26.000
Is the dice plotting against "me" in trying to get the worst result for "me?"

00:02:26.000 --> 00:02:30.000
Or is the dice going to average out?

00:02:30.000 --> 99:59:59.000
Go ahead and click the appropriate boxes there.

