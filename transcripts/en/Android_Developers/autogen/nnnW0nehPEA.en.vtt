WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.929 align:start position:0%
 
Android<00:00:00.780><c> studio</c><00:00:00.829><c> 3.1</c><00:00:01.829><c> is</c><00:00:02.040><c> now</c><00:00:02.399><c> available</c><00:00:02.909><c> for</c>

00:00:02.929 --> 00:00:02.939 align:start position:0%
Android studio 3.1 is now available for
 

00:00:02.939 --> 00:00:05.090 align:start position:0%
Android studio 3.1 is now available for
download<00:00:03.120><c> or</c><00:00:03.600><c> update</c><00:00:03.870><c> in</c><00:00:04.259><c> the</c><00:00:04.410><c> stable</c><00:00:04.770><c> channel</c>

00:00:05.090 --> 00:00:05.100 align:start position:0%
download or update in the stable channel
 

00:00:05.100 --> 00:00:07.550 align:start position:0%
download or update in the stable channel
along<00:00:05.759><c> with</c><00:00:05.970><c> version</c><00:00:06.330><c> 3.1</c><00:00:06.750><c> of</c><00:00:07.109><c> the</c><00:00:07.259><c> android</c>

00:00:07.550 --> 00:00:07.560 align:start position:0%
along with version 3.1 of the android
 

00:00:07.560 --> 00:00:09.980 align:start position:0%
along with version 3.1 of the android
plug-in<00:00:07.770><c> for</c><00:00:08.040><c> Gradle</c><00:00:08.540><c> with</c><00:00:09.540><c> it</c><00:00:09.690><c> we've</c>

00:00:09.980 --> 00:00:09.990 align:start position:0%
plug-in for Gradle with it we've
 

00:00:09.990 --> 00:00:11.720 align:start position:0%
plug-in for Gradle with it we've
switched<00:00:10.260><c> to</c><00:00:10.469><c> using</c><00:00:10.710><c> our</c><00:00:10.860><c> brand-new</c><00:00:11.130><c> dax-ur</c>

00:00:11.720 --> 00:00:11.730 align:start position:0%
switched to using our brand-new dax-ur
 

00:00:11.730 --> 00:00:14.870 align:start position:0%
switched to using our brand-new dax-ur
d8<00:00:12.450><c> for</c><00:00:12.809><c> all</c><00:00:13.019><c> your</c><00:00:13.230><c> builds</c><00:00:13.559><c> it</c><00:00:14.280><c> produces</c><00:00:14.790><c> on</c>

00:00:14.870 --> 00:00:14.880 align:start position:0%
d8 for all your builds it produces on
 

00:00:14.880 --> 00:00:17.599 align:start position:0%
d8 for all your builds it produces on
average<00:00:15.210><c> 10</c><00:00:15.540><c> to</c><00:00:15.690><c> 15%</c><00:00:16.139><c> smaller</c><00:00:16.890><c> and</c><00:00:17.130><c> more</c>

00:00:17.599 --> 00:00:17.609 align:start position:0%
average 10 to 15% smaller and more
 

00:00:17.609 --> 00:00:20.390 align:start position:0%
average 10 to 15% smaller and more
optimized<00:00:18.300><c> Dex</c><00:00:18.869><c> bytecode</c><00:00:19.350><c> without</c><00:00:20.100><c> requiring</c>

00:00:20.390 --> 00:00:20.400 align:start position:0%
optimized Dex bytecode without requiring
 

00:00:20.400 --> 00:00:23.779 align:start position:0%
optimized Dex bytecode without requiring
any<00:00:20.699><c> changes</c><00:00:21.300><c> in</c><00:00:21.420><c> application</c><00:00:21.930><c> code</c><00:00:22.400><c> d8</c><00:00:23.400><c> also</c>

00:00:23.779 --> 00:00:23.789 align:start position:0%
any changes in application code d8 also
 

00:00:23.789 --> 00:00:25.970 align:start position:0%
any changes in application code d8 also
offers<00:00:24.090><c> faster</c><00:00:24.510><c> dexing</c><00:00:24.900><c> now</c><00:00:25.500><c> works</c><00:00:25.769><c> for</c>

00:00:25.970 --> 00:00:25.980 align:start position:0%
offers faster dexing now works for
 

00:00:25.980 --> 00:00:27.710 align:start position:0%
offers faster dexing now works for
incremental<00:00:26.460><c> builds</c><00:00:26.970><c> with</c><00:00:27.119><c> the</c><00:00:27.240><c> sugar</c><00:00:27.599><c> and</c>

00:00:27.710 --> 00:00:27.720 align:start position:0%
incremental builds with the sugar and
 

00:00:27.720 --> 00:00:29.390 align:start position:0%
incremental builds with the sugar and
even<00:00:28.380><c> provides</c><00:00:28.740><c> a</c><00:00:28.890><c> better</c><00:00:29.160><c> debugging</c>

00:00:29.390 --> 00:00:29.400 align:start position:0%
even provides a better debugging
 

00:00:29.400 --> 00:00:31.659 align:start position:0%
even provides a better debugging
experience<00:00:29.820><c> when</c><00:00:30.570><c> stepping</c><00:00:30.840><c> through</c><00:00:31.109><c> code</c>

00:00:31.659 --> 00:00:31.669 align:start position:0%
experience when stepping through code
 

00:00:31.669 --> 00:00:34.040 align:start position:0%
experience when stepping through code
one<00:00:32.669><c> thing</c><00:00:32.850><c> to</c><00:00:33.000><c> remember</c><00:00:33.180><c> if</c><00:00:33.510><c> he</c><00:00:33.780><c> had</c>

00:00:34.040 --> 00:00:34.050 align:start position:0%
one thing to remember if he had
 

00:00:34.050 --> 00:00:35.990 align:start position:0%
one thing to remember if he had
previously<00:00:34.620><c> disabled</c><00:00:35.219><c> the</c><00:00:35.370><c> experimental</c>

00:00:35.990 --> 00:00:36.000 align:start position:0%
previously disabled the experimental
 

00:00:36.000 --> 00:00:37.970 align:start position:0%
previously disabled the experimental
version<00:00:36.360><c> of</c><00:00:36.480><c> the</c><00:00:36.600><c> 8</c><00:00:36.719><c> in</c><00:00:36.899><c> your</c><00:00:36.930><c> project</c><00:00:37.500><c> by</c>

00:00:37.970 --> 00:00:37.980 align:start position:0%
version of the 8 in your project by
 

00:00:37.980 --> 00:00:40.160 align:start position:0%
version of the 8 in your project by
setting<00:00:38.309><c> the</c><00:00:38.430><c> Android</c><00:00:38.850><c> enabled</c><00:00:39.210><c> d8</c><00:00:39.600><c> flag</c><00:00:39.930><c> to</c>

00:00:40.160 --> 00:00:40.170 align:start position:0%
setting the Android enabled d8 flag to
 

00:00:40.170 --> 00:00:42.170 align:start position:0%
setting the Android enabled d8 flag to
false<00:00:40.379><c> it's</c><00:00:41.070><c> time</c><00:00:41.340><c> to</c><00:00:41.489><c> remove</c><00:00:41.730><c> this</c><00:00:41.969><c> from</c>

00:00:42.170 --> 00:00:42.180 align:start position:0%
false it's time to remove this from
 

00:00:42.180 --> 00:00:45.319 align:start position:0%
false it's time to remove this from
Gradle<00:00:42.600><c> properties</c><00:00:43.309><c> the</c><00:00:44.309><c> sugaring</c><00:00:44.640><c> of</c><00:00:44.879><c> Java</c><00:00:45.120><c> 8</c>

00:00:45.319 --> 00:00:45.329 align:start position:0%
Gradle properties the sugaring of Java 8
 

00:00:45.329 --> 00:00:47.360 align:start position:0%
Gradle properties the sugaring of Java 8
language<00:00:45.719><c> features</c><00:00:46.079><c> is</c><00:00:46.500><c> still</c><00:00:46.920><c> done</c><00:00:47.070><c> in</c><00:00:47.129><c> a</c>

00:00:47.360 --> 00:00:47.370 align:start position:0%
language features is still done in a
 

00:00:47.370 --> 00:00:49.520 align:start position:0%
language features is still done in a
separate<00:00:47.730><c> step</c><00:00:48.030><c> in</c><00:00:48.210><c> this</c><00:00:48.360><c> release</c><00:00:48.629><c> however</c>

00:00:49.520 --> 00:00:49.530 align:start position:0%
separate step in this release however
 

00:00:49.530 --> 00:00:52.040 align:start position:0%
separate step in this release however
you<00:00:49.980><c> can</c><00:00:50.160><c> try</c><00:00:50.399><c> the</c><00:00:50.460><c> experimental</c><00:00:51.300><c> integrated</c>

00:00:52.040 --> 00:00:52.050 align:start position:0%
you can try the experimental integrated
 

00:00:52.050 --> 00:00:54.229 align:start position:0%
you can try the experimental integrated
the<00:00:52.170><c> sugar</c><00:00:52.469><c> by</c><00:00:52.770><c> setting</c><00:00:53.100><c> the</c><00:00:53.250><c> enable</c><00:00:53.730><c> d8</c><00:00:54.000><c> the</c>

00:00:54.229 --> 00:00:54.239 align:start position:0%
the sugar by setting the enable d8 the
 

00:00:54.239 --> 00:00:57.950 align:start position:0%
the sugar by setting the enable d8 the
sugar<00:00:54.449><c> ink</c><00:00:54.660><c> flag</c><00:00:54.899><c> to</c><00:00:55.350><c> true</c><00:00:56.030><c> the</c><00:00:57.030><c> core</c><00:00:57.329><c> IDE</c><00:00:57.690><c> is</c>

00:00:57.950 --> 00:00:57.960 align:start position:0%
sugar ink flag to true the core IDE is
 

00:00:57.960 --> 00:00:59.720 align:start position:0%
sugar ink flag to true the core IDE is
now<00:00:58.199><c> updated</c><00:00:58.800><c> with</c><00:00:59.039><c> improvements</c><00:00:59.609><c> from</c>

00:00:59.720 --> 00:00:59.730 align:start position:0%
now updated with improvements from
 

00:00:59.730 --> 00:01:00.770 align:start position:0%
now updated with improvements from
IntelliJ<00:01:00.300><c> IDEA</c>

00:01:00.770 --> 00:01:00.780 align:start position:0%
IntelliJ IDEA
 

00:01:00.780 --> 00:01:04.039 align:start position:0%
IntelliJ IDEA
up<00:01:01.170><c> to</c><00:01:01.379><c> the</c><00:01:01.500><c> 2017</c><00:01:02.370><c> dot</c><00:01:02.699><c> 3</c><00:01:03.000><c> release</c><00:01:03.270><c> which</c>

00:01:04.039 --> 00:01:04.049 align:start position:0%
up to the 2017 dot 3 release which
 

00:01:04.049 --> 00:01:05.929 align:start position:0%
up to the 2017 dot 3 release which
includes<00:01:04.439><c> better</c><00:01:04.739><c> control</c><00:01:05.220><c> flow</c><00:01:05.400><c> analysis</c>

00:01:05.929 --> 00:01:05.939 align:start position:0%
includes better control flow analysis
 

00:01:05.939 --> 00:01:08.240 align:start position:0%
includes better control flow analysis
for<00:01:06.090><c> collections</c><00:01:06.630><c> and</c><00:01:06.810><c> strings</c><00:01:07.250><c> improved</c>

00:01:08.240 --> 00:01:08.250 align:start position:0%
for collections and strings improved
 

00:01:08.250 --> 00:01:10.580 align:start position:0%
for collections and strings improved
null<00:01:08.490><c> ability</c><00:01:08.909><c> inference</c><00:01:09.360><c> new</c><00:01:09.930><c> quick</c><00:01:10.229><c> fixes</c>

00:01:10.580 --> 00:01:10.590 align:start position:0%
null ability inference new quick fixes
 

00:01:10.590 --> 00:01:13.910 align:start position:0%
null ability inference new quick fixes
and<00:01:10.740><c> more</c><00:01:11.479><c> we</c><00:01:12.479><c> also</c><00:01:12.869><c> simplified</c><00:01:13.439><c> the</c><00:01:13.680><c> build</c>

00:01:13.910 --> 00:01:13.920 align:start position:0%
and more we also simplified the build
 

00:01:13.920 --> 00:01:16.370 align:start position:0%
and more we also simplified the build
output<00:01:14.369><c> window</c><00:01:14.760><c> when</c><00:01:15.330><c> you</c><00:01:15.420><c> trigger</c><00:01:15.720><c> a</c><00:01:15.810><c> sync</c><00:01:16.170><c> or</c>

00:01:16.370 --> 00:01:16.380 align:start position:0%
output window when you trigger a sync or
 

00:01:16.380 --> 00:01:18.350 align:start position:0%
output window when you trigger a sync or
build<00:01:16.650><c> we</c><00:01:17.159><c> now</c><00:01:17.310><c> show</c><00:01:17.520><c> a</c><00:01:17.549><c> task</c><00:01:17.939><c> 3</c><00:01:18.210><c> with</c>

00:01:18.350 --> 00:01:18.360 align:start position:0%
build we now show a task 3 with
 

00:01:18.360 --> 00:01:20.840 align:start position:0%
build we now show a task 3 with
execution<00:01:19.049><c> times</c><00:01:19.290><c> and</c><00:01:19.590><c> toggle</c><00:01:20.460><c> an</c><00:01:20.580><c> error</c>

00:01:20.840 --> 00:01:20.850 align:start position:0%
execution times and toggle an error
 

00:01:20.850 --> 00:01:23.929 align:start position:0%
execution times and toggle an error
window<00:01:21.210><c> in</c><00:01:21.390><c> case</c><00:01:21.630><c> of</c><00:01:21.840><c> a</c><00:01:21.930><c> failure</c><00:01:22.790><c> you</c><00:01:23.790><c> can</c>

00:01:23.929 --> 00:01:23.939 align:start position:0%
window in case of a failure you can
 

00:01:23.939 --> 00:01:25.219 align:start position:0%
window in case of a failure you can
switch<00:01:24.180><c> between</c><00:01:24.299><c> the</c><00:01:24.600><c> tree</c><00:01:24.810><c> view</c><00:01:24.990><c> and</c><00:01:25.200><c> a</c>

00:01:25.219 --> 00:01:25.229 align:start position:0%
switch between the tree view and a
 

00:01:25.229 --> 00:01:28.280 align:start position:0%
switch between the tree view and a
textural<00:01:25.650><c> log</c><00:01:25.890><c> here</c><00:01:26.220><c> on</c><00:01:26.630><c> the</c><00:01:27.630><c> cotton</c><00:01:27.930><c> in</c><00:01:28.020><c> front</c>

00:01:28.280 --> 00:01:28.290 align:start position:0%
textural log here on the cotton in front
 

00:01:28.290 --> 00:01:31.460 align:start position:0%
textural log here on the cotton in front
Android<00:01:29.040><c> studio</c><00:01:29.250><c> 3.1</c><00:01:29.939><c> no</c><00:01:30.509><c> bundles</c><00:01:30.900><c> the</c><00:01:31.110><c> latest</c>

00:01:31.460 --> 00:01:31.470 align:start position:0%
Android studio 3.1 no bundles the latest
 

00:01:31.470 --> 00:01:33.560 align:start position:0%
Android studio 3.1 no bundles the latest
plugin<00:01:31.860><c> and</c><00:01:31.979><c> supports</c><00:01:32.700><c> running</c><00:01:33.060><c> lint</c><00:01:33.329><c> checks</c>

00:01:33.560 --> 00:01:33.570 align:start position:0%
plugin and supports running lint checks
 

00:01:33.570 --> 00:01:36.380 align:start position:0%
plugin and supports running lint checks
for<00:01:33.810><c> Cortland</c><00:01:34.200><c> code</c><00:01:34.439><c> on</c><00:01:34.619><c> the</c><00:01:34.890><c> command</c><00:01:35.189><c> line</c><00:01:35.390><c> we</c>

00:01:36.380 --> 00:01:36.390 align:start position:0%
for Cortland code on the command line we
 

00:01:36.390 --> 00:01:38.270 align:start position:0%
for Cortland code on the command line we
plan<00:01:36.630><c> to</c><00:01:36.780><c> continue</c><00:01:37.079><c> our</c><00:01:37.350><c> work</c><00:01:37.590><c> to</c><00:01:37.950><c> make</c><00:01:38.100><c> sure</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
plan to continue our work to make sure
 

00:01:38.280 --> 00:01:40.190 align:start position:0%
plan to continue our work to make sure
we're<00:01:38.460><c> providing</c><00:01:38.700><c> first-class</c><00:01:39.390><c> support</c><00:01:39.600><c> for</c>

00:01:40.190 --> 00:01:40.200 align:start position:0%
we're providing first-class support for
 

00:01:40.200 --> 00:01:43.249 align:start position:0%
we're providing first-class support for
Kotlin<00:01:40.619><c> in</c><00:01:40.799><c> our</c><00:01:41.009><c> developer</c><00:01:41.520><c> tools</c><00:01:42.259><c> we</c>

00:01:43.249 --> 00:01:43.259 align:start position:0%
Kotlin in our developer tools we
 

00:01:43.259 --> 00:01:45.380 align:start position:0%
Kotlin in our developer tools we
received<00:01:43.649><c> a</c><00:01:43.860><c> lot</c><00:01:44.070><c> of</c><00:01:44.100><c> feature</c><00:01:44.490><c> requests</c><00:01:45.090><c> for</c>

00:01:45.380 --> 00:01:45.390 align:start position:0%
received a lot of feature requests for
 

00:01:45.390 --> 00:01:46.969 align:start position:0%
received a lot of feature requests for
the<00:01:45.479><c> Android</c><00:01:45.810><c> profilers</c><00:01:46.409><c> that</c><00:01:46.590><c> were</c><00:01:46.710><c> released</c>

00:01:46.969 --> 00:01:46.979 align:start position:0%
the Android profilers that were released
 

00:01:46.979 --> 00:01:49.819 align:start position:0%
the Android profilers that were released
in<00:01:47.250><c> the</c><00:01:47.340><c> last</c><00:01:47.490><c> version</c><00:01:48.149><c> of</c><00:01:48.270><c> studio</c><00:01:48.439><c> I'm</c><00:01:49.439><c> happy</c>

00:01:49.819 --> 00:01:49.829 align:start position:0%
in the last version of studio I'm happy
 

00:01:49.829 --> 00:01:52.010 align:start position:0%
in the last version of studio I'm happy
to<00:01:49.920><c> say</c><00:01:50.070><c> that</c><00:01:50.100><c> based</c><00:01:50.759><c> on</c><00:01:50.909><c> your</c><00:01:51.030><c> feedback</c><00:01:51.240><c> we've</c>

00:01:52.010 --> 00:01:52.020 align:start position:0%
to say that based on your feedback we've
 

00:01:52.020 --> 00:01:54.770 align:start position:0%
to say that based on your feedback we've
added<00:01:52.229><c> native</c><00:01:52.829><c> CPU</c><00:01:53.220><c> profiling</c><00:01:53.729><c> for</c><00:01:53.970><c> C++</c><00:01:54.540><c> code</c>

00:01:54.770 --> 00:01:54.780 align:start position:0%
added native CPU profiling for C++ code
 

00:01:54.780 --> 00:01:57.080 align:start position:0%
added native CPU profiling for C++ code
and<00:01:54.990><c> the</c><00:01:55.500><c> network</c><00:01:55.829><c> profiler</c><00:01:56.340><c> can</c><00:01:56.759><c> now</c><00:01:56.880><c> show</c>

00:01:57.080 --> 00:01:57.090 align:start position:0%
and the network profiler can now show
 

00:01:57.090 --> 00:01:59.359 align:start position:0%
and the network profiler can now show
request<00:01:57.540><c> data</c><00:01:57.750><c> and</c><00:01:58.049><c> has</c><00:01:58.439><c> a</c><00:01:58.469><c> threads</c><00:01:58.860><c> timeline</c>

00:01:59.359 --> 00:01:59.369 align:start position:0%
request data and has a threads timeline
 

00:01:59.369 --> 00:02:01.520 align:start position:0%
request data and has a threads timeline
and<00:01:59.610><c> to</c><00:02:00.509><c> make</c><00:02:00.630><c> it</c><00:02:00.750><c> easier</c><00:02:01.079><c> to</c><00:02:01.140><c> find</c><00:02:01.439><c> the</c>

00:02:01.520 --> 00:02:01.530 align:start position:0%
and to make it easier to find the
 

00:02:01.530 --> 00:02:03.920 align:start position:0%
and to make it easier to find the
information<00:02:01.590><c> you</c><00:02:02.100><c> need</c><00:02:02.219><c> the</c><00:02:03.090><c> CPU</c><00:02:03.540><c> and</c><00:02:03.719><c> memory</c>

00:02:03.920 --> 00:02:03.930 align:start position:0%
information you need the CPU and memory
 

00:02:03.930 --> 00:02:06.499 align:start position:0%
information you need the CPU and memory
profilers<00:02:04.680><c> now</c><00:02:05.250><c> offer</c><00:02:05.520><c> filtering</c><00:02:06.060><c> by</c><00:02:06.240><c> class</c>

00:02:06.499 --> 00:02:06.509 align:start position:0%
profilers now offer filtering by class
 

00:02:06.509 --> 00:02:09.350 align:start position:0%
profilers now offer filtering by class
or<00:02:06.719><c> method</c><00:02:06.840><c> name</c><00:02:07.229><c> if</c><00:02:08.190><c> you're</c><00:02:08.729><c> using</c><00:02:08.910><c> the</c><00:02:09.149><c> layer</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
or method name if you're using the layer
 

00:02:09.360 --> 00:02:11.540 align:start position:0%
or method name if you're using the layer
inspector<00:02:10.020><c> it's</c><00:02:10.560><c> now</c><00:02:10.770><c> possible</c><00:02:11.220><c> to</c><00:02:11.280><c> use</c>

00:02:11.540 --> 00:02:11.550 align:start position:0%
inspector it's now possible to use
 

00:02:11.550 --> 00:02:13.550 align:start position:0%
inspector it's now possible to use
reference<00:02:12.120><c> image</c><00:02:12.660><c> overlays</c>

00:02:13.550 --> 00:02:13.560 align:start position:0%
reference image overlays
 

00:02:13.560 --> 00:02:15.850 align:start position:0%
reference image overlays
isolate<00:02:14.040><c> subtrees</c><00:02:14.580><c> from</c><00:02:14.849><c> the</c><00:02:14.970><c> view</c><00:02:15.150><c> hierarchy</c>

00:02:15.850 --> 00:02:15.860 align:start position:0%
isolate subtrees from the view hierarchy
 

00:02:15.860 --> 00:02:18.920 align:start position:0%
isolate subtrees from the view hierarchy
the<00:02:16.860><c> layer</c><00:02:17.010><c> editor</c><00:02:17.250><c> also</c><00:02:17.790><c> got</c><00:02:18.090><c> some</c><00:02:18.300><c> UX</c><00:02:18.569><c> polish</c>

00:02:18.920 --> 00:02:18.930 align:start position:0%
the layer editor also got some UX polish
 

00:02:18.930 --> 00:02:21.229 align:start position:0%
the layer editor also got some UX polish
with<00:02:19.680><c> new</c><00:02:19.860><c> keyboard</c><00:02:20.280><c> shortcuts</c><00:02:20.730><c> a</c><00:02:20.940><c> way</c><00:02:21.180><c> to</c>

00:02:21.229 --> 00:02:21.239 align:start position:0%
with new keyboard shortcuts a way to
 

00:02:21.239 --> 00:02:23.449 align:start position:0%
with new keyboard shortcuts a way to
quickly<00:02:21.599><c> launch</c><00:02:21.900><c> documentation</c><00:02:22.709><c> and</c><00:02:22.920><c> the</c><00:02:23.310><c> new</c>

00:02:23.449 --> 00:02:23.459 align:start position:0%
quickly launch documentation and the new
 

00:02:23.459 --> 00:02:25.550 align:start position:0%
quickly launch documentation and the new
command<00:02:23.910><c> that</c><00:02:24.120><c> lets</c><00:02:24.420><c> you</c><00:02:24.599><c> convert</c><00:02:24.810><c> a</c><00:02:25.110><c> view</c><00:02:25.380><c> to</c>

00:02:25.550 --> 00:02:25.560 align:start position:0%
command that lets you convert a view to
 

00:02:25.560 --> 00:02:28.430 align:start position:0%
command that lets you convert a view to
another<00:02:25.800><c> type</c><00:02:26.160><c> and</c><00:02:26.690><c> just</c><00:02:27.690><c> like</c><00:02:27.870><c> we</c><00:02:28.020><c> developed</c>

00:02:28.430 --> 00:02:28.440 align:start position:0%
another type and just like we developed
 

00:02:28.440 --> 00:02:30.680 align:start position:0%
another type and just like we developed
Android<00:02:28.800><c> Studios</c><00:02:29.250><c> layout</c><00:02:29.580><c> editor</c><00:02:29.970><c> in</c><00:02:30.120><c> step</c>

00:02:30.680 --> 00:02:30.690 align:start position:0%
Android Studios layout editor in step
 

00:02:30.690 --> 00:02:32.360 align:start position:0%
Android Studios layout editor in step
with<00:02:30.870><c> the</c><00:02:30.989><c> constraint</c><00:02:31.500><c> layout</c><00:02:31.769><c> library</c><00:02:32.220><c> in</c>

00:02:32.360 --> 00:02:32.370 align:start position:0%
with the constraint layout library in
 

00:02:32.370 --> 00:02:34.970 align:start position:0%
with the constraint layout library in
this<00:02:33.030><c> release</c><00:02:33.360><c> we've</c><00:02:33.870><c> taken</c><00:02:34.140><c> additional</c><00:02:34.470><c> care</c>

00:02:34.970 --> 00:02:34.980 align:start position:0%
this release we've taken additional care
 

00:02:34.980 --> 00:02:37.550 align:start position:0%
this release we've taken additional care
to<00:02:35.459><c> make</c><00:02:35.640><c> the</c><00:02:35.790><c> code</c><00:02:36.060><c> editor</c><00:02:36.239><c> work</c><00:02:36.750><c> great</c><00:02:37.170><c> when</c>

00:02:37.550 --> 00:02:37.560 align:start position:0%
to make the code editor work great when
 

00:02:37.560 --> 00:02:40.430 align:start position:0%
to make the code editor work great when
you're<00:02:37.709><c> using</c><00:02:37.950><c> room</c><00:02:38.370><c> databases</c><00:02:39.120><c> you</c><00:02:40.110><c> will</c><00:02:40.230><c> now</c>

00:02:40.430 --> 00:02:40.440 align:start position:0%
you're using room databases you will now
 

00:02:40.440 --> 00:02:43.009 align:start position:0%
you're using room databases you will now
get<00:02:40.680><c> SQL</c><00:02:41.250><c> code</c><00:02:41.519><c> completion</c><00:02:41.940><c> and</c><00:02:42.300><c> common</c>

00:02:43.009 --> 00:02:43.019 align:start position:0%
get SQL code completion and common
 

00:02:43.019 --> 00:02:45.199 align:start position:0%
get SQL code completion and common
actions<00:02:43.380><c> such</c><00:02:43.620><c> as</c><00:02:43.650><c> renaming</c><00:02:44.130><c> and</c><00:02:44.459><c> find</c><00:02:44.760><c> usages</c>

00:02:45.199 --> 00:02:45.209 align:start position:0%
actions such as renaming and find usages
 

00:02:45.209 --> 00:02:49.420 align:start position:0%
actions such as renaming and find usages
work<00:02:45.900><c> across</c><00:02:46.230><c> SQL</c><00:02:46.920><c> and</c><00:02:47.100><c> Java</c><00:02:47.580><c> or</c><00:02:47.760><c> Kotlin</c><00:02:48.150><c> code</c>

00:02:49.420 --> 00:02:49.430 align:start position:0%
work across SQL and Java or Kotlin code
 

00:02:49.430 --> 00:02:52.490 align:start position:0%
work across SQL and Java or Kotlin code
the<00:02:50.430><c> Android</c><00:02:50.790><c> emulator</c><00:02:51.030><c> received</c><00:02:51.959><c> a</c><00:02:52.080><c> lot</c><00:02:52.380><c> of</c>

00:02:52.490 --> 00:02:52.500 align:start position:0%
the Android emulator received a lot of
 

00:02:52.500 --> 00:02:54.080 align:start position:0%
the Android emulator received a lot of
updates<00:02:52.860><c> since</c><00:02:53.130><c> the</c><00:02:53.310><c> last</c><00:02:53.489><c> studio</c><00:02:53.760><c> release</c>

00:02:54.080 --> 00:02:54.090 align:start position:0%
updates since the last studio release
 

00:02:54.090 --> 00:02:57.530 align:start position:0%
updates since the last studio release
focusing<00:02:55.080><c> on</c><00:02:55.200><c> speed</c><00:02:55.530><c> and</c><00:02:55.739><c> stability</c><00:02:56.360><c> we</c><00:02:57.360><c> offer</c>

00:02:57.530 --> 00:02:57.540 align:start position:0%
focusing on speed and stability we offer
 

00:02:57.540 --> 00:02:59.780 align:start position:0%
focusing on speed and stability we offer
the<00:02:57.780><c> latest</c><00:02:57.989><c> system</c><00:02:58.500><c> images</c><00:02:58.830><c> for</c><00:02:59.099><c> API</c><00:02:59.430><c> levels</c>

00:02:59.780 --> 00:02:59.790 align:start position:0%
the latest system images for API levels
 

00:02:59.790 --> 00:03:03.110 align:start position:0%
the latest system images for API levels
26<00:03:00.330><c> and</c><00:03:00.540><c> 27</c><00:03:00.930><c> which</c><00:03:01.650><c> passed</c><00:03:02.040><c> CTS</c><00:03:02.549><c> tests</c><00:03:02.970><c> and</c>

00:03:03.110 --> 00:03:03.120 align:start position:0%
26 and 27 which passed CTS tests and
 

00:03:03.120 --> 00:03:06.020 align:start position:0%
26 and 27 which passed CTS tests and
include<00:03:03.750><c> the</c><00:03:03.930><c> full</c><00:03:04.110><c> Play</c><00:03:04.380><c> Store</c><00:03:04.849><c> on</c><00:03:05.849><c> the</c>

00:03:06.020 --> 00:03:06.030 align:start position:0%
include the full Play Store on the
 

00:03:06.030 --> 00:03:08.030 align:start position:0%
include the full Play Store on the
features<00:03:06.360><c> side</c><00:03:06.660><c> the</c><00:03:07.290><c> largest</c><00:03:07.799><c> and</c><00:03:07.950><c> my</c>

00:03:08.030 --> 00:03:08.040 align:start position:0%
features side the largest and my
 

00:03:08.040 --> 00:03:10.250 align:start position:0%
features side the largest and my
favorite<00:03:08.459><c> improvement</c><00:03:09.000><c> is</c><00:03:09.120><c> quick</c><00:03:09.510><c> boot</c><00:03:09.750><c> which</c>

00:03:10.250 --> 00:03:10.260 align:start position:0%
favorite improvement is quick boot which
 

00:03:10.260 --> 00:03:12.170 align:start position:0%
favorite improvement is quick boot which
allows<00:03:10.560><c> you</c><00:03:10.709><c> to</c><00:03:10.739><c> resume</c><00:03:11.160><c> a</c><00:03:11.310><c> safe</c><00:03:11.610><c> emulator</c>

00:03:12.170 --> 00:03:12.180 align:start position:0%
allows you to resume a safe emulator
 

00:03:12.180 --> 00:03:14.420 align:start position:0%
allows you to resume a safe emulator
session<00:03:12.630><c> in</c><00:03:12.780><c> under</c><00:03:13.049><c> 6</c><00:03:13.380><c> seconds</c><00:03:13.739><c> it's</c>

00:03:14.420 --> 00:03:14.430 align:start position:0%
session in under 6 seconds it's
 

00:03:14.430 --> 00:03:16.430 align:start position:0%
session in under 6 seconds it's
completely<00:03:15.060><c> automatic</c><00:03:15.599><c> after</c><00:03:16.080><c> the</c><00:03:16.200><c> first</c>

00:03:16.430 --> 00:03:16.440 align:start position:0%
completely automatic after the first
 

00:03:16.440 --> 00:03:18.440 align:start position:0%
completely automatic after the first
boot<00:03:16.680><c> whenever</c><00:03:17.220><c> you</c><00:03:17.340><c> close</c><00:03:17.640><c> the</c><00:03:17.820><c> emulator</c><00:03:18.209><c> a</c>

00:03:18.440 --> 00:03:18.450 align:start position:0%
boot whenever you close the emulator a
 

00:03:18.450 --> 00:03:20.660 align:start position:0%
boot whenever you close the emulator a
snapshot<00:03:19.109><c> is</c><00:03:19.410><c> saved</c><00:03:19.709><c> and</c><00:03:19.920><c> used</c><00:03:20.459><c> for</c>

00:03:20.660 --> 00:03:20.670 align:start position:0%
snapshot is saved and used for
 

00:03:20.670 --> 00:03:23.599 align:start position:0%
snapshot is saved and used for
subsequent<00:03:21.030><c> launches</c><00:03:21.920><c> but</c><00:03:22.920><c> in</c><00:03:23.040><c> case</c><00:03:23.250><c> you</c><00:03:23.430><c> want</c>

00:03:23.599 --> 00:03:23.609 align:start position:0%
subsequent launches but in case you want
 

00:03:23.609 --> 00:03:26.060 align:start position:0%
subsequent launches but in case you want
more<00:03:23.820><c> control</c><00:03:24.150><c> you</c><00:03:24.540><c> can</c><00:03:25.019><c> change</c><00:03:25.410><c> snapshotting</c>

00:03:26.060 --> 00:03:26.070 align:start position:0%
more control you can change snapshotting
 

00:03:26.070 --> 00:03:28.160 align:start position:0%
more control you can change snapshotting
behavior<00:03:26.519><c> in</c><00:03:26.670><c> the</c><00:03:26.760><c> settings</c><00:03:27.180><c> and</c><00:03:27.359><c> even</c>

00:03:28.160 --> 00:03:28.170 align:start position:0%
behavior in the settings and even
 

00:03:28.170 --> 00:03:30.289 align:start position:0%
behavior in the settings and even
initiate<00:03:28.470><c> a</c><00:03:28.709><c> state</c><00:03:29.130><c> save</c><00:03:29.430><c> at</c><00:03:29.670><c> any</c><00:03:29.970><c> given</c>

00:03:30.289 --> 00:03:30.299 align:start position:0%
initiate a state save at any given
 

00:03:30.299 --> 00:03:32.930 align:start position:0%
initiate a state save at any given
moment<00:03:30.920><c> please</c><00:03:31.920><c> update</c><00:03:32.250><c> to</c><00:03:32.579><c> Android</c><00:03:32.760><c> studio</c>

00:03:32.930 --> 00:03:32.940 align:start position:0%
moment please update to Android studio
 

00:03:32.940 --> 00:03:35.780 align:start position:0%
moment please update to Android studio
3.1<00:03:33.750><c> and</c><00:03:33.930><c> give</c><00:03:34.260><c> it</c><00:03:34.350><c> a</c><00:03:34.410><c> spin</c><00:03:34.650><c> and</c><00:03:34.829><c> if</c><00:03:35.640><c> you're</c>

00:03:35.780 --> 00:03:35.790 align:start position:0%
3.1 and give it a spin and if you're
 

00:03:35.790 --> 00:03:37.580 align:start position:0%
3.1 and give it a spin and if you're
feeling<00:03:36.120><c> adventurous</c><00:03:36.239><c> I'd</c><00:03:37.079><c> also</c><00:03:37.290><c> like</c><00:03:37.530><c> to</c>

00:03:37.580 --> 00:03:37.590 align:start position:0%
feeling adventurous I'd also like to
 

00:03:37.590 --> 00:03:40.099 align:start position:0%
feeling adventurous I'd also like to
point<00:03:37.739><c> out</c><00:03:38.010><c> that</c><00:03:38.220><c> you</c><00:03:38.370><c> can</c><00:03:38.400><c> try</c><00:03:38.730><c> our</c><00:03:38.940><c> early</c><00:03:39.329><c> 3.2</c>

00:03:40.099 --> 00:03:40.109 align:start position:0%
point out that you can try our early 3.2
 

00:03:40.109 --> 00:03:42.920 align:start position:0%
point out that you can try our early 3.2
canneries<00:03:40.590><c> as</c><00:03:41.090><c> always</c><00:03:42.090><c> we'd</c><00:03:42.389><c> love</c><00:03:42.660><c> to</c><00:03:42.690><c> get</c>

00:03:42.920 --> 00:03:42.930 align:start position:0%
canneries as always we'd love to get
 

00:03:42.930 --> 00:03:45.610 align:start position:0%
canneries as always we'd love to get
your<00:03:43.079><c> feedback</c><00:03:43.290><c> on</c><00:03:43.620><c> the</c><00:03:43.739><c> bug</c><00:03:43.889><c> tracker</c><00:03:44.100><c> thanks</c>

00:03:45.610 --> 00:03:45.620 align:start position:0%
your feedback on the bug tracker thanks
 

00:03:45.620 --> 00:03:55.349 align:start position:0%
your feedback on the bug tracker thanks
[Music]

