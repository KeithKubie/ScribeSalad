WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.490
So let's talk about approximation quality.

00:00:02.490 --> 00:00:07.640
Because, obviously, even though you've decided that you're content with a solution that is not optimal,

00:00:07.640 --> 00:00:11.360
you still want to ensure a certain quality of your solution.

00:00:11.360 --> 00:00:16.390
And we'll be looking at 2 different types of approximation algorithms in this unit.

00:00:16.390 --> 00:00:20.270
The first 1 is called a constant factor approximation.

00:00:20.270 --> 00:00:23.640
And what a constant factor approximation is, well, as the name says,

00:00:23.640 --> 00:00:26.770
there is some constant C, so when you have an optimization problem

00:00:26.770 --> 00:00:28.960
where you want to minimize some quantity,

00:00:28.960 --> 00:00:35.000
this algorithm will guarantee you a solution that is no worse than C x the best possible solution.

00:00:35.000 --> 00:00:37.970
For a minimization problem, your solution will be

00:00:37.970 --> 00:00:42.660
â‰¤ C x the optimum, or the best possible solution.

00:00:42.660 --> 00:00:45.980
And that is a guarantee that this constant factor approximation gives you.

00:00:45.980 --> 00:00:50.570
So this is for minimization, and for maximization--so minimization problem

00:00:50.570 --> 00:00:54.400
you're trying to find this point here; for maximization problem, you're trying

00:00:54.400 --> 00:00:56.400
to find this point here, basically.

00:00:56.400 --> 00:01:03.580
Your solution is at least as good as 1 over C x the optimum.

00:01:03.580 --> 00:01:05.940
So let's do a quick quiz to practice this.

00:01:05.940 --> 00:01:08.820
So say you have a factor-2 approximation algorithm,

00:01:08.820 --> 00:01:10.940
which means that C = 2.

00:01:10.940 --> 00:01:13.650
So you have a factor-2 approximation algorithm for vertex cover.

00:01:13.650 --> 00:01:18.440
You run the algorithm on an input, and it returns to you a vertex cover of size 100.

00:01:18.440 --> 00:01:22.940
And, of course, this is a correct answer, so it is, indeed, a vertex cover,

00:01:22.940 --> 00:01:26.190
we just don't know if it's the smallest possible vertex cover

00:01:26.190 --> 00:01:28.360
because we're using an approximation algorithm.

00:01:28.360 --> 00:01:30.660
What I would like you to tell me now is 2 things:

00:01:30.660 --> 00:01:34.950
First of all, what is the maximum number of vertices in an optimum solution,

00:01:34.950 --> 00:01:38.370
and please enter your answer here, and what is the minimum number

00:01:38.370 --> 99:59:59.000
of vertices in an optimum solution? And please enter this number here in this box.

